////////////////////// nr-rrc-definitions.proto //////////////////////
// Protobuf generated from /nr-rrc-definitions.asn1 by asn1c-0.9.29
// NR-RRC-Definitions

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.4
// source: nr-rrc-definitions.proto

package nrrrcdefinitions

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	asn1 "github.com/onosproject/onos-lib-go/api/asn1/v1/asn1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enumerated from nr-rrc-definitions.asn1:267
type SubCarrierSpacingCommonMib int32

const (
	SubCarrierSpacingCommonMib_SUB_CARRIER_SPACING_COMMON_MIB_SCS15OR60  SubCarrierSpacingCommonMib = 0
	SubCarrierSpacingCommonMib_SUB_CARRIER_SPACING_COMMON_MIB_SCS30OR120 SubCarrierSpacingCommonMib = 1
)

// Enum value maps for SubCarrierSpacingCommonMib.
var (
	SubCarrierSpacingCommonMib_name = map[int32]string{
		0: "SUB_CARRIER_SPACING_COMMON_MIB_SCS15OR60",
		1: "SUB_CARRIER_SPACING_COMMON_MIB_SCS30OR120",
	}
	SubCarrierSpacingCommonMib_value = map[string]int32{
		"SUB_CARRIER_SPACING_COMMON_MIB_SCS15OR60":  0,
		"SUB_CARRIER_SPACING_COMMON_MIB_SCS30OR120": 1,
	}
)

func (x SubCarrierSpacingCommonMib) Enum() *SubCarrierSpacingCommonMib {
	p := new(SubCarrierSpacingCommonMib)
	*p = x
	return p
}

func (x SubCarrierSpacingCommonMib) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubCarrierSpacingCommonMib) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[0].Descriptor()
}

func (SubCarrierSpacingCommonMib) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[0]
}

func (x SubCarrierSpacingCommonMib) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubCarrierSpacingCommonMib.Descriptor instead.
func (SubCarrierSpacingCommonMib) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{0}
}

// enumerated from nr-rrc-definitions.asn1:269
type DmrsTypeApositionMib int32

const (
	DmrsTypeApositionMib_DMRS_TYPE_APOSITION_MIB_POS2 DmrsTypeApositionMib = 0
	DmrsTypeApositionMib_DMRS_TYPE_APOSITION_MIB_POS3 DmrsTypeApositionMib = 1
)

// Enum value maps for DmrsTypeApositionMib.
var (
	DmrsTypeApositionMib_name = map[int32]string{
		0: "DMRS_TYPE_APOSITION_MIB_POS2",
		1: "DMRS_TYPE_APOSITION_MIB_POS3",
	}
	DmrsTypeApositionMib_value = map[string]int32{
		"DMRS_TYPE_APOSITION_MIB_POS2": 0,
		"DMRS_TYPE_APOSITION_MIB_POS3": 1,
	}
)

func (x DmrsTypeApositionMib) Enum() *DmrsTypeApositionMib {
	p := new(DmrsTypeApositionMib)
	*p = x
	return p
}

func (x DmrsTypeApositionMib) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DmrsTypeApositionMib) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[1].Descriptor()
}

func (DmrsTypeApositionMib) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[1]
}

func (x DmrsTypeApositionMib) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DmrsTypeApositionMib.Descriptor instead.
func (DmrsTypeApositionMib) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{1}
}

// enumerated from nr-rrc-definitions.asn1:271
type CellBarredMib int32

const (
	CellBarredMib_CELL_BARRED_MIB_BARRED     CellBarredMib = 0
	CellBarredMib_CELL_BARRED_MIB_NOT_BARRED CellBarredMib = 1
)

// Enum value maps for CellBarredMib.
var (
	CellBarredMib_name = map[int32]string{
		0: "CELL_BARRED_MIB_BARRED",
		1: "CELL_BARRED_MIB_NOT_BARRED",
	}
	CellBarredMib_value = map[string]int32{
		"CELL_BARRED_MIB_BARRED":     0,
		"CELL_BARRED_MIB_NOT_BARRED": 1,
	}
)

func (x CellBarredMib) Enum() *CellBarredMib {
	p := new(CellBarredMib)
	*p = x
	return p
}

func (x CellBarredMib) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CellBarredMib) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[2].Descriptor()
}

func (CellBarredMib) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[2]
}

func (x CellBarredMib) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CellBarredMib.Descriptor instead.
func (CellBarredMib) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{2}
}

// enumerated from nr-rrc-definitions.asn1:272
type IntraFreqReselectionMib int32

const (
	IntraFreqReselectionMib_INTRA_FREQ_RESELECTION_MIB_ALLOWED     IntraFreqReselectionMib = 0
	IntraFreqReselectionMib_INTRA_FREQ_RESELECTION_MIB_NOT_ALLOWED IntraFreqReselectionMib = 1
)

// Enum value maps for IntraFreqReselectionMib.
var (
	IntraFreqReselectionMib_name = map[int32]string{
		0: "INTRA_FREQ_RESELECTION_MIB_ALLOWED",
		1: "INTRA_FREQ_RESELECTION_MIB_NOT_ALLOWED",
	}
	IntraFreqReselectionMib_value = map[string]int32{
		"INTRA_FREQ_RESELECTION_MIB_ALLOWED":     0,
		"INTRA_FREQ_RESELECTION_MIB_NOT_ALLOWED": 1,
	}
)

func (x IntraFreqReselectionMib) Enum() *IntraFreqReselectionMib {
	p := new(IntraFreqReselectionMib)
	*p = x
	return p
}

func (x IntraFreqReselectionMib) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntraFreqReselectionMib) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[3].Descriptor()
}

func (IntraFreqReselectionMib) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[3]
}

func (x IntraFreqReselectionMib) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntraFreqReselectionMib.Descriptor instead.
func (IntraFreqReselectionMib) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{3}
}

// enumerated from nr-rrc-definitions.asn1:320
type FullConfigRrcreconfigurationv1530Ies int32

const (
	FullConfigRrcreconfigurationv1530Ies_FULL_CONFIG_RRCRECONFIGURATIONV1530_IES_TRUE FullConfigRrcreconfigurationv1530Ies = 0
)

// Enum value maps for FullConfigRrcreconfigurationv1530Ies.
var (
	FullConfigRrcreconfigurationv1530Ies_name = map[int32]string{
		0: "FULL_CONFIG_RRCRECONFIGURATIONV1530_IES_TRUE",
	}
	FullConfigRrcreconfigurationv1530Ies_value = map[string]int32{
		"FULL_CONFIG_RRCRECONFIGURATIONV1530_IES_TRUE": 0,
	}
)

func (x FullConfigRrcreconfigurationv1530Ies) Enum() *FullConfigRrcreconfigurationv1530Ies {
	p := new(FullConfigRrcreconfigurationv1530Ies)
	*p = x
	return p
}

func (x FullConfigRrcreconfigurationv1530Ies) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FullConfigRrcreconfigurationv1530Ies) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[4].Descriptor()
}

func (FullConfigRrcreconfigurationv1530Ies) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[4]
}

func (x FullConfigRrcreconfigurationv1530Ies) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FullConfigRrcreconfigurationv1530Ies.Descriptor instead.
func (FullConfigRrcreconfigurationv1530Ies) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{4}
}

// enumerated from nr-rrc-definitions.asn1:524
type CyclicPrefixBwp int32

const (
	CyclicPrefixBwp_CYCLIC_PREFIX_BWP_EXTENDED CyclicPrefixBwp = 0
)

// Enum value maps for CyclicPrefixBwp.
var (
	CyclicPrefixBwp_name = map[int32]string{
		0: "CYCLIC_PREFIX_BWP_EXTENDED",
	}
	CyclicPrefixBwp_value = map[string]int32{
		"CYCLIC_PREFIX_BWP_EXTENDED": 0,
	}
)

func (x CyclicPrefixBwp) Enum() *CyclicPrefixBwp {
	p := new(CyclicPrefixBwp)
	*p = x
	return p
}

func (x CyclicPrefixBwp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CyclicPrefixBwp) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[5].Descriptor()
}

func (CyclicPrefixBwp) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[5]
}

func (x CyclicPrefixBwp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CyclicPrefixBwp.Descriptor instead.
func (CyclicPrefixBwp) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{5}
}

// enumerated from nr-rrc-definitions.asn1:659
type PortSelectionSamplingSizetypeIiportSelection int32

const (
	PortSelectionSamplingSizetypeIiportSelection_PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N1 PortSelectionSamplingSizetypeIiportSelection = 0
	PortSelectionSamplingSizetypeIiportSelection_PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N2 PortSelectionSamplingSizetypeIiportSelection = 1
	PortSelectionSamplingSizetypeIiportSelection_PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N3 PortSelectionSamplingSizetypeIiportSelection = 2
	PortSelectionSamplingSizetypeIiportSelection_PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N4 PortSelectionSamplingSizetypeIiportSelection = 3
)

// Enum value maps for PortSelectionSamplingSizetypeIiportSelection.
var (
	PortSelectionSamplingSizetypeIiportSelection_name = map[int32]string{
		0: "PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N1",
		1: "PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N2",
		2: "PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N3",
		3: "PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N4",
	}
	PortSelectionSamplingSizetypeIiportSelection_value = map[string]int32{
		"PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N1": 0,
		"PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N2": 1,
		"PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N3": 2,
		"PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N4": 3,
	}
)

func (x PortSelectionSamplingSizetypeIiportSelection) Enum() *PortSelectionSamplingSizetypeIiportSelection {
	p := new(PortSelectionSamplingSizetypeIiportSelection)
	*p = x
	return p
}

func (x PortSelectionSamplingSizetypeIiportSelection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortSelectionSamplingSizetypeIiportSelection) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[6].Descriptor()
}

func (PortSelectionSamplingSizetypeIiportSelection) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[6]
}

func (x PortSelectionSamplingSizetypeIiportSelection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortSelectionSamplingSizetypeIiportSelection.Descriptor instead.
func (PortSelectionSamplingSizetypeIiportSelection) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{6}
}

// enumerated from nr-rrc-definitions.asn1:663
type PhaseAlphabetSizetype2 int32

const (
	PhaseAlphabetSizetype2_PHASE_ALPHABET_SIZETYPE2_N4 PhaseAlphabetSizetype2 = 0
	PhaseAlphabetSizetype2_PHASE_ALPHABET_SIZETYPE2_N8 PhaseAlphabetSizetype2 = 1
)

// Enum value maps for PhaseAlphabetSizetype2.
var (
	PhaseAlphabetSizetype2_name = map[int32]string{
		0: "PHASE_ALPHABET_SIZETYPE2_N4",
		1: "PHASE_ALPHABET_SIZETYPE2_N8",
	}
	PhaseAlphabetSizetype2_value = map[string]int32{
		"PHASE_ALPHABET_SIZETYPE2_N4": 0,
		"PHASE_ALPHABET_SIZETYPE2_N8": 1,
	}
)

func (x PhaseAlphabetSizetype2) Enum() *PhaseAlphabetSizetype2 {
	p := new(PhaseAlphabetSizetype2)
	*p = x
	return p
}

func (x PhaseAlphabetSizetype2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhaseAlphabetSizetype2) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[7].Descriptor()
}

func (PhaseAlphabetSizetype2) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[7]
}

func (x PhaseAlphabetSizetype2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhaseAlphabetSizetype2.Descriptor instead.
func (PhaseAlphabetSizetype2) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{7}
}

// enumerated from nr-rrc-definitions.asn1:665
type NumberOfBeamstype2 int32

const (
	NumberOfBeamstype2_NUMBER_OF_BEAMSTYPE2_TWO   NumberOfBeamstype2 = 0
	NumberOfBeamstype2_NUMBER_OF_BEAMSTYPE2_THREE NumberOfBeamstype2 = 1
	NumberOfBeamstype2_NUMBER_OF_BEAMSTYPE2_FOUR  NumberOfBeamstype2 = 2
)

// Enum value maps for NumberOfBeamstype2.
var (
	NumberOfBeamstype2_name = map[int32]string{
		0: "NUMBER_OF_BEAMSTYPE2_TWO",
		1: "NUMBER_OF_BEAMSTYPE2_THREE",
		2: "NUMBER_OF_BEAMSTYPE2_FOUR",
	}
	NumberOfBeamstype2_value = map[string]int32{
		"NUMBER_OF_BEAMSTYPE2_TWO":   0,
		"NUMBER_OF_BEAMSTYPE2_THREE": 1,
		"NUMBER_OF_BEAMSTYPE2_FOUR":  2,
	}
)

func (x NumberOfBeamstype2) Enum() *NumberOfBeamstype2 {
	p := new(NumberOfBeamstype2)
	*p = x
	return p
}

func (x NumberOfBeamstype2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NumberOfBeamstype2) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[8].Descriptor()
}

func (NumberOfBeamstype2) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[8]
}

func (x NumberOfBeamstype2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NumberOfBeamstype2.Descriptor instead.
func (NumberOfBeamstype2) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{8}
}

// enumerated from nr-rrc-definitions.asn1:693
type PortSelectionSamplingSizer16TypeIiportSelectionr16 int32

const (
	PortSelectionSamplingSizer16TypeIiportSelectionr16_PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N1 PortSelectionSamplingSizer16TypeIiportSelectionr16 = 0
	PortSelectionSamplingSizer16TypeIiportSelectionr16_PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N2 PortSelectionSamplingSizer16TypeIiportSelectionr16 = 1
	PortSelectionSamplingSizer16TypeIiportSelectionr16_PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N3 PortSelectionSamplingSizer16TypeIiportSelectionr16 = 2
	PortSelectionSamplingSizer16TypeIiportSelectionr16_PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N4 PortSelectionSamplingSizer16TypeIiportSelectionr16 = 3
)

// Enum value maps for PortSelectionSamplingSizer16TypeIiportSelectionr16.
var (
	PortSelectionSamplingSizer16TypeIiportSelectionr16_name = map[int32]string{
		0: "PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N1",
		1: "PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N2",
		2: "PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N3",
		3: "PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N4",
	}
	PortSelectionSamplingSizer16TypeIiportSelectionr16_value = map[string]int32{
		"PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N1": 0,
		"PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N2": 1,
		"PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N3": 2,
		"PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N4": 3,
	}
)

func (x PortSelectionSamplingSizer16TypeIiportSelectionr16) Enum() *PortSelectionSamplingSizer16TypeIiportSelectionr16 {
	p := new(PortSelectionSamplingSizer16TypeIiportSelectionr16)
	*p = x
	return p
}

func (x PortSelectionSamplingSizer16TypeIiportSelectionr16) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortSelectionSamplingSizer16TypeIiportSelectionr16) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[9].Descriptor()
}

func (PortSelectionSamplingSizer16TypeIiportSelectionr16) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[9]
}

func (x PortSelectionSamplingSizer16TypeIiportSelectionr16) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortSelectionSamplingSizer16TypeIiportSelectionr16.Descriptor instead.
func (PortSelectionSamplingSizer16TypeIiportSelectionr16) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{9}
}

// enumerated from nr-rrc-definitions.asn1:760
type ValueOfNr17TypeIiportSelectionr17 int32

const (
	ValueOfNr17TypeIiportSelectionr17_VALUE_OF_NR17TYPE_IIPORT_SELECTIONR17_N2 ValueOfNr17TypeIiportSelectionr17 = 0
	ValueOfNr17TypeIiportSelectionr17_VALUE_OF_NR17TYPE_IIPORT_SELECTIONR17_N4 ValueOfNr17TypeIiportSelectionr17 = 1
)

// Enum value maps for ValueOfNr17TypeIiportSelectionr17.
var (
	ValueOfNr17TypeIiportSelectionr17_name = map[int32]string{
		0: "VALUE_OF_NR17TYPE_IIPORT_SELECTIONR17_N2",
		1: "VALUE_OF_NR17TYPE_IIPORT_SELECTIONR17_N4",
	}
	ValueOfNr17TypeIiportSelectionr17_value = map[string]int32{
		"VALUE_OF_NR17TYPE_IIPORT_SELECTIONR17_N2": 0,
		"VALUE_OF_NR17TYPE_IIPORT_SELECTIONR17_N4": 1,
	}
)

func (x ValueOfNr17TypeIiportSelectionr17) Enum() *ValueOfNr17TypeIiportSelectionr17 {
	p := new(ValueOfNr17TypeIiportSelectionr17)
	*p = x
	return p
}

func (x ValueOfNr17TypeIiportSelectionr17) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueOfNr17TypeIiportSelectionr17) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[10].Descriptor()
}

func (ValueOfNr17TypeIiportSelectionr17) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[10]
}

func (x ValueOfNr17TypeIiportSelectionr17) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueOfNr17TypeIiportSelectionr17.Descriptor instead.
func (ValueOfNr17TypeIiportSelectionr17) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{10}
}

// enumerated from nr-rrc-definitions.asn1:785
type RegBundleSizeinterleaved int32

const (
	RegBundleSizeinterleaved_REG_BUNDLE_SIZEINTERLEAVED_N2 RegBundleSizeinterleaved = 0
	RegBundleSizeinterleaved_REG_BUNDLE_SIZEINTERLEAVED_N3 RegBundleSizeinterleaved = 1
	RegBundleSizeinterleaved_REG_BUNDLE_SIZEINTERLEAVED_N6 RegBundleSizeinterleaved = 2
)

// Enum value maps for RegBundleSizeinterleaved.
var (
	RegBundleSizeinterleaved_name = map[int32]string{
		0: "REG_BUNDLE_SIZEINTERLEAVED_N2",
		1: "REG_BUNDLE_SIZEINTERLEAVED_N3",
		2: "REG_BUNDLE_SIZEINTERLEAVED_N6",
	}
	RegBundleSizeinterleaved_value = map[string]int32{
		"REG_BUNDLE_SIZEINTERLEAVED_N2": 0,
		"REG_BUNDLE_SIZEINTERLEAVED_N3": 1,
		"REG_BUNDLE_SIZEINTERLEAVED_N6": 2,
	}
)

func (x RegBundleSizeinterleaved) Enum() *RegBundleSizeinterleaved {
	p := new(RegBundleSizeinterleaved)
	*p = x
	return p
}

func (x RegBundleSizeinterleaved) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegBundleSizeinterleaved) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[11].Descriptor()
}

func (RegBundleSizeinterleaved) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[11]
}

func (x RegBundleSizeinterleaved) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegBundleSizeinterleaved.Descriptor instead.
func (RegBundleSizeinterleaved) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{11}
}

// enumerated from nr-rrc-definitions.asn1:786
type InterleaverSizeinterleaved int32

const (
	InterleaverSizeinterleaved_INTERLEAVER_SIZEINTERLEAVED_N2 InterleaverSizeinterleaved = 0
	InterleaverSizeinterleaved_INTERLEAVER_SIZEINTERLEAVED_N3 InterleaverSizeinterleaved = 1
	InterleaverSizeinterleaved_INTERLEAVER_SIZEINTERLEAVED_N6 InterleaverSizeinterleaved = 2
)

// Enum value maps for InterleaverSizeinterleaved.
var (
	InterleaverSizeinterleaved_name = map[int32]string{
		0: "INTERLEAVER_SIZEINTERLEAVED_N2",
		1: "INTERLEAVER_SIZEINTERLEAVED_N3",
		2: "INTERLEAVER_SIZEINTERLEAVED_N6",
	}
	InterleaverSizeinterleaved_value = map[string]int32{
		"INTERLEAVER_SIZEINTERLEAVED_N2": 0,
		"INTERLEAVER_SIZEINTERLEAVED_N3": 1,
		"INTERLEAVER_SIZEINTERLEAVED_N6": 2,
	}
)

func (x InterleaverSizeinterleaved) Enum() *InterleaverSizeinterleaved {
	p := new(InterleaverSizeinterleaved)
	*p = x
	return p
}

func (x InterleaverSizeinterleaved) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterleaverSizeinterleaved) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[12].Descriptor()
}

func (InterleaverSizeinterleaved) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[12]
}

func (x InterleaverSizeinterleaved) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterleaverSizeinterleaved.Descriptor instead.
func (InterleaverSizeinterleaved) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{12}
}

// enumerated from nr-rrc-definitions.asn1:791
type PrecoderGranularityControlResourceSet int32

const (
	PrecoderGranularityControlResourceSet_PRECODER_GRANULARITY_CONTROL_RESOURCE_SET_SAME_AS_REG_BUNDLE PrecoderGranularityControlResourceSet = 0
	PrecoderGranularityControlResourceSet_PRECODER_GRANULARITY_CONTROL_RESOURCE_SET_ALL_CONTIGUOUS_RBS PrecoderGranularityControlResourceSet = 1
)

// Enum value maps for PrecoderGranularityControlResourceSet.
var (
	PrecoderGranularityControlResourceSet_name = map[int32]string{
		0: "PRECODER_GRANULARITY_CONTROL_RESOURCE_SET_SAME_AS_REG_BUNDLE",
		1: "PRECODER_GRANULARITY_CONTROL_RESOURCE_SET_ALL_CONTIGUOUS_RBS",
	}
	PrecoderGranularityControlResourceSet_value = map[string]int32{
		"PRECODER_GRANULARITY_CONTROL_RESOURCE_SET_SAME_AS_REG_BUNDLE": 0,
		"PRECODER_GRANULARITY_CONTROL_RESOURCE_SET_ALL_CONTIGUOUS_RBS": 1,
	}
)

func (x PrecoderGranularityControlResourceSet) Enum() *PrecoderGranularityControlResourceSet {
	p := new(PrecoderGranularityControlResourceSet)
	*p = x
	return p
}

func (x PrecoderGranularityControlResourceSet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrecoderGranularityControlResourceSet) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[13].Descriptor()
}

func (PrecoderGranularityControlResourceSet) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[13]
}

func (x PrecoderGranularityControlResourceSet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrecoderGranularityControlResourceSet.Descriptor instead.
func (PrecoderGranularityControlResourceSet) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{13}
}

// enumerated from nr-rrc-definitions.asn1:794
type TciPresentInDcicontrolResourceSet int32

const (
	TciPresentInDcicontrolResourceSet_TCI_PRESENT_IN_DCICONTROL_RESOURCE_SET_ENABLED TciPresentInDcicontrolResourceSet = 0
)

// Enum value maps for TciPresentInDcicontrolResourceSet.
var (
	TciPresentInDcicontrolResourceSet_name = map[int32]string{
		0: "TCI_PRESENT_IN_DCICONTROL_RESOURCE_SET_ENABLED",
	}
	TciPresentInDcicontrolResourceSet_value = map[string]int32{
		"TCI_PRESENT_IN_DCICONTROL_RESOURCE_SET_ENABLED": 0,
	}
)

func (x TciPresentInDcicontrolResourceSet) Enum() *TciPresentInDcicontrolResourceSet {
	p := new(TciPresentInDcicontrolResourceSet)
	*p = x
	return p
}

func (x TciPresentInDcicontrolResourceSet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TciPresentInDcicontrolResourceSet) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[14].Descriptor()
}

func (TciPresentInDcicontrolResourceSet) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[14]
}

func (x TciPresentInDcicontrolResourceSet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TciPresentInDcicontrolResourceSet.Descriptor instead.
func (TciPresentInDcicontrolResourceSet) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{14}
}

// enumerated from nr-rrc-definitions.asn1:804
type FollowUnifiedTcistater17ControlResourceSet int32

const (
	FollowUnifiedTcistater17ControlResourceSet_FOLLOW_UNIFIED_TCISTATER17_CONTROL_RESOURCE_SET_ENABLED FollowUnifiedTcistater17ControlResourceSet = 0
)

// Enum value maps for FollowUnifiedTcistater17ControlResourceSet.
var (
	FollowUnifiedTcistater17ControlResourceSet_name = map[int32]string{
		0: "FOLLOW_UNIFIED_TCISTATER17_CONTROL_RESOURCE_SET_ENABLED",
	}
	FollowUnifiedTcistater17ControlResourceSet_value = map[string]int32{
		"FOLLOW_UNIFIED_TCISTATER17_CONTROL_RESOURCE_SET_ENABLED": 0,
	}
)

func (x FollowUnifiedTcistater17ControlResourceSet) Enum() *FollowUnifiedTcistater17ControlResourceSet {
	p := new(FollowUnifiedTcistater17ControlResourceSet)
	*p = x
	return p
}

func (x FollowUnifiedTcistater17ControlResourceSet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FollowUnifiedTcistater17ControlResourceSet) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[15].Descriptor()
}

func (FollowUnifiedTcistater17ControlResourceSet) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[15]
}

func (x FollowUnifiedTcistater17ControlResourceSet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FollowUnifiedTcistater17ControlResourceSet.Descriptor instead.
func (FollowUnifiedTcistater17ControlResourceSet) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{15}
}

// enumerated from nr-rrc-definitions.asn1:831
type ApCsimultiplexingModer17CsiaperiodicTriggerState int32

const (
	ApCsimultiplexingModer17CsiaperiodicTriggerState_AP_CSIMULTIPLEXING_MODER17_CSIAPERIODIC_TRIGGER_STATE_ENABLED ApCsimultiplexingModer17CsiaperiodicTriggerState = 0
)

// Enum value maps for ApCsimultiplexingModer17CsiaperiodicTriggerState.
var (
	ApCsimultiplexingModer17CsiaperiodicTriggerState_name = map[int32]string{
		0: "AP_CSIMULTIPLEXING_MODER17_CSIAPERIODIC_TRIGGER_STATE_ENABLED",
	}
	ApCsimultiplexingModer17CsiaperiodicTriggerState_value = map[string]int32{
		"AP_CSIMULTIPLEXING_MODER17_CSIAPERIODIC_TRIGGER_STATE_ENABLED": 0,
	}
)

func (x ApCsimultiplexingModer17CsiaperiodicTriggerState) Enum() *ApCsimultiplexingModer17CsiaperiodicTriggerState {
	p := new(ApCsimultiplexingModer17CsiaperiodicTriggerState)
	*p = x
	return p
}

func (x ApCsimultiplexingModer17CsiaperiodicTriggerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApCsimultiplexingModer17CsiaperiodicTriggerState) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[16].Descriptor()
}

func (ApCsimultiplexingModer17CsiaperiodicTriggerState) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[16]
}

func (x ApCsimultiplexingModer17CsiaperiodicTriggerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApCsimultiplexingModer17CsiaperiodicTriggerState.Descriptor instead.
func (ApCsimultiplexingModer17CsiaperiodicTriggerState) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{16}
}

// enumerated from nr-rrc-definitions.asn1:877
type SubcarrierLocationp0Pattern0 int32

const (
	SubcarrierLocationp0Pattern0_SUBCARRIER_LOCATIONP0PATTERN0_S0  SubcarrierLocationp0Pattern0 = 0
	SubcarrierLocationp0Pattern0_SUBCARRIER_LOCATIONP0PATTERN0_S2  SubcarrierLocationp0Pattern0 = 1
	SubcarrierLocationp0Pattern0_SUBCARRIER_LOCATIONP0PATTERN0_S4  SubcarrierLocationp0Pattern0 = 2
	SubcarrierLocationp0Pattern0_SUBCARRIER_LOCATIONP0PATTERN0_S6  SubcarrierLocationp0Pattern0 = 3
	SubcarrierLocationp0Pattern0_SUBCARRIER_LOCATIONP0PATTERN0_S8  SubcarrierLocationp0Pattern0 = 4
	SubcarrierLocationp0Pattern0_SUBCARRIER_LOCATIONP0PATTERN0_S10 SubcarrierLocationp0Pattern0 = 5
)

// Enum value maps for SubcarrierLocationp0Pattern0.
var (
	SubcarrierLocationp0Pattern0_name = map[int32]string{
		0: "SUBCARRIER_LOCATIONP0PATTERN0_S0",
		1: "SUBCARRIER_LOCATIONP0PATTERN0_S2",
		2: "SUBCARRIER_LOCATIONP0PATTERN0_S4",
		3: "SUBCARRIER_LOCATIONP0PATTERN0_S6",
		4: "SUBCARRIER_LOCATIONP0PATTERN0_S8",
		5: "SUBCARRIER_LOCATIONP0PATTERN0_S10",
	}
	SubcarrierLocationp0Pattern0_value = map[string]int32{
		"SUBCARRIER_LOCATIONP0PATTERN0_S0":  0,
		"SUBCARRIER_LOCATIONP0PATTERN0_S2":  1,
		"SUBCARRIER_LOCATIONP0PATTERN0_S4":  2,
		"SUBCARRIER_LOCATIONP0PATTERN0_S6":  3,
		"SUBCARRIER_LOCATIONP0PATTERN0_S8":  4,
		"SUBCARRIER_LOCATIONP0PATTERN0_S10": 5,
	}
)

func (x SubcarrierLocationp0Pattern0) Enum() *SubcarrierLocationp0Pattern0 {
	p := new(SubcarrierLocationp0Pattern0)
	*p = x
	return p
}

func (x SubcarrierLocationp0Pattern0) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubcarrierLocationp0Pattern0) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[17].Descriptor()
}

func (SubcarrierLocationp0Pattern0) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[17]
}

func (x SubcarrierLocationp0Pattern0) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubcarrierLocationp0Pattern0.Descriptor instead.
func (SubcarrierLocationp0Pattern0) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{17}
}

// enumerated from nr-rrc-definitions.asn1:881
type SubcarrierLocationp1Pattern1 int32

const (
	SubcarrierLocationp1Pattern1_SUBCARRIER_LOCATIONP1PATTERN1_S0 SubcarrierLocationp1Pattern1 = 0
	SubcarrierLocationp1Pattern1_SUBCARRIER_LOCATIONP1PATTERN1_S4 SubcarrierLocationp1Pattern1 = 1
	SubcarrierLocationp1Pattern1_SUBCARRIER_LOCATIONP1PATTERN1_S8 SubcarrierLocationp1Pattern1 = 2
)

// Enum value maps for SubcarrierLocationp1Pattern1.
var (
	SubcarrierLocationp1Pattern1_name = map[int32]string{
		0: "SUBCARRIER_LOCATIONP1PATTERN1_S0",
		1: "SUBCARRIER_LOCATIONP1PATTERN1_S4",
		2: "SUBCARRIER_LOCATIONP1PATTERN1_S8",
	}
	SubcarrierLocationp1Pattern1_value = map[string]int32{
		"SUBCARRIER_LOCATIONP1PATTERN1_S0": 0,
		"SUBCARRIER_LOCATIONP1PATTERN1_S4": 1,
		"SUBCARRIER_LOCATIONP1PATTERN1_S8": 2,
	}
)

func (x SubcarrierLocationp1Pattern1) Enum() *SubcarrierLocationp1Pattern1 {
	p := new(SubcarrierLocationp1Pattern1)
	*p = x
	return p
}

func (x SubcarrierLocationp1Pattern1) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubcarrierLocationp1Pattern1) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[18].Descriptor()
}

func (SubcarrierLocationp1Pattern1) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[18]
}

func (x SubcarrierLocationp1Pattern1) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubcarrierLocationp1Pattern1.Descriptor instead.
func (SubcarrierLocationp1Pattern1) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{18}
}

// enumerated from nr-rrc-definitions.asn1:968
type ReportSlotConfigsemiPersistentOnPusch int32

const (
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL5   ReportSlotConfigsemiPersistentOnPusch = 0
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL10  ReportSlotConfigsemiPersistentOnPusch = 1
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL20  ReportSlotConfigsemiPersistentOnPusch = 2
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL40  ReportSlotConfigsemiPersistentOnPusch = 3
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL80  ReportSlotConfigsemiPersistentOnPusch = 4
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL160 ReportSlotConfigsemiPersistentOnPusch = 5
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL320 ReportSlotConfigsemiPersistentOnPusch = 6
)

// Enum value maps for ReportSlotConfigsemiPersistentOnPusch.
var (
	ReportSlotConfigsemiPersistentOnPusch_name = map[int32]string{
		0: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL5",
		1: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL10",
		2: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL20",
		3: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL40",
		4: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL80",
		5: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL160",
		6: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL320",
	}
	ReportSlotConfigsemiPersistentOnPusch_value = map[string]int32{
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL5":   0,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL10":  1,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL20":  2,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL40":  3,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL80":  4,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL160": 5,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL320": 6,
	}
)

func (x ReportSlotConfigsemiPersistentOnPusch) Enum() *ReportSlotConfigsemiPersistentOnPusch {
	p := new(ReportSlotConfigsemiPersistentOnPusch)
	*p = x
	return p
}

func (x ReportSlotConfigsemiPersistentOnPusch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportSlotConfigsemiPersistentOnPusch) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[19].Descriptor()
}

func (ReportSlotConfigsemiPersistentOnPusch) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[19]
}

func (x ReportSlotConfigsemiPersistentOnPusch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportSlotConfigsemiPersistentOnPusch.Descriptor instead.
func (ReportSlotConfigsemiPersistentOnPusch) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{19}
}

// enumerated from nr-rrc-definitions.asn1:981
type PdschBundleSizeForCsicriRii1Cqi int32

const (
	PdschBundleSizeForCsicriRii1Cqi_PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N2 PdschBundleSizeForCsicriRii1Cqi = 0
	PdschBundleSizeForCsicriRii1Cqi_PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N4 PdschBundleSizeForCsicriRii1Cqi = 1
)

// Enum value maps for PdschBundleSizeForCsicriRii1Cqi.
var (
	PdschBundleSizeForCsicriRii1Cqi_name = map[int32]string{
		0: "PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N2",
		1: "PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N4",
	}
	PdschBundleSizeForCsicriRii1Cqi_value = map[string]int32{
		"PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N2": 0,
		"PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N4": 1,
	}
)

func (x PdschBundleSizeForCsicriRii1Cqi) Enum() *PdschBundleSizeForCsicriRii1Cqi {
	p := new(PdschBundleSizeForCsicriRii1Cqi)
	*p = x
	return p
}

func (x PdschBundleSizeForCsicriRii1Cqi) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PdschBundleSizeForCsicriRii1Cqi) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[20].Descriptor()
}

func (PdschBundleSizeForCsicriRii1Cqi) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[20]
}

func (x PdschBundleSizeForCsicriRii1Cqi) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PdschBundleSizeForCsicriRii1Cqi.Descriptor instead.
func (PdschBundleSizeForCsicriRii1Cqi) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{20}
}

// enumerated from nr-rrc-definitions.asn1:989
type CqiFormatIndicatorreportFreqConfiguration int32

const (
	CqiFormatIndicatorreportFreqConfiguration_CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_CQI CqiFormatIndicatorreportFreqConfiguration = 0
	CqiFormatIndicatorreportFreqConfiguration_CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_CQI  CqiFormatIndicatorreportFreqConfiguration = 1
)

// Enum value maps for CqiFormatIndicatorreportFreqConfiguration.
var (
	CqiFormatIndicatorreportFreqConfiguration_name = map[int32]string{
		0: "CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_CQI",
		1: "CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_CQI",
	}
	CqiFormatIndicatorreportFreqConfiguration_value = map[string]int32{
		"CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_CQI": 0,
		"CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_CQI":  1,
	}
)

func (x CqiFormatIndicatorreportFreqConfiguration) Enum() *CqiFormatIndicatorreportFreqConfiguration {
	p := new(CqiFormatIndicatorreportFreqConfiguration)
	*p = x
	return p
}

func (x CqiFormatIndicatorreportFreqConfiguration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CqiFormatIndicatorreportFreqConfiguration) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[21].Descriptor()
}

func (CqiFormatIndicatorreportFreqConfiguration) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[21]
}

func (x CqiFormatIndicatorreportFreqConfiguration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CqiFormatIndicatorreportFreqConfiguration.Descriptor instead.
func (CqiFormatIndicatorreportFreqConfiguration) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{21}
}

// enumerated from nr-rrc-definitions.asn1:990
type PmiFormatIndicatorreportFreqConfiguration int32

const (
	PmiFormatIndicatorreportFreqConfiguration_PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_PMI PmiFormatIndicatorreportFreqConfiguration = 0
	PmiFormatIndicatorreportFreqConfiguration_PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_PMI  PmiFormatIndicatorreportFreqConfiguration = 1
)

// Enum value maps for PmiFormatIndicatorreportFreqConfiguration.
var (
	PmiFormatIndicatorreportFreqConfiguration_name = map[int32]string{
		0: "PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_PMI",
		1: "PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_PMI",
	}
	PmiFormatIndicatorreportFreqConfiguration_value = map[string]int32{
		"PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_PMI": 0,
		"PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_PMI":  1,
	}
)

func (x PmiFormatIndicatorreportFreqConfiguration) Enum() *PmiFormatIndicatorreportFreqConfiguration {
	p := new(PmiFormatIndicatorreportFreqConfiguration)
	*p = x
	return p
}

func (x PmiFormatIndicatorreportFreqConfiguration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PmiFormatIndicatorreportFreqConfiguration) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[22].Descriptor()
}

func (PmiFormatIndicatorreportFreqConfiguration) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[22]
}

func (x PmiFormatIndicatorreportFreqConfiguration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PmiFormatIndicatorreportFreqConfiguration.Descriptor instead.
func (PmiFormatIndicatorreportFreqConfiguration) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{22}
}

// enumerated from nr-rrc-definitions.asn1:1013
type TimeRestrictionForChannelMeasurementsCsireportConfig int32

const (
	TimeRestrictionForChannelMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED     TimeRestrictionForChannelMeasurementsCsireportConfig = 0
	TimeRestrictionForChannelMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED TimeRestrictionForChannelMeasurementsCsireportConfig = 1
)

// Enum value maps for TimeRestrictionForChannelMeasurementsCsireportConfig.
var (
	TimeRestrictionForChannelMeasurementsCsireportConfig_name = map[int32]string{
		0: "TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED",
		1: "TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED",
	}
	TimeRestrictionForChannelMeasurementsCsireportConfig_value = map[string]int32{
		"TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED":     0,
		"TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED": 1,
	}
)

func (x TimeRestrictionForChannelMeasurementsCsireportConfig) Enum() *TimeRestrictionForChannelMeasurementsCsireportConfig {
	p := new(TimeRestrictionForChannelMeasurementsCsireportConfig)
	*p = x
	return p
}

func (x TimeRestrictionForChannelMeasurementsCsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeRestrictionForChannelMeasurementsCsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[23].Descriptor()
}

func (TimeRestrictionForChannelMeasurementsCsireportConfig) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[23]
}

func (x TimeRestrictionForChannelMeasurementsCsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeRestrictionForChannelMeasurementsCsireportConfig.Descriptor instead.
func (TimeRestrictionForChannelMeasurementsCsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{23}
}

// enumerated from nr-rrc-definitions.asn1:1014
type TimeRestrictionForInterferenceMeasurementsCsireportConfig int32

const (
	TimeRestrictionForInterferenceMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED     TimeRestrictionForInterferenceMeasurementsCsireportConfig = 0
	TimeRestrictionForInterferenceMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED TimeRestrictionForInterferenceMeasurementsCsireportConfig = 1
)

// Enum value maps for TimeRestrictionForInterferenceMeasurementsCsireportConfig.
var (
	TimeRestrictionForInterferenceMeasurementsCsireportConfig_name = map[int32]string{
		0: "TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED",
		1: "TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED",
	}
	TimeRestrictionForInterferenceMeasurementsCsireportConfig_value = map[string]int32{
		"TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED":     0,
		"TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED": 1,
	}
)

func (x TimeRestrictionForInterferenceMeasurementsCsireportConfig) Enum() *TimeRestrictionForInterferenceMeasurementsCsireportConfig {
	p := new(TimeRestrictionForInterferenceMeasurementsCsireportConfig)
	*p = x
	return p
}

func (x TimeRestrictionForInterferenceMeasurementsCsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeRestrictionForInterferenceMeasurementsCsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[24].Descriptor()
}

func (TimeRestrictionForInterferenceMeasurementsCsireportConfig) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[24]
}

func (x TimeRestrictionForInterferenceMeasurementsCsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeRestrictionForInterferenceMeasurementsCsireportConfig.Descriptor instead.
func (TimeRestrictionForInterferenceMeasurementsCsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{24}
}

// enumerated from nr-rrc-definitions.asn1:1016
type DummyCsireportConfig int32

const (
	DummyCsireportConfig_DUMMY_CSIREPORT_CONFIG_N1 DummyCsireportConfig = 0
	DummyCsireportConfig_DUMMY_CSIREPORT_CONFIG_N2 DummyCsireportConfig = 1
)

// Enum value maps for DummyCsireportConfig.
var (
	DummyCsireportConfig_name = map[int32]string{
		0: "DUMMY_CSIREPORT_CONFIG_N1",
		1: "DUMMY_CSIREPORT_CONFIG_N2",
	}
	DummyCsireportConfig_value = map[string]int32{
		"DUMMY_CSIREPORT_CONFIG_N1": 0,
		"DUMMY_CSIREPORT_CONFIG_N2": 1,
	}
)

func (x DummyCsireportConfig) Enum() *DummyCsireportConfig {
	p := new(DummyCsireportConfig)
	*p = x
	return p
}

func (x DummyCsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DummyCsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[25].Descriptor()
}

func (DummyCsireportConfig) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[25]
}

func (x DummyCsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DummyCsireportConfig.Descriptor instead.
func (DummyCsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{25}
}

// enumerated from nr-rrc-definitions.asn1:1020
type NrofReportedRsdisabled int32

const (
	NrofReportedRsdisabled_NROF_REPORTED_RSDISABLED_N1 NrofReportedRsdisabled = 0
	NrofReportedRsdisabled_NROF_REPORTED_RSDISABLED_N2 NrofReportedRsdisabled = 1
	NrofReportedRsdisabled_NROF_REPORTED_RSDISABLED_N3 NrofReportedRsdisabled = 2
	NrofReportedRsdisabled_NROF_REPORTED_RSDISABLED_N4 NrofReportedRsdisabled = 3
)

// Enum value maps for NrofReportedRsdisabled.
var (
	NrofReportedRsdisabled_name = map[int32]string{
		0: "NROF_REPORTED_RSDISABLED_N1",
		1: "NROF_REPORTED_RSDISABLED_N2",
		2: "NROF_REPORTED_RSDISABLED_N3",
		3: "NROF_REPORTED_RSDISABLED_N4",
	}
	NrofReportedRsdisabled_value = map[string]int32{
		"NROF_REPORTED_RSDISABLED_N1": 0,
		"NROF_REPORTED_RSDISABLED_N2": 1,
		"NROF_REPORTED_RSDISABLED_N3": 2,
		"NROF_REPORTED_RSDISABLED_N4": 3,
	}
)

func (x NrofReportedRsdisabled) Enum() *NrofReportedRsdisabled {
	p := new(NrofReportedRsdisabled)
	*p = x
	return p
}

func (x NrofReportedRsdisabled) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NrofReportedRsdisabled) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[26].Descriptor()
}

func (NrofReportedRsdisabled) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[26]
}

func (x NrofReportedRsdisabled) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NrofReportedRsdisabled.Descriptor instead.
func (NrofReportedRsdisabled) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{26}
}

// enumerated from nr-rrc-definitions.asn1:1023
type CqiTableCsireportConfig int32

const (
	CqiTableCsireportConfig_CQI_TABLE_CSIREPORT_CONFIG_TABLE1     CqiTableCsireportConfig = 0
	CqiTableCsireportConfig_CQI_TABLE_CSIREPORT_CONFIG_TABLE2     CqiTableCsireportConfig = 1
	CqiTableCsireportConfig_CQI_TABLE_CSIREPORT_CONFIG_TABLE3     CqiTableCsireportConfig = 2
	CqiTableCsireportConfig_CQI_TABLE_CSIREPORT_CONFIG_TABLE4_R17 CqiTableCsireportConfig = 3
)

// Enum value maps for CqiTableCsireportConfig.
var (
	CqiTableCsireportConfig_name = map[int32]string{
		0: "CQI_TABLE_CSIREPORT_CONFIG_TABLE1",
		1: "CQI_TABLE_CSIREPORT_CONFIG_TABLE2",
		2: "CQI_TABLE_CSIREPORT_CONFIG_TABLE3",
		3: "CQI_TABLE_CSIREPORT_CONFIG_TABLE4_R17",
	}
	CqiTableCsireportConfig_value = map[string]int32{
		"CQI_TABLE_CSIREPORT_CONFIG_TABLE1":     0,
		"CQI_TABLE_CSIREPORT_CONFIG_TABLE2":     1,
		"CQI_TABLE_CSIREPORT_CONFIG_TABLE3":     2,
		"CQI_TABLE_CSIREPORT_CONFIG_TABLE4_R17": 3,
	}
)

func (x CqiTableCsireportConfig) Enum() *CqiTableCsireportConfig {
	p := new(CqiTableCsireportConfig)
	*p = x
	return p
}

func (x CqiTableCsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CqiTableCsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[27].Descriptor()
}

func (CqiTableCsireportConfig) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[27]
}

func (x CqiTableCsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CqiTableCsireportConfig.Descriptor instead.
func (CqiTableCsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{27}
}

// enumerated from nr-rrc-definitions.asn1:1024
type SubbandSizeCsireportConfig int32

const (
	SubbandSizeCsireportConfig_SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE1 SubbandSizeCsireportConfig = 0
	SubbandSizeCsireportConfig_SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE2 SubbandSizeCsireportConfig = 1
)

// Enum value maps for SubbandSizeCsireportConfig.
var (
	SubbandSizeCsireportConfig_name = map[int32]string{
		0: "SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE1",
		1: "SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE2",
	}
	SubbandSizeCsireportConfig_value = map[string]int32{
		"SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE1": 0,
		"SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE2": 1,
	}
)

func (x SubbandSizeCsireportConfig) Enum() *SubbandSizeCsireportConfig {
	p := new(SubbandSizeCsireportConfig)
	*p = x
	return p
}

func (x SubbandSizeCsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubbandSizeCsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[28].Descriptor()
}

func (SubbandSizeCsireportConfig) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[28]
}

func (x SubbandSizeCsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubbandSizeCsireportConfig.Descriptor instead.
func (SubbandSizeCsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{28}
}

// enumerated from nr-rrc-definitions.asn1:1029
type ReportSlotConfigv1530SemiPersistentOnPuschv1530 int32

const (
	ReportSlotConfigv1530SemiPersistentOnPuschv1530_REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL4  ReportSlotConfigv1530SemiPersistentOnPuschv1530 = 0
	ReportSlotConfigv1530SemiPersistentOnPuschv1530_REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL8  ReportSlotConfigv1530SemiPersistentOnPuschv1530 = 1
	ReportSlotConfigv1530SemiPersistentOnPuschv1530_REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL16 ReportSlotConfigv1530SemiPersistentOnPuschv1530 = 2
)

// Enum value maps for ReportSlotConfigv1530SemiPersistentOnPuschv1530.
var (
	ReportSlotConfigv1530SemiPersistentOnPuschv1530_name = map[int32]string{
		0: "REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL4",
		1: "REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL8",
		2: "REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL16",
	}
	ReportSlotConfigv1530SemiPersistentOnPuschv1530_value = map[string]int32{
		"REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL4":  0,
		"REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL8":  1,
		"REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL16": 2,
	}
)

func (x ReportSlotConfigv1530SemiPersistentOnPuschv1530) Enum() *ReportSlotConfigv1530SemiPersistentOnPuschv1530 {
	p := new(ReportSlotConfigv1530SemiPersistentOnPuschv1530)
	*p = x
	return p
}

func (x ReportSlotConfigv1530SemiPersistentOnPuschv1530) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportSlotConfigv1530SemiPersistentOnPuschv1530) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[29].Descriptor()
}

func (ReportSlotConfigv1530SemiPersistentOnPuschv1530) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[29]
}

func (x ReportSlotConfigv1530SemiPersistentOnPuschv1530) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportSlotConfigv1530SemiPersistentOnPuschv1530.Descriptor instead.
func (ReportSlotConfigv1530SemiPersistentOnPuschv1530) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{29}
}

// enumerated from nr-rrc-definitions.asn1:1048
type CqiBitsPerSubbandr17CsireportConfig int32

const (
	CqiBitsPerSubbandr17CsireportConfig_CQI_BITS_PER_SUBBANDR17_CSIREPORT_CONFIG_BITS4 CqiBitsPerSubbandr17CsireportConfig = 0
)

// Enum value maps for CqiBitsPerSubbandr17CsireportConfig.
var (
	CqiBitsPerSubbandr17CsireportConfig_name = map[int32]string{
		0: "CQI_BITS_PER_SUBBANDR17_CSIREPORT_CONFIG_BITS4",
	}
	CqiBitsPerSubbandr17CsireportConfig_value = map[string]int32{
		"CQI_BITS_PER_SUBBANDR17_CSIREPORT_CONFIG_BITS4": 0,
	}
)

func (x CqiBitsPerSubbandr17CsireportConfig) Enum() *CqiBitsPerSubbandr17CsireportConfig {
	p := new(CqiBitsPerSubbandr17CsireportConfig)
	*p = x
	return p
}

func (x CqiBitsPerSubbandr17CsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CqiBitsPerSubbandr17CsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[30].Descriptor()
}

func (CqiBitsPerSubbandr17CsireportConfig) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[30]
}

func (x CqiBitsPerSubbandr17CsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CqiBitsPerSubbandr17CsireportConfig.Descriptor instead.
func (CqiBitsPerSubbandr17CsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{30}
}

// enumerated from nr-rrc-definitions.asn1:1050
type NrofReportedGroupsr17GroupBasedBeamReportingv1710 int32

const (
	NrofReportedGroupsr17GroupBasedBeamReportingv1710_NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N1 NrofReportedGroupsr17GroupBasedBeamReportingv1710 = 0
	NrofReportedGroupsr17GroupBasedBeamReportingv1710_NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N2 NrofReportedGroupsr17GroupBasedBeamReportingv1710 = 1
	NrofReportedGroupsr17GroupBasedBeamReportingv1710_NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N3 NrofReportedGroupsr17GroupBasedBeamReportingv1710 = 2
	NrofReportedGroupsr17GroupBasedBeamReportingv1710_NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N4 NrofReportedGroupsr17GroupBasedBeamReportingv1710 = 3
)

// Enum value maps for NrofReportedGroupsr17GroupBasedBeamReportingv1710.
var (
	NrofReportedGroupsr17GroupBasedBeamReportingv1710_name = map[int32]string{
		0: "NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N1",
		1: "NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N2",
		2: "NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N3",
		3: "NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N4",
	}
	NrofReportedGroupsr17GroupBasedBeamReportingv1710_value = map[string]int32{
		"NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N1": 0,
		"NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N2": 1,
		"NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N3": 2,
		"NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N4": 3,
	}
)

func (x NrofReportedGroupsr17GroupBasedBeamReportingv1710) Enum() *NrofReportedGroupsr17GroupBasedBeamReportingv1710 {
	p := new(NrofReportedGroupsr17GroupBasedBeamReportingv1710)
	*p = x
	return p
}

func (x NrofReportedGroupsr17GroupBasedBeamReportingv1710) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NrofReportedGroupsr17GroupBasedBeamReportingv1710) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[31].Descriptor()
}

func (NrofReportedGroupsr17GroupBasedBeamReportingv1710) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[31]
}

func (x NrofReportedGroupsr17GroupBasedBeamReportingv1710) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NrofReportedGroupsr17GroupBasedBeamReportingv1710.Descriptor instead.
func (NrofReportedGroupsr17GroupBasedBeamReportingv1710) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{31}
}

// enumerated from nr-rrc-definitions.asn1:1053
type SharedCmrr17CsireportConfig int32

const (
	SharedCmrr17CsireportConfig_SHARED_CMRR17_CSIREPORT_CONFIG_ENABLE SharedCmrr17CsireportConfig = 0
)

// Enum value maps for SharedCmrr17CsireportConfig.
var (
	SharedCmrr17CsireportConfig_name = map[int32]string{
		0: "SHARED_CMRR17_CSIREPORT_CONFIG_ENABLE",
	}
	SharedCmrr17CsireportConfig_value = map[string]int32{
		"SHARED_CMRR17_CSIREPORT_CONFIG_ENABLE": 0,
	}
)

func (x SharedCmrr17CsireportConfig) Enum() *SharedCmrr17CsireportConfig {
	p := new(SharedCmrr17CsireportConfig)
	*p = x
	return p
}

func (x SharedCmrr17CsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SharedCmrr17CsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[32].Descriptor()
}

func (SharedCmrr17CsireportConfig) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[32]
}

func (x SharedCmrr17CsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SharedCmrr17CsireportConfig.Descriptor instead.
func (SharedCmrr17CsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{32}
}

// enumerated from nr-rrc-definitions.asn1:1054
type CsiReportModer17CsireportConfig int32

const (
	CsiReportModer17CsireportConfig_CSI_REPORT_MODER17_CSIREPORT_CONFIG_MODE1 CsiReportModer17CsireportConfig = 0
	CsiReportModer17CsireportConfig_CSI_REPORT_MODER17_CSIREPORT_CONFIG_MODE2 CsiReportModer17CsireportConfig = 1
)

// Enum value maps for CsiReportModer17CsireportConfig.
var (
	CsiReportModer17CsireportConfig_name = map[int32]string{
		0: "CSI_REPORT_MODER17_CSIREPORT_CONFIG_MODE1",
		1: "CSI_REPORT_MODER17_CSIREPORT_CONFIG_MODE2",
	}
	CsiReportModer17CsireportConfig_value = map[string]int32{
		"CSI_REPORT_MODER17_CSIREPORT_CONFIG_MODE1": 0,
		"CSI_REPORT_MODER17_CSIREPORT_CONFIG_MODE2": 1,
	}
)

func (x CsiReportModer17CsireportConfig) Enum() *CsiReportModer17CsireportConfig {
	p := new(CsiReportModer17CsireportConfig)
	*p = x
	return p
}

func (x CsiReportModer17CsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CsiReportModer17CsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[33].Descriptor()
}

func (CsiReportModer17CsireportConfig) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[33]
}

func (x CsiReportModer17CsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CsiReportModer17CsireportConfig.Descriptor instead.
func (CsiReportModer17CsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{33}
}

// enumerated from nr-rrc-definitions.asn1:1055
type NumberOfSingleTrpcsimode1R17CsireportConfig int32

const (
	NumberOfSingleTrpcsimode1R17CsireportConfig_NUMBER_OF_SINGLE_TRPCSIMODE1R17_CSIREPORT_CONFIG_N0 NumberOfSingleTrpcsimode1R17CsireportConfig = 0
	NumberOfSingleTrpcsimode1R17CsireportConfig_NUMBER_OF_SINGLE_TRPCSIMODE1R17_CSIREPORT_CONFIG_N1 NumberOfSingleTrpcsimode1R17CsireportConfig = 1
	NumberOfSingleTrpcsimode1R17CsireportConfig_NUMBER_OF_SINGLE_TRPCSIMODE1R17_CSIREPORT_CONFIG_N2 NumberOfSingleTrpcsimode1R17CsireportConfig = 2
)

// Enum value maps for NumberOfSingleTrpcsimode1R17CsireportConfig.
var (
	NumberOfSingleTrpcsimode1R17CsireportConfig_name = map[int32]string{
		0: "NUMBER_OF_SINGLE_TRPCSIMODE1R17_CSIREPORT_CONFIG_N0",
		1: "NUMBER_OF_SINGLE_TRPCSIMODE1R17_CSIREPORT_CONFIG_N1",
		2: "NUMBER_OF_SINGLE_TRPCSIMODE1R17_CSIREPORT_CONFIG_N2",
	}
	NumberOfSingleTrpcsimode1R17CsireportConfig_value = map[string]int32{
		"NUMBER_OF_SINGLE_TRPCSIMODE1R17_CSIREPORT_CONFIG_N0": 0,
		"NUMBER_OF_SINGLE_TRPCSIMODE1R17_CSIREPORT_CONFIG_N1": 1,
		"NUMBER_OF_SINGLE_TRPCSIMODE1R17_CSIREPORT_CONFIG_N2": 2,
	}
)

func (x NumberOfSingleTrpcsimode1R17CsireportConfig) Enum() *NumberOfSingleTrpcsimode1R17CsireportConfig {
	p := new(NumberOfSingleTrpcsimode1R17CsireportConfig)
	*p = x
	return p
}

func (x NumberOfSingleTrpcsimode1R17CsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NumberOfSingleTrpcsimode1R17CsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[34].Descriptor()
}

func (NumberOfSingleTrpcsimode1R17CsireportConfig) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[34]
}

func (x NumberOfSingleTrpcsimode1R17CsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NumberOfSingleTrpcsimode1R17CsireportConfig.Descriptor instead.
func (NumberOfSingleTrpcsimode1R17CsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{34}
}

// enumerated from nr-rrc-definitions.asn1:1146
type ResourceTypeCsiresourceConfig int32

const (
	ResourceTypeCsiresourceConfig_RESOURCE_TYPE_CSIRESOURCE_CONFIG_APERIODIC       ResourceTypeCsiresourceConfig = 0
	ResourceTypeCsiresourceConfig_RESOURCE_TYPE_CSIRESOURCE_CONFIG_SEMI_PERSISTENT ResourceTypeCsiresourceConfig = 1
	ResourceTypeCsiresourceConfig_RESOURCE_TYPE_CSIRESOURCE_CONFIG_PERIODIC        ResourceTypeCsiresourceConfig = 2
)

// Enum value maps for ResourceTypeCsiresourceConfig.
var (
	ResourceTypeCsiresourceConfig_name = map[int32]string{
		0: "RESOURCE_TYPE_CSIRESOURCE_CONFIG_APERIODIC",
		1: "RESOURCE_TYPE_CSIRESOURCE_CONFIG_SEMI_PERSISTENT",
		2: "RESOURCE_TYPE_CSIRESOURCE_CONFIG_PERIODIC",
	}
	ResourceTypeCsiresourceConfig_value = map[string]int32{
		"RESOURCE_TYPE_CSIRESOURCE_CONFIG_APERIODIC":       0,
		"RESOURCE_TYPE_CSIRESOURCE_CONFIG_SEMI_PERSISTENT": 1,
		"RESOURCE_TYPE_CSIRESOURCE_CONFIG_PERIODIC":        2,
	}
)

func (x ResourceTypeCsiresourceConfig) Enum() *ResourceTypeCsiresourceConfig {
	p := new(ResourceTypeCsiresourceConfig)
	*p = x
	return p
}

func (x ResourceTypeCsiresourceConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceTypeCsiresourceConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[35].Descriptor()
}

func (ResourceTypeCsiresourceConfig) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[35]
}

func (x ResourceTypeCsiresourceConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceTypeCsiresourceConfig.Descriptor instead.
func (ResourceTypeCsiresourceConfig) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{35}
}

// enumerated from nr-rrc-definitions.asn1:1192
type NrofPortsCsirsresourceMapping int32

const (
	NrofPortsCsirsresourceMapping_NROF_PORTS_CSIRSRESOURCE_MAPPING_P1  NrofPortsCsirsresourceMapping = 0
	NrofPortsCsirsresourceMapping_NROF_PORTS_CSIRSRESOURCE_MAPPING_P2  NrofPortsCsirsresourceMapping = 1
	NrofPortsCsirsresourceMapping_NROF_PORTS_CSIRSRESOURCE_MAPPING_P4  NrofPortsCsirsresourceMapping = 2
	NrofPortsCsirsresourceMapping_NROF_PORTS_CSIRSRESOURCE_MAPPING_P8  NrofPortsCsirsresourceMapping = 3
	NrofPortsCsirsresourceMapping_NROF_PORTS_CSIRSRESOURCE_MAPPING_P12 NrofPortsCsirsresourceMapping = 4
	NrofPortsCsirsresourceMapping_NROF_PORTS_CSIRSRESOURCE_MAPPING_P16 NrofPortsCsirsresourceMapping = 5
	NrofPortsCsirsresourceMapping_NROF_PORTS_CSIRSRESOURCE_MAPPING_P24 NrofPortsCsirsresourceMapping = 6
	NrofPortsCsirsresourceMapping_NROF_PORTS_CSIRSRESOURCE_MAPPING_P32 NrofPortsCsirsresourceMapping = 7
)

// Enum value maps for NrofPortsCsirsresourceMapping.
var (
	NrofPortsCsirsresourceMapping_name = map[int32]string{
		0: "NROF_PORTS_CSIRSRESOURCE_MAPPING_P1",
		1: "NROF_PORTS_CSIRSRESOURCE_MAPPING_P2",
		2: "NROF_PORTS_CSIRSRESOURCE_MAPPING_P4",
		3: "NROF_PORTS_CSIRSRESOURCE_MAPPING_P8",
		4: "NROF_PORTS_CSIRSRESOURCE_MAPPING_P12",
		5: "NROF_PORTS_CSIRSRESOURCE_MAPPING_P16",
		6: "NROF_PORTS_CSIRSRESOURCE_MAPPING_P24",
		7: "NROF_PORTS_CSIRSRESOURCE_MAPPING_P32",
	}
	NrofPortsCsirsresourceMapping_value = map[string]int32{
		"NROF_PORTS_CSIRSRESOURCE_MAPPING_P1":  0,
		"NROF_PORTS_CSIRSRESOURCE_MAPPING_P2":  1,
		"NROF_PORTS_CSIRSRESOURCE_MAPPING_P4":  2,
		"NROF_PORTS_CSIRSRESOURCE_MAPPING_P8":  3,
		"NROF_PORTS_CSIRSRESOURCE_MAPPING_P12": 4,
		"NROF_PORTS_CSIRSRESOURCE_MAPPING_P16": 5,
		"NROF_PORTS_CSIRSRESOURCE_MAPPING_P24": 6,
		"NROF_PORTS_CSIRSRESOURCE_MAPPING_P32": 7,
	}
)

func (x NrofPortsCsirsresourceMapping) Enum() *NrofPortsCsirsresourceMapping {
	p := new(NrofPortsCsirsresourceMapping)
	*p = x
	return p
}

func (x NrofPortsCsirsresourceMapping) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NrofPortsCsirsresourceMapping) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[36].Descriptor()
}

func (NrofPortsCsirsresourceMapping) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[36]
}

func (x NrofPortsCsirsresourceMapping) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NrofPortsCsirsresourceMapping.Descriptor instead.
func (NrofPortsCsirsresourceMapping) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{36}
}

// enumerated from nr-rrc-definitions.asn1:1195
type CdmTypeCsirsresourceMapping int32

const (
	CdmTypeCsirsresourceMapping_CDM_TYPE_CSIRSRESOURCE_MAPPING_NO_CDM       CdmTypeCsirsresourceMapping = 0
	CdmTypeCsirsresourceMapping_CDM_TYPE_CSIRSRESOURCE_MAPPING_FD_CDM2      CdmTypeCsirsresourceMapping = 1
	CdmTypeCsirsresourceMapping_CDM_TYPE_CSIRSRESOURCE_MAPPING_CDM4_FD2_TD2 CdmTypeCsirsresourceMapping = 2
	CdmTypeCsirsresourceMapping_CDM_TYPE_CSIRSRESOURCE_MAPPING_CDM8_FD2_TD4 CdmTypeCsirsresourceMapping = 3
)

// Enum value maps for CdmTypeCsirsresourceMapping.
var (
	CdmTypeCsirsresourceMapping_name = map[int32]string{
		0: "CDM_TYPE_CSIRSRESOURCE_MAPPING_NO_CDM",
		1: "CDM_TYPE_CSIRSRESOURCE_MAPPING_FD_CDM2",
		2: "CDM_TYPE_CSIRSRESOURCE_MAPPING_CDM4_FD2_TD2",
		3: "CDM_TYPE_CSIRSRESOURCE_MAPPING_CDM8_FD2_TD4",
	}
	CdmTypeCsirsresourceMapping_value = map[string]int32{
		"CDM_TYPE_CSIRSRESOURCE_MAPPING_NO_CDM":       0,
		"CDM_TYPE_CSIRSRESOURCE_MAPPING_FD_CDM2":      1,
		"CDM_TYPE_CSIRSRESOURCE_MAPPING_CDM4_FD2_TD2": 2,
		"CDM_TYPE_CSIRSRESOURCE_MAPPING_CDM8_FD2_TD4": 3,
	}
)

func (x CdmTypeCsirsresourceMapping) Enum() *CdmTypeCsirsresourceMapping {
	p := new(CdmTypeCsirsresourceMapping)
	*p = x
	return p
}

func (x CdmTypeCsirsresourceMapping) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CdmTypeCsirsresourceMapping) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[37].Descriptor()
}

func (CdmTypeCsirsresourceMapping) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[37]
}

func (x CdmTypeCsirsresourceMapping) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CdmTypeCsirsresourceMapping.Descriptor instead.
func (CdmTypeCsirsresourceMapping) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{37}
}

// enumerated from nr-rrc-definitions.asn1:1197
type Dot5Density int32

const (
	Dot5Density_DOT5DENSITY_EVEN_PRBS Dot5Density = 0
	Dot5Density_DOT5DENSITY_ODD_PRBS  Dot5Density = 1
)

// Enum value maps for Dot5Density.
var (
	Dot5Density_name = map[int32]string{
		0: "DOT5DENSITY_EVEN_PRBS",
		1: "DOT5DENSITY_ODD_PRBS",
	}
	Dot5Density_value = map[string]int32{
		"DOT5DENSITY_EVEN_PRBS": 0,
		"DOT5DENSITY_ODD_PRBS":  1,
	}
)

func (x Dot5Density) Enum() *Dot5Density {
	p := new(Dot5Density)
	*p = x
	return p
}

func (x Dot5Density) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dot5Density) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[38].Descriptor()
}

func (Dot5Density) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[38]
}

func (x Dot5Density) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dot5Density.Descriptor instead.
func (Dot5Density) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{38}
}

// enumerated from nr-rrc-definitions.asn1:1215
type SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState int32

const (
	SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState_SP_CSIMULTIPLEXING_MODER17_CSISEMI_PERSISTENT_ON_PUSCHTRIGGER_STATE_ENABLED SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState = 0
)

// Enum value maps for SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState.
var (
	SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState_name = map[int32]string{
		0: "SP_CSIMULTIPLEXING_MODER17_CSISEMI_PERSISTENT_ON_PUSCHTRIGGER_STATE_ENABLED",
	}
	SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState_value = map[string]int32{
		"SP_CSIMULTIPLEXING_MODER17_CSISEMI_PERSISTENT_ON_PUSCHTRIGGER_STATE_ENABLED": 0,
	}
)

func (x SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState) Enum() *SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState {
	p := new(SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState)
	*p = x
	return p
}

func (x SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[39].Descriptor()
}

func (SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[39]
}

func (x SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState.Descriptor instead.
func (SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{39}
}

// enumerated from nr-rrc-definitions.asn1:1259
type FilterCoefficient int32

const (
	FilterCoefficient_FILTER_COEFFICIENT_FC0    FilterCoefficient = 0
	FilterCoefficient_FILTER_COEFFICIENT_FC1    FilterCoefficient = 1
	FilterCoefficient_FILTER_COEFFICIENT_FC2    FilterCoefficient = 2
	FilterCoefficient_FILTER_COEFFICIENT_FC3    FilterCoefficient = 3
	FilterCoefficient_FILTER_COEFFICIENT_FC4    FilterCoefficient = 4
	FilterCoefficient_FILTER_COEFFICIENT_FC5    FilterCoefficient = 5
	FilterCoefficient_FILTER_COEFFICIENT_FC6    FilterCoefficient = 6
	FilterCoefficient_FILTER_COEFFICIENT_FC7    FilterCoefficient = 7
	FilterCoefficient_FILTER_COEFFICIENT_FC8    FilterCoefficient = 8
	FilterCoefficient_FILTER_COEFFICIENT_FC9    FilterCoefficient = 9
	FilterCoefficient_FILTER_COEFFICIENT_FC11   FilterCoefficient = 10
	FilterCoefficient_FILTER_COEFFICIENT_FC13   FilterCoefficient = 11
	FilterCoefficient_FILTER_COEFFICIENT_FC15   FilterCoefficient = 12
	FilterCoefficient_FILTER_COEFFICIENT_FC17   FilterCoefficient = 13
	FilterCoefficient_FILTER_COEFFICIENT_FC19   FilterCoefficient = 14
	FilterCoefficient_FILTER_COEFFICIENT_SPARE1 FilterCoefficient = 15
)

// Enum value maps for FilterCoefficient.
var (
	FilterCoefficient_name = map[int32]string{
		0:  "FILTER_COEFFICIENT_FC0",
		1:  "FILTER_COEFFICIENT_FC1",
		2:  "FILTER_COEFFICIENT_FC2",
		3:  "FILTER_COEFFICIENT_FC3",
		4:  "FILTER_COEFFICIENT_FC4",
		5:  "FILTER_COEFFICIENT_FC5",
		6:  "FILTER_COEFFICIENT_FC6",
		7:  "FILTER_COEFFICIENT_FC7",
		8:  "FILTER_COEFFICIENT_FC8",
		9:  "FILTER_COEFFICIENT_FC9",
		10: "FILTER_COEFFICIENT_FC11",
		11: "FILTER_COEFFICIENT_FC13",
		12: "FILTER_COEFFICIENT_FC15",
		13: "FILTER_COEFFICIENT_FC17",
		14: "FILTER_COEFFICIENT_FC19",
		15: "FILTER_COEFFICIENT_SPARE1",
	}
	FilterCoefficient_value = map[string]int32{
		"FILTER_COEFFICIENT_FC0":    0,
		"FILTER_COEFFICIENT_FC1":    1,
		"FILTER_COEFFICIENT_FC2":    2,
		"FILTER_COEFFICIENT_FC3":    3,
		"FILTER_COEFFICIENT_FC4":    4,
		"FILTER_COEFFICIENT_FC5":    5,
		"FILTER_COEFFICIENT_FC6":    6,
		"FILTER_COEFFICIENT_FC7":    7,
		"FILTER_COEFFICIENT_FC8":    8,
		"FILTER_COEFFICIENT_FC9":    9,
		"FILTER_COEFFICIENT_FC11":   10,
		"FILTER_COEFFICIENT_FC13":   11,
		"FILTER_COEFFICIENT_FC15":   12,
		"FILTER_COEFFICIENT_FC17":   13,
		"FILTER_COEFFICIENT_FC19":   14,
		"FILTER_COEFFICIENT_SPARE1": 15,
	}
)

func (x FilterCoefficient) Enum() *FilterCoefficient {
	p := new(FilterCoefficient)
	*p = x
	return p
}

func (x FilterCoefficient) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterCoefficient) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[40].Descriptor()
}

func (FilterCoefficient) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[40]
}

func (x FilterCoefficient) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterCoefficient.Descriptor instead.
func (FilterCoefficient) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{40}
}

// enumerated from nr-rrc-definitions.asn1:1426
type PowerControlOffsetSsnzpcsirsresource int32

const (
	PowerControlOffsetSsnzpcsirsresource_POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DBM3 PowerControlOffsetSsnzpcsirsresource = 0
	PowerControlOffsetSsnzpcsirsresource_POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DB0  PowerControlOffsetSsnzpcsirsresource = 1
	PowerControlOffsetSsnzpcsirsresource_POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DB3  PowerControlOffsetSsnzpcsirsresource = 2
	PowerControlOffsetSsnzpcsirsresource_POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DB6  PowerControlOffsetSsnzpcsirsresource = 3
)

// Enum value maps for PowerControlOffsetSsnzpcsirsresource.
var (
	PowerControlOffsetSsnzpcsirsresource_name = map[int32]string{
		0: "POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DBM3",
		1: "POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DB0",
		2: "POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DB3",
		3: "POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DB6",
	}
	PowerControlOffsetSsnzpcsirsresource_value = map[string]int32{
		"POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DBM3": 0,
		"POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DB0":  1,
		"POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DB3":  2,
		"POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DB6":  3,
	}
)

func (x PowerControlOffsetSsnzpcsirsresource) Enum() *PowerControlOffsetSsnzpcsirsresource {
	p := new(PowerControlOffsetSsnzpcsirsresource)
	*p = x
	return p
}

func (x PowerControlOffsetSsnzpcsirsresource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PowerControlOffsetSsnzpcsirsresource) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[41].Descriptor()
}

func (PowerControlOffsetSsnzpcsirsresource) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[41]
}

func (x PowerControlOffsetSsnzpcsirsresource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PowerControlOffsetSsnzpcsirsresource.Descriptor instead.
func (PowerControlOffsetSsnzpcsirsresource) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{41}
}

// enumerated from nr-rrc-definitions.asn1:1444
type RepetitionNzpcsirsresourceSet int32

const (
	RepetitionNzpcsirsresourceSet_REPETITION_NZPCSIRSRESOURCE_SET_ON  RepetitionNzpcsirsresourceSet = 0
	RepetitionNzpcsirsresourceSet_REPETITION_NZPCSIRSRESOURCE_SET_OFF RepetitionNzpcsirsresourceSet = 1
)

// Enum value maps for RepetitionNzpcsirsresourceSet.
var (
	RepetitionNzpcsirsresourceSet_name = map[int32]string{
		0: "REPETITION_NZPCSIRSRESOURCE_SET_ON",
		1: "REPETITION_NZPCSIRSRESOURCE_SET_OFF",
	}
	RepetitionNzpcsirsresourceSet_value = map[string]int32{
		"REPETITION_NZPCSIRSRESOURCE_SET_ON":  0,
		"REPETITION_NZPCSIRSRESOURCE_SET_OFF": 1,
	}
)

func (x RepetitionNzpcsirsresourceSet) Enum() *RepetitionNzpcsirsresourceSet {
	p := new(RepetitionNzpcsirsresourceSet)
	*p = x
	return p
}

func (x RepetitionNzpcsirsresourceSet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepetitionNzpcsirsresourceSet) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[42].Descriptor()
}

func (RepetitionNzpcsirsresourceSet) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[42]
}

func (x RepetitionNzpcsirsresourceSet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepetitionNzpcsirsresourceSet.Descriptor instead.
func (RepetitionNzpcsirsresourceSet) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{42}
}

// enumerated from nr-rrc-definitions.asn1:1446
type TrsInfoNzpcsirsresourceSet int32

const (
	TrsInfoNzpcsirsresourceSet_TRS_INFO_NZPCSIRSRESOURCE_SET_TRUE TrsInfoNzpcsirsresourceSet = 0
)

// Enum value maps for TrsInfoNzpcsirsresourceSet.
var (
	TrsInfoNzpcsirsresourceSet_name = map[int32]string{
		0: "TRS_INFO_NZPCSIRSRESOURCE_SET_TRUE",
	}
	TrsInfoNzpcsirsresourceSet_value = map[string]int32{
		"TRS_INFO_NZPCSIRSRESOURCE_SET_TRUE": 0,
	}
)

func (x TrsInfoNzpcsirsresourceSet) Enum() *TrsInfoNzpcsirsresourceSet {
	p := new(TrsInfoNzpcsirsresourceSet)
	*p = x
	return p
}

func (x TrsInfoNzpcsirsresourceSet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrsInfoNzpcsirsresourceSet) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[43].Descriptor()
}

func (TrsInfoNzpcsirsresourceSet) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[43]
}

func (x TrsInfoNzpcsirsresourceSet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrsInfoNzpcsirsresourceSet.Descriptor instead.
func (TrsInfoNzpcsirsresourceSet) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{43}
}

// enumerated from nr-rrc-definitions.asn1:1452
type PdcInfor17NzpcsirsresourceSet int32

const (
	PdcInfor17NzpcsirsresourceSet_PDC_INFOR17_NZPCSIRSRESOURCE_SET_TRUE PdcInfor17NzpcsirsresourceSet = 0
)

// Enum value maps for PdcInfor17NzpcsirsresourceSet.
var (
	PdcInfor17NzpcsirsresourceSet_name = map[int32]string{
		0: "PDC_INFOR17_NZPCSIRSRESOURCE_SET_TRUE",
	}
	PdcInfor17NzpcsirsresourceSet_value = map[string]int32{
		"PDC_INFOR17_NZPCSIRSRESOURCE_SET_TRUE": 0,
	}
)

func (x PdcInfor17NzpcsirsresourceSet) Enum() *PdcInfor17NzpcsirsresourceSet {
	p := new(PdcInfor17NzpcsirsresourceSet)
	*p = x
	return p
}

func (x PdcInfor17NzpcsirsresourceSet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PdcInfor17NzpcsirsresourceSet) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[44].Descriptor()
}

func (PdcInfor17NzpcsirsresourceSet) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[44]
}

func (x PdcInfor17NzpcsirsresourceSet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PdcInfor17NzpcsirsresourceSet.Descriptor instead.
func (PdcInfor17NzpcsirsresourceSet) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{44}
}

// enumerated from nr-rrc-definitions.asn1:1503
type RangePcirange int32

const (
	RangePcirange_RANGE_PCIRANGE_N4     RangePcirange = 0
	RangePcirange_RANGE_PCIRANGE_N8     RangePcirange = 1
	RangePcirange_RANGE_PCIRANGE_N12    RangePcirange = 2
	RangePcirange_RANGE_PCIRANGE_N16    RangePcirange = 3
	RangePcirange_RANGE_PCIRANGE_N24    RangePcirange = 4
	RangePcirange_RANGE_PCIRANGE_N32    RangePcirange = 5
	RangePcirange_RANGE_PCIRANGE_N48    RangePcirange = 6
	RangePcirange_RANGE_PCIRANGE_N64    RangePcirange = 7
	RangePcirange_RANGE_PCIRANGE_N84    RangePcirange = 8
	RangePcirange_RANGE_PCIRANGE_N96    RangePcirange = 9
	RangePcirange_RANGE_PCIRANGE_N128   RangePcirange = 10
	RangePcirange_RANGE_PCIRANGE_N168   RangePcirange = 11
	RangePcirange_RANGE_PCIRANGE_N252   RangePcirange = 12
	RangePcirange_RANGE_PCIRANGE_N504   RangePcirange = 13
	RangePcirange_RANGE_PCIRANGE_N1008  RangePcirange = 14
	RangePcirange_RANGE_PCIRANGE_SPARE1 RangePcirange = 15
)

// Enum value maps for RangePcirange.
var (
	RangePcirange_name = map[int32]string{
		0:  "RANGE_PCIRANGE_N4",
		1:  "RANGE_PCIRANGE_N8",
		2:  "RANGE_PCIRANGE_N12",
		3:  "RANGE_PCIRANGE_N16",
		4:  "RANGE_PCIRANGE_N24",
		5:  "RANGE_PCIRANGE_N32",
		6:  "RANGE_PCIRANGE_N48",
		7:  "RANGE_PCIRANGE_N64",
		8:  "RANGE_PCIRANGE_N84",
		9:  "RANGE_PCIRANGE_N96",
		10: "RANGE_PCIRANGE_N128",
		11: "RANGE_PCIRANGE_N168",
		12: "RANGE_PCIRANGE_N252",
		13: "RANGE_PCIRANGE_N504",
		14: "RANGE_PCIRANGE_N1008",
		15: "RANGE_PCIRANGE_SPARE1",
	}
	RangePcirange_value = map[string]int32{
		"RANGE_PCIRANGE_N4":     0,
		"RANGE_PCIRANGE_N8":     1,
		"RANGE_PCIRANGE_N12":    2,
		"RANGE_PCIRANGE_N16":    3,
		"RANGE_PCIRANGE_N24":    4,
		"RANGE_PCIRANGE_N32":    5,
		"RANGE_PCIRANGE_N48":    6,
		"RANGE_PCIRANGE_N64":    7,
		"RANGE_PCIRANGE_N84":    8,
		"RANGE_PCIRANGE_N96":    9,
		"RANGE_PCIRANGE_N128":   10,
		"RANGE_PCIRANGE_N168":   11,
		"RANGE_PCIRANGE_N252":   12,
		"RANGE_PCIRANGE_N504":   13,
		"RANGE_PCIRANGE_N1008":  14,
		"RANGE_PCIRANGE_SPARE1": 15,
	}
)

func (x RangePcirange) Enum() *RangePcirange {
	p := new(RangePcirange)
	*p = x
	return p
}

func (x RangePcirange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RangePcirange) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[45].Descriptor()
}

func (RangePcirange) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[45]
}

func (x RangePcirange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RangePcirange.Descriptor instead.
func (RangePcirange) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{45}
}

// enumerated from nr-rrc-definitions.asn1:1555
type BeamAppTimer17Pdschconfig int32

const (
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N1     BeamAppTimer17Pdschconfig = 0
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N2     BeamAppTimer17Pdschconfig = 1
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N4     BeamAppTimer17Pdschconfig = 2
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N7     BeamAppTimer17Pdschconfig = 3
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N14    BeamAppTimer17Pdschconfig = 4
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N28    BeamAppTimer17Pdschconfig = 5
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N42    BeamAppTimer17Pdschconfig = 6
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N56    BeamAppTimer17Pdschconfig = 7
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N70    BeamAppTimer17Pdschconfig = 8
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N84    BeamAppTimer17Pdschconfig = 9
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N98    BeamAppTimer17Pdschconfig = 10
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N112   BeamAppTimer17Pdschconfig = 11
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N224   BeamAppTimer17Pdschconfig = 12
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N336   BeamAppTimer17Pdschconfig = 13
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_SPARE2 BeamAppTimer17Pdschconfig = 14
	BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_SPARE1 BeamAppTimer17Pdschconfig = 15
)

// Enum value maps for BeamAppTimer17Pdschconfig.
var (
	BeamAppTimer17Pdschconfig_name = map[int32]string{
		0:  "BEAM_APP_TIMER17_PDSCHCONFIG_N1",
		1:  "BEAM_APP_TIMER17_PDSCHCONFIG_N2",
		2:  "BEAM_APP_TIMER17_PDSCHCONFIG_N4",
		3:  "BEAM_APP_TIMER17_PDSCHCONFIG_N7",
		4:  "BEAM_APP_TIMER17_PDSCHCONFIG_N14",
		5:  "BEAM_APP_TIMER17_PDSCHCONFIG_N28",
		6:  "BEAM_APP_TIMER17_PDSCHCONFIG_N42",
		7:  "BEAM_APP_TIMER17_PDSCHCONFIG_N56",
		8:  "BEAM_APP_TIMER17_PDSCHCONFIG_N70",
		9:  "BEAM_APP_TIMER17_PDSCHCONFIG_N84",
		10: "BEAM_APP_TIMER17_PDSCHCONFIG_N98",
		11: "BEAM_APP_TIMER17_PDSCHCONFIG_N112",
		12: "BEAM_APP_TIMER17_PDSCHCONFIG_N224",
		13: "BEAM_APP_TIMER17_PDSCHCONFIG_N336",
		14: "BEAM_APP_TIMER17_PDSCHCONFIG_SPARE2",
		15: "BEAM_APP_TIMER17_PDSCHCONFIG_SPARE1",
	}
	BeamAppTimer17Pdschconfig_value = map[string]int32{
		"BEAM_APP_TIMER17_PDSCHCONFIG_N1":     0,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N2":     1,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N4":     2,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N7":     3,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N14":    4,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N28":    5,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N42":    6,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N56":    7,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N70":    8,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N84":    9,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N98":    10,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N112":   11,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N224":   12,
		"BEAM_APP_TIMER17_PDSCHCONFIG_N336":   13,
		"BEAM_APP_TIMER17_PDSCHCONFIG_SPARE2": 14,
		"BEAM_APP_TIMER17_PDSCHCONFIG_SPARE1": 15,
	}
)

func (x BeamAppTimer17Pdschconfig) Enum() *BeamAppTimer17Pdschconfig {
	p := new(BeamAppTimer17Pdschconfig)
	*p = x
	return p
}

func (x BeamAppTimer17Pdschconfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BeamAppTimer17Pdschconfig) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[46].Descriptor()
}

func (BeamAppTimer17Pdschconfig) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[46]
}

func (x BeamAppTimer17Pdschconfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BeamAppTimer17Pdschconfig.Descriptor instead.
func (BeamAppTimer17Pdschconfig) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{46}
}

// enumerated from nr-rrc-definitions.asn1:1576
type MappingTypePdschtimeDomainResourceAllocation int32

const (
	MappingTypePdschtimeDomainResourceAllocation_MAPPING_TYPE_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATION_TYPE_A MappingTypePdschtimeDomainResourceAllocation = 0
	MappingTypePdschtimeDomainResourceAllocation_MAPPING_TYPE_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATION_TYPE_B MappingTypePdschtimeDomainResourceAllocation = 1
)

// Enum value maps for MappingTypePdschtimeDomainResourceAllocation.
var (
	MappingTypePdschtimeDomainResourceAllocation_name = map[int32]string{
		0: "MAPPING_TYPE_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATION_TYPE_A",
		1: "MAPPING_TYPE_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATION_TYPE_B",
	}
	MappingTypePdschtimeDomainResourceAllocation_value = map[string]int32{
		"MAPPING_TYPE_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATION_TYPE_A": 0,
		"MAPPING_TYPE_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATION_TYPE_B": 1,
	}
)

func (x MappingTypePdschtimeDomainResourceAllocation) Enum() *MappingTypePdschtimeDomainResourceAllocation {
	p := new(MappingTypePdschtimeDomainResourceAllocation)
	*p = x
	return p
}

func (x MappingTypePdschtimeDomainResourceAllocation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MappingTypePdschtimeDomainResourceAllocation) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[47].Descriptor()
}

func (MappingTypePdschtimeDomainResourceAllocation) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[47]
}

func (x MappingTypePdschtimeDomainResourceAllocation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MappingTypePdschtimeDomainResourceAllocation.Descriptor instead.
func (MappingTypePdschtimeDomainResourceAllocation) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{47}
}

// enumerated from nr-rrc-definitions.asn1:1584
type MappingTyper16PdschtimeDomainResourceAllocationr16 int32

const (
	MappingTyper16PdschtimeDomainResourceAllocationr16_MAPPING_TYPER16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_TYPE_A MappingTyper16PdschtimeDomainResourceAllocationr16 = 0
	MappingTyper16PdschtimeDomainResourceAllocationr16_MAPPING_TYPER16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_TYPE_B MappingTyper16PdschtimeDomainResourceAllocationr16 = 1
)

// Enum value maps for MappingTyper16PdschtimeDomainResourceAllocationr16.
var (
	MappingTyper16PdschtimeDomainResourceAllocationr16_name = map[int32]string{
		0: "MAPPING_TYPER16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_TYPE_A",
		1: "MAPPING_TYPER16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_TYPE_B",
	}
	MappingTyper16PdschtimeDomainResourceAllocationr16_value = map[string]int32{
		"MAPPING_TYPER16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_TYPE_A": 0,
		"MAPPING_TYPER16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_TYPE_B": 1,
	}
)

func (x MappingTyper16PdschtimeDomainResourceAllocationr16) Enum() *MappingTyper16PdschtimeDomainResourceAllocationr16 {
	p := new(MappingTyper16PdschtimeDomainResourceAllocationr16)
	*p = x
	return p
}

func (x MappingTyper16PdschtimeDomainResourceAllocationr16) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MappingTyper16PdschtimeDomainResourceAllocationr16) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[48].Descriptor()
}

func (MappingTyper16PdschtimeDomainResourceAllocationr16) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[48]
}

func (x MappingTyper16PdschtimeDomainResourceAllocationr16) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MappingTyper16PdschtimeDomainResourceAllocationr16.Descriptor instead.
func (MappingTyper16PdschtimeDomainResourceAllocationr16) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{48}
}

// enumerated from nr-rrc-definitions.asn1:1586
type RepetitionNumberr16PdschtimeDomainResourceAllocationr16 int32

const (
	RepetitionNumberr16PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N2  RepetitionNumberr16PdschtimeDomainResourceAllocationr16 = 0
	RepetitionNumberr16PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N3  RepetitionNumberr16PdschtimeDomainResourceAllocationr16 = 1
	RepetitionNumberr16PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N4  RepetitionNumberr16PdschtimeDomainResourceAllocationr16 = 2
	RepetitionNumberr16PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N5  RepetitionNumberr16PdschtimeDomainResourceAllocationr16 = 3
	RepetitionNumberr16PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N6  RepetitionNumberr16PdschtimeDomainResourceAllocationr16 = 4
	RepetitionNumberr16PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N7  RepetitionNumberr16PdschtimeDomainResourceAllocationr16 = 5
	RepetitionNumberr16PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N8  RepetitionNumberr16PdschtimeDomainResourceAllocationr16 = 6
	RepetitionNumberr16PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N16 RepetitionNumberr16PdschtimeDomainResourceAllocationr16 = 7
)

// Enum value maps for RepetitionNumberr16PdschtimeDomainResourceAllocationr16.
var (
	RepetitionNumberr16PdschtimeDomainResourceAllocationr16_name = map[int32]string{
		0: "REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N2",
		1: "REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N3",
		2: "REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N4",
		3: "REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N5",
		4: "REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N6",
		5: "REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N7",
		6: "REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N8",
		7: "REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N16",
	}
	RepetitionNumberr16PdschtimeDomainResourceAllocationr16_value = map[string]int32{
		"REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N2":  0,
		"REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N3":  1,
		"REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N4":  2,
		"REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N5":  3,
		"REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N6":  4,
		"REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N7":  5,
		"REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N8":  6,
		"REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N16": 7,
	}
)

func (x RepetitionNumberr16PdschtimeDomainResourceAllocationr16) Enum() *RepetitionNumberr16PdschtimeDomainResourceAllocationr16 {
	p := new(RepetitionNumberr16PdschtimeDomainResourceAllocationr16)
	*p = x
	return p
}

func (x RepetitionNumberr16PdschtimeDomainResourceAllocationr16) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepetitionNumberr16PdschtimeDomainResourceAllocationr16) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[49].Descriptor()
}

func (RepetitionNumberr16PdschtimeDomainResourceAllocationr16) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[49]
}

func (x RepetitionNumberr16PdschtimeDomainResourceAllocationr16) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepetitionNumberr16PdschtimeDomainResourceAllocationr16.Descriptor instead.
func (RepetitionNumberr16PdschtimeDomainResourceAllocationr16) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{49}
}

// enumerated from nr-rrc-definitions.asn1:1592
type RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 int32

const (
	RepetitionNumberv1730PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N2  RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 = 0
	RepetitionNumberv1730PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N3  RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 = 1
	RepetitionNumberv1730PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N4  RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 = 2
	RepetitionNumberv1730PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N5  RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 = 3
	RepetitionNumberv1730PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N6  RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 = 4
	RepetitionNumberv1730PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N7  RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 = 5
	RepetitionNumberv1730PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N8  RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 = 6
	RepetitionNumberv1730PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N16 RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 = 7
)

// Enum value maps for RepetitionNumberv1730PdschtimeDomainResourceAllocationr16.
var (
	RepetitionNumberv1730PdschtimeDomainResourceAllocationr16_name = map[int32]string{
		0: "REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N2",
		1: "REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N3",
		2: "REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N4",
		3: "REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N5",
		4: "REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N6",
		5: "REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N7",
		6: "REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N8",
		7: "REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N16",
	}
	RepetitionNumberv1730PdschtimeDomainResourceAllocationr16_value = map[string]int32{
		"REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N2":  0,
		"REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N3":  1,
		"REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N4":  2,
		"REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N5":  3,
		"REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N6":  4,
		"REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N7":  5,
		"REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N8":  6,
		"REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N16": 7,
	}
)

func (x RepetitionNumberv1730PdschtimeDomainResourceAllocationr16) Enum() *RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 {
	p := new(RepetitionNumberv1730PdschtimeDomainResourceAllocationr16)
	*p = x
	return p
}

func (x RepetitionNumberv1730PdschtimeDomainResourceAllocationr16) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepetitionNumberv1730PdschtimeDomainResourceAllocationr16) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[50].Descriptor()
}

func (RepetitionNumberv1730PdschtimeDomainResourceAllocationr16) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[50]
}

func (x RepetitionNumberv1730PdschtimeDomainResourceAllocationr16) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepetitionNumberv1730PdschtimeDomainResourceAllocationr16.Descriptor instead.
func (RepetitionNumberv1730PdschtimeDomainResourceAllocationr16) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{50}
}

// enumerated from nr-rrc-definitions.asn1:1657
type NrRSType int32

const (
	NrRSType_NR_RS_TYPE_SSB    NrRSType = 0
	NrRSType_NR_RS_TYPE_CSI_RS NrRSType = 1
)

// Enum value maps for NrRSType.
var (
	NrRSType_name = map[int32]string{
		0: "NR_RS_TYPE_SSB",
		1: "NR_RS_TYPE_CSI_RS",
	}
	NrRSType_value = map[string]int32{
		"NR_RS_TYPE_SSB":    0,
		"NR_RS_TYPE_CSI_RS": 1,
	}
)

func (x NrRSType) Enum() *NrRSType {
	p := new(NrRSType)
	*p = x
	return p
}

func (x NrRSType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NrRSType) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[51].Descriptor()
}

func (NrRSType) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[51]
}

func (x NrRSType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NrRSType.Descriptor instead.
func (NrRSType) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{51}
}

// enumerated from nr-rrc-definitions.asn1:1680
type ReportInterval int32

const (
	ReportInterval_REPORT_INTERVAL_MS120   ReportInterval = 0
	ReportInterval_REPORT_INTERVAL_MS240   ReportInterval = 1
	ReportInterval_REPORT_INTERVAL_MS480   ReportInterval = 2
	ReportInterval_REPORT_INTERVAL_MS640   ReportInterval = 3
	ReportInterval_REPORT_INTERVAL_MS1024  ReportInterval = 4
	ReportInterval_REPORT_INTERVAL_MS2048  ReportInterval = 5
	ReportInterval_REPORT_INTERVAL_MS5120  ReportInterval = 6
	ReportInterval_REPORT_INTERVAL_MS10240 ReportInterval = 7
	ReportInterval_REPORT_INTERVAL_MS20480 ReportInterval = 8
	ReportInterval_REPORT_INTERVAL_MS40960 ReportInterval = 9
	ReportInterval_REPORT_INTERVAL_MIN1    ReportInterval = 10
	ReportInterval_REPORT_INTERVAL_MIN6    ReportInterval = 11
	ReportInterval_REPORT_INTERVAL_MIN12   ReportInterval = 12
	ReportInterval_REPORT_INTERVAL_MIN30   ReportInterval = 13
)

// Enum value maps for ReportInterval.
var (
	ReportInterval_name = map[int32]string{
		0:  "REPORT_INTERVAL_MS120",
		1:  "REPORT_INTERVAL_MS240",
		2:  "REPORT_INTERVAL_MS480",
		3:  "REPORT_INTERVAL_MS640",
		4:  "REPORT_INTERVAL_MS1024",
		5:  "REPORT_INTERVAL_MS2048",
		6:  "REPORT_INTERVAL_MS5120",
		7:  "REPORT_INTERVAL_MS10240",
		8:  "REPORT_INTERVAL_MS20480",
		9:  "REPORT_INTERVAL_MS40960",
		10: "REPORT_INTERVAL_MIN1",
		11: "REPORT_INTERVAL_MIN6",
		12: "REPORT_INTERVAL_MIN12",
		13: "REPORT_INTERVAL_MIN30",
	}
	ReportInterval_value = map[string]int32{
		"REPORT_INTERVAL_MS120":   0,
		"REPORT_INTERVAL_MS240":   1,
		"REPORT_INTERVAL_MS480":   2,
		"REPORT_INTERVAL_MS640":   3,
		"REPORT_INTERVAL_MS1024":  4,
		"REPORT_INTERVAL_MS2048":  5,
		"REPORT_INTERVAL_MS5120":  6,
		"REPORT_INTERVAL_MS10240": 7,
		"REPORT_INTERVAL_MS20480": 8,
		"REPORT_INTERVAL_MS40960": 9,
		"REPORT_INTERVAL_MIN1":    10,
		"REPORT_INTERVAL_MIN6":    11,
		"REPORT_INTERVAL_MIN12":   12,
		"REPORT_INTERVAL_MIN30":   13,
	}
)

func (x ReportInterval) Enum() *ReportInterval {
	p := new(ReportInterval)
	*p = x
	return p
}

func (x ReportInterval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportInterval) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[52].Descriptor()
}

func (ReportInterval) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[52]
}

func (x ReportInterval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportInterval.Descriptor instead.
func (ReportInterval) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{52}
}

// enumerated from nr-rrc-definitions.asn1:1774
type SsbPeriodicityServingCellServingCellConfigCommonSib int32

const (
	SsbPeriodicityServingCellServingCellConfigCommonSib_SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS5   SsbPeriodicityServingCellServingCellConfigCommonSib = 0
	SsbPeriodicityServingCellServingCellConfigCommonSib_SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS10  SsbPeriodicityServingCellServingCellConfigCommonSib = 1
	SsbPeriodicityServingCellServingCellConfigCommonSib_SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS20  SsbPeriodicityServingCellServingCellConfigCommonSib = 2
	SsbPeriodicityServingCellServingCellConfigCommonSib_SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS40  SsbPeriodicityServingCellServingCellConfigCommonSib = 3
	SsbPeriodicityServingCellServingCellConfigCommonSib_SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS80  SsbPeriodicityServingCellServingCellConfigCommonSib = 4
	SsbPeriodicityServingCellServingCellConfigCommonSib_SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS160 SsbPeriodicityServingCellServingCellConfigCommonSib = 5
)

// Enum value maps for SsbPeriodicityServingCellServingCellConfigCommonSib.
var (
	SsbPeriodicityServingCellServingCellConfigCommonSib_name = map[int32]string{
		0: "SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS5",
		1: "SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS10",
		2: "SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS20",
		3: "SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS40",
		4: "SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS80",
		5: "SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS160",
	}
	SsbPeriodicityServingCellServingCellConfigCommonSib_value = map[string]int32{
		"SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS5":   0,
		"SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS10":  1,
		"SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS20":  2,
		"SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS40":  3,
		"SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS80":  4,
		"SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS160": 5,
	}
)

func (x SsbPeriodicityServingCellServingCellConfigCommonSib) Enum() *SsbPeriodicityServingCellServingCellConfigCommonSib {
	p := new(SsbPeriodicityServingCellServingCellConfigCommonSib)
	*p = x
	return p
}

func (x SsbPeriodicityServingCellServingCellConfigCommonSib) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SsbPeriodicityServingCellServingCellConfigCommonSib) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[53].Descriptor()
}

func (SsbPeriodicityServingCellServingCellConfigCommonSib) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[53]
}

func (x SsbPeriodicityServingCellServingCellConfigCommonSib) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SsbPeriodicityServingCellServingCellConfigCommonSib.Descriptor instead.
func (SsbPeriodicityServingCellServingCellConfigCommonSib) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{53}
}

// enumerated from nr-rrc-definitions.asn1:1802
type SubcarrierSpacing int32

const (
	SubcarrierSpacing_SUBCARRIER_SPACING_K_HZ15        SubcarrierSpacing = 0
	SubcarrierSpacing_SUBCARRIER_SPACING_K_HZ30        SubcarrierSpacing = 1
	SubcarrierSpacing_SUBCARRIER_SPACING_K_HZ60        SubcarrierSpacing = 2
	SubcarrierSpacing_SUBCARRIER_SPACING_K_HZ120       SubcarrierSpacing = 3
	SubcarrierSpacing_SUBCARRIER_SPACING_K_HZ240       SubcarrierSpacing = 4
	SubcarrierSpacing_SUBCARRIER_SPACING_K_HZ480_V1700 SubcarrierSpacing = 5
	SubcarrierSpacing_SUBCARRIER_SPACING_K_HZ960_V1700 SubcarrierSpacing = 6
	SubcarrierSpacing_SUBCARRIER_SPACING_SPARE1        SubcarrierSpacing = 7
)

// Enum value maps for SubcarrierSpacing.
var (
	SubcarrierSpacing_name = map[int32]string{
		0: "SUBCARRIER_SPACING_K_HZ15",
		1: "SUBCARRIER_SPACING_K_HZ30",
		2: "SUBCARRIER_SPACING_K_HZ60",
		3: "SUBCARRIER_SPACING_K_HZ120",
		4: "SUBCARRIER_SPACING_K_HZ240",
		5: "SUBCARRIER_SPACING_K_HZ480_V1700",
		6: "SUBCARRIER_SPACING_K_HZ960_V1700",
		7: "SUBCARRIER_SPACING_SPARE1",
	}
	SubcarrierSpacing_value = map[string]int32{
		"SUBCARRIER_SPACING_K_HZ15":        0,
		"SUBCARRIER_SPACING_K_HZ30":        1,
		"SUBCARRIER_SPACING_K_HZ60":        2,
		"SUBCARRIER_SPACING_K_HZ120":       3,
		"SUBCARRIER_SPACING_K_HZ240":       4,
		"SUBCARRIER_SPACING_K_HZ480_V1700": 5,
		"SUBCARRIER_SPACING_K_HZ960_V1700": 6,
		"SUBCARRIER_SPACING_SPARE1":        7,
	}
)

func (x SubcarrierSpacing) Enum() *SubcarrierSpacing {
	p := new(SubcarrierSpacing)
	*p = x
	return p
}

func (x SubcarrierSpacing) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubcarrierSpacing) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[54].Descriptor()
}

func (SubcarrierSpacing) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[54]
}

func (x SubcarrierSpacing) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubcarrierSpacing.Descriptor instead.
func (SubcarrierSpacing) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{54}
}

// enumerated from nr-rrc-definitions.asn1:1827
type QclTypeQclinfo int32

const (
	QclTypeQclinfo_QCL_TYPE_QCLINFO_TYPE_A QclTypeQclinfo = 0
	QclTypeQclinfo_QCL_TYPE_QCLINFO_TYPE_B QclTypeQclinfo = 1
	QclTypeQclinfo_QCL_TYPE_QCLINFO_TYPE_C QclTypeQclinfo = 2
	QclTypeQclinfo_QCL_TYPE_QCLINFO_TYPE_D QclTypeQclinfo = 3
)

// Enum value maps for QclTypeQclinfo.
var (
	QclTypeQclinfo_name = map[int32]string{
		0: "QCL_TYPE_QCLINFO_TYPE_A",
		1: "QCL_TYPE_QCLINFO_TYPE_B",
		2: "QCL_TYPE_QCLINFO_TYPE_C",
		3: "QCL_TYPE_QCLINFO_TYPE_D",
	}
	QclTypeQclinfo_value = map[string]int32{
		"QCL_TYPE_QCLINFO_TYPE_A": 0,
		"QCL_TYPE_QCLINFO_TYPE_B": 1,
		"QCL_TYPE_QCLINFO_TYPE_C": 2,
		"QCL_TYPE_QCLINFO_TYPE_D": 3,
	}
)

func (x QclTypeQclinfo) Enum() *QclTypeQclinfo {
	p := new(QclTypeQclinfo)
	*p = x
	return p
}

func (x QclTypeQclinfo) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QclTypeQclinfo) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[55].Descriptor()
}

func (QclTypeQclinfo) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[55]
}

func (x QclTypeQclinfo) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QclTypeQclinfo.Descriptor instead.
func (QclTypeQclinfo) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{55}
}

// enumerated from nr-rrc-definitions.asn1:1891
type DelayBudgetReportingProhibitTimersetup int32

const (
	DelayBudgetReportingProhibitTimersetup_DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S0     DelayBudgetReportingProhibitTimersetup = 0
	DelayBudgetReportingProhibitTimersetup_DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S0DOT4 DelayBudgetReportingProhibitTimersetup = 1
	DelayBudgetReportingProhibitTimersetup_DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S0DOT8 DelayBudgetReportingProhibitTimersetup = 2
	DelayBudgetReportingProhibitTimersetup_DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S1DOT6 DelayBudgetReportingProhibitTimersetup = 3
	DelayBudgetReportingProhibitTimersetup_DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S3     DelayBudgetReportingProhibitTimersetup = 4
	DelayBudgetReportingProhibitTimersetup_DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S6     DelayBudgetReportingProhibitTimersetup = 5
	DelayBudgetReportingProhibitTimersetup_DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S12    DelayBudgetReportingProhibitTimersetup = 6
	DelayBudgetReportingProhibitTimersetup_DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S30    DelayBudgetReportingProhibitTimersetup = 7
)

// Enum value maps for DelayBudgetReportingProhibitTimersetup.
var (
	DelayBudgetReportingProhibitTimersetup_name = map[int32]string{
		0: "DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S0",
		1: "DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S0DOT4",
		2: "DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S0DOT8",
		3: "DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S1DOT6",
		4: "DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S3",
		5: "DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S6",
		6: "DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S12",
		7: "DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S30",
	}
	DelayBudgetReportingProhibitTimersetup_value = map[string]int32{
		"DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S0":     0,
		"DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S0DOT4": 1,
		"DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S0DOT8": 2,
		"DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S1DOT6": 3,
		"DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S3":     4,
		"DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S6":     5,
		"DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S12":    6,
		"DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S30":    7,
	}
)

func (x DelayBudgetReportingProhibitTimersetup) Enum() *DelayBudgetReportingProhibitTimersetup {
	p := new(DelayBudgetReportingProhibitTimersetup)
	*p = x
	return p
}

func (x DelayBudgetReportingProhibitTimersetup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DelayBudgetReportingProhibitTimersetup) Descriptor() protoreflect.EnumDescriptor {
	return file_nr_rrc_definitions_proto_enumTypes[56].Descriptor()
}

func (DelayBudgetReportingProhibitTimersetup) Type() protoreflect.EnumType {
	return &file_nr_rrc_definitions_proto_enumTypes[56]
}

func (x DelayBudgetReportingProhibitTimersetup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DelayBudgetReportingProhibitTimersetup.Descriptor instead.
func (DelayBudgetReportingProhibitTimersetup) EnumDescriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{56}
}

// sequence from nr-rrc-definitions.asn1:12
// {BCCH-BCH-Message}
type BcchBChMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *BcchBChMessageType `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BcchBChMessage) Reset() {
	*x = BcchBChMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BcchBChMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BcchBChMessage) ProtoMessage() {}

func (x *BcchBChMessage) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BcchBChMessage.ProtoReflect.Descriptor instead.
func (*BcchBChMessage) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{0}
}

func (x *BcchBChMessage) GetMessage() *BcchBChMessageType {
	if x != nil {
		return x.Message
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:16
// {messageClassExtensionBCCH-BCH-MessageType}
type MessageClassExtensionBcchBChMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageClassExtensionBcchBChMessageType) Reset() {
	*x = MessageClassExtensionBcchBChMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageClassExtensionBcchBChMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageClassExtensionBcchBChMessageType) ProtoMessage() {}

func (x *MessageClassExtensionBcchBChMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageClassExtensionBcchBChMessageType.ProtoReflect.Descriptor instead.
func (*MessageClassExtensionBcchBChMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{1}
}

// sequence from nr-rrc-definitions.asn1:15
// {BCCH-BCH-MessageType}
type BcchBChMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:15
	//
	// Types that are assignable to BcchBchMessageType:
	//	*BcchBChMessageType_Mib
	//	*BcchBChMessageType_MessageClassExtension
	BcchBchMessageType isBcchBChMessageType_BcchBchMessageType `protobuf_oneof:"bcch_bch_message_type"`
}

func (x *BcchBChMessageType) Reset() {
	*x = BcchBChMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BcchBChMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BcchBChMessageType) ProtoMessage() {}

func (x *BcchBChMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BcchBChMessageType.ProtoReflect.Descriptor instead.
func (*BcchBChMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{2}
}

func (m *BcchBChMessageType) GetBcchBchMessageType() isBcchBChMessageType_BcchBchMessageType {
	if m != nil {
		return m.BcchBchMessageType
	}
	return nil
}

func (x *BcchBChMessageType) GetMib() *Mib {
	if x, ok := x.GetBcchBchMessageType().(*BcchBChMessageType_Mib); ok {
		return x.Mib
	}
	return nil
}

func (x *BcchBChMessageType) GetMessageClassExtension() *MessageClassExtensionBcchBChMessageType {
	if x, ok := x.GetBcchBchMessageType().(*BcchBChMessageType_MessageClassExtension); ok {
		return x.MessageClassExtension
	}
	return nil
}

type isBcchBChMessageType_BcchBchMessageType interface {
	isBcchBChMessageType_BcchBchMessageType()
}

type BcchBChMessageType_Mib struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Mib *Mib `protobuf:"bytes,1,opt,name=mib,proto3,oneof" aper:"choiceIdx:1,"`
}

type BcchBChMessageType_MessageClassExtension struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MessageClassExtension *MessageClassExtensionBcchBChMessageType `protobuf:"bytes,2,opt,name=message_class_extension,json=messageClassExtension,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*BcchBChMessageType_Mib) isBcchBChMessageType_BcchBchMessageType() {}

func (*BcchBChMessageType_MessageClassExtension) isBcchBChMessageType_BcchBchMessageType() {}

// sequence from nr-rrc-definitions.asn1:24
// {BCCH-DL-SCH-Message}
type BcchDLSChMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *BcchDLSChMessageType `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BcchDLSChMessage) Reset() {
	*x = BcchDLSChMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BcchDLSChMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BcchDLSChMessage) ProtoMessage() {}

func (x *BcchDLSChMessage) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BcchDLSChMessage.ProtoReflect.Descriptor instead.
func (*BcchDLSChMessage) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{3}
}

func (x *BcchDLSChMessage) GetMessage() *BcchDLSChMessageType {
	if x != nil {
		return x.Message
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:28
// {c1BCCH-DL-SCH-MessageType}
type C1BcchDLSChMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:28
	//
	// Types that are assignable to C1BcchDlSchMessageType:
	//	*C1BcchDLSChMessageType_SystemInformation
	//	*C1BcchDLSChMessageType_SystemInformationBlockType1
	C1BcchDlSchMessageType isC1BcchDLSChMessageType_C1BcchDlSchMessageType `protobuf_oneof:"c1_bcch_dl_sch_message_type"`
}

func (x *C1BcchDLSChMessageType) Reset() {
	*x = C1BcchDLSChMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C1BcchDLSChMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C1BcchDLSChMessageType) ProtoMessage() {}

func (x *C1BcchDLSChMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C1BcchDLSChMessageType.ProtoReflect.Descriptor instead.
func (*C1BcchDLSChMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{4}
}

func (m *C1BcchDLSChMessageType) GetC1BcchDlSchMessageType() isC1BcchDLSChMessageType_C1BcchDlSchMessageType {
	if m != nil {
		return m.C1BcchDlSchMessageType
	}
	return nil
}

func (x *C1BcchDLSChMessageType) GetSystemInformation() *SystemInformation {
	if x, ok := x.GetC1BcchDlSchMessageType().(*C1BcchDLSChMessageType_SystemInformation); ok {
		return x.SystemInformation
	}
	return nil
}

func (x *C1BcchDLSChMessageType) GetSystemInformationBlockType1() *Sib1 {
	if x, ok := x.GetC1BcchDlSchMessageType().(*C1BcchDLSChMessageType_SystemInformationBlockType1); ok {
		return x.SystemInformationBlockType1
	}
	return nil
}

type isC1BcchDLSChMessageType_C1BcchDlSchMessageType interface {
	isC1BcchDLSChMessageType_C1BcchDlSchMessageType()
}

type C1BcchDLSChMessageType_SystemInformation struct {
	// @inject_tag: aper:"choiceIdx:1,"
	SystemInformation *SystemInformation `protobuf:"bytes,1,opt,name=system_information,json=systemInformation,proto3,oneof" aper:"choiceIdx:1,"`
}

type C1BcchDLSChMessageType_SystemInformationBlockType1 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	SystemInformationBlockType1 *Sib1 `protobuf:"bytes,2,opt,name=system_information_block_type1,json=systemInformationBlockType1,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*C1BcchDLSChMessageType_SystemInformation) isC1BcchDLSChMessageType_C1BcchDlSchMessageType() {}

func (*C1BcchDLSChMessageType_SystemInformationBlockType1) isC1BcchDLSChMessageType_C1BcchDlSchMessageType() {
}

// sequence from nr-rrc-definitions.asn1:31
// {messageClassExtensionBCCH-DL-SCH-MessageType}
type MessageClassExtensionBcchDLSChMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageClassExtensionBcchDLSChMessageType) Reset() {
	*x = MessageClassExtensionBcchDLSChMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageClassExtensionBcchDLSChMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageClassExtensionBcchDLSChMessageType) ProtoMessage() {}

func (x *MessageClassExtensionBcchDLSChMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageClassExtensionBcchDLSChMessageType.ProtoReflect.Descriptor instead.
func (*MessageClassExtensionBcchDLSChMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{5}
}

// sequence from nr-rrc-definitions.asn1:30
// {BCCH-DL-SCH-MessageType}
type BcchDLSChMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:30
	//
	// Types that are assignable to BcchDlSchMessageType:
	//	*BcchDLSChMessageType_C1
	//	*BcchDLSChMessageType_MessageClassExtension
	BcchDlSchMessageType isBcchDLSChMessageType_BcchDlSchMessageType `protobuf_oneof:"bcch_dl_sch_message_type"`
}

func (x *BcchDLSChMessageType) Reset() {
	*x = BcchDLSChMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BcchDLSChMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BcchDLSChMessageType) ProtoMessage() {}

func (x *BcchDLSChMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BcchDLSChMessageType.ProtoReflect.Descriptor instead.
func (*BcchDLSChMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{6}
}

func (m *BcchDLSChMessageType) GetBcchDlSchMessageType() isBcchDLSChMessageType_BcchDlSchMessageType {
	if m != nil {
		return m.BcchDlSchMessageType
	}
	return nil
}

func (x *BcchDLSChMessageType) GetC1() *C1BcchDLSChMessageType {
	if x, ok := x.GetBcchDlSchMessageType().(*BcchDLSChMessageType_C1); ok {
		return x.C1
	}
	return nil
}

func (x *BcchDLSChMessageType) GetMessageClassExtension() *MessageClassExtensionBcchDLSChMessageType {
	if x, ok := x.GetBcchDlSchMessageType().(*BcchDLSChMessageType_MessageClassExtension); ok {
		return x.MessageClassExtension
	}
	return nil
}

type isBcchDLSChMessageType_BcchDlSchMessageType interface {
	isBcchDLSChMessageType_BcchDlSchMessageType()
}

type BcchDLSChMessageType_C1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	C1 *C1BcchDLSChMessageType `protobuf:"bytes,1,opt,name=c1,proto3,oneof" aper:"choiceIdx:1,"`
}

type BcchDLSChMessageType_MessageClassExtension struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MessageClassExtension *MessageClassExtensionBcchDLSChMessageType `protobuf:"bytes,2,opt,name=message_class_extension,json=messageClassExtension,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*BcchDLSChMessageType_C1) isBcchDLSChMessageType_BcchDlSchMessageType() {}

func (*BcchDLSChMessageType_MessageClassExtension) isBcchDLSChMessageType_BcchDlSchMessageType() {}

// sequence from nr-rrc-definitions.asn1:39
// {DL-CCCH-Message}
type DlCCchMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *DlCCchMessageType `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DlCCchMessage) Reset() {
	*x = DlCCchMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DlCCchMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DlCCchMessage) ProtoMessage() {}

func (x *DlCCchMessage) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DlCCchMessage.ProtoReflect.Descriptor instead.
func (*DlCCchMessage) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{7}
}

func (x *DlCCchMessage) GetMessage() *DlCCchMessageType {
	if x != nil {
		return x.Message
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:43
// {c1DL-CCCH-MessageType}
type C1DlCCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:43
	//
	// Types that are assignable to C1DlCcchMessageType:
	//	*C1DlCCchMessageType_RrcReject
	//	*C1DlCCchMessageType_RrcSetup
	//	*C1DlCCchMessageType_Spare2
	//	*C1DlCCchMessageType_Spare1
	C1DlCcchMessageType isC1DlCCchMessageType_C1DlCcchMessageType `protobuf_oneof:"c1_dl_ccch_message_type"`
}

func (x *C1DlCCchMessageType) Reset() {
	*x = C1DlCCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C1DlCCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C1DlCCchMessageType) ProtoMessage() {}

func (x *C1DlCCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C1DlCCchMessageType.ProtoReflect.Descriptor instead.
func (*C1DlCCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{8}
}

func (m *C1DlCCchMessageType) GetC1DlCcchMessageType() isC1DlCCchMessageType_C1DlCcchMessageType {
	if m != nil {
		return m.C1DlCcchMessageType
	}
	return nil
}

func (x *C1DlCCchMessageType) GetRrcReject() *Rrcreject {
	if x, ok := x.GetC1DlCcchMessageType().(*C1DlCCchMessageType_RrcReject); ok {
		return x.RrcReject
	}
	return nil
}

func (x *C1DlCCchMessageType) GetRrcSetup() *Rrcsetup {
	if x, ok := x.GetC1DlCcchMessageType().(*C1DlCCchMessageType_RrcSetup); ok {
		return x.RrcSetup
	}
	return nil
}

func (x *C1DlCCchMessageType) GetSpare2() int32 {
	if x, ok := x.GetC1DlCcchMessageType().(*C1DlCCchMessageType_Spare2); ok {
		return x.Spare2
	}
	return 0
}

func (x *C1DlCCchMessageType) GetSpare1() int32 {
	if x, ok := x.GetC1DlCcchMessageType().(*C1DlCCchMessageType_Spare1); ok {
		return x.Spare1
	}
	return 0
}

type isC1DlCCchMessageType_C1DlCcchMessageType interface {
	isC1DlCCchMessageType_C1DlCcchMessageType()
}

type C1DlCCchMessageType_RrcReject struct {
	// @inject_tag: aper:"choiceIdx:1,"
	RrcReject *Rrcreject `protobuf:"bytes,1,opt,name=rrc_reject,json=rrcReject,proto3,oneof" aper:"choiceIdx:1,"`
}

type C1DlCCchMessageType_RrcSetup struct {
	// @inject_tag: aper:"choiceIdx:2,"
	RrcSetup *Rrcsetup `protobuf:"bytes,2,opt,name=rrc_setup,json=rrcSetup,proto3,oneof" aper:"choiceIdx:2,"`
}

type C1DlCCchMessageType_Spare2 struct {
	// @inject_tag: aper:"choiceIdx:3,"
	Spare2 int32 `protobuf:"varint,3,opt,name=spare2,proto3,oneof" aper:"choiceIdx:3,"`
}

type C1DlCCchMessageType_Spare1 struct {
	// @inject_tag: aper:"choiceIdx:4,"
	Spare1 int32 `protobuf:"varint,4,opt,name=spare1,proto3,oneof" aper:"choiceIdx:4,"`
}

func (*C1DlCCchMessageType_RrcReject) isC1DlCCchMessageType_C1DlCcchMessageType() {}

func (*C1DlCCchMessageType_RrcSetup) isC1DlCCchMessageType_C1DlCcchMessageType() {}

func (*C1DlCCchMessageType_Spare2) isC1DlCCchMessageType_C1DlCcchMessageType() {}

func (*C1DlCCchMessageType_Spare1) isC1DlCCchMessageType_C1DlCcchMessageType() {}

// sequence from nr-rrc-definitions.asn1:48
// {messageClassExtensionDL-CCCH-MessageType}
type MessageClassExtensionDlCCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageClassExtensionDlCCchMessageType) Reset() {
	*x = MessageClassExtensionDlCCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageClassExtensionDlCCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageClassExtensionDlCCchMessageType) ProtoMessage() {}

func (x *MessageClassExtensionDlCCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageClassExtensionDlCCchMessageType.ProtoReflect.Descriptor instead.
func (*MessageClassExtensionDlCCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{9}
}

// sequence from nr-rrc-definitions.asn1:47
// {DL-CCCH-MessageType}
type DlCCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:47
	//
	// Types that are assignable to DlCcchMessageType:
	//	*DlCCchMessageType_C1
	//	*DlCCchMessageType_MessageClassExtension
	DlCcchMessageType isDlCCchMessageType_DlCcchMessageType `protobuf_oneof:"dl_ccch_message_type"`
}

func (x *DlCCchMessageType) Reset() {
	*x = DlCCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DlCCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DlCCchMessageType) ProtoMessage() {}

func (x *DlCCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DlCCchMessageType.ProtoReflect.Descriptor instead.
func (*DlCCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{10}
}

func (m *DlCCchMessageType) GetDlCcchMessageType() isDlCCchMessageType_DlCcchMessageType {
	if m != nil {
		return m.DlCcchMessageType
	}
	return nil
}

func (x *DlCCchMessageType) GetC1() *C1DlCCchMessageType {
	if x, ok := x.GetDlCcchMessageType().(*DlCCchMessageType_C1); ok {
		return x.C1
	}
	return nil
}

func (x *DlCCchMessageType) GetMessageClassExtension() *MessageClassExtensionDlCCchMessageType {
	if x, ok := x.GetDlCcchMessageType().(*DlCCchMessageType_MessageClassExtension); ok {
		return x.MessageClassExtension
	}
	return nil
}

type isDlCCchMessageType_DlCcchMessageType interface {
	isDlCCchMessageType_DlCcchMessageType()
}

type DlCCchMessageType_C1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	C1 *C1DlCCchMessageType `protobuf:"bytes,1,opt,name=c1,proto3,oneof" aper:"choiceIdx:1,"`
}

type DlCCchMessageType_MessageClassExtension struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MessageClassExtension *MessageClassExtensionDlCCchMessageType `protobuf:"bytes,2,opt,name=message_class_extension,json=messageClassExtension,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*DlCCchMessageType_C1) isDlCCchMessageType_DlCcchMessageType() {}

func (*DlCCchMessageType_MessageClassExtension) isDlCCchMessageType_DlCcchMessageType() {}

// sequence from nr-rrc-definitions.asn1:56
// {DL-DCCH-Message}
type DlDCchMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *DlDCchMessageType `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DlDCchMessage) Reset() {
	*x = DlDCchMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DlDCchMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DlDCchMessage) ProtoMessage() {}

func (x *DlDCchMessage) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DlDCchMessage.ProtoReflect.Descriptor instead.
func (*DlDCchMessage) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{11}
}

func (x *DlDCchMessage) GetMessage() *DlDCchMessageType {
	if x != nil {
		return x.Message
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:60
// {c1DL-DCCH-MessageType}
type C1DlDCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:60
	//
	// Types that are assignable to C1DlDcchMessageType:
	//	*C1DlDCchMessageType_RrcReconfiguration
	//	*C1DlDCchMessageType_RrcResume
	//	*C1DlDCchMessageType_RrcRelease
	//	*C1DlDCchMessageType_RrcReestablishment
	//	*C1DlDCchMessageType_SecurityModeCommand
	//	*C1DlDCchMessageType_DlInformationTransfer
	//	*C1DlDCchMessageType_UeCapabilityEnquiry
	//	*C1DlDCchMessageType_CounterCheck
	//	*C1DlDCchMessageType_MobilityFromNrcommand
	//	*C1DlDCchMessageType_DlDedicatedMessageSegmentR16
	//	*C1DlDCchMessageType_UeInformationRequestR16
	//	*C1DlDCchMessageType_DlInformationTransferMrdcR16
	//	*C1DlDCchMessageType_LoggedMeasurementConfigurationR16
	//	*C1DlDCchMessageType_Spare3
	//	*C1DlDCchMessageType_Spare2
	//	*C1DlDCchMessageType_Spare1
	C1DlDcchMessageType isC1DlDCchMessageType_C1DlDcchMessageType `protobuf_oneof:"c1_dl_dcch_message_type"`
}

func (x *C1DlDCchMessageType) Reset() {
	*x = C1DlDCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C1DlDCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C1DlDCchMessageType) ProtoMessage() {}

func (x *C1DlDCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C1DlDCchMessageType.ProtoReflect.Descriptor instead.
func (*C1DlDCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{12}
}

func (m *C1DlDCchMessageType) GetC1DlDcchMessageType() isC1DlDCchMessageType_C1DlDcchMessageType {
	if m != nil {
		return m.C1DlDcchMessageType
	}
	return nil
}

func (x *C1DlDCchMessageType) GetRrcReconfiguration() *Rrcreconfiguration {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_RrcReconfiguration); ok {
		return x.RrcReconfiguration
	}
	return nil
}

func (x *C1DlDCchMessageType) GetRrcResume() *Rrcresume {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_RrcResume); ok {
		return x.RrcResume
	}
	return nil
}

func (x *C1DlDCchMessageType) GetRrcRelease() *Rrcrelease {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_RrcRelease); ok {
		return x.RrcRelease
	}
	return nil
}

func (x *C1DlDCchMessageType) GetRrcReestablishment() *Rrcreestablishment {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_RrcReestablishment); ok {
		return x.RrcReestablishment
	}
	return nil
}

func (x *C1DlDCchMessageType) GetSecurityModeCommand() *SecurityModeCommand {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_SecurityModeCommand); ok {
		return x.SecurityModeCommand
	}
	return nil
}

func (x *C1DlDCchMessageType) GetDlInformationTransfer() *DlinformationTransfer {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_DlInformationTransfer); ok {
		return x.DlInformationTransfer
	}
	return nil
}

func (x *C1DlDCchMessageType) GetUeCapabilityEnquiry() *UecapabilityEnquiry {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_UeCapabilityEnquiry); ok {
		return x.UeCapabilityEnquiry
	}
	return nil
}

func (x *C1DlDCchMessageType) GetCounterCheck() *CounterCheck {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_CounterCheck); ok {
		return x.CounterCheck
	}
	return nil
}

func (x *C1DlDCchMessageType) GetMobilityFromNrcommand() *MobilityFromNrcommand {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_MobilityFromNrcommand); ok {
		return x.MobilityFromNrcommand
	}
	return nil
}

func (x *C1DlDCchMessageType) GetDlDedicatedMessageSegmentR16() *DldedicatedMessageSegmentr16 {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_DlDedicatedMessageSegmentR16); ok {
		return x.DlDedicatedMessageSegmentR16
	}
	return nil
}

func (x *C1DlDCchMessageType) GetUeInformationRequestR16() *UeinformationRequestr16 {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_UeInformationRequestR16); ok {
		return x.UeInformationRequestR16
	}
	return nil
}

func (x *C1DlDCchMessageType) GetDlInformationTransferMrdcR16() *DlinformationTransferMrdcr16 {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_DlInformationTransferMrdcR16); ok {
		return x.DlInformationTransferMrdcR16
	}
	return nil
}

func (x *C1DlDCchMessageType) GetLoggedMeasurementConfigurationR16() *LoggedMeasurementConfigurationr16 {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_LoggedMeasurementConfigurationR16); ok {
		return x.LoggedMeasurementConfigurationR16
	}
	return nil
}

func (x *C1DlDCchMessageType) GetSpare3() int32 {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_Spare3); ok {
		return x.Spare3
	}
	return 0
}

func (x *C1DlDCchMessageType) GetSpare2() int32 {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_Spare2); ok {
		return x.Spare2
	}
	return 0
}

func (x *C1DlDCchMessageType) GetSpare1() int32 {
	if x, ok := x.GetC1DlDcchMessageType().(*C1DlDCchMessageType_Spare1); ok {
		return x.Spare1
	}
	return 0
}

type isC1DlDCchMessageType_C1DlDcchMessageType interface {
	isC1DlDCchMessageType_C1DlDcchMessageType()
}

type C1DlDCchMessageType_RrcReconfiguration struct {
	// @inject_tag: aper:"choiceIdx:1,"
	RrcReconfiguration *Rrcreconfiguration `protobuf:"bytes,1,opt,name=rrc_reconfiguration,json=rrcReconfiguration,proto3,oneof" aper:"choiceIdx:1,"`
}

type C1DlDCchMessageType_RrcResume struct {
	// @inject_tag: aper:"choiceIdx:2,"
	RrcResume *Rrcresume `protobuf:"bytes,2,opt,name=rrc_resume,json=rrcResume,proto3,oneof" aper:"choiceIdx:2,"`
}

type C1DlDCchMessageType_RrcRelease struct {
	// @inject_tag: aper:"choiceIdx:3,"
	RrcRelease *Rrcrelease `protobuf:"bytes,3,opt,name=rrc_release,json=rrcRelease,proto3,oneof" aper:"choiceIdx:3,"`
}

type C1DlDCchMessageType_RrcReestablishment struct {
	// @inject_tag: aper:"choiceIdx:4,"
	RrcReestablishment *Rrcreestablishment `protobuf:"bytes,4,opt,name=rrc_reestablishment,json=rrcReestablishment,proto3,oneof" aper:"choiceIdx:4,"`
}

type C1DlDCchMessageType_SecurityModeCommand struct {
	// @inject_tag: aper:"choiceIdx:5,"
	SecurityModeCommand *SecurityModeCommand `protobuf:"bytes,5,opt,name=security_mode_command,json=securityModeCommand,proto3,oneof" aper:"choiceIdx:5,"`
}

type C1DlDCchMessageType_DlInformationTransfer struct {
	// @inject_tag: aper:"choiceIdx:6,"
	DlInformationTransfer *DlinformationTransfer `protobuf:"bytes,6,opt,name=dl_information_transfer,json=dlInformationTransfer,proto3,oneof" aper:"choiceIdx:6,"`
}

type C1DlDCchMessageType_UeCapabilityEnquiry struct {
	// @inject_tag: aper:"choiceIdx:7,"
	UeCapabilityEnquiry *UecapabilityEnquiry `protobuf:"bytes,7,opt,name=ue_capability_enquiry,json=ueCapabilityEnquiry,proto3,oneof" aper:"choiceIdx:7,"`
}

type C1DlDCchMessageType_CounterCheck struct {
	// @inject_tag: aper:"choiceIdx:8,"
	CounterCheck *CounterCheck `protobuf:"bytes,8,opt,name=counter_check,json=counterCheck,proto3,oneof" aper:"choiceIdx:8,"`
}

type C1DlDCchMessageType_MobilityFromNrcommand struct {
	// @inject_tag: aper:"choiceIdx:9,"
	MobilityFromNrcommand *MobilityFromNrcommand `protobuf:"bytes,9,opt,name=mobility_from_nrcommand,json=mobilityFromNRCommand,proto3,oneof" aper:"choiceIdx:9,"`
}

type C1DlDCchMessageType_DlDedicatedMessageSegmentR16 struct {
	// @inject_tag: aper:"choiceIdx:10,"
	DlDedicatedMessageSegmentR16 *DldedicatedMessageSegmentr16 `protobuf:"bytes,10,opt,name=dl_dedicated_message_segment_r16,json=dlDedicatedMessageSegment-r16,proto3,oneof" aper:"choiceIdx:10,"`
}

type C1DlDCchMessageType_UeInformationRequestR16 struct {
	// @inject_tag: aper:"choiceIdx:11,"
	UeInformationRequestR16 *UeinformationRequestr16 `protobuf:"bytes,11,opt,name=ue_information_request_r16,json=ueInformationRequest-r16,proto3,oneof" aper:"choiceIdx:11,"`
}

type C1DlDCchMessageType_DlInformationTransferMrdcR16 struct {
	// @inject_tag: aper:"choiceIdx:12,"
	DlInformationTransferMrdcR16 *DlinformationTransferMrdcr16 `protobuf:"bytes,12,opt,name=dl_information_transfer_mrdc_r16,json=dlInformationTransferMRDC-r16,proto3,oneof" aper:"choiceIdx:12,"`
}

type C1DlDCchMessageType_LoggedMeasurementConfigurationR16 struct {
	// @inject_tag: aper:"choiceIdx:13,"
	LoggedMeasurementConfigurationR16 *LoggedMeasurementConfigurationr16 `protobuf:"bytes,13,opt,name=logged_measurement_configuration_r16,json=loggedMeasurementConfiguration-r16,proto3,oneof" aper:"choiceIdx:13,"`
}

type C1DlDCchMessageType_Spare3 struct {
	// @inject_tag: aper:"choiceIdx:14,"
	Spare3 int32 `protobuf:"varint,14,opt,name=spare3,proto3,oneof" aper:"choiceIdx:14,"`
}

type C1DlDCchMessageType_Spare2 struct {
	// @inject_tag: aper:"choiceIdx:15,"
	Spare2 int32 `protobuf:"varint,15,opt,name=spare2,proto3,oneof" aper:"choiceIdx:15,"`
}

type C1DlDCchMessageType_Spare1 struct {
	// @inject_tag: aper:"choiceIdx:16,"
	Spare1 int32 `protobuf:"varint,16,opt,name=spare1,proto3,oneof" aper:"choiceIdx:16,"`
}

func (*C1DlDCchMessageType_RrcReconfiguration) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_RrcResume) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_RrcRelease) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_RrcReestablishment) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_SecurityModeCommand) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_DlInformationTransfer) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_UeCapabilityEnquiry) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_CounterCheck) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_MobilityFromNrcommand) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_DlDedicatedMessageSegmentR16) isC1DlDCchMessageType_C1DlDcchMessageType() {
}

func (*C1DlDCchMessageType_UeInformationRequestR16) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_DlInformationTransferMrdcR16) isC1DlDCchMessageType_C1DlDcchMessageType() {
}

func (*C1DlDCchMessageType_LoggedMeasurementConfigurationR16) isC1DlDCchMessageType_C1DlDcchMessageType() {
}

func (*C1DlDCchMessageType_Spare3) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_Spare2) isC1DlDCchMessageType_C1DlDcchMessageType() {}

func (*C1DlDCchMessageType_Spare1) isC1DlDCchMessageType_C1DlDcchMessageType() {}

// sequence from nr-rrc-definitions.asn1:75
// {messageClassExtensionDL-DCCH-MessageType}
type MessageClassExtensionDlDCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageClassExtensionDlDCchMessageType) Reset() {
	*x = MessageClassExtensionDlDCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageClassExtensionDlDCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageClassExtensionDlDCchMessageType) ProtoMessage() {}

func (x *MessageClassExtensionDlDCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageClassExtensionDlDCchMessageType.ProtoReflect.Descriptor instead.
func (*MessageClassExtensionDlDCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{13}
}

// sequence from nr-rrc-definitions.asn1:74
// {DL-DCCH-MessageType}
type DlDCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:74
	//
	// Types that are assignable to DlDcchMessageType:
	//	*DlDCchMessageType_C1
	//	*DlDCchMessageType_MessageClassExtension
	DlDcchMessageType isDlDCchMessageType_DlDcchMessageType `protobuf_oneof:"dl_dcch_message_type"`
}

func (x *DlDCchMessageType) Reset() {
	*x = DlDCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DlDCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DlDCchMessageType) ProtoMessage() {}

func (x *DlDCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DlDCchMessageType.ProtoReflect.Descriptor instead.
func (*DlDCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{14}
}

func (m *DlDCchMessageType) GetDlDcchMessageType() isDlDCchMessageType_DlDcchMessageType {
	if m != nil {
		return m.DlDcchMessageType
	}
	return nil
}

func (x *DlDCchMessageType) GetC1() *C1DlDCchMessageType {
	if x, ok := x.GetDlDcchMessageType().(*DlDCchMessageType_C1); ok {
		return x.C1
	}
	return nil
}

func (x *DlDCchMessageType) GetMessageClassExtension() *MessageClassExtensionDlDCchMessageType {
	if x, ok := x.GetDlDcchMessageType().(*DlDCchMessageType_MessageClassExtension); ok {
		return x.MessageClassExtension
	}
	return nil
}

type isDlDCchMessageType_DlDcchMessageType interface {
	isDlDCchMessageType_DlDcchMessageType()
}

type DlDCchMessageType_C1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	C1 *C1DlDCchMessageType `protobuf:"bytes,1,opt,name=c1,proto3,oneof" aper:"choiceIdx:1,"`
}

type DlDCchMessageType_MessageClassExtension struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MessageClassExtension *MessageClassExtensionDlDCchMessageType `protobuf:"bytes,2,opt,name=message_class_extension,json=messageClassExtension,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*DlDCchMessageType_C1) isDlDCchMessageType_DlDcchMessageType() {}

func (*DlDCchMessageType_MessageClassExtension) isDlDCchMessageType_DlDcchMessageType() {}

// sequence from nr-rrc-definitions.asn1:93
// {UL-CCCH-Message}
type UlCCchMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *UlCCchMessageType `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UlCCchMessage) Reset() {
	*x = UlCCchMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UlCCchMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UlCCchMessage) ProtoMessage() {}

func (x *UlCCchMessage) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UlCCchMessage.ProtoReflect.Descriptor instead.
func (*UlCCchMessage) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{15}
}

func (x *UlCCchMessage) GetMessage() *UlCCchMessageType {
	if x != nil {
		return x.Message
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:97
// {c1UL-CCCH-MessageType}
type C1UlCCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:97
	//
	// Types that are assignable to C1UlCcchMessageType:
	//	*C1UlCCchMessageType_RrcSetupRequest
	//	*C1UlCCchMessageType_RrcResumeRequest
	//	*C1UlCCchMessageType_RrcReestablishmentRequest
	//	*C1UlCCchMessageType_RrcSystemInfoRequest
	C1UlCcchMessageType isC1UlCCchMessageType_C1UlCcchMessageType `protobuf_oneof:"c1_ul_ccch_message_type"`
}

func (x *C1UlCCchMessageType) Reset() {
	*x = C1UlCCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C1UlCCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C1UlCCchMessageType) ProtoMessage() {}

func (x *C1UlCCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C1UlCCchMessageType.ProtoReflect.Descriptor instead.
func (*C1UlCCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{16}
}

func (m *C1UlCCchMessageType) GetC1UlCcchMessageType() isC1UlCCchMessageType_C1UlCcchMessageType {
	if m != nil {
		return m.C1UlCcchMessageType
	}
	return nil
}

func (x *C1UlCCchMessageType) GetRrcSetupRequest() *RrcsetupRequest {
	if x, ok := x.GetC1UlCcchMessageType().(*C1UlCCchMessageType_RrcSetupRequest); ok {
		return x.RrcSetupRequest
	}
	return nil
}

func (x *C1UlCCchMessageType) GetRrcResumeRequest() *RrcresumeRequest {
	if x, ok := x.GetC1UlCcchMessageType().(*C1UlCCchMessageType_RrcResumeRequest); ok {
		return x.RrcResumeRequest
	}
	return nil
}

func (x *C1UlCCchMessageType) GetRrcReestablishmentRequest() *RrcreestablishmentRequest {
	if x, ok := x.GetC1UlCcchMessageType().(*C1UlCCchMessageType_RrcReestablishmentRequest); ok {
		return x.RrcReestablishmentRequest
	}
	return nil
}

func (x *C1UlCCchMessageType) GetRrcSystemInfoRequest() *RrcsystemInfoRequest {
	if x, ok := x.GetC1UlCcchMessageType().(*C1UlCCchMessageType_RrcSystemInfoRequest); ok {
		return x.RrcSystemInfoRequest
	}
	return nil
}

type isC1UlCCchMessageType_C1UlCcchMessageType interface {
	isC1UlCCchMessageType_C1UlCcchMessageType()
}

type C1UlCCchMessageType_RrcSetupRequest struct {
	// @inject_tag: aper:"choiceIdx:1,"
	RrcSetupRequest *RrcsetupRequest `protobuf:"bytes,1,opt,name=rrc_setup_request,json=rrcSetupRequest,proto3,oneof" aper:"choiceIdx:1,"`
}

type C1UlCCchMessageType_RrcResumeRequest struct {
	// @inject_tag: aper:"choiceIdx:2,"
	RrcResumeRequest *RrcresumeRequest `protobuf:"bytes,2,opt,name=rrc_resume_request,json=rrcResumeRequest,proto3,oneof" aper:"choiceIdx:2,"`
}

type C1UlCCchMessageType_RrcReestablishmentRequest struct {
	// @inject_tag: aper:"choiceIdx:3,"
	RrcReestablishmentRequest *RrcreestablishmentRequest `protobuf:"bytes,3,opt,name=rrc_reestablishment_request,json=rrcReestablishmentRequest,proto3,oneof" aper:"choiceIdx:3,"`
}

type C1UlCCchMessageType_RrcSystemInfoRequest struct {
	// @inject_tag: aper:"choiceIdx:4,"
	RrcSystemInfoRequest *RrcsystemInfoRequest `protobuf:"bytes,4,opt,name=rrc_system_info_request,json=rrcSystemInfoRequest,proto3,oneof" aper:"choiceIdx:4,"`
}

func (*C1UlCCchMessageType_RrcSetupRequest) isC1UlCCchMessageType_C1UlCcchMessageType() {}

func (*C1UlCCchMessageType_RrcResumeRequest) isC1UlCCchMessageType_C1UlCcchMessageType() {}

func (*C1UlCCchMessageType_RrcReestablishmentRequest) isC1UlCCchMessageType_C1UlCcchMessageType() {}

func (*C1UlCCchMessageType_RrcSystemInfoRequest) isC1UlCCchMessageType_C1UlCcchMessageType() {}

// sequence from nr-rrc-definitions.asn1:102
// {messageClassExtensionUL-CCCH-MessageType}
type MessageClassExtensionUlCCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageClassExtensionUlCCchMessageType) Reset() {
	*x = MessageClassExtensionUlCCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageClassExtensionUlCCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageClassExtensionUlCCchMessageType) ProtoMessage() {}

func (x *MessageClassExtensionUlCCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageClassExtensionUlCCchMessageType.ProtoReflect.Descriptor instead.
func (*MessageClassExtensionUlCCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{17}
}

// sequence from nr-rrc-definitions.asn1:101
// {UL-CCCH-MessageType}
type UlCCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:101
	//
	// Types that are assignable to UlCcchMessageType:
	//	*UlCCchMessageType_C1
	//	*UlCCchMessageType_MessageClassExtension
	UlCcchMessageType isUlCCchMessageType_UlCcchMessageType `protobuf_oneof:"ul_ccch_message_type"`
}

func (x *UlCCchMessageType) Reset() {
	*x = UlCCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UlCCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UlCCchMessageType) ProtoMessage() {}

func (x *UlCCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UlCCchMessageType.ProtoReflect.Descriptor instead.
func (*UlCCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{18}
}

func (m *UlCCchMessageType) GetUlCcchMessageType() isUlCCchMessageType_UlCcchMessageType {
	if m != nil {
		return m.UlCcchMessageType
	}
	return nil
}

func (x *UlCCchMessageType) GetC1() *C1UlCCchMessageType {
	if x, ok := x.GetUlCcchMessageType().(*UlCCchMessageType_C1); ok {
		return x.C1
	}
	return nil
}

func (x *UlCCchMessageType) GetMessageClassExtension() *MessageClassExtensionUlCCchMessageType {
	if x, ok := x.GetUlCcchMessageType().(*UlCCchMessageType_MessageClassExtension); ok {
		return x.MessageClassExtension
	}
	return nil
}

type isUlCCchMessageType_UlCcchMessageType interface {
	isUlCCchMessageType_UlCcchMessageType()
}

type UlCCchMessageType_C1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	C1 *C1UlCCchMessageType `protobuf:"bytes,1,opt,name=c1,proto3,oneof" aper:"choiceIdx:1,"`
}

type UlCCchMessageType_MessageClassExtension struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MessageClassExtension *MessageClassExtensionUlCCchMessageType `protobuf:"bytes,2,opt,name=message_class_extension,json=messageClassExtension,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*UlCCchMessageType_C1) isUlCCchMessageType_UlCcchMessageType() {}

func (*UlCCchMessageType_MessageClassExtension) isUlCCchMessageType_UlCcchMessageType() {}

// sequence from nr-rrc-definitions.asn1:111
// {UL-CCCH1-Message}
type UlCCch1Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *UlCCch1MessageType `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UlCCch1Message) Reset() {
	*x = UlCCch1Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UlCCch1Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UlCCch1Message) ProtoMessage() {}

func (x *UlCCch1Message) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UlCCch1Message.ProtoReflect.Descriptor instead.
func (*UlCCch1Message) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{19}
}

func (x *UlCCch1Message) GetMessage() *UlCCch1MessageType {
	if x != nil {
		return x.Message
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:115
// {c1UL-CCCH1-MessageType}
type C1UlCCch1MessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:115
	//
	// Types that are assignable to C1UlCcch1MessageType:
	//	*C1UlCCch1MessageType_RrcResumeRequest1
	//	*C1UlCCch1MessageType_Spare3
	//	*C1UlCCch1MessageType_Spare2
	//	*C1UlCCch1MessageType_Spare1
	C1UlCcch1MessageType isC1UlCCch1MessageType_C1UlCcch1MessageType `protobuf_oneof:"c1_ul_ccch1_message_type"`
}

func (x *C1UlCCch1MessageType) Reset() {
	*x = C1UlCCch1MessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C1UlCCch1MessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C1UlCCch1MessageType) ProtoMessage() {}

func (x *C1UlCCch1MessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C1UlCCch1MessageType.ProtoReflect.Descriptor instead.
func (*C1UlCCch1MessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{20}
}

func (m *C1UlCCch1MessageType) GetC1UlCcch1MessageType() isC1UlCCch1MessageType_C1UlCcch1MessageType {
	if m != nil {
		return m.C1UlCcch1MessageType
	}
	return nil
}

func (x *C1UlCCch1MessageType) GetRrcResumeRequest1() *RrcresumeRequest1 {
	if x, ok := x.GetC1UlCcch1MessageType().(*C1UlCCch1MessageType_RrcResumeRequest1); ok {
		return x.RrcResumeRequest1
	}
	return nil
}

func (x *C1UlCCch1MessageType) GetSpare3() int32 {
	if x, ok := x.GetC1UlCcch1MessageType().(*C1UlCCch1MessageType_Spare3); ok {
		return x.Spare3
	}
	return 0
}

func (x *C1UlCCch1MessageType) GetSpare2() int32 {
	if x, ok := x.GetC1UlCcch1MessageType().(*C1UlCCch1MessageType_Spare2); ok {
		return x.Spare2
	}
	return 0
}

func (x *C1UlCCch1MessageType) GetSpare1() int32 {
	if x, ok := x.GetC1UlCcch1MessageType().(*C1UlCCch1MessageType_Spare1); ok {
		return x.Spare1
	}
	return 0
}

type isC1UlCCch1MessageType_C1UlCcch1MessageType interface {
	isC1UlCCch1MessageType_C1UlCcch1MessageType()
}

type C1UlCCch1MessageType_RrcResumeRequest1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	RrcResumeRequest1 *RrcresumeRequest1 `protobuf:"bytes,1,opt,name=rrc_resume_request1,json=rrcResumeRequest1,proto3,oneof" aper:"choiceIdx:1,"`
}

type C1UlCCch1MessageType_Spare3 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Spare3 int32 `protobuf:"varint,2,opt,name=spare3,proto3,oneof" aper:"choiceIdx:2,"`
}

type C1UlCCch1MessageType_Spare2 struct {
	// @inject_tag: aper:"choiceIdx:3,"
	Spare2 int32 `protobuf:"varint,3,opt,name=spare2,proto3,oneof" aper:"choiceIdx:3,"`
}

type C1UlCCch1MessageType_Spare1 struct {
	// @inject_tag: aper:"choiceIdx:4,"
	Spare1 int32 `protobuf:"varint,4,opt,name=spare1,proto3,oneof" aper:"choiceIdx:4,"`
}

func (*C1UlCCch1MessageType_RrcResumeRequest1) isC1UlCCch1MessageType_C1UlCcch1MessageType() {}

func (*C1UlCCch1MessageType_Spare3) isC1UlCCch1MessageType_C1UlCcch1MessageType() {}

func (*C1UlCCch1MessageType_Spare2) isC1UlCCch1MessageType_C1UlCcch1MessageType() {}

func (*C1UlCCch1MessageType_Spare1) isC1UlCCch1MessageType_C1UlCcch1MessageType() {}

// sequence from nr-rrc-definitions.asn1:121
// {messageClassExtensionUL-CCCH1-MessageType}
type MessageClassExtensionUlCCch1MessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageClassExtensionUlCCch1MessageType) Reset() {
	*x = MessageClassExtensionUlCCch1MessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageClassExtensionUlCCch1MessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageClassExtensionUlCCch1MessageType) ProtoMessage() {}

func (x *MessageClassExtensionUlCCch1MessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageClassExtensionUlCCch1MessageType.ProtoReflect.Descriptor instead.
func (*MessageClassExtensionUlCCch1MessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{21}
}

// sequence from nr-rrc-definitions.asn1:120
// {UL-CCCH1-MessageType}
type UlCCch1MessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:120
	//
	// Types that are assignable to UlCcch1MessageType:
	//	*UlCCch1MessageType_C1
	//	*UlCCch1MessageType_MessageClassExtension
	UlCcch1MessageType isUlCCch1MessageType_UlCcch1MessageType `protobuf_oneof:"ul_ccch1_message_type"`
}

func (x *UlCCch1MessageType) Reset() {
	*x = UlCCch1MessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UlCCch1MessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UlCCch1MessageType) ProtoMessage() {}

func (x *UlCCch1MessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UlCCch1MessageType.ProtoReflect.Descriptor instead.
func (*UlCCch1MessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{22}
}

func (m *UlCCch1MessageType) GetUlCcch1MessageType() isUlCCch1MessageType_UlCcch1MessageType {
	if m != nil {
		return m.UlCcch1MessageType
	}
	return nil
}

func (x *UlCCch1MessageType) GetC1() *C1UlCCch1MessageType {
	if x, ok := x.GetUlCcch1MessageType().(*UlCCch1MessageType_C1); ok {
		return x.C1
	}
	return nil
}

func (x *UlCCch1MessageType) GetMessageClassExtension() *MessageClassExtensionUlCCch1MessageType {
	if x, ok := x.GetUlCcch1MessageType().(*UlCCch1MessageType_MessageClassExtension); ok {
		return x.MessageClassExtension
	}
	return nil
}

type isUlCCch1MessageType_UlCcch1MessageType interface {
	isUlCCch1MessageType_UlCcch1MessageType()
}

type UlCCch1MessageType_C1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	C1 *C1UlCCch1MessageType `protobuf:"bytes,1,opt,name=c1,proto3,oneof" aper:"choiceIdx:1,"`
}

type UlCCch1MessageType_MessageClassExtension struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MessageClassExtension *MessageClassExtensionUlCCch1MessageType `protobuf:"bytes,2,opt,name=message_class_extension,json=messageClassExtension,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*UlCCch1MessageType_C1) isUlCCch1MessageType_UlCcch1MessageType() {}

func (*UlCCch1MessageType_MessageClassExtension) isUlCCch1MessageType_UlCcch1MessageType() {}

// sequence from nr-rrc-definitions.asn1:129
// {UL-DCCH-Message}
type UlDCchMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *UlDCchMessageType `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UlDCchMessage) Reset() {
	*x = UlDCchMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UlDCchMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UlDCchMessage) ProtoMessage() {}

func (x *UlDCchMessage) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UlDCchMessage.ProtoReflect.Descriptor instead.
func (*UlDCchMessage) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{23}
}

func (x *UlDCchMessage) GetMessage() *UlDCchMessageType {
	if x != nil {
		return x.Message
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:133
// {c1UL-DCCH-MessageType}
type C1UlDCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:133
	//
	// Types that are assignable to C1UlDcchMessageType:
	//	*C1UlDCchMessageType_MeasurementReport
	//	*C1UlDCchMessageType_RrcReconfigurationComplete
	//	*C1UlDCchMessageType_RrcSetupComplete
	//	*C1UlDCchMessageType_RrcReestablishmentComplete
	//	*C1UlDCchMessageType_RrcResumeComplete
	//	*C1UlDCchMessageType_SecurityModeComplete
	//	*C1UlDCchMessageType_SecurityModeFailure
	//	*C1UlDCchMessageType_UlInformationTransfer
	//	*C1UlDCchMessageType_LocationMeasurementIndication
	//	*C1UlDCchMessageType_UeCapabilityInformation
	//	*C1UlDCchMessageType_CounterCheckResponse
	//	*C1UlDCchMessageType_UeAssistanceInformation
	//	*C1UlDCchMessageType_FailureInformation
	//	*C1UlDCchMessageType_UlInformationTransferMrdc
	//	*C1UlDCchMessageType_ScgFailureInformation
	//	*C1UlDCchMessageType_ScgFailureInformationEutra
	C1UlDcchMessageType isC1UlDCchMessageType_C1UlDcchMessageType `protobuf_oneof:"c1_ul_dcch_message_type"`
}

func (x *C1UlDCchMessageType) Reset() {
	*x = C1UlDCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C1UlDCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C1UlDCchMessageType) ProtoMessage() {}

func (x *C1UlDCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C1UlDCchMessageType.ProtoReflect.Descriptor instead.
func (*C1UlDCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{24}
}

func (m *C1UlDCchMessageType) GetC1UlDcchMessageType() isC1UlDCchMessageType_C1UlDcchMessageType {
	if m != nil {
		return m.C1UlDcchMessageType
	}
	return nil
}

func (x *C1UlDCchMessageType) GetMeasurementReport() *MeasurementReport {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_MeasurementReport); ok {
		return x.MeasurementReport
	}
	return nil
}

func (x *C1UlDCchMessageType) GetRrcReconfigurationComplete() *RrcreconfigurationComplete {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_RrcReconfigurationComplete); ok {
		return x.RrcReconfigurationComplete
	}
	return nil
}

func (x *C1UlDCchMessageType) GetRrcSetupComplete() *RrcsetupComplete {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_RrcSetupComplete); ok {
		return x.RrcSetupComplete
	}
	return nil
}

func (x *C1UlDCchMessageType) GetRrcReestablishmentComplete() *RrcreestablishmentComplete {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_RrcReestablishmentComplete); ok {
		return x.RrcReestablishmentComplete
	}
	return nil
}

func (x *C1UlDCchMessageType) GetRrcResumeComplete() *RrcresumeComplete {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_RrcResumeComplete); ok {
		return x.RrcResumeComplete
	}
	return nil
}

func (x *C1UlDCchMessageType) GetSecurityModeComplete() *SecurityModeComplete {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_SecurityModeComplete); ok {
		return x.SecurityModeComplete
	}
	return nil
}

func (x *C1UlDCchMessageType) GetSecurityModeFailure() *SecurityModeFailure {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_SecurityModeFailure); ok {
		return x.SecurityModeFailure
	}
	return nil
}

func (x *C1UlDCchMessageType) GetUlInformationTransfer() *UlinformationTransfer {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_UlInformationTransfer); ok {
		return x.UlInformationTransfer
	}
	return nil
}

func (x *C1UlDCchMessageType) GetLocationMeasurementIndication() *LocationMeasurementIndication {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_LocationMeasurementIndication); ok {
		return x.LocationMeasurementIndication
	}
	return nil
}

func (x *C1UlDCchMessageType) GetUeCapabilityInformation() *UecapabilityInformation {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_UeCapabilityInformation); ok {
		return x.UeCapabilityInformation
	}
	return nil
}

func (x *C1UlDCchMessageType) GetCounterCheckResponse() *CounterCheckResponse {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_CounterCheckResponse); ok {
		return x.CounterCheckResponse
	}
	return nil
}

func (x *C1UlDCchMessageType) GetUeAssistanceInformation() *UeassistanceInformation {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_UeAssistanceInformation); ok {
		return x.UeAssistanceInformation
	}
	return nil
}

func (x *C1UlDCchMessageType) GetFailureInformation() *FailureInformation {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_FailureInformation); ok {
		return x.FailureInformation
	}
	return nil
}

func (x *C1UlDCchMessageType) GetUlInformationTransferMrdc() *UlinformationTransferMrdc {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_UlInformationTransferMrdc); ok {
		return x.UlInformationTransferMrdc
	}
	return nil
}

func (x *C1UlDCchMessageType) GetScgFailureInformation() *ScgfailureInformation {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_ScgFailureInformation); ok {
		return x.ScgFailureInformation
	}
	return nil
}

func (x *C1UlDCchMessageType) GetScgFailureInformationEutra() *ScgfailureInformationEutra {
	if x, ok := x.GetC1UlDcchMessageType().(*C1UlDCchMessageType_ScgFailureInformationEutra); ok {
		return x.ScgFailureInformationEutra
	}
	return nil
}

type isC1UlDCchMessageType_C1UlDcchMessageType interface {
	isC1UlDCchMessageType_C1UlDcchMessageType()
}

type C1UlDCchMessageType_MeasurementReport struct {
	// @inject_tag: aper:"choiceIdx:1,"
	MeasurementReport *MeasurementReport `protobuf:"bytes,1,opt,name=measurement_report,json=measurementReport,proto3,oneof" aper:"choiceIdx:1,"`
}

type C1UlDCchMessageType_RrcReconfigurationComplete struct {
	// @inject_tag: aper:"choiceIdx:2,"
	RrcReconfigurationComplete *RrcreconfigurationComplete `protobuf:"bytes,2,opt,name=rrc_reconfiguration_complete,json=rrcReconfigurationComplete,proto3,oneof" aper:"choiceIdx:2,"`
}

type C1UlDCchMessageType_RrcSetupComplete struct {
	// @inject_tag: aper:"choiceIdx:3,"
	RrcSetupComplete *RrcsetupComplete `protobuf:"bytes,3,opt,name=rrc_setup_complete,json=rrcSetupComplete,proto3,oneof" aper:"choiceIdx:3,"`
}

type C1UlDCchMessageType_RrcReestablishmentComplete struct {
	// @inject_tag: aper:"choiceIdx:4,"
	RrcReestablishmentComplete *RrcreestablishmentComplete `protobuf:"bytes,4,opt,name=rrc_reestablishment_complete,json=rrcReestablishmentComplete,proto3,oneof" aper:"choiceIdx:4,"`
}

type C1UlDCchMessageType_RrcResumeComplete struct {
	// @inject_tag: aper:"choiceIdx:5,"
	RrcResumeComplete *RrcresumeComplete `protobuf:"bytes,5,opt,name=rrc_resume_complete,json=rrcResumeComplete,proto3,oneof" aper:"choiceIdx:5,"`
}

type C1UlDCchMessageType_SecurityModeComplete struct {
	// @inject_tag: aper:"choiceIdx:6,"
	SecurityModeComplete *SecurityModeComplete `protobuf:"bytes,6,opt,name=security_mode_complete,json=securityModeComplete,proto3,oneof" aper:"choiceIdx:6,"`
}

type C1UlDCchMessageType_SecurityModeFailure struct {
	// @inject_tag: aper:"choiceIdx:7,"
	SecurityModeFailure *SecurityModeFailure `protobuf:"bytes,7,opt,name=security_mode_failure,json=securityModeFailure,proto3,oneof" aper:"choiceIdx:7,"`
}

type C1UlDCchMessageType_UlInformationTransfer struct {
	// @inject_tag: aper:"choiceIdx:8,"
	UlInformationTransfer *UlinformationTransfer `protobuf:"bytes,8,opt,name=ul_information_transfer,json=ulInformationTransfer,proto3,oneof" aper:"choiceIdx:8,"`
}

type C1UlDCchMessageType_LocationMeasurementIndication struct {
	// @inject_tag: aper:"choiceIdx:9,"
	LocationMeasurementIndication *LocationMeasurementIndication `protobuf:"bytes,9,opt,name=location_measurement_indication,json=locationMeasurementIndication,proto3,oneof" aper:"choiceIdx:9,"`
}

type C1UlDCchMessageType_UeCapabilityInformation struct {
	// @inject_tag: aper:"choiceIdx:10,"
	UeCapabilityInformation *UecapabilityInformation `protobuf:"bytes,10,opt,name=ue_capability_information,json=ueCapabilityInformation,proto3,oneof" aper:"choiceIdx:10,"`
}

type C1UlDCchMessageType_CounterCheckResponse struct {
	// @inject_tag: aper:"choiceIdx:11,"
	CounterCheckResponse *CounterCheckResponse `protobuf:"bytes,11,opt,name=counter_check_response,json=counterCheckResponse,proto3,oneof" aper:"choiceIdx:11,"`
}

type C1UlDCchMessageType_UeAssistanceInformation struct {
	// @inject_tag: aper:"choiceIdx:12,"
	UeAssistanceInformation *UeassistanceInformation `protobuf:"bytes,12,opt,name=ue_assistance_information,json=ueAssistanceInformation,proto3,oneof" aper:"choiceIdx:12,"`
}

type C1UlDCchMessageType_FailureInformation struct {
	// @inject_tag: aper:"choiceIdx:13,"
	FailureInformation *FailureInformation `protobuf:"bytes,13,opt,name=failure_information,json=failureInformation,proto3,oneof" aper:"choiceIdx:13,"`
}

type C1UlDCchMessageType_UlInformationTransferMrdc struct {
	// @inject_tag: aper:"choiceIdx:14,"
	UlInformationTransferMrdc *UlinformationTransferMrdc `protobuf:"bytes,14,opt,name=ul_information_transfer_mrdc,json=ulInformationTransferMRDC,proto3,oneof" aper:"choiceIdx:14,"`
}

type C1UlDCchMessageType_ScgFailureInformation struct {
	// @inject_tag: aper:"choiceIdx:15,"
	ScgFailureInformation *ScgfailureInformation `protobuf:"bytes,15,opt,name=scg_failure_information,json=scgFailureInformation,proto3,oneof" aper:"choiceIdx:15,"`
}

type C1UlDCchMessageType_ScgFailureInformationEutra struct {
	// @inject_tag: aper:"choiceIdx:16,"
	ScgFailureInformationEutra *ScgfailureInformationEutra `protobuf:"bytes,16,opt,name=scg_failure_information_eutra,json=scgFailureInformationEUTRA,proto3,oneof" aper:"choiceIdx:16,"`
}

func (*C1UlDCchMessageType_MeasurementReport) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_RrcReconfigurationComplete) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_RrcSetupComplete) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_RrcReestablishmentComplete) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_RrcResumeComplete) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_SecurityModeComplete) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_SecurityModeFailure) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_UlInformationTransfer) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_LocationMeasurementIndication) isC1UlDCchMessageType_C1UlDcchMessageType() {
}

func (*C1UlDCchMessageType_UeCapabilityInformation) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_CounterCheckResponse) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_UeAssistanceInformation) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_FailureInformation) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_UlInformationTransferMrdc) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_ScgFailureInformation) isC1UlDCchMessageType_C1UlDcchMessageType() {}

func (*C1UlDCchMessageType_ScgFailureInformationEutra) isC1UlDCchMessageType_C1UlDcchMessageType() {}

// choice from nr-rrc-definitions.asn1:152
// {c2messageClassExtension}
type C2MessageClassExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:152
	//
	// Types that are assignable to C2MessageClassExtension:
	//	*C2MessageClassExtension_UlDedicatedMessageSegmentR16
	//	*C2MessageClassExtension_DedicatedSibrequestR16
	//	*C2MessageClassExtension_McgFailureInformationR16
	//	*C2MessageClassExtension_UeInformationResponseR16
	//	*C2MessageClassExtension_SidelinkUeinformationNrR16
	//	*C2MessageClassExtension_UlInformationTransferIratR16
	//	*C2MessageClassExtension_IabOtherInformationR16
	//	*C2MessageClassExtension_MbsInterestIndicationR17
	//	*C2MessageClassExtension_UePositioningAssistanceInfoR17
	//	*C2MessageClassExtension_MeasurementReportAppLayerR17
	//	*C2MessageClassExtension_Spare6
	//	*C2MessageClassExtension_Spare5
	//	*C2MessageClassExtension_Spare4
	//	*C2MessageClassExtension_Spare3
	//	*C2MessageClassExtension_Spare2
	//	*C2MessageClassExtension_Spare1
	C2MessageClassExtension isC2MessageClassExtension_C2MessageClassExtension `protobuf_oneof:"c2message_class_extension"`
}

func (x *C2MessageClassExtension) Reset() {
	*x = C2MessageClassExtension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2MessageClassExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2MessageClassExtension) ProtoMessage() {}

func (x *C2MessageClassExtension) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2MessageClassExtension.ProtoReflect.Descriptor instead.
func (*C2MessageClassExtension) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{25}
}

func (m *C2MessageClassExtension) GetC2MessageClassExtension() isC2MessageClassExtension_C2MessageClassExtension {
	if m != nil {
		return m.C2MessageClassExtension
	}
	return nil
}

func (x *C2MessageClassExtension) GetUlDedicatedMessageSegmentR16() *UldedicatedMessageSegmentr16 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_UlDedicatedMessageSegmentR16); ok {
		return x.UlDedicatedMessageSegmentR16
	}
	return nil
}

func (x *C2MessageClassExtension) GetDedicatedSibrequestR16() *DedicatedSibrequestr16 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_DedicatedSibrequestR16); ok {
		return x.DedicatedSibrequestR16
	}
	return nil
}

func (x *C2MessageClassExtension) GetMcgFailureInformationR16() *McgfailureInformationr16 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_McgFailureInformationR16); ok {
		return x.McgFailureInformationR16
	}
	return nil
}

func (x *C2MessageClassExtension) GetUeInformationResponseR16() *UeinformationResponser16 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_UeInformationResponseR16); ok {
		return x.UeInformationResponseR16
	}
	return nil
}

func (x *C2MessageClassExtension) GetSidelinkUeinformationNrR16() *SidelinkUeinformationNrr16 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_SidelinkUeinformationNrR16); ok {
		return x.SidelinkUeinformationNrR16
	}
	return nil
}

func (x *C2MessageClassExtension) GetUlInformationTransferIratR16() *UlinformationTransferIratr16 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_UlInformationTransferIratR16); ok {
		return x.UlInformationTransferIratR16
	}
	return nil
}

func (x *C2MessageClassExtension) GetIabOtherInformationR16() *IabotherInformationr16 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_IabOtherInformationR16); ok {
		return x.IabOtherInformationR16
	}
	return nil
}

func (x *C2MessageClassExtension) GetMbsInterestIndicationR17() *MbsinterestIndicationr17 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_MbsInterestIndicationR17); ok {
		return x.MbsInterestIndicationR17
	}
	return nil
}

func (x *C2MessageClassExtension) GetUePositioningAssistanceInfoR17() *UepositioningAssistanceInfor17 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_UePositioningAssistanceInfoR17); ok {
		return x.UePositioningAssistanceInfoR17
	}
	return nil
}

func (x *C2MessageClassExtension) GetMeasurementReportAppLayerR17() *MeasurementReportAppLayerr17 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_MeasurementReportAppLayerR17); ok {
		return x.MeasurementReportAppLayerR17
	}
	return nil
}

func (x *C2MessageClassExtension) GetSpare6() int32 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_Spare6); ok {
		return x.Spare6
	}
	return 0
}

func (x *C2MessageClassExtension) GetSpare5() int32 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_Spare5); ok {
		return x.Spare5
	}
	return 0
}

func (x *C2MessageClassExtension) GetSpare4() int32 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_Spare4); ok {
		return x.Spare4
	}
	return 0
}

func (x *C2MessageClassExtension) GetSpare3() int32 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_Spare3); ok {
		return x.Spare3
	}
	return 0
}

func (x *C2MessageClassExtension) GetSpare2() int32 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_Spare2); ok {
		return x.Spare2
	}
	return 0
}

func (x *C2MessageClassExtension) GetSpare1() int32 {
	if x, ok := x.GetC2MessageClassExtension().(*C2MessageClassExtension_Spare1); ok {
		return x.Spare1
	}
	return 0
}

type isC2MessageClassExtension_C2MessageClassExtension interface {
	isC2MessageClassExtension_C2MessageClassExtension()
}

type C2MessageClassExtension_UlDedicatedMessageSegmentR16 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	UlDedicatedMessageSegmentR16 *UldedicatedMessageSegmentr16 `protobuf:"bytes,1,opt,name=ul_dedicated_message_segment_r16,json=ulDedicatedMessageSegment-r16,proto3,oneof" aper:"choiceIdx:1,"`
}

type C2MessageClassExtension_DedicatedSibrequestR16 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	DedicatedSibrequestR16 *DedicatedSibrequestr16 `protobuf:"bytes,2,opt,name=dedicated_sibrequest_r16,json=dedicatedSIBRequest-r16,proto3,oneof" aper:"choiceIdx:2,"`
}

type C2MessageClassExtension_McgFailureInformationR16 struct {
	// @inject_tag: aper:"choiceIdx:3,"
	McgFailureInformationR16 *McgfailureInformationr16 `protobuf:"bytes,3,opt,name=mcg_failure_information_r16,json=mcgFailureInformation-r16,proto3,oneof" aper:"choiceIdx:3,"`
}

type C2MessageClassExtension_UeInformationResponseR16 struct {
	// @inject_tag: aper:"choiceIdx:4,"
	UeInformationResponseR16 *UeinformationResponser16 `protobuf:"bytes,4,opt,name=ue_information_response_r16,json=ueInformationResponse-r16,proto3,oneof" aper:"choiceIdx:4,"`
}

type C2MessageClassExtension_SidelinkUeinformationNrR16 struct {
	// @inject_tag: aper:"choiceIdx:5,"
	SidelinkUeinformationNrR16 *SidelinkUeinformationNrr16 `protobuf:"bytes,5,opt,name=sidelink_ueinformation_nr_r16,json=sidelinkUEInformationNR-r16,proto3,oneof" aper:"choiceIdx:5,"`
}

type C2MessageClassExtension_UlInformationTransferIratR16 struct {
	// @inject_tag: aper:"choiceIdx:6,"
	UlInformationTransferIratR16 *UlinformationTransferIratr16 `protobuf:"bytes,6,opt,name=ul_information_transfer_irat_r16,json=ulInformationTransferIRAT-r16,proto3,oneof" aper:"choiceIdx:6,"`
}

type C2MessageClassExtension_IabOtherInformationR16 struct {
	// @inject_tag: aper:"choiceIdx:7,"
	IabOtherInformationR16 *IabotherInformationr16 `protobuf:"bytes,7,opt,name=iab_other_information_r16,json=iabOtherInformation-r16,proto3,oneof" aper:"choiceIdx:7,"`
}

type C2MessageClassExtension_MbsInterestIndicationR17 struct {
	// @inject_tag: aper:"choiceIdx:8,"
	MbsInterestIndicationR17 *MbsinterestIndicationr17 `protobuf:"bytes,8,opt,name=mbs_interest_indication_r17,json=mbsInterestIndication-r17,proto3,oneof" aper:"choiceIdx:8,"`
}

type C2MessageClassExtension_UePositioningAssistanceInfoR17 struct {
	// @inject_tag: aper:"choiceIdx:9,"
	UePositioningAssistanceInfoR17 *UepositioningAssistanceInfor17 `protobuf:"bytes,9,opt,name=ue_positioning_assistance_info_r17,json=uePositioningAssistanceInfo-r17,proto3,oneof" aper:"choiceIdx:9,"`
}

type C2MessageClassExtension_MeasurementReportAppLayerR17 struct {
	// @inject_tag: aper:"choiceIdx:10,"
	MeasurementReportAppLayerR17 *MeasurementReportAppLayerr17 `protobuf:"bytes,10,opt,name=measurement_report_app_layer_r17,json=measurementReportAppLayer-r17,proto3,oneof" aper:"choiceIdx:10,"`
}

type C2MessageClassExtension_Spare6 struct {
	// @inject_tag: aper:"choiceIdx:11,"
	Spare6 int32 `protobuf:"varint,11,opt,name=spare6,proto3,oneof" aper:"choiceIdx:11,"`
}

type C2MessageClassExtension_Spare5 struct {
	// @inject_tag: aper:"choiceIdx:12,"
	Spare5 int32 `protobuf:"varint,12,opt,name=spare5,proto3,oneof" aper:"choiceIdx:12,"`
}

type C2MessageClassExtension_Spare4 struct {
	// @inject_tag: aper:"choiceIdx:13,"
	Spare4 int32 `protobuf:"varint,13,opt,name=spare4,proto3,oneof" aper:"choiceIdx:13,"`
}

type C2MessageClassExtension_Spare3 struct {
	// @inject_tag: aper:"choiceIdx:14,"
	Spare3 int32 `protobuf:"varint,14,opt,name=spare3,proto3,oneof" aper:"choiceIdx:14,"`
}

type C2MessageClassExtension_Spare2 struct {
	// @inject_tag: aper:"choiceIdx:15,"
	Spare2 int32 `protobuf:"varint,15,opt,name=spare2,proto3,oneof" aper:"choiceIdx:15,"`
}

type C2MessageClassExtension_Spare1 struct {
	// @inject_tag: aper:"choiceIdx:16,"
	Spare1 int32 `protobuf:"varint,16,opt,name=spare1,proto3,oneof" aper:"choiceIdx:16,"`
}

func (*C2MessageClassExtension_UlDedicatedMessageSegmentR16) isC2MessageClassExtension_C2MessageClassExtension() {
}

func (*C2MessageClassExtension_DedicatedSibrequestR16) isC2MessageClassExtension_C2MessageClassExtension() {
}

func (*C2MessageClassExtension_McgFailureInformationR16) isC2MessageClassExtension_C2MessageClassExtension() {
}

func (*C2MessageClassExtension_UeInformationResponseR16) isC2MessageClassExtension_C2MessageClassExtension() {
}

func (*C2MessageClassExtension_SidelinkUeinformationNrR16) isC2MessageClassExtension_C2MessageClassExtension() {
}

func (*C2MessageClassExtension_UlInformationTransferIratR16) isC2MessageClassExtension_C2MessageClassExtension() {
}

func (*C2MessageClassExtension_IabOtherInformationR16) isC2MessageClassExtension_C2MessageClassExtension() {
}

func (*C2MessageClassExtension_MbsInterestIndicationR17) isC2MessageClassExtension_C2MessageClassExtension() {
}

func (*C2MessageClassExtension_UePositioningAssistanceInfoR17) isC2MessageClassExtension_C2MessageClassExtension() {
}

func (*C2MessageClassExtension_MeasurementReportAppLayerR17) isC2MessageClassExtension_C2MessageClassExtension() {
}

func (*C2MessageClassExtension_Spare6) isC2MessageClassExtension_C2MessageClassExtension() {}

func (*C2MessageClassExtension_Spare5) isC2MessageClassExtension_C2MessageClassExtension() {}

func (*C2MessageClassExtension_Spare4) isC2MessageClassExtension_C2MessageClassExtension() {}

func (*C2MessageClassExtension_Spare3) isC2MessageClassExtension_C2MessageClassExtension() {}

func (*C2MessageClassExtension_Spare2) isC2MessageClassExtension_C2MessageClassExtension() {}

func (*C2MessageClassExtension_Spare1) isC2MessageClassExtension_C2MessageClassExtension() {}

// sequence from nr-rrc-definitions.asn1:164
// {messageClassExtensionFuture-r16messageClassExtension}
type MessageClassExtensionFuturer16MessageClassExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageClassExtensionFuturer16MessageClassExtension) Reset() {
	*x = MessageClassExtensionFuturer16MessageClassExtension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageClassExtensionFuturer16MessageClassExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageClassExtensionFuturer16MessageClassExtension) ProtoMessage() {}

func (x *MessageClassExtensionFuturer16MessageClassExtension) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageClassExtensionFuturer16MessageClassExtension.ProtoReflect.Descriptor instead.
func (*MessageClassExtensionFuturer16MessageClassExtension) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{26}
}

// choice from nr-rrc-definitions.asn1:163
// {messageClassExtensionUL-DCCH-MessageType}
type MessageClassExtensionUlDCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:163
	//
	// Types that are assignable to MessageClassExtensionUlDcchMessageType:
	//	*MessageClassExtensionUlDCchMessageType_C2
	//	*MessageClassExtensionUlDCchMessageType_MessageClassExtensionFutureR16
	MessageClassExtensionUlDcchMessageType isMessageClassExtensionUlDCchMessageType_MessageClassExtensionUlDcchMessageType `protobuf_oneof:"message_class_extension_ul_dcch_message_type"`
}

func (x *MessageClassExtensionUlDCchMessageType) Reset() {
	*x = MessageClassExtensionUlDCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageClassExtensionUlDCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageClassExtensionUlDCchMessageType) ProtoMessage() {}

func (x *MessageClassExtensionUlDCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageClassExtensionUlDCchMessageType.ProtoReflect.Descriptor instead.
func (*MessageClassExtensionUlDCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{27}
}

func (m *MessageClassExtensionUlDCchMessageType) GetMessageClassExtensionUlDcchMessageType() isMessageClassExtensionUlDCchMessageType_MessageClassExtensionUlDcchMessageType {
	if m != nil {
		return m.MessageClassExtensionUlDcchMessageType
	}
	return nil
}

func (x *MessageClassExtensionUlDCchMessageType) GetC2() *C2MessageClassExtension {
	if x, ok := x.GetMessageClassExtensionUlDcchMessageType().(*MessageClassExtensionUlDCchMessageType_C2); ok {
		return x.C2
	}
	return nil
}

func (x *MessageClassExtensionUlDCchMessageType) GetMessageClassExtensionFutureR16() *MessageClassExtensionFuturer16MessageClassExtension {
	if x, ok := x.GetMessageClassExtensionUlDcchMessageType().(*MessageClassExtensionUlDCchMessageType_MessageClassExtensionFutureR16); ok {
		return x.MessageClassExtensionFutureR16
	}
	return nil
}

type isMessageClassExtensionUlDCchMessageType_MessageClassExtensionUlDcchMessageType interface {
	isMessageClassExtensionUlDCchMessageType_MessageClassExtensionUlDcchMessageType()
}

type MessageClassExtensionUlDCchMessageType_C2 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	C2 *C2MessageClassExtension `protobuf:"bytes,1,opt,name=c2,proto3,oneof" aper:"choiceIdx:1,"`
}

type MessageClassExtensionUlDCchMessageType_MessageClassExtensionFutureR16 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MessageClassExtensionFutureR16 *MessageClassExtensionFuturer16MessageClassExtension `protobuf:"bytes,2,opt,name=message_class_extension_future_r16,json=messageClassExtensionFuture-r16,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*MessageClassExtensionUlDCchMessageType_C2) isMessageClassExtensionUlDCchMessageType_MessageClassExtensionUlDcchMessageType() {
}

func (*MessageClassExtensionUlDCchMessageType_MessageClassExtensionFutureR16) isMessageClassExtensionUlDCchMessageType_MessageClassExtensionUlDcchMessageType() {
}

// sequence from nr-rrc-definitions.asn1:149
// {UL-DCCH-MessageType}
type UlDCchMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:149
	//
	// Types that are assignable to UlDcchMessageType:
	//	*UlDCchMessageType_C1
	//	*UlDCchMessageType_MessageClassExtension
	UlDcchMessageType isUlDCchMessageType_UlDcchMessageType `protobuf_oneof:"ul_dcch_message_type"`
}

func (x *UlDCchMessageType) Reset() {
	*x = UlDCchMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UlDCchMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UlDCchMessageType) ProtoMessage() {}

func (x *UlDCchMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UlDCchMessageType.ProtoReflect.Descriptor instead.
func (*UlDCchMessageType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{28}
}

func (m *UlDCchMessageType) GetUlDcchMessageType() isUlDCchMessageType_UlDcchMessageType {
	if m != nil {
		return m.UlDcchMessageType
	}
	return nil
}

func (x *UlDCchMessageType) GetC1() *C1UlDCchMessageType {
	if x, ok := x.GetUlDcchMessageType().(*UlDCchMessageType_C1); ok {
		return x.C1
	}
	return nil
}

func (x *UlDCchMessageType) GetMessageClassExtension() *MessageClassExtensionUlDCchMessageType {
	if x, ok := x.GetUlDcchMessageType().(*UlDCchMessageType_MessageClassExtension); ok {
		return x.MessageClassExtension
	}
	return nil
}

type isUlDCchMessageType_UlDcchMessageType interface {
	isUlDCchMessageType_UlDcchMessageType()
}

type UlDCchMessageType_C1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	C1 *C1UlDCchMessageType `protobuf:"bytes,1,opt,name=c1,proto3,oneof" aper:"choiceIdx:1,"`
}

type UlDCchMessageType_MessageClassExtension struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MessageClassExtension *MessageClassExtensionUlDCchMessageType `protobuf:"bytes,2,opt,name=message_class_extension,json=messageClassExtension,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*UlDCchMessageType_C1) isUlDCchMessageType_UlDcchMessageType() {}

func (*UlDCchMessageType_MessageClassExtension) isUlDCchMessageType_UlDcchMessageType() {}

// sequence from nr-rrc-definitions.asn1:173
// {CounterCheck}
type CounterCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CounterCheck) Reset() {
	*x = CounterCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CounterCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterCheck) ProtoMessage() {}

func (x *CounterCheck) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterCheck.ProtoReflect.Descriptor instead.
func (*CounterCheck) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{29}
}

// sequence from nr-rrc-definitions.asn1:179
// {CounterCheckResponse}
type CounterCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CounterCheckResponse) Reset() {
	*x = CounterCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CounterCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterCheckResponse) ProtoMessage() {}

func (x *CounterCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterCheckResponse.ProtoReflect.Descriptor instead.
func (*CounterCheckResponse) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{30}
}

// sequence from nr-rrc-definitions.asn1:185
// {DedicatedSIBRequest-r16}
type DedicatedSibrequestr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DedicatedSibrequestr16) Reset() {
	*x = DedicatedSibrequestr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DedicatedSibrequestr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DedicatedSibrequestr16) ProtoMessage() {}

func (x *DedicatedSibrequestr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DedicatedSibrequestr16.ProtoReflect.Descriptor instead.
func (*DedicatedSibrequestr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{31}
}

// sequence from nr-rrc-definitions.asn1:192
// {DLDedicatedMessageSegment-r16}
type DldedicatedMessageSegmentr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DldedicatedMessageSegmentr16) Reset() {
	*x = DldedicatedMessageSegmentr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DldedicatedMessageSegmentr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DldedicatedMessageSegmentr16) ProtoMessage() {}

func (x *DldedicatedMessageSegmentr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DldedicatedMessageSegmentr16.ProtoReflect.Descriptor instead.
func (*DldedicatedMessageSegmentr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{32}
}

// sequence from nr-rrc-definitions.asn1:198
// {DLInformationTransfer}
type DlinformationTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DlinformationTransfer) Reset() {
	*x = DlinformationTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DlinformationTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DlinformationTransfer) ProtoMessage() {}

func (x *DlinformationTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DlinformationTransfer.ProtoReflect.Descriptor instead.
func (*DlinformationTransfer) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{33}
}

// sequence from nr-rrc-definitions.asn1:204
// {DLInformationTransferMRDC-r16}
type DlinformationTransferMrdcr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DlinformationTransferMrdcr16) Reset() {
	*x = DlinformationTransferMrdcr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DlinformationTransferMrdcr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DlinformationTransferMrdcr16) ProtoMessage() {}

func (x *DlinformationTransferMrdcr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DlinformationTransferMrdcr16.ProtoReflect.Descriptor instead.
func (*DlinformationTransferMrdcr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{34}
}

// sequence from nr-rrc-definitions.asn1:210
// {FailureInformation}
type FailureInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FailureInformation) Reset() {
	*x = FailureInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FailureInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailureInformation) ProtoMessage() {}

func (x *FailureInformation) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailureInformation.ProtoReflect.Descriptor instead.
func (*FailureInformation) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{35}
}

// sequence from nr-rrc-definitions.asn1:216
// {IABOtherInformation-r16}
type IabotherInformationr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IabotherInformationr16) Reset() {
	*x = IabotherInformationr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IabotherInformationr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IabotherInformationr16) ProtoMessage() {}

func (x *IabotherInformationr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IabotherInformationr16.ProtoReflect.Descriptor instead.
func (*IabotherInformationr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{36}
}

// sequence from nr-rrc-definitions.asn1:222
// {LocationMeasurementIndication}
type LocationMeasurementIndication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocationMeasurementIndication) Reset() {
	*x = LocationMeasurementIndication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationMeasurementIndication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationMeasurementIndication) ProtoMessage() {}

func (x *LocationMeasurementIndication) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationMeasurementIndication.ProtoReflect.Descriptor instead.
func (*LocationMeasurementIndication) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{37}
}

// sequence from nr-rrc-definitions.asn1:228
// {LoggedMeasurementConfiguration-r16}
type LoggedMeasurementConfigurationr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoggedMeasurementConfigurationr16) Reset() {
	*x = LoggedMeasurementConfigurationr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggedMeasurementConfigurationr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggedMeasurementConfigurationr16) ProtoMessage() {}

func (x *LoggedMeasurementConfigurationr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggedMeasurementConfigurationr16.ProtoReflect.Descriptor instead.
func (*LoggedMeasurementConfigurationr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{38}
}

// sequence from nr-rrc-definitions.asn1:233
// {MBSInterestIndication-r17}
type MbsinterestIndicationr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MbsinterestIndicationr17) Reset() {
	*x = MbsinterestIndicationr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MbsinterestIndicationr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MbsinterestIndicationr17) ProtoMessage() {}

func (x *MbsinterestIndicationr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MbsinterestIndicationr17.ProtoReflect.Descriptor instead.
func (*MbsinterestIndicationr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{39}
}

// sequence from nr-rrc-definitions.asn1:239
// {MCGFailureInformation-r16}
type McgfailureInformationr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *McgfailureInformationr16) Reset() {
	*x = McgfailureInformationr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *McgfailureInformationr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McgfailureInformationr16) ProtoMessage() {}

func (x *McgfailureInformationr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McgfailureInformationr16.ProtoReflect.Descriptor instead.
func (*McgfailureInformationr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{40}
}

// sequence from nr-rrc-definitions.asn1:247
// {criticalExtensionsFuturecriticalExtensions}
type CriticalExtensionsFuturecriticalExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CriticalExtensionsFuturecriticalExtensions) Reset() {
	*x = CriticalExtensionsFuturecriticalExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriticalExtensionsFuturecriticalExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriticalExtensionsFuturecriticalExtensions) ProtoMessage() {}

func (x *CriticalExtensionsFuturecriticalExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriticalExtensionsFuturecriticalExtensions.ProtoReflect.Descriptor instead.
func (*CriticalExtensionsFuturecriticalExtensions) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{41}
}

// choice from nr-rrc-definitions.asn1:246
// {criticalExtensionsMeasurementReport}
type CriticalExtensionsMeasurementReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:246
	//
	// Types that are assignable to CriticalExtensionsMeasurementReport:
	//	*CriticalExtensionsMeasurementReport_MeasurementReport
	//	*CriticalExtensionsMeasurementReport_CriticalExtensionsFuture
	CriticalExtensionsMeasurementReport isCriticalExtensionsMeasurementReport_CriticalExtensionsMeasurementReport `protobuf_oneof:"critical_extensions_measurement_report"`
}

func (x *CriticalExtensionsMeasurementReport) Reset() {
	*x = CriticalExtensionsMeasurementReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriticalExtensionsMeasurementReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriticalExtensionsMeasurementReport) ProtoMessage() {}

func (x *CriticalExtensionsMeasurementReport) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriticalExtensionsMeasurementReport.ProtoReflect.Descriptor instead.
func (*CriticalExtensionsMeasurementReport) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{42}
}

func (m *CriticalExtensionsMeasurementReport) GetCriticalExtensionsMeasurementReport() isCriticalExtensionsMeasurementReport_CriticalExtensionsMeasurementReport {
	if m != nil {
		return m.CriticalExtensionsMeasurementReport
	}
	return nil
}

func (x *CriticalExtensionsMeasurementReport) GetMeasurementReport() *MeasurementReportIEs {
	if x, ok := x.GetCriticalExtensionsMeasurementReport().(*CriticalExtensionsMeasurementReport_MeasurementReport); ok {
		return x.MeasurementReport
	}
	return nil
}

func (x *CriticalExtensionsMeasurementReport) GetCriticalExtensionsFuture() *CriticalExtensionsFuturecriticalExtensions {
	if x, ok := x.GetCriticalExtensionsMeasurementReport().(*CriticalExtensionsMeasurementReport_CriticalExtensionsFuture); ok {
		return x.CriticalExtensionsFuture
	}
	return nil
}

type isCriticalExtensionsMeasurementReport_CriticalExtensionsMeasurementReport interface {
	isCriticalExtensionsMeasurementReport_CriticalExtensionsMeasurementReport()
}

type CriticalExtensionsMeasurementReport_MeasurementReport struct {
	// @inject_tag: aper:"choiceIdx:1,"
	MeasurementReport *MeasurementReportIEs `protobuf:"bytes,1,opt,name=measurement_report,json=measurementReport,proto3,oneof" aper:"choiceIdx:1,"`
}

type CriticalExtensionsMeasurementReport_CriticalExtensionsFuture struct {
	// @inject_tag: aper:"choiceIdx:2,"
	CriticalExtensionsFuture *CriticalExtensionsFuturecriticalExtensions `protobuf:"bytes,2,opt,name=critical_extensions_future,json=criticalExtensionsFuture,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*CriticalExtensionsMeasurementReport_MeasurementReport) isCriticalExtensionsMeasurementReport_CriticalExtensionsMeasurementReport() {
}

func (*CriticalExtensionsMeasurementReport_CriticalExtensionsFuture) isCriticalExtensionsMeasurementReport_CriticalExtensionsMeasurementReport() {
}

// sequence from nr-rrc-definitions.asn1:249
// {MeasurementReport}
type MeasurementReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CriticalExtensions *CriticalExtensionsMeasurementReport `protobuf:"bytes,1,opt,name=critical_extensions,json=criticalExtensions,proto3" json:"critical_extensions,omitempty"`
}

func (x *MeasurementReport) Reset() {
	*x = MeasurementReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementReport) ProtoMessage() {}

func (x *MeasurementReport) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementReport.ProtoReflect.Descriptor instead.
func (*MeasurementReport) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{43}
}

func (x *MeasurementReport) GetCriticalExtensions() *CriticalExtensionsMeasurementReport {
	if x != nil {
		return x.CriticalExtensions
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:255
// {nonCriticalExtensionMeasurementReport-IEs}
type NonCriticalExtensionMeasurementReportIEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NonCriticalExtensionMeasurementReportIEs) Reset() {
	*x = NonCriticalExtensionMeasurementReportIEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonCriticalExtensionMeasurementReportIEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonCriticalExtensionMeasurementReportIEs) ProtoMessage() {}

func (x *NonCriticalExtensionMeasurementReportIEs) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonCriticalExtensionMeasurementReportIEs.ProtoReflect.Descriptor instead.
func (*NonCriticalExtensionMeasurementReportIEs) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{44}
}

// sequence from nr-rrc-definitions.asn1:252
// {MeasurementReport-IEs}
type MeasurementReportIEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,"
	MeasResults *MeasResults `protobuf:"bytes,1,opt,name=meas_results,json=measResults,proto3" json:"meas_results,omitempty" aper:"valueExt,"`
	// @inject_tag: aper:"optional,"
	LateNonCriticalExtension []byte `protobuf:"bytes,2,opt,name=late_non_critical_extension,json=lateNonCriticalExtension,proto3,oneof" json:"late_non_critical_extension,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	NonCriticalExtension *NonCriticalExtensionMeasurementReportIEs `protobuf:"bytes,3,opt,name=non_critical_extension,json=nonCriticalExtension,proto3,oneof" json:"non_critical_extension,omitempty" aper:"optional,"`
}

func (x *MeasurementReportIEs) Reset() {
	*x = MeasurementReportIEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementReportIEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementReportIEs) ProtoMessage() {}

func (x *MeasurementReportIEs) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementReportIEs.ProtoReflect.Descriptor instead.
func (*MeasurementReportIEs) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{45}
}

func (x *MeasurementReportIEs) GetMeasResults() *MeasResults {
	if x != nil {
		return x.MeasResults
	}
	return nil
}

func (x *MeasurementReportIEs) GetLateNonCriticalExtension() []byte {
	if x != nil {
		return x.LateNonCriticalExtension
	}
	return nil
}

func (x *MeasurementReportIEs) GetNonCriticalExtension() *NonCriticalExtensionMeasurementReportIEs {
	if x != nil {
		return x.NonCriticalExtension
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:261
// {MeasurementReportAppLayer-r17}
type MeasurementReportAppLayerr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MeasurementReportAppLayerr17) Reset() {
	*x = MeasurementReportAppLayerr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementReportAppLayerr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementReportAppLayerr17) ProtoMessage() {}

func (x *MeasurementReportAppLayerr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementReportAppLayerr17.ProtoReflect.Descriptor instead.
func (*MeasurementReportAppLayerr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{46}
}

// sequence from nr-rrc-definitions.asn1:266
// {MIB}
type Mib struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:6,sizeUB:6,"
	SystemFrameNumber *asn1.BitString `protobuf:"bytes,1,opt,name=system_frame_number,json=systemFrameNumber,proto3" json:"system_frame_number,omitempty" aper:"sizeLB:6,sizeUB:6,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	SubCarrierSpacingCommon SubCarrierSpacingCommonMib `protobuf:"varint,2,opt,name=sub_carrier_spacing_common,json=subCarrierSpacingCommon,proto3,enum=nr_rrc_definitions.v1.SubCarrierSpacingCommonMib" json:"sub_carrier_spacing_common,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"valueLB:0,valueUB:15,"
	SsbSubcarrierOffset int32 `protobuf:"varint,3,opt,name=ssb_subcarrier_offset,json=ssb-SubcarrierOffset,proto3" json:"ssb_subcarrier_offset,omitempty" aper:"valueLB:0,valueUB:15,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	DmrsTypeAPosition DmrsTypeApositionMib `protobuf:"varint,4,opt,name=dmrs_type_a_position,json=dmrs-TypeA-Position,proto3,enum=nr_rrc_definitions.v1.DmrsTypeApositionMib" json:"dmrs_type_a_position,omitempty" aper:"valueLB:0,valueUB:1,"`
	PdcchConfigSib1   *PdcchConfigSib1     `protobuf:"bytes,5,opt,name=pdcch_config_sib1,json=pdcch-ConfigSIB1,proto3" json:"pdcch_config_sib1,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	CellBarred CellBarredMib `protobuf:"varint,6,opt,name=cell_barred,json=cellBarred,proto3,enum=nr_rrc_definitions.v1.CellBarredMib" json:"cell_barred,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	IntraFreqReselection IntraFreqReselectionMib `protobuf:"varint,7,opt,name=intra_freq_reselection,json=intraFreqReselection,proto3,enum=nr_rrc_definitions.v1.IntraFreqReselectionMib" json:"intra_freq_reselection,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"sizeLB:1,sizeUB:1,"
	Spare *asn1.BitString `protobuf:"bytes,8,opt,name=spare,proto3" json:"spare,omitempty" aper:"sizeLB:1,sizeUB:1,"`
}

func (x *Mib) Reset() {
	*x = Mib{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mib) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mib) ProtoMessage() {}

func (x *Mib) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mib.ProtoReflect.Descriptor instead.
func (*Mib) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{47}
}

func (x *Mib) GetSystemFrameNumber() *asn1.BitString {
	if x != nil {
		return x.SystemFrameNumber
	}
	return nil
}

func (x *Mib) GetSubCarrierSpacingCommon() SubCarrierSpacingCommonMib {
	if x != nil {
		return x.SubCarrierSpacingCommon
	}
	return SubCarrierSpacingCommonMib_SUB_CARRIER_SPACING_COMMON_MIB_SCS15OR60
}

func (x *Mib) GetSsbSubcarrierOffset() int32 {
	if x != nil {
		return x.SsbSubcarrierOffset
	}
	return 0
}

func (x *Mib) GetDmrsTypeAPosition() DmrsTypeApositionMib {
	if x != nil {
		return x.DmrsTypeAPosition
	}
	return DmrsTypeApositionMib_DMRS_TYPE_APOSITION_MIB_POS2
}

func (x *Mib) GetPdcchConfigSib1() *PdcchConfigSib1 {
	if x != nil {
		return x.PdcchConfigSib1
	}
	return nil
}

func (x *Mib) GetCellBarred() CellBarredMib {
	if x != nil {
		return x.CellBarred
	}
	return CellBarredMib_CELL_BARRED_MIB_BARRED
}

func (x *Mib) GetIntraFreqReselection() IntraFreqReselectionMib {
	if x != nil {
		return x.IntraFreqReselection
	}
	return IntraFreqReselectionMib_INTRA_FREQ_RESELECTION_MIB_ALLOWED
}

func (x *Mib) GetSpare() *asn1.BitString {
	if x != nil {
		return x.Spare
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:280
// {MobilityFromNRCommand}
type MobilityFromNrcommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MobilityFromNrcommand) Reset() {
	*x = MobilityFromNrcommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobilityFromNrcommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobilityFromNrcommand) ProtoMessage() {}

func (x *MobilityFromNrcommand) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobilityFromNrcommand.ProtoReflect.Descriptor instead.
func (*MobilityFromNrcommand) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{48}
}

// sequence from nr-rrc-definitions.asn1:286
// {RRCReestablishment}
type Rrcreestablishment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Rrcreestablishment) Reset() {
	*x = Rrcreestablishment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rrcreestablishment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rrcreestablishment) ProtoMessage() {}

func (x *Rrcreestablishment) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rrcreestablishment.ProtoReflect.Descriptor instead.
func (*Rrcreestablishment) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{49}
}

// sequence from nr-rrc-definitions.asn1:292
// {RRCReestablishmentComplete}
type RrcreestablishmentComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RrcreestablishmentComplete) Reset() {
	*x = RrcreestablishmentComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcreestablishmentComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcreestablishmentComplete) ProtoMessage() {}

func (x *RrcreestablishmentComplete) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcreestablishmentComplete.ProtoReflect.Descriptor instead.
func (*RrcreestablishmentComplete) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{50}
}

// sequence from nr-rrc-definitions.asn1:299
// {RRCReestablishmentRequest}
type RrcreestablishmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RrcreestablishmentRequest) Reset() {
	*x = RrcreestablishmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcreestablishmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcreestablishmentRequest) ProtoMessage() {}

func (x *RrcreestablishmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcreestablishmentRequest.ProtoReflect.Descriptor instead.
func (*RrcreestablishmentRequest) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{51}
}

// choice from nr-rrc-definitions.asn1:306
// {criticalExtensionsRRCReconfiguration}
type CriticalExtensionsRrcreconfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:306
	//
	// Types that are assignable to CriticalExtensionsRrcreconfiguration:
	//	*CriticalExtensionsRrcreconfiguration_RrcReconfiguration
	//	*CriticalExtensionsRrcreconfiguration_CriticalExtensionsFuture
	CriticalExtensionsRrcreconfiguration isCriticalExtensionsRrcreconfiguration_CriticalExtensionsRrcreconfiguration `protobuf_oneof:"critical_extensions_rrcreconfiguration"`
}

func (x *CriticalExtensionsRrcreconfiguration) Reset() {
	*x = CriticalExtensionsRrcreconfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriticalExtensionsRrcreconfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriticalExtensionsRrcreconfiguration) ProtoMessage() {}

func (x *CriticalExtensionsRrcreconfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriticalExtensionsRrcreconfiguration.ProtoReflect.Descriptor instead.
func (*CriticalExtensionsRrcreconfiguration) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{52}
}

func (m *CriticalExtensionsRrcreconfiguration) GetCriticalExtensionsRrcreconfiguration() isCriticalExtensionsRrcreconfiguration_CriticalExtensionsRrcreconfiguration {
	if m != nil {
		return m.CriticalExtensionsRrcreconfiguration
	}
	return nil
}

func (x *CriticalExtensionsRrcreconfiguration) GetRrcReconfiguration() *RrcreconfigurationIEs {
	if x, ok := x.GetCriticalExtensionsRrcreconfiguration().(*CriticalExtensionsRrcreconfiguration_RrcReconfiguration); ok {
		return x.RrcReconfiguration
	}
	return nil
}

func (x *CriticalExtensionsRrcreconfiguration) GetCriticalExtensionsFuture() *CriticalExtensionsFuturecriticalExtensions {
	if x, ok := x.GetCriticalExtensionsRrcreconfiguration().(*CriticalExtensionsRrcreconfiguration_CriticalExtensionsFuture); ok {
		return x.CriticalExtensionsFuture
	}
	return nil
}

type isCriticalExtensionsRrcreconfiguration_CriticalExtensionsRrcreconfiguration interface {
	isCriticalExtensionsRrcreconfiguration_CriticalExtensionsRrcreconfiguration()
}

type CriticalExtensionsRrcreconfiguration_RrcReconfiguration struct {
	// @inject_tag: aper:"choiceIdx:1,"
	RrcReconfiguration *RrcreconfigurationIEs `protobuf:"bytes,1,opt,name=rrc_reconfiguration,json=rrcReconfiguration,proto3,oneof" aper:"choiceIdx:1,"`
}

type CriticalExtensionsRrcreconfiguration_CriticalExtensionsFuture struct {
	// @inject_tag: aper:"choiceIdx:2,"
	CriticalExtensionsFuture *CriticalExtensionsFuturecriticalExtensions `protobuf:"bytes,2,opt,name=critical_extensions_future,json=criticalExtensionsFuture,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*CriticalExtensionsRrcreconfiguration_RrcReconfiguration) isCriticalExtensionsRrcreconfiguration_CriticalExtensionsRrcreconfiguration() {
}

func (*CriticalExtensionsRrcreconfiguration_CriticalExtensionsFuture) isCriticalExtensionsRrcreconfiguration_CriticalExtensionsRrcreconfiguration() {
}

// sequence from nr-rrc-definitions.asn1:304
// {RRCReconfiguration}
type Rrcreconfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RrcTransactionIdentifier *RrcTransactionIdentifier             `protobuf:"bytes,1,opt,name=rrc_transaction_identifier,json=rrc-TransactionIdentifier,proto3" json:"rrc_transaction_identifier,omitempty"`
	CriticalExtensions       *CriticalExtensionsRrcreconfiguration `protobuf:"bytes,2,opt,name=critical_extensions,json=criticalExtensions,proto3" json:"critical_extensions,omitempty"`
}

func (x *Rrcreconfiguration) Reset() {
	*x = Rrcreconfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rrcreconfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rrcreconfiguration) ProtoMessage() {}

func (x *Rrcreconfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rrcreconfiguration.ProtoReflect.Descriptor instead.
func (*Rrcreconfiguration) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{53}
}

func (x *Rrcreconfiguration) GetRrcTransactionIdentifier() *RrcTransactionIdentifier {
	if x != nil {
		return x.RrcTransactionIdentifier
	}
	return nil
}

func (x *Rrcreconfiguration) GetCriticalExtensions() *CriticalExtensionsRrcreconfiguration {
	if x != nil {
		return x.CriticalExtensions
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:312
// {RRCReconfiguration-IEs}
type RrcreconfigurationIEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	SecondaryCellGroup []byte `protobuf:"bytes,1,opt,name=secondary_cell_group,json=secondaryCellGroup,proto3,oneof" json:"secondary_cell_group,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueExt,"
	MeasConfig *MeasConfig `protobuf:"bytes,2,opt,name=meas_config,json=measConfig,proto3,oneof" json:"meas_config,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,"
	LateNonCriticalExtension []byte `protobuf:"bytes,3,opt,name=late_non_critical_extension,json=lateNonCriticalExtension,proto3,oneof" json:"late_non_critical_extension,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	NonCriticalExtension *Rrcreconfigurationv1530IEs `protobuf:"bytes,4,opt,name=non_critical_extension,json=nonCriticalExtension,proto3,oneof" json:"non_critical_extension,omitempty" aper:"optional,"`
}

func (x *RrcreconfigurationIEs) Reset() {
	*x = RrcreconfigurationIEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcreconfigurationIEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcreconfigurationIEs) ProtoMessage() {}

func (x *RrcreconfigurationIEs) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcreconfigurationIEs.ProtoReflect.Descriptor instead.
func (*RrcreconfigurationIEs) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{54}
}

func (x *RrcreconfigurationIEs) GetSecondaryCellGroup() []byte {
	if x != nil {
		return x.SecondaryCellGroup
	}
	return nil
}

func (x *RrcreconfigurationIEs) GetMeasConfig() *MeasConfig {
	if x != nil {
		return x.MeasConfig
	}
	return nil
}

func (x *RrcreconfigurationIEs) GetLateNonCriticalExtension() []byte {
	if x != nil {
		return x.LateNonCriticalExtension
	}
	return nil
}

func (x *RrcreconfigurationIEs) GetNonCriticalExtension() *Rrcreconfigurationv1530IEs {
	if x != nil {
		return x.NonCriticalExtension
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:319
// {RRCReconfiguration-v1530-IEs}
type Rrcreconfigurationv1530IEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	MasterCellGroup []byte `protobuf:"bytes,1,opt,name=master_cell_group,json=masterCellGroup,proto3,oneof" json:"master_cell_group,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:0,"
	FullConfig *FullConfigRrcreconfigurationv1530Ies `protobuf:"varint,2,opt,name=full_config,json=fullConfig,proto3,enum=nr_rrc_definitions.v1.FullConfigRrcreconfigurationv1530Ies,oneof" json:"full_config,omitempty" aper:"optional,valueLB:0,valueUB:0,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:29,"
	DedicatedNasMessageList []*DedicatedNasMessage `protobuf:"bytes,3,rep,name=dedicated_nas_message_list,json=dedicatedNAS-MessageList,proto3" json:"dedicated_nas_message_list,omitempty" aper:"optional,sizeLB:1,sizeUB:29,"`
	// @inject_tag: aper:"optional,valueExt,"
	MasterKeyUpdate *MasterKeyUpdate `protobuf:"bytes,4,opt,name=master_key_update,json=masterKeyUpdate,proto3,oneof" json:"master_key_update,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,"
	DedicatedSib1Delivery []byte `protobuf:"bytes,5,opt,name=dedicated_sib1_delivery,json=dedicatedSIB1-Delivery,proto3,oneof" json:"dedicated_sib1_delivery,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	DedicatedSystemInformationDelivery []byte `protobuf:"bytes,6,opt,name=dedicated_system_information_delivery,json=dedicatedSystemInformationDelivery,proto3,oneof" json:"dedicated_system_information_delivery,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	OtherConfig *OtherConfig `protobuf:"bytes,7,opt,name=other_config,json=otherConfig,proto3,oneof" json:"other_config,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	NonCriticalExtension *Rrcreconfigurationv1540IEs `protobuf:"bytes,8,opt,name=non_critical_extension,json=nonCriticalExtension,proto3,oneof" json:"non_critical_extension,omitempty" aper:"optional,"`
}

func (x *Rrcreconfigurationv1530IEs) Reset() {
	*x = Rrcreconfigurationv1530IEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rrcreconfigurationv1530IEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rrcreconfigurationv1530IEs) ProtoMessage() {}

func (x *Rrcreconfigurationv1530IEs) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rrcreconfigurationv1530IEs.ProtoReflect.Descriptor instead.
func (*Rrcreconfigurationv1530IEs) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{55}
}

func (x *Rrcreconfigurationv1530IEs) GetMasterCellGroup() []byte {
	if x != nil {
		return x.MasterCellGroup
	}
	return nil
}

func (x *Rrcreconfigurationv1530IEs) GetFullConfig() FullConfigRrcreconfigurationv1530Ies {
	if x != nil && x.FullConfig != nil {
		return *x.FullConfig
	}
	return FullConfigRrcreconfigurationv1530Ies_FULL_CONFIG_RRCRECONFIGURATIONV1530_IES_TRUE
}

func (x *Rrcreconfigurationv1530IEs) GetDedicatedNasMessageList() []*DedicatedNasMessage {
	if x != nil {
		return x.DedicatedNasMessageList
	}
	return nil
}

func (x *Rrcreconfigurationv1530IEs) GetMasterKeyUpdate() *MasterKeyUpdate {
	if x != nil {
		return x.MasterKeyUpdate
	}
	return nil
}

func (x *Rrcreconfigurationv1530IEs) GetDedicatedSib1Delivery() []byte {
	if x != nil {
		return x.DedicatedSib1Delivery
	}
	return nil
}

func (x *Rrcreconfigurationv1530IEs) GetDedicatedSystemInformationDelivery() []byte {
	if x != nil {
		return x.DedicatedSystemInformationDelivery
	}
	return nil
}

func (x *Rrcreconfigurationv1530IEs) GetOtherConfig() *OtherConfig {
	if x != nil {
		return x.OtherConfig
	}
	return nil
}

func (x *Rrcreconfigurationv1530IEs) GetNonCriticalExtension() *Rrcreconfigurationv1540IEs {
	if x != nil {
		return x.NonCriticalExtension
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:331
// {RRCReconfiguration-v1540-IEs}
type Rrcreconfigurationv1540IEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Rrcreconfigurationv1540IEs) Reset() {
	*x = Rrcreconfigurationv1540IEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rrcreconfigurationv1540IEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rrcreconfigurationv1540IEs) ProtoMessage() {}

func (x *Rrcreconfigurationv1540IEs) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rrcreconfigurationv1540IEs.ProtoReflect.Descriptor instead.
func (*Rrcreconfigurationv1540IEs) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{56}
}

// sequence from nr-rrc-definitions.asn1:334
// @inject_tag: aper:"valueExt"
// {MasterKeyUpdate}
type MasterKeyUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeySetChangeIndicator bool                  `protobuf:"varint,1,opt,name=key_set_change_indicator,json=keySetChangeIndicator,proto3" json:"key_set_change_indicator,omitempty"`
	NextHopChainingCount  *NextHopChainingCount `protobuf:"bytes,2,opt,name=next_hop_chaining_count,json=nextHopChainingCount,proto3" json:"next_hop_chaining_count,omitempty"`
	// @inject_tag: aper:"optional,"
	NasContainer []byte `protobuf:"bytes,3,opt,name=nas_container,json=nas-Container,proto3,oneof" json:"nas_container,omitempty" aper:"optional,"`
}

func (x *MasterKeyUpdate) Reset() {
	*x = MasterKeyUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterKeyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterKeyUpdate) ProtoMessage() {}

func (x *MasterKeyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterKeyUpdate.ProtoReflect.Descriptor instead.
func (*MasterKeyUpdate) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{57}
}

func (x *MasterKeyUpdate) GetKeySetChangeIndicator() bool {
	if x != nil {
		return x.KeySetChangeIndicator
	}
	return false
}

func (x *MasterKeyUpdate) GetNextHopChainingCount() *NextHopChainingCount {
	if x != nil {
		return x.NextHopChainingCount
	}
	return nil
}

func (x *MasterKeyUpdate) GetNasContainer() []byte {
	if x != nil {
		return x.NasContainer
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:345
// {RRCReconfigurationComplete}
type RrcreconfigurationComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RrcreconfigurationComplete) Reset() {
	*x = RrcreconfigurationComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcreconfigurationComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcreconfigurationComplete) ProtoMessage() {}

func (x *RrcreconfigurationComplete) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcreconfigurationComplete.ProtoReflect.Descriptor instead.
func (*RrcreconfigurationComplete) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{58}
}

// sequence from nr-rrc-definitions.asn1:351
// {RRCReject}
type Rrcreject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Rrcreject) Reset() {
	*x = Rrcreject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rrcreject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rrcreject) ProtoMessage() {}

func (x *Rrcreject) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rrcreject.ProtoReflect.Descriptor instead.
func (*Rrcreject) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{59}
}

// sequence from nr-rrc-definitions.asn1:357
// {RRCRelease}
type Rrcrelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Rrcrelease) Reset() {
	*x = Rrcrelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rrcrelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rrcrelease) ProtoMessage() {}

func (x *Rrcrelease) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rrcrelease.ProtoReflect.Descriptor instead.
func (*Rrcrelease) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{60}
}

// sequence from nr-rrc-definitions.asn1:363
// {RRCResume}
type Rrcresume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Rrcresume) Reset() {
	*x = Rrcresume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rrcresume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rrcresume) ProtoMessage() {}

func (x *Rrcresume) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rrcresume.ProtoReflect.Descriptor instead.
func (*Rrcresume) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{61}
}

// sequence from nr-rrc-definitions.asn1:369
// {RRCResumeComplete}
type RrcresumeComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RrcresumeComplete) Reset() {
	*x = RrcresumeComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcresumeComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcresumeComplete) ProtoMessage() {}

func (x *RrcresumeComplete) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcresumeComplete.ProtoReflect.Descriptor instead.
func (*RrcresumeComplete) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{62}
}

// sequence from nr-rrc-definitions.asn1:375
// {RRCResumeRequest}
type RrcresumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RrcresumeRequest) Reset() {
	*x = RrcresumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcresumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcresumeRequest) ProtoMessage() {}

func (x *RrcresumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcresumeRequest.ProtoReflect.Descriptor instead.
func (*RrcresumeRequest) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{63}
}

// sequence from nr-rrc-definitions.asn1:380
// {RRCResumeRequest1}
type RrcresumeRequest1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RrcresumeRequest1) Reset() {
	*x = RrcresumeRequest1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcresumeRequest1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcresumeRequest1) ProtoMessage() {}

func (x *RrcresumeRequest1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcresumeRequest1.ProtoReflect.Descriptor instead.
func (*RrcresumeRequest1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{64}
}

// sequence from nr-rrc-definitions.asn1:386
// {RRCSetup}
type Rrcsetup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Rrcsetup) Reset() {
	*x = Rrcsetup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rrcsetup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rrcsetup) ProtoMessage() {}

func (x *Rrcsetup) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rrcsetup.ProtoReflect.Descriptor instead.
func (*Rrcsetup) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{65}
}

// sequence from nr-rrc-definitions.asn1:392
// {RRCSetupComplete}
type RrcsetupComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RrcsetupComplete) Reset() {
	*x = RrcsetupComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcsetupComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcsetupComplete) ProtoMessage() {}

func (x *RrcsetupComplete) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcsetupComplete.ProtoReflect.Descriptor instead.
func (*RrcsetupComplete) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{66}
}

// sequence from nr-rrc-definitions.asn1:398
// {RRCSetupRequest}
type RrcsetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RrcsetupRequest) Reset() {
	*x = RrcsetupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcsetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcsetupRequest) ProtoMessage() {}

func (x *RrcsetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcsetupRequest.ProtoReflect.Descriptor instead.
func (*RrcsetupRequest) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{67}
}

// sequence from nr-rrc-definitions.asn1:403
// {RRCSystemInfoRequest}
type RrcsystemInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RrcsystemInfoRequest) Reset() {
	*x = RrcsystemInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcsystemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcsystemInfoRequest) ProtoMessage() {}

func (x *RrcsystemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcsystemInfoRequest.ProtoReflect.Descriptor instead.
func (*RrcsystemInfoRequest) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{68}
}

// sequence from nr-rrc-definitions.asn1:409
// {SCGFailureInformation}
type ScgfailureInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScgfailureInformation) Reset() {
	*x = ScgfailureInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScgfailureInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScgfailureInformation) ProtoMessage() {}

func (x *ScgfailureInformation) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScgfailureInformation.ProtoReflect.Descriptor instead.
func (*ScgfailureInformation) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{69}
}

// sequence from nr-rrc-definitions.asn1:415
// {SCGFailureInformationEUTRA}
type ScgfailureInformationEutra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScgfailureInformationEutra) Reset() {
	*x = ScgfailureInformationEutra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScgfailureInformationEutra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScgfailureInformationEutra) ProtoMessage() {}

func (x *ScgfailureInformationEutra) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScgfailureInformationEutra.ProtoReflect.Descriptor instead.
func (*ScgfailureInformationEutra) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{70}
}

// sequence from nr-rrc-definitions.asn1:421
// {SecurityModeCommand}
type SecurityModeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SecurityModeCommand) Reset() {
	*x = SecurityModeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityModeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityModeCommand) ProtoMessage() {}

func (x *SecurityModeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityModeCommand.ProtoReflect.Descriptor instead.
func (*SecurityModeCommand) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{71}
}

// sequence from nr-rrc-definitions.asn1:427
// {SecurityModeComplete}
type SecurityModeComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SecurityModeComplete) Reset() {
	*x = SecurityModeComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityModeComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityModeComplete) ProtoMessage() {}

func (x *SecurityModeComplete) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityModeComplete.ProtoReflect.Descriptor instead.
func (*SecurityModeComplete) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{72}
}

// sequence from nr-rrc-definitions.asn1:433
// {SecurityModeFailure}
type SecurityModeFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SecurityModeFailure) Reset() {
	*x = SecurityModeFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityModeFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityModeFailure) ProtoMessage() {}

func (x *SecurityModeFailure) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityModeFailure.ProtoReflect.Descriptor instead.
func (*SecurityModeFailure) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{73}
}

// sequence from nr-rrc-definitions.asn1:439
// {SIB1}
type Sib1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Sib1) Reset() {
	*x = Sib1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sib1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sib1) ProtoMessage() {}

func (x *Sib1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sib1.ProtoReflect.Descriptor instead.
func (*Sib1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{74}
}

// sequence from nr-rrc-definitions.asn1:445
// {SidelinkUEInformationNR-r16}
type SidelinkUeinformationNrr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SidelinkUeinformationNrr16) Reset() {
	*x = SidelinkUeinformationNrr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SidelinkUeinformationNrr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidelinkUeinformationNrr16) ProtoMessage() {}

func (x *SidelinkUeinformationNrr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidelinkUeinformationNrr16.ProtoReflect.Descriptor instead.
func (*SidelinkUeinformationNrr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{75}
}

// sequence from nr-rrc-definitions.asn1:451
// {SystemInformation}
type SystemInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemInformation) Reset() {
	*x = SystemInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInformation) ProtoMessage() {}

func (x *SystemInformation) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInformation.ProtoReflect.Descriptor instead.
func (*SystemInformation) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{76}
}

// sequence from nr-rrc-definitions.asn1:457
// {UEAssistanceInformation}
type UeassistanceInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UeassistanceInformation) Reset() {
	*x = UeassistanceInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeassistanceInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeassistanceInformation) ProtoMessage() {}

func (x *UeassistanceInformation) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeassistanceInformation.ProtoReflect.Descriptor instead.
func (*UeassistanceInformation) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{77}
}

// sequence from nr-rrc-definitions.asn1:463
// {UECapabilityEnquiry}
type UecapabilityEnquiry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UecapabilityEnquiry) Reset() {
	*x = UecapabilityEnquiry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UecapabilityEnquiry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UecapabilityEnquiry) ProtoMessage() {}

func (x *UecapabilityEnquiry) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UecapabilityEnquiry.ProtoReflect.Descriptor instead.
func (*UecapabilityEnquiry) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{78}
}

// sequence from nr-rrc-definitions.asn1:469
// {UECapabilityInformation}
type UecapabilityInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UecapabilityInformation) Reset() {
	*x = UecapabilityInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UecapabilityInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UecapabilityInformation) ProtoMessage() {}

func (x *UecapabilityInformation) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UecapabilityInformation.ProtoReflect.Descriptor instead.
func (*UecapabilityInformation) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{79}
}

// sequence from nr-rrc-definitions.asn1:475
// {UEInformationRequest-r16}
type UeinformationRequestr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UeinformationRequestr16) Reset() {
	*x = UeinformationRequestr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeinformationRequestr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeinformationRequestr16) ProtoMessage() {}

func (x *UeinformationRequestr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeinformationRequestr16.ProtoReflect.Descriptor instead.
func (*UeinformationRequestr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{80}
}

// sequence from nr-rrc-definitions.asn1:481
// {UEInformationResponse-r16}
type UeinformationResponser16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UeinformationResponser16) Reset() {
	*x = UeinformationResponser16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeinformationResponser16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeinformationResponser16) ProtoMessage() {}

func (x *UeinformationResponser16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeinformationResponser16.ProtoReflect.Descriptor instead.
func (*UeinformationResponser16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{81}
}

// sequence from nr-rrc-definitions.asn1:487
// {UEPositioningAssistanceInfo-r17}
type UepositioningAssistanceInfor17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UepositioningAssistanceInfor17) Reset() {
	*x = UepositioningAssistanceInfor17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UepositioningAssistanceInfor17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UepositioningAssistanceInfor17) ProtoMessage() {}

func (x *UepositioningAssistanceInfor17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UepositioningAssistanceInfor17.ProtoReflect.Descriptor instead.
func (*UepositioningAssistanceInfor17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{82}
}

// sequence from nr-rrc-definitions.asn1:493
// {ULDedicatedMessageSegment-r16}
type UldedicatedMessageSegmentr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UldedicatedMessageSegmentr16) Reset() {
	*x = UldedicatedMessageSegmentr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UldedicatedMessageSegmentr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UldedicatedMessageSegmentr16) ProtoMessage() {}

func (x *UldedicatedMessageSegmentr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UldedicatedMessageSegmentr16.ProtoReflect.Descriptor instead.
func (*UldedicatedMessageSegmentr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{83}
}

// sequence from nr-rrc-definitions.asn1:499
// {ULInformationTransfer}
type UlinformationTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UlinformationTransfer) Reset() {
	*x = UlinformationTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UlinformationTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UlinformationTransfer) ProtoMessage() {}

func (x *UlinformationTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UlinformationTransfer.ProtoReflect.Descriptor instead.
func (*UlinformationTransfer) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{84}
}

// sequence from nr-rrc-definitions.asn1:505
// {ULInformationTransferIRAT-r16}
type UlinformationTransferIratr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UlinformationTransferIratr16) Reset() {
	*x = UlinformationTransferIratr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UlinformationTransferIratr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UlinformationTransferIratr16) ProtoMessage() {}

func (x *UlinformationTransferIratr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UlinformationTransferIratr16.ProtoReflect.Descriptor instead.
func (*UlinformationTransferIratr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{85}
}

// sequence from nr-rrc-definitions.asn1:511
// {ULInformationTransferMRDC}
type UlinformationTransferMrdc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UlinformationTransferMrdc) Reset() {
	*x = UlinformationTransferMrdc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UlinformationTransferMrdc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UlinformationTransferMrdc) ProtoMessage() {}

func (x *UlinformationTransferMrdc) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UlinformationTransferMrdc.ProtoReflect.Descriptor instead.
func (*UlinformationTransferMrdc) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{86}
}

// range of Integer from nr-rrc-definitions.asn1:516
// {ARFCN-ValueNR}
type ArfcnValueNr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:3279165,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:3279165,"`
}

func (x *ArfcnValueNr) Reset() {
	*x = ArfcnValueNr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArfcnValueNr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArfcnValueNr) ProtoMessage() {}

func (x *ArfcnValueNr) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArfcnValueNr.ProtoReflect.Descriptor instead.
func (*ArfcnValueNr) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{87}
}

func (x *ArfcnValueNr) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:522
// {BWP}
type Bwp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:37949,"
	LocationAndBandwidth int32 `protobuf:"varint,1,opt,name=location_and_bandwidth,json=locationAndBandwidth,proto3" json:"location_and_bandwidth,omitempty" aper:"valueLB:0,valueUB:37949,"`
	// @inject_tag: aper:"valueLB:0,valueUB:7,"
	SubcarrierSpacing SubcarrierSpacing `protobuf:"varint,2,opt,name=subcarrier_spacing,json=subcarrierSpacing,proto3,enum=nr_rrc_definitions.v1.SubcarrierSpacing" json:"subcarrier_spacing,omitempty" aper:"valueLB:0,valueUB:7,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:0,"
	CyclicPrefix *CyclicPrefixBwp `protobuf:"varint,3,opt,name=cyclic_prefix,json=cyclicPrefix,proto3,enum=nr_rrc_definitions.v1.CyclicPrefixBwp,oneof" json:"cyclic_prefix,omitempty" aper:"optional,valueLB:0,valueUB:0,"`
}

func (x *Bwp) Reset() {
	*x = Bwp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bwp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bwp) ProtoMessage() {}

func (x *Bwp) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bwp.ProtoReflect.Descriptor instead.
func (*Bwp) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{88}
}

func (x *Bwp) GetLocationAndBandwidth() int32 {
	if x != nil {
		return x.LocationAndBandwidth
	}
	return 0
}

func (x *Bwp) GetSubcarrierSpacing() SubcarrierSpacing {
	if x != nil {
		return x.SubcarrierSpacing
	}
	return SubcarrierSpacing_SUBCARRIER_SPACING_K_HZ15
}

func (x *Bwp) GetCyclicPrefix() CyclicPrefixBwp {
	if x != nil && x.CyclicPrefix != nil {
		return *x.CyclicPrefix
	}
	return CyclicPrefixBwp_CYCLIC_PREFIX_BWP_EXTENDED
}

// sequence from nr-rrc-definitions.asn1:531
// @inject_tag: aper:"valueExt"
// {BWP-Downlink}
type BwpDownlink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BwpId *BwpId `protobuf:"bytes,1,opt,name=bwp_id,json=bwp-Id,proto3" json:"bwp_id,omitempty"`
	// @inject_tag: aper:"optional,valueExt,"
	BwpCommon *BwpDownlinkCommon `protobuf:"bytes,2,opt,name=bwp_common,json=bwp-Common,proto3,oneof" json:"bwp_common,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,"
	BwpDedicated *BwpDownlinkDedicated `protobuf:"bytes,3,opt,name=bwp_dedicated,json=bwp-Dedicated,proto3,oneof" json:"bwp_dedicated,omitempty" aper:"optional,"`
}

func (x *BwpDownlink) Reset() {
	*x = BwpDownlink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BwpDownlink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BwpDownlink) ProtoMessage() {}

func (x *BwpDownlink) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BwpDownlink.ProtoReflect.Descriptor instead.
func (*BwpDownlink) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{89}
}

func (x *BwpDownlink) GetBwpId() *BwpId {
	if x != nil {
		return x.BwpId
	}
	return nil
}

func (x *BwpDownlink) GetBwpCommon() *BwpDownlinkCommon {
	if x != nil {
		return x.BwpCommon
	}
	return nil
}

func (x *BwpDownlink) GetBwpDedicated() *BwpDownlinkDedicated {
	if x != nil {
		return x.BwpDedicated
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:543
// {pdcch-ConfigCommonBWP-DownlinkCommon}
type PdcchConfigCommonBwpDownlinkCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:543
	//
	// Types that are assignable to PdcchConfigCommonBwpDownlinkCommon:
	//	*PdcchConfigCommonBwpDownlinkCommon_Release
	//	*PdcchConfigCommonBwpDownlinkCommon_Setup
	PdcchConfigCommonBwpDownlinkCommon isPdcchConfigCommonBwpDownlinkCommon_PdcchConfigCommonBwpDownlinkCommon `protobuf_oneof:"pdcch_config_common_bwp_downlink_common"`
}

func (x *PdcchConfigCommonBwpDownlinkCommon) Reset() {
	*x = PdcchConfigCommonBwpDownlinkCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdcchConfigCommonBwpDownlinkCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdcchConfigCommonBwpDownlinkCommon) ProtoMessage() {}

func (x *PdcchConfigCommonBwpDownlinkCommon) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdcchConfigCommonBwpDownlinkCommon.ProtoReflect.Descriptor instead.
func (*PdcchConfigCommonBwpDownlinkCommon) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{90}
}

func (m *PdcchConfigCommonBwpDownlinkCommon) GetPdcchConfigCommonBwpDownlinkCommon() isPdcchConfigCommonBwpDownlinkCommon_PdcchConfigCommonBwpDownlinkCommon {
	if m != nil {
		return m.PdcchConfigCommonBwpDownlinkCommon
	}
	return nil
}

func (x *PdcchConfigCommonBwpDownlinkCommon) GetRelease() int32 {
	if x, ok := x.GetPdcchConfigCommonBwpDownlinkCommon().(*PdcchConfigCommonBwpDownlinkCommon_Release); ok {
		return x.Release
	}
	return 0
}

func (x *PdcchConfigCommonBwpDownlinkCommon) GetSetup() *PdcchConfigCommon {
	if x, ok := x.GetPdcchConfigCommonBwpDownlinkCommon().(*PdcchConfigCommonBwpDownlinkCommon_Setup); ok {
		return x.Setup
	}
	return nil
}

type isPdcchConfigCommonBwpDownlinkCommon_PdcchConfigCommonBwpDownlinkCommon interface {
	isPdcchConfigCommonBwpDownlinkCommon_PdcchConfigCommonBwpDownlinkCommon()
}

type PdcchConfigCommonBwpDownlinkCommon_Release struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Release int32 `protobuf:"varint,1,opt,name=release,proto3,oneof" aper:"choiceIdx:1,"`
}

type PdcchConfigCommonBwpDownlinkCommon_Setup struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Setup *PdcchConfigCommon `protobuf:"bytes,2,opt,name=setup,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*PdcchConfigCommonBwpDownlinkCommon_Release) isPdcchConfigCommonBwpDownlinkCommon_PdcchConfigCommonBwpDownlinkCommon() {
}

func (*PdcchConfigCommonBwpDownlinkCommon_Setup) isPdcchConfigCommonBwpDownlinkCommon_PdcchConfigCommonBwpDownlinkCommon() {
}

// choice from nr-rrc-definitions.asn1:547
// {pdsch-ConfigCommonBWP-DownlinkCommon}
type PdschConfigCommonBwpDownlinkCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:547
	//
	// Types that are assignable to PdschConfigCommonBwpDownlinkCommon:
	//	*PdschConfigCommonBwpDownlinkCommon_Release
	//	*PdschConfigCommonBwpDownlinkCommon_Setup
	PdschConfigCommonBwpDownlinkCommon isPdschConfigCommonBwpDownlinkCommon_PdschConfigCommonBwpDownlinkCommon `protobuf_oneof:"pdsch_config_common_bwp_downlink_common"`
}

func (x *PdschConfigCommonBwpDownlinkCommon) Reset() {
	*x = PdschConfigCommonBwpDownlinkCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdschConfigCommonBwpDownlinkCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdschConfigCommonBwpDownlinkCommon) ProtoMessage() {}

func (x *PdschConfigCommonBwpDownlinkCommon) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdschConfigCommonBwpDownlinkCommon.ProtoReflect.Descriptor instead.
func (*PdschConfigCommonBwpDownlinkCommon) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{91}
}

func (m *PdschConfigCommonBwpDownlinkCommon) GetPdschConfigCommonBwpDownlinkCommon() isPdschConfigCommonBwpDownlinkCommon_PdschConfigCommonBwpDownlinkCommon {
	if m != nil {
		return m.PdschConfigCommonBwpDownlinkCommon
	}
	return nil
}

func (x *PdschConfigCommonBwpDownlinkCommon) GetRelease() int32 {
	if x, ok := x.GetPdschConfigCommonBwpDownlinkCommon().(*PdschConfigCommonBwpDownlinkCommon_Release); ok {
		return x.Release
	}
	return 0
}

func (x *PdschConfigCommonBwpDownlinkCommon) GetSetup() *PdschConfigCommon {
	if x, ok := x.GetPdschConfigCommonBwpDownlinkCommon().(*PdschConfigCommonBwpDownlinkCommon_Setup); ok {
		return x.Setup
	}
	return nil
}

type isPdschConfigCommonBwpDownlinkCommon_PdschConfigCommonBwpDownlinkCommon interface {
	isPdschConfigCommonBwpDownlinkCommon_PdschConfigCommonBwpDownlinkCommon()
}

type PdschConfigCommonBwpDownlinkCommon_Release struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Release int32 `protobuf:"varint,1,opt,name=release,proto3,oneof" aper:"choiceIdx:1,"`
}

type PdschConfigCommonBwpDownlinkCommon_Setup struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,"
	Setup *PdschConfigCommon `protobuf:"bytes,2,opt,name=setup,proto3,oneof" aper:"choiceIdx:2,valueExt,"`
}

func (*PdschConfigCommonBwpDownlinkCommon_Release) isPdschConfigCommonBwpDownlinkCommon_PdschConfigCommonBwpDownlinkCommon() {
}

func (*PdschConfigCommonBwpDownlinkCommon_Setup) isPdschConfigCommonBwpDownlinkCommon_PdschConfigCommonBwpDownlinkCommon() {
}

// sequence from nr-rrc-definitions.asn1:541
// @inject_tag: aper:"valueExt"
// {BWP-DownlinkCommon}
type BwpDownlinkCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GenericParameters *Bwp `protobuf:"bytes,1,opt,name=generic_parameters,json=genericParameters,proto3" json:"generic_parameters,omitempty"`
	// @inject_tag: aper:"optional,"
	PdcchConfigCommon *PdcchConfigCommonBwpDownlinkCommon `protobuf:"bytes,2,opt,name=pdcch_config_common,json=pdcch-ConfigCommon,proto3,oneof" json:"pdcch_config_common,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	PdschConfigCommon *PdschConfigCommonBwpDownlinkCommon `protobuf:"bytes,3,opt,name=pdsch_config_common,json=pdsch-ConfigCommon,proto3,oneof" json:"pdsch_config_common,omitempty" aper:"optional,"`
}

func (x *BwpDownlinkCommon) Reset() {
	*x = BwpDownlinkCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BwpDownlinkCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BwpDownlinkCommon) ProtoMessage() {}

func (x *BwpDownlinkCommon) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BwpDownlinkCommon.ProtoReflect.Descriptor instead.
func (*BwpDownlinkCommon) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{92}
}

func (x *BwpDownlinkCommon) GetGenericParameters() *Bwp {
	if x != nil {
		return x.GenericParameters
	}
	return nil
}

func (x *BwpDownlinkCommon) GetPdcchConfigCommon() *PdcchConfigCommonBwpDownlinkCommon {
	if x != nil {
		return x.PdcchConfigCommon
	}
	return nil
}

func (x *BwpDownlinkCommon) GetPdschConfigCommon() *PdschConfigCommonBwpDownlinkCommon {
	if x != nil {
		return x.PdschConfigCommon
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:558
// {pdsch-ConfigBWP-DownlinkDedicated}
type PdschConfigBwpDownlinkDedicated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:558
	//
	// Types that are assignable to PdschConfigBwpDownlinkDedicated:
	//	*PdschConfigBwpDownlinkDedicated_Release
	//	*PdschConfigBwpDownlinkDedicated_Setup
	PdschConfigBwpDownlinkDedicated isPdschConfigBwpDownlinkDedicated_PdschConfigBwpDownlinkDedicated `protobuf_oneof:"pdsch_config_bwp_downlink_dedicated"`
}

func (x *PdschConfigBwpDownlinkDedicated) Reset() {
	*x = PdschConfigBwpDownlinkDedicated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdschConfigBwpDownlinkDedicated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdschConfigBwpDownlinkDedicated) ProtoMessage() {}

func (x *PdschConfigBwpDownlinkDedicated) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdschConfigBwpDownlinkDedicated.ProtoReflect.Descriptor instead.
func (*PdschConfigBwpDownlinkDedicated) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{93}
}

func (m *PdschConfigBwpDownlinkDedicated) GetPdschConfigBwpDownlinkDedicated() isPdschConfigBwpDownlinkDedicated_PdschConfigBwpDownlinkDedicated {
	if m != nil {
		return m.PdschConfigBwpDownlinkDedicated
	}
	return nil
}

func (x *PdschConfigBwpDownlinkDedicated) GetRelease() int32 {
	if x, ok := x.GetPdschConfigBwpDownlinkDedicated().(*PdschConfigBwpDownlinkDedicated_Release); ok {
		return x.Release
	}
	return 0
}

func (x *PdschConfigBwpDownlinkDedicated) GetSetup() *PdschConfig {
	if x, ok := x.GetPdschConfigBwpDownlinkDedicated().(*PdschConfigBwpDownlinkDedicated_Setup); ok {
		return x.Setup
	}
	return nil
}

type isPdschConfigBwpDownlinkDedicated_PdschConfigBwpDownlinkDedicated interface {
	isPdschConfigBwpDownlinkDedicated_PdschConfigBwpDownlinkDedicated()
}

type PdschConfigBwpDownlinkDedicated_Release struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Release int32 `protobuf:"varint,1,opt,name=release,proto3,oneof" aper:"choiceIdx:1,"`
}

type PdschConfigBwpDownlinkDedicated_Setup struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,"
	Setup *PdschConfig `protobuf:"bytes,2,opt,name=setup,proto3,oneof" aper:"choiceIdx:2,valueExt,"`
}

func (*PdschConfigBwpDownlinkDedicated_Release) isPdschConfigBwpDownlinkDedicated_PdschConfigBwpDownlinkDedicated() {
}

func (*PdschConfigBwpDownlinkDedicated_Setup) isPdschConfigBwpDownlinkDedicated_PdschConfigBwpDownlinkDedicated() {
}

// sequence from nr-rrc-definitions.asn1:561
// {BWP-DownlinkDedicated}
type BwpDownlinkDedicated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PdschConfig *PdschConfigBwpDownlinkDedicated `protobuf:"bytes,1,opt,name=pdsch_config,json=pdsch-Config,proto3" json:"pdsch_config,omitempty"`
}

func (x *BwpDownlinkDedicated) Reset() {
	*x = BwpDownlinkDedicated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BwpDownlinkDedicated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BwpDownlinkDedicated) ProtoMessage() {}

func (x *BwpDownlinkDedicated) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BwpDownlinkDedicated.ProtoReflect.Descriptor instead.
func (*BwpDownlinkDedicated) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{94}
}

func (x *BwpDownlinkDedicated) GetPdschConfig() *PdschConfigBwpDownlinkDedicated {
	if x != nil {
		return x.PdschConfig
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:566
// {BWP-Id}
type BwpId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4,"`
}

func (x *BwpId) Reset() {
	*x = BwpId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BwpId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BwpId) ProtoMessage() {}

func (x *BwpId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BwpId.ProtoReflect.Descriptor instead.
func (*BwpId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{95}
}

func (x *BwpId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:573
// @inject_tag: aper:"valueExt"
// {CellGroupConfig}
type CellGroupConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueExt,"
	SpCellConfig *SpCellConfig `protobuf:"bytes,1,opt,name=sp_cell_config,json=spCellConfig,proto3,oneof" json:"sp_cell_config,omitempty" aper:"optional,valueExt,"`
}

func (x *CellGroupConfig) Reset() {
	*x = CellGroupConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellGroupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellGroupConfig) ProtoMessage() {}

func (x *CellGroupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellGroupConfig.ProtoReflect.Descriptor instead.
func (*CellGroupConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{96}
}

func (x *CellGroupConfig) GetSpCellConfig() *SpCellConfig {
	if x != nil {
		return x.SpCellConfig
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:578
// @inject_tag: aper:"valueExt"
// {SpCellConfig}
type SpCellConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueExt,"
	ReconfigurationWithSync *ReconfigurationWithSync `protobuf:"bytes,1,opt,name=reconfiguration_with_sync,json=reconfigurationWithSync,proto3,oneof" json:"reconfiguration_with_sync,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,valueExt,"
	SpCellConfigDedicated *ServingCellConfig `protobuf:"bytes,2,opt,name=sp_cell_config_dedicated,json=spCellConfigDedicated,proto3,oneof" json:"sp_cell_config_dedicated,omitempty" aper:"optional,valueExt,"`
}

func (x *SpCellConfig) Reset() {
	*x = SpCellConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpCellConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpCellConfig) ProtoMessage() {}

func (x *SpCellConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpCellConfig.ProtoReflect.Descriptor instead.
func (*SpCellConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{97}
}

func (x *SpCellConfig) GetReconfigurationWithSync() *ReconfigurationWithSync {
	if x != nil {
		return x.ReconfigurationWithSync
	}
	return nil
}

func (x *SpCellConfig) GetSpCellConfigDedicated() *ServingCellConfig {
	if x != nil {
		return x.SpCellConfigDedicated
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:584
// @inject_tag: aper:"valueExt"
// {ReconfigurationWithSync}
type ReconfigurationWithSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueExt,"
	SpCellConfigCommon *ServingCellConfigCommon `protobuf:"bytes,1,opt,name=sp_cell_config_common,json=spCellConfigCommon,proto3,oneof" json:"sp_cell_config_common,omitempty" aper:"optional,valueExt,"`
}

func (x *ReconfigurationWithSync) Reset() {
	*x = ReconfigurationWithSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReconfigurationWithSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconfigurationWithSync) ProtoMessage() {}

func (x *ReconfigurationWithSync) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconfigurationWithSync.ProtoReflect.Descriptor instead.
func (*ReconfigurationWithSync) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{98}
}

func (x *ReconfigurationWithSync) GetSpCellConfigCommon() *ServingCellConfigCommon {
	if x != nil {
		return x.SpCellConfigCommon
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:599
// {twonrOfAntennaPorts}
type TwonrOfAntennaPorts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:6,sizeUB:6,"
	TwoTxCodebookSubsetRestriction *asn1.BitString `protobuf:"bytes,1,opt,name=two_tx_codebook_subset_restriction,json=twoTX-CodebookSubsetRestriction,proto3" json:"two_tx_codebook_subset_restriction,omitempty" aper:"sizeLB:6,sizeUB:6,"`
}

func (x *TwonrOfAntennaPorts) Reset() {
	*x = TwonrOfAntennaPorts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwonrOfAntennaPorts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwonrOfAntennaPorts) ProtoMessage() {}

func (x *TwonrOfAntennaPorts) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwonrOfAntennaPorts.ProtoReflect.Descriptor instead.
func (*TwonrOfAntennaPorts) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{99}
}

func (x *TwonrOfAntennaPorts) GetTwoTxCodebookSubsetRestriction() *asn1.BitString {
	if x != nil {
		return x.TwoTxCodebookSubsetRestriction
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:602
// {n1-n2moreThanTwo}
type N1N2MoreThanTwo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:602
	//
	// Types that are assignable to N1N2MoreThanTwo:
	//	*N1N2MoreThanTwo_TwoOneTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_TwoTwoTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_FourOneTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_ThreeTwoTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_SixOneTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_FourTwoTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_EightOneTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_FourThreeTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_SixTwoTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_TwelveOneTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_FourFourTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_EightTwoTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_SixteenOneTypeISinglePanelRestriction
	N1N2MoreThanTwo isN1N2MoreThanTwo_N1N2MoreThanTwo `protobuf_oneof:"n1_n2more_than_two"`
}

func (x *N1N2MoreThanTwo) Reset() {
	*x = N1N2MoreThanTwo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *N1N2MoreThanTwo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N1N2MoreThanTwo) ProtoMessage() {}

func (x *N1N2MoreThanTwo) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N1N2MoreThanTwo.ProtoReflect.Descriptor instead.
func (*N1N2MoreThanTwo) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{100}
}

func (m *N1N2MoreThanTwo) GetN1N2MoreThanTwo() isN1N2MoreThanTwo_N1N2MoreThanTwo {
	if m != nil {
		return m.N1N2MoreThanTwo
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetTwoOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_TwoOneTypeISinglePanelRestriction); ok {
		return x.TwoOneTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetTwoTwoTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_TwoTwoTypeISinglePanelRestriction); ok {
		return x.TwoTwoTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetFourOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_FourOneTypeISinglePanelRestriction); ok {
		return x.FourOneTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetThreeTwoTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_ThreeTwoTypeISinglePanelRestriction); ok {
		return x.ThreeTwoTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetSixOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_SixOneTypeISinglePanelRestriction); ok {
		return x.SixOneTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetFourTwoTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_FourTwoTypeISinglePanelRestriction); ok {
		return x.FourTwoTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetEightOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_EightOneTypeISinglePanelRestriction); ok {
		return x.EightOneTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetFourThreeTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_FourThreeTypeISinglePanelRestriction); ok {
		return x.FourThreeTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetSixTwoTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_SixTwoTypeISinglePanelRestriction); ok {
		return x.SixTwoTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetTwelveOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_TwelveOneTypeISinglePanelRestriction); ok {
		return x.TwelveOneTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetFourFourTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_FourFourTypeISinglePanelRestriction); ok {
		return x.FourFourTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetEightTwoTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_EightTwoTypeISinglePanelRestriction); ok {
		return x.EightTwoTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetSixteenOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_SixteenOneTypeISinglePanelRestriction); ok {
		return x.SixteenOneTypeISinglePanelRestriction
	}
	return nil
}

type isN1N2MoreThanTwo_N1N2MoreThanTwo interface {
	isN1N2MoreThanTwo_N1N2MoreThanTwo()
}

type N1N2MoreThanTwo_TwoOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:8,sizeUB:8,"
	TwoOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,1,opt,name=two_one_type_i_single_panel_restriction,json=two-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:1,sizeLB:8,sizeUB:8,"`
}

type N1N2MoreThanTwo_TwoTwoTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:64,sizeUB:64,"
	TwoTwoTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=two_two_type_i_single_panel_restriction,json=two-two-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:2,sizeLB:64,sizeUB:64,"`
}

type N1N2MoreThanTwo_FourOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:16,sizeUB:16,"
	FourOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,3,opt,name=four_one_type_i_single_panel_restriction,json=four-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:3,sizeLB:16,sizeUB:16,"`
}

type N1N2MoreThanTwo_ThreeTwoTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:96,sizeUB:96,"
	ThreeTwoTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,4,opt,name=three_two_type_i_single_panel_restriction,json=three-two-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:4,sizeLB:96,sizeUB:96,"`
}

type N1N2MoreThanTwo_SixOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:5,sizeLB:24,sizeUB:24,"
	SixOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,5,opt,name=six_one_type_i_single_panel_restriction,json=six-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:5,sizeLB:24,sizeUB:24,"`
}

type N1N2MoreThanTwo_FourTwoTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:6,sizeLB:128,sizeUB:128,"
	FourTwoTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,6,opt,name=four_two_type_i_single_panel_restriction,json=four-two-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:6,sizeLB:128,sizeUB:128,"`
}

type N1N2MoreThanTwo_EightOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:7,sizeLB:32,sizeUB:32,"
	EightOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,7,opt,name=eight_one_type_i_single_panel_restriction,json=eight-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:7,sizeLB:32,sizeUB:32,"`
}

type N1N2MoreThanTwo_FourThreeTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:8,sizeLB:192,sizeUB:192,"
	FourThreeTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,8,opt,name=four_three_type_i_single_panel_restriction,json=four-three-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:8,sizeLB:192,sizeUB:192,"`
}

type N1N2MoreThanTwo_SixTwoTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:9,sizeLB:192,sizeUB:192,"
	SixTwoTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,9,opt,name=six_two_type_i_single_panel_restriction,json=six-two-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:9,sizeLB:192,sizeUB:192,"`
}

type N1N2MoreThanTwo_TwelveOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:10,sizeLB:48,sizeUB:48,"
	TwelveOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,10,opt,name=twelve_one_type_i_single_panel_restriction,json=twelve-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:10,sizeLB:48,sizeUB:48,"`
}

type N1N2MoreThanTwo_FourFourTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:11,sizeLB:256,sizeUB:256,"
	FourFourTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,11,opt,name=four_four_type_i_single_panel_restriction,json=four-four-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:11,sizeLB:256,sizeUB:256,"`
}

type N1N2MoreThanTwo_EightTwoTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:12,sizeLB:256,sizeUB:256,"
	EightTwoTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,12,opt,name=eight_two_type_i_single_panel_restriction,json=eight-two-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:12,sizeLB:256,sizeUB:256,"`
}

type N1N2MoreThanTwo_SixteenOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:13,sizeLB:64,sizeUB:64,"
	SixteenOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,13,opt,name=sixteen_one_type_i_single_panel_restriction,json=sixteen-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:13,sizeLB:64,sizeUB:64,"`
}

func (*N1N2MoreThanTwo_TwoOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_TwoTwoTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_FourOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_ThreeTwoTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_SixOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_FourTwoTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_EightOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_FourThreeTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_SixTwoTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_TwelveOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_FourFourTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_EightTwoTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_SixteenOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

// sequence from nr-rrc-definitions.asn1:615
// {moreThanTwonrOfAntennaPorts}
type MoreThanTwonrOfAntennaPorts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N1N2 *N1N2MoreThanTwo `protobuf:"bytes,1,opt,name=n1_n2,json=n1-n2,proto3" json:"n1_n2,omitempty"`
	// @inject_tag: aper:"optional,sizeLB:16,sizeUB:16,"
	TypeISinglePanelCodebookSubsetRestrictionI2 *asn1.BitString `protobuf:"bytes,2,opt,name=type_i_single_panel_codebook_subset_restriction_i2,json=typeI-SinglePanel-codebookSubsetRestriction-i2,proto3,oneof" json:"type_i_single_panel_codebook_subset_restriction_i2,omitempty" aper:"optional,sizeLB:16,sizeUB:16,"`
}

func (x *MoreThanTwonrOfAntennaPorts) Reset() {
	*x = MoreThanTwonrOfAntennaPorts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoreThanTwonrOfAntennaPorts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoreThanTwonrOfAntennaPorts) ProtoMessage() {}

func (x *MoreThanTwonrOfAntennaPorts) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoreThanTwonrOfAntennaPorts.ProtoReflect.Descriptor instead.
func (*MoreThanTwonrOfAntennaPorts) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{101}
}

func (x *MoreThanTwonrOfAntennaPorts) GetN1N2() *N1N2MoreThanTwo {
	if x != nil {
		return x.N1N2
	}
	return nil
}

func (x *MoreThanTwonrOfAntennaPorts) GetTypeISinglePanelCodebookSubsetRestrictionI2() *asn1.BitString {
	if x != nil {
		return x.TypeISinglePanelCodebookSubsetRestrictionI2
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:599
// {nrOfAntennaPortstypeI-SinglePanel}
type NrOfAntennaPortstypeISinglePanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:599
	//
	// Types that are assignable to NrOfAntennaPortstypeISinglePanel:
	//	*NrOfAntennaPortstypeISinglePanel_Two
	//	*NrOfAntennaPortstypeISinglePanel_MoreThanTwo
	NrOfAntennaPortstypeISinglePanel isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel `protobuf_oneof:"nr_of_antenna_portstype_i_single_panel"`
}

func (x *NrOfAntennaPortstypeISinglePanel) Reset() {
	*x = NrOfAntennaPortstypeISinglePanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrOfAntennaPortstypeISinglePanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrOfAntennaPortstypeISinglePanel) ProtoMessage() {}

func (x *NrOfAntennaPortstypeISinglePanel) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrOfAntennaPortstypeISinglePanel.ProtoReflect.Descriptor instead.
func (*NrOfAntennaPortstypeISinglePanel) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{102}
}

func (m *NrOfAntennaPortstypeISinglePanel) GetNrOfAntennaPortstypeISinglePanel() isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel {
	if m != nil {
		return m.NrOfAntennaPortstypeISinglePanel
	}
	return nil
}

func (x *NrOfAntennaPortstypeISinglePanel) GetTwo() *TwonrOfAntennaPorts {
	if x, ok := x.GetNrOfAntennaPortstypeISinglePanel().(*NrOfAntennaPortstypeISinglePanel_Two); ok {
		return x.Two
	}
	return nil
}

func (x *NrOfAntennaPortstypeISinglePanel) GetMoreThanTwo() *MoreThanTwonrOfAntennaPorts {
	if x, ok := x.GetNrOfAntennaPortstypeISinglePanel().(*NrOfAntennaPortstypeISinglePanel_MoreThanTwo); ok {
		return x.MoreThanTwo
	}
	return nil
}

type isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel interface {
	isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel()
}

type NrOfAntennaPortstypeISinglePanel_Two struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Two *TwonrOfAntennaPorts `protobuf:"bytes,1,opt,name=two,proto3,oneof" aper:"choiceIdx:1,"`
}

type NrOfAntennaPortstypeISinglePanel_MoreThanTwo struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MoreThanTwo *MoreThanTwonrOfAntennaPorts `protobuf:"bytes,2,opt,name=more_than_two,json=moreThanTwo,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*NrOfAntennaPortstypeISinglePanel_Two) isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel() {
}

func (*NrOfAntennaPortstypeISinglePanel_MoreThanTwo) isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel() {
}

// sequence from nr-rrc-definitions.asn1:618
// {typeI-SinglePanelsubType}
type TypeISinglePanelsubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NrOfAntennaPorts *NrOfAntennaPortstypeISinglePanel `protobuf:"bytes,1,opt,name=nr_of_antenna_ports,json=nrOfAntennaPorts,proto3" json:"nr_of_antenna_ports,omitempty"`
	// @inject_tag: aper:"sizeLB:8,sizeUB:8,"
	TypeISinglePanelRiRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=type_i_single_panel_ri_restriction,json=typeI-SinglePanel-ri-Restriction,proto3" json:"type_i_single_panel_ri_restriction,omitempty" aper:"sizeLB:8,sizeUB:8,"`
}

func (x *TypeISinglePanelsubType) Reset() {
	*x = TypeISinglePanelsubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeISinglePanelsubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeISinglePanelsubType) ProtoMessage() {}

func (x *TypeISinglePanelsubType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeISinglePanelsubType.ProtoReflect.Descriptor instead.
func (*TypeISinglePanelsubType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{103}
}

func (x *TypeISinglePanelsubType) GetNrOfAntennaPorts() *NrOfAntennaPortstypeISinglePanel {
	if x != nil {
		return x.NrOfAntennaPorts
	}
	return nil
}

func (x *TypeISinglePanelsubType) GetTypeISinglePanelRiRestriction() *asn1.BitString {
	if x != nil {
		return x.TypeISinglePanelRiRestriction
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:623
// {ng-n1-n2typeI-MultiPanel}
type Ngn1N2TypeIMultiPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:623
	//
	// Types that are assignable to NgN1N2TypeIMultiPanel:
	//	*Ngn1N2TypeIMultiPanel_TwoTwoOneTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_TwoFourOneTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_FourTwoOneTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_TwoTwoTwoTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_TwoEightOneTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_FourFourOneTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_TwoFourTwoTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_FourTwoTwoTypeIMultiPanelRestriction
	NgN1N2TypeIMultiPanel isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel `protobuf_oneof:"ng_n1_n2type_i_multi_panel"`
}

func (x *Ngn1N2TypeIMultiPanel) Reset() {
	*x = Ngn1N2TypeIMultiPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ngn1N2TypeIMultiPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ngn1N2TypeIMultiPanel) ProtoMessage() {}

func (x *Ngn1N2TypeIMultiPanel) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ngn1N2TypeIMultiPanel.ProtoReflect.Descriptor instead.
func (*Ngn1N2TypeIMultiPanel) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{104}
}

func (m *Ngn1N2TypeIMultiPanel) GetNgN1N2TypeIMultiPanel() isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel {
	if m != nil {
		return m.NgN1N2TypeIMultiPanel
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetTwoTwoOneTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_TwoTwoOneTypeIMultiPanelRestriction); ok {
		return x.TwoTwoOneTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetTwoFourOneTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_TwoFourOneTypeIMultiPanelRestriction); ok {
		return x.TwoFourOneTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetFourTwoOneTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_FourTwoOneTypeIMultiPanelRestriction); ok {
		return x.FourTwoOneTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetTwoTwoTwoTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_TwoTwoTwoTypeIMultiPanelRestriction); ok {
		return x.TwoTwoTwoTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetTwoEightOneTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_TwoEightOneTypeIMultiPanelRestriction); ok {
		return x.TwoEightOneTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetFourFourOneTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_FourFourOneTypeIMultiPanelRestriction); ok {
		return x.FourFourOneTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetTwoFourTwoTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_TwoFourTwoTypeIMultiPanelRestriction); ok {
		return x.TwoFourTwoTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetFourTwoTwoTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_FourTwoTwoTypeIMultiPanelRestriction); ok {
		return x.FourTwoTwoTypeIMultiPanelRestriction
	}
	return nil
}

type isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel interface {
	isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel()
}

type Ngn1N2TypeIMultiPanel_TwoTwoOneTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:8,sizeUB:8,"
	TwoTwoOneTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,1,opt,name=two_two_one_type_i_multi_panel_restriction,json=two-two-one-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:1,sizeLB:8,sizeUB:8,"`
}

type Ngn1N2TypeIMultiPanel_TwoFourOneTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:16,sizeUB:16,"
	TwoFourOneTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=two_four_one_type_i_multi_panel_restriction,json=two-four-one-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:2,sizeLB:16,sizeUB:16,"`
}

type Ngn1N2TypeIMultiPanel_FourTwoOneTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:8,sizeUB:8,"
	FourTwoOneTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,3,opt,name=four_two_one_type_i_multi_panel_restriction,json=four-two-one-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:3,sizeLB:8,sizeUB:8,"`
}

type Ngn1N2TypeIMultiPanel_TwoTwoTwoTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:64,sizeUB:64,"
	TwoTwoTwoTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,4,opt,name=two_two_two_type_i_multi_panel_restriction,json=two-two-two-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:4,sizeLB:64,sizeUB:64,"`
}

type Ngn1N2TypeIMultiPanel_TwoEightOneTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:5,sizeLB:32,sizeUB:32,"
	TwoEightOneTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,5,opt,name=two_eight_one_type_i_multi_panel_restriction,json=two-eight-one-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:5,sizeLB:32,sizeUB:32,"`
}

type Ngn1N2TypeIMultiPanel_FourFourOneTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:6,sizeLB:16,sizeUB:16,"
	FourFourOneTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,6,opt,name=four_four_one_type_i_multi_panel_restriction,json=four-four-one-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:6,sizeLB:16,sizeUB:16,"`
}

type Ngn1N2TypeIMultiPanel_TwoFourTwoTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:7,sizeLB:128,sizeUB:128,"
	TwoFourTwoTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,7,opt,name=two_four_two_type_i_multi_panel_restriction,json=two-four-two-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:7,sizeLB:128,sizeUB:128,"`
}

type Ngn1N2TypeIMultiPanel_FourTwoTwoTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:8,sizeLB:64,sizeUB:64,"
	FourTwoTwoTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,8,opt,name=four_two_two_type_i_multi_panel_restriction,json=four-two-two-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:8,sizeLB:64,sizeUB:64,"`
}

func (*Ngn1N2TypeIMultiPanel_TwoTwoOneTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_TwoFourOneTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_FourTwoOneTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_TwoTwoTwoTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_TwoEightOneTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_FourFourOneTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_TwoFourTwoTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_FourTwoTwoTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

// sequence from nr-rrc-definitions.asn1:631
// {typeI-MultiPanelsubType}
type TypeIMultiPanelsubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NgN1N2 *Ngn1N2TypeIMultiPanel `protobuf:"bytes,1,opt,name=ng_n1_n2,json=ng-n1-n2,proto3" json:"ng_n1_n2,omitempty"`
	// @inject_tag: aper:"sizeLB:4,sizeUB:4,"
	RiRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=ri_restriction,json=ri-Restriction,proto3" json:"ri_restriction,omitempty" aper:"sizeLB:4,sizeUB:4,"`
}

func (x *TypeIMultiPanelsubType) Reset() {
	*x = TypeIMultiPanelsubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeIMultiPanelsubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeIMultiPanelsubType) ProtoMessage() {}

func (x *TypeIMultiPanelsubType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeIMultiPanelsubType.ProtoReflect.Descriptor instead.
func (*TypeIMultiPanelsubType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{105}
}

func (x *TypeIMultiPanelsubType) GetNgN1N2() *Ngn1N2TypeIMultiPanel {
	if x != nil {
		return x.NgN1N2
	}
	return nil
}

func (x *TypeIMultiPanelsubType) GetRiRestriction() *asn1.BitString {
	if x != nil {
		return x.RiRestriction
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:620
// {subTypetype1}
type SubTypetype1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:620
	//
	// Types that are assignable to SubTypetype1:
	//	*SubTypetype1_TypeISinglePanel
	//	*SubTypetype1_TypeIMultiPanel
	SubTypetype1 isSubTypetype1_SubTypetype1 `protobuf_oneof:"sub_typetype1"`
}

func (x *SubTypetype1) Reset() {
	*x = SubTypetype1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTypetype1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTypetype1) ProtoMessage() {}

func (x *SubTypetype1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTypetype1.ProtoReflect.Descriptor instead.
func (*SubTypetype1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{106}
}

func (m *SubTypetype1) GetSubTypetype1() isSubTypetype1_SubTypetype1 {
	if m != nil {
		return m.SubTypetype1
	}
	return nil
}

func (x *SubTypetype1) GetTypeISinglePanel() *TypeISinglePanelsubType {
	if x, ok := x.GetSubTypetype1().(*SubTypetype1_TypeISinglePanel); ok {
		return x.TypeISinglePanel
	}
	return nil
}

func (x *SubTypetype1) GetTypeIMultiPanel() *TypeIMultiPanelsubType {
	if x, ok := x.GetSubTypetype1().(*SubTypetype1_TypeIMultiPanel); ok {
		return x.TypeIMultiPanel
	}
	return nil
}

type isSubTypetype1_SubTypetype1 interface {
	isSubTypetype1_SubTypetype1()
}

type SubTypetype1_TypeISinglePanel struct {
	// @inject_tag: aper:"choiceIdx:1,"
	TypeISinglePanel *TypeISinglePanelsubType `protobuf:"bytes,1,opt,name=type_i_single_panel,json=typeI-SinglePanel,proto3,oneof" aper:"choiceIdx:1,"`
}

type SubTypetype1_TypeIMultiPanel struct {
	// @inject_tag: aper:"choiceIdx:2,"
	TypeIMultiPanel *TypeIMultiPanelsubType `protobuf:"bytes,2,opt,name=type_i_multi_panel,json=typeI-MultiPanel,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*SubTypetype1_TypeISinglePanel) isSubTypetype1_SubTypetype1() {}

func (*SubTypetype1_TypeIMultiPanel) isSubTypetype1_SubTypetype1() {}

// sequence from nr-rrc-definitions.asn1:634
// {type1codebookType}
type Type1CodebookType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubType *SubTypetype1 `protobuf:"bytes,1,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	// @inject_tag: aper:"valueLB:1,valueUB:2,"
	CodebookMode int32 `protobuf:"varint,2,opt,name=codebook_mode,json=codebookMode,proto3" json:"codebook_mode,omitempty" aper:"valueLB:1,valueUB:2,"`
}

func (x *Type1CodebookType) Reset() {
	*x = Type1CodebookType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type1CodebookType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type1CodebookType) ProtoMessage() {}

func (x *Type1CodebookType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type1CodebookType.ProtoReflect.Descriptor instead.
func (*Type1CodebookType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{107}
}

func (x *Type1CodebookType) GetSubType() *SubTypetype1 {
	if x != nil {
		return x.SubType
	}
	return nil
}

func (x *Type1CodebookType) GetCodebookMode() int32 {
	if x != nil {
		return x.CodebookMode
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:642
// {n1-n2-codebookSubsetRestrictiontypeII}
type N1N2CodebookSubsetRestrictiontypeIi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:642
	//
	// Types that are assignable to N1N2CodebookSubsetRestrictiontypeIi:
	//	*N1N2CodebookSubsetRestrictiontypeIi_TwoOne
	//	*N1N2CodebookSubsetRestrictiontypeIi_TwoTwo
	//	*N1N2CodebookSubsetRestrictiontypeIi_FourOne
	//	*N1N2CodebookSubsetRestrictiontypeIi_ThreeTwo
	//	*N1N2CodebookSubsetRestrictiontypeIi_SixOne
	//	*N1N2CodebookSubsetRestrictiontypeIi_FourTwo
	//	*N1N2CodebookSubsetRestrictiontypeIi_EightOne
	//	*N1N2CodebookSubsetRestrictiontypeIi_FourThree
	//	*N1N2CodebookSubsetRestrictiontypeIi_SixTwo
	//	*N1N2CodebookSubsetRestrictiontypeIi_TwelveOne
	//	*N1N2CodebookSubsetRestrictiontypeIi_FourFour
	//	*N1N2CodebookSubsetRestrictiontypeIi_EightTwo
	//	*N1N2CodebookSubsetRestrictiontypeIi_SixteenOne
	N1N2CodebookSubsetRestrictiontypeIi isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi `protobuf_oneof:"n1_n2_codebook_subset_restrictiontype_ii"`
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) Reset() {
	*x = N1N2CodebookSubsetRestrictiontypeIi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N1N2CodebookSubsetRestrictiontypeIi) ProtoMessage() {}

func (x *N1N2CodebookSubsetRestrictiontypeIi) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N1N2CodebookSubsetRestrictiontypeIi.ProtoReflect.Descriptor instead.
func (*N1N2CodebookSubsetRestrictiontypeIi) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{108}
}

func (m *N1N2CodebookSubsetRestrictiontypeIi) GetN1N2CodebookSubsetRestrictiontypeIi() isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi {
	if m != nil {
		return m.N1N2CodebookSubsetRestrictiontypeIi
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetTwoOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_TwoOne); ok {
		return x.TwoOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetTwoTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_TwoTwo); ok {
		return x.TwoTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetFourOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_FourOne); ok {
		return x.FourOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetThreeTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_ThreeTwo); ok {
		return x.ThreeTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetSixOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_SixOne); ok {
		return x.SixOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetFourTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_FourTwo); ok {
		return x.FourTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetEightOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_EightOne); ok {
		return x.EightOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetFourThree() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_FourThree); ok {
		return x.FourThree
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetSixTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_SixTwo); ok {
		return x.SixTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetTwelveOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_TwelveOne); ok {
		return x.TwelveOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetFourFour() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_FourFour); ok {
		return x.FourFour
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetEightTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_EightTwo); ok {
		return x.EightTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetSixteenOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_SixteenOne); ok {
		return x.SixteenOne
	}
	return nil
}

type isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi interface {
	isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi()
}

type N1N2CodebookSubsetRestrictiontypeIi_TwoOne struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:16,sizeUB:16,"
	TwoOne *asn1.BitString `protobuf:"bytes,1,opt,name=two_one,json=two-one,proto3,oneof" aper:"choiceIdx:1,sizeLB:16,sizeUB:16,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_TwoTwo struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:43,sizeUB:43,"
	TwoTwo *asn1.BitString `protobuf:"bytes,2,opt,name=two_two,json=two-two,proto3,oneof" aper:"choiceIdx:2,sizeLB:43,sizeUB:43,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_FourOne struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:32,sizeUB:32,"
	FourOne *asn1.BitString `protobuf:"bytes,3,opt,name=four_one,json=four-one,proto3,oneof" aper:"choiceIdx:3,sizeLB:32,sizeUB:32,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_ThreeTwo struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:59,sizeUB:59,"
	ThreeTwo *asn1.BitString `protobuf:"bytes,4,opt,name=three_two,json=three-two,proto3,oneof" aper:"choiceIdx:4,sizeLB:59,sizeUB:59,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_SixOne struct {
	// @inject_tag: aper:"choiceIdx:5,sizeLB:48,sizeUB:48,"
	SixOne *asn1.BitString `protobuf:"bytes,5,opt,name=six_one,json=six-one,proto3,oneof" aper:"choiceIdx:5,sizeLB:48,sizeUB:48,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_FourTwo struct {
	// @inject_tag: aper:"choiceIdx:6,sizeLB:75,sizeUB:75,"
	FourTwo *asn1.BitString `protobuf:"bytes,6,opt,name=four_two,json=four-two,proto3,oneof" aper:"choiceIdx:6,sizeLB:75,sizeUB:75,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_EightOne struct {
	// @inject_tag: aper:"choiceIdx:7,sizeLB:64,sizeUB:64,"
	EightOne *asn1.BitString `protobuf:"bytes,7,opt,name=eight_one,json=eight-one,proto3,oneof" aper:"choiceIdx:7,sizeLB:64,sizeUB:64,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_FourThree struct {
	// @inject_tag: aper:"choiceIdx:8,sizeLB:107,sizeUB:107,"
	FourThree *asn1.BitString `protobuf:"bytes,8,opt,name=four_three,json=four-three,proto3,oneof" aper:"choiceIdx:8,sizeLB:107,sizeUB:107,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_SixTwo struct {
	// @inject_tag: aper:"choiceIdx:9,sizeLB:107,sizeUB:107,"
	SixTwo *asn1.BitString `protobuf:"bytes,9,opt,name=six_two,json=six-two,proto3,oneof" aper:"choiceIdx:9,sizeLB:107,sizeUB:107,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_TwelveOne struct {
	// @inject_tag: aper:"choiceIdx:10,sizeLB:96,sizeUB:96,"
	TwelveOne *asn1.BitString `protobuf:"bytes,10,opt,name=twelve_one,json=twelve-one,proto3,oneof" aper:"choiceIdx:10,sizeLB:96,sizeUB:96,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_FourFour struct {
	// @inject_tag: aper:"choiceIdx:11,sizeLB:139,sizeUB:139,"
	FourFour *asn1.BitString `protobuf:"bytes,11,opt,name=four_four,json=four-four,proto3,oneof" aper:"choiceIdx:11,sizeLB:139,sizeUB:139,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_EightTwo struct {
	// @inject_tag: aper:"choiceIdx:12,sizeLB:139,sizeUB:139,"
	EightTwo *asn1.BitString `protobuf:"bytes,12,opt,name=eight_two,json=eight-two,proto3,oneof" aper:"choiceIdx:12,sizeLB:139,sizeUB:139,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_SixteenOne struct {
	// @inject_tag: aper:"choiceIdx:13,sizeLB:128,sizeUB:128,"
	SixteenOne *asn1.BitString `protobuf:"bytes,13,opt,name=sixteen_one,json=sixteen-one,proto3,oneof" aper:"choiceIdx:13,sizeLB:128,sizeUB:128,"`
}

func (*N1N2CodebookSubsetRestrictiontypeIi_TwoOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_TwoTwo) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_FourOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_ThreeTwo) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_SixOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_FourTwo) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_EightOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_FourThree) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_SixTwo) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_TwelveOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_FourFour) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_EightTwo) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_SixteenOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

// sequence from nr-rrc-definitions.asn1:655
// {typeIIsubType}
type TypeIisubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N1N2CodebookSubsetRestriction *N1N2CodebookSubsetRestrictiontypeIi `protobuf:"bytes,1,opt,name=n1_n2_codebook_subset_restriction,json=n1-n2-codebookSubsetRestriction,proto3" json:"n1_n2_codebook_subset_restriction,omitempty"`
	// @inject_tag: aper:"sizeLB:2,sizeUB:2,"
	TypeIiRiRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=type_ii_ri_restriction,json=typeII-RI-Restriction,proto3" json:"type_ii_ri_restriction,omitempty" aper:"sizeLB:2,sizeUB:2,"`
}

func (x *TypeIisubType) Reset() {
	*x = TypeIisubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeIisubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeIisubType) ProtoMessage() {}

func (x *TypeIisubType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeIisubType.ProtoReflect.Descriptor instead.
func (*TypeIisubType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{109}
}

func (x *TypeIisubType) GetN1N2CodebookSubsetRestriction() *N1N2CodebookSubsetRestrictiontypeIi {
	if x != nil {
		return x.N1N2CodebookSubsetRestriction
	}
	return nil
}

func (x *TypeIisubType) GetTypeIiRiRestriction() *asn1.BitString {
	if x != nil {
		return x.TypeIiRiRestriction
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:659
// {typeII-PortSelectionsubType}
type TypeIiPortSelectionsubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:3,"
	PortSelectionSamplingSize *PortSelectionSamplingSizetypeIiportSelection `protobuf:"varint,1,opt,name=port_selection_sampling_size,json=portSelectionSamplingSize,proto3,enum=nr_rrc_definitions.v1.PortSelectionSamplingSizetypeIiportSelection,oneof" json:"port_selection_sampling_size,omitempty" aper:"optional,valueLB:0,valueUB:3,"`
	// @inject_tag: aper:"sizeLB:2,sizeUB:2,"
	TypeIiPortSelectionRiRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=type_ii_port_selection_ri_restriction,json=typeII-PortSelectionRI-Restriction,proto3" json:"type_ii_port_selection_ri_restriction,omitempty" aper:"sizeLB:2,sizeUB:2,"`
}

func (x *TypeIiPortSelectionsubType) Reset() {
	*x = TypeIiPortSelectionsubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeIiPortSelectionsubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeIiPortSelectionsubType) ProtoMessage() {}

func (x *TypeIiPortSelectionsubType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeIiPortSelectionsubType.ProtoReflect.Descriptor instead.
func (*TypeIiPortSelectionsubType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{110}
}

func (x *TypeIiPortSelectionsubType) GetPortSelectionSamplingSize() PortSelectionSamplingSizetypeIiportSelection {
	if x != nil && x.PortSelectionSamplingSize != nil {
		return *x.PortSelectionSamplingSize
	}
	return PortSelectionSamplingSizetypeIiportSelection_PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N1
}

func (x *TypeIiPortSelectionsubType) GetTypeIiPortSelectionRiRestriction() *asn1.BitString {
	if x != nil {
		return x.TypeIiPortSelectionRiRestriction
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:657
// {subTypetype2}
type SubTypetype2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:657
	//
	// Types that are assignable to SubTypetype2:
	//	*SubTypetype2_TypeIi
	//	*SubTypetype2_TypeIiPortSelection
	SubTypetype2 isSubTypetype2_SubTypetype2 `protobuf_oneof:"sub_typetype2"`
}

func (x *SubTypetype2) Reset() {
	*x = SubTypetype2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTypetype2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTypetype2) ProtoMessage() {}

func (x *SubTypetype2) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTypetype2.ProtoReflect.Descriptor instead.
func (*SubTypetype2) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{111}
}

func (m *SubTypetype2) GetSubTypetype2() isSubTypetype2_SubTypetype2 {
	if m != nil {
		return m.SubTypetype2
	}
	return nil
}

func (x *SubTypetype2) GetTypeIi() *TypeIisubType {
	if x, ok := x.GetSubTypetype2().(*SubTypetype2_TypeIi); ok {
		return x.TypeIi
	}
	return nil
}

func (x *SubTypetype2) GetTypeIiPortSelection() *TypeIiPortSelectionsubType {
	if x, ok := x.GetSubTypetype2().(*SubTypetype2_TypeIiPortSelection); ok {
		return x.TypeIiPortSelection
	}
	return nil
}

type isSubTypetype2_SubTypetype2 interface {
	isSubTypetype2_SubTypetype2()
}

type SubTypetype2_TypeIi struct {
	// @inject_tag: aper:"choiceIdx:1,"
	TypeIi *TypeIisubType `protobuf:"bytes,1,opt,name=type_ii,json=typeII,proto3,oneof" aper:"choiceIdx:1,"`
}

type SubTypetype2_TypeIiPortSelection struct {
	// @inject_tag: aper:"choiceIdx:2,"
	TypeIiPortSelection *TypeIiPortSelectionsubType `protobuf:"bytes,2,opt,name=type_ii_port_selection,json=typeII-PortSelection,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*SubTypetype2_TypeIi) isSubTypetype2_SubTypetype2() {}

func (*SubTypetype2_TypeIiPortSelection) isSubTypetype2_SubTypetype2() {}

// sequence from nr-rrc-definitions.asn1:662
// {type2codebookType}
type Type2CodebookType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubType *SubTypetype2 `protobuf:"bytes,1,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	PhaseAlphabetSize PhaseAlphabetSizetype2 `protobuf:"varint,2,opt,name=phase_alphabet_size,json=phaseAlphabetSize,proto3,enum=nr_rrc_definitions.v1.PhaseAlphabetSizetype2" json:"phase_alphabet_size,omitempty" aper:"valueLB:0,valueUB:1,"`
	SubbandAmplitude  bool                   `protobuf:"varint,3,opt,name=subband_amplitude,json=subbandAmplitude,proto3" json:"subband_amplitude,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:2,"
	NumberOfBeams NumberOfBeamstype2 `protobuf:"varint,4,opt,name=number_of_beams,json=numberOfBeams,proto3,enum=nr_rrc_definitions.v1.NumberOfBeamstype2" json:"number_of_beams,omitempty" aper:"valueLB:0,valueUB:2,"`
}

func (x *Type2CodebookType) Reset() {
	*x = Type2CodebookType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type2CodebookType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type2CodebookType) ProtoMessage() {}

func (x *Type2CodebookType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type2CodebookType.ProtoReflect.Descriptor instead.
func (*Type2CodebookType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{112}
}

func (x *Type2CodebookType) GetSubType() *SubTypetype2 {
	if x != nil {
		return x.SubType
	}
	return nil
}

func (x *Type2CodebookType) GetPhaseAlphabetSize() PhaseAlphabetSizetype2 {
	if x != nil {
		return x.PhaseAlphabetSize
	}
	return PhaseAlphabetSizetype2_PHASE_ALPHABET_SIZETYPE2_N4
}

func (x *Type2CodebookType) GetSubbandAmplitude() bool {
	if x != nil {
		return x.SubbandAmplitude
	}
	return false
}

func (x *Type2CodebookType) GetNumberOfBeams() NumberOfBeamstype2 {
	if x != nil {
		return x.NumberOfBeams
	}
	return NumberOfBeamstype2_NUMBER_OF_BEAMSTYPE2_TWO
}

// choice from nr-rrc-definitions.asn1:637
// {codebookTypeCodebookConfig}
type CodebookTypeCodebookConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:637
	//
	// Types that are assignable to CodebookTypeCodebookConfig:
	//	*CodebookTypeCodebookConfig_Type1
	//	*CodebookTypeCodebookConfig_Type2
	CodebookTypeCodebookConfig isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig `protobuf_oneof:"codebook_type_codebook_config"`
}

func (x *CodebookTypeCodebookConfig) Reset() {
	*x = CodebookTypeCodebookConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookTypeCodebookConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookTypeCodebookConfig) ProtoMessage() {}

func (x *CodebookTypeCodebookConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookTypeCodebookConfig.ProtoReflect.Descriptor instead.
func (*CodebookTypeCodebookConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{113}
}

func (m *CodebookTypeCodebookConfig) GetCodebookTypeCodebookConfig() isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig {
	if m != nil {
		return m.CodebookTypeCodebookConfig
	}
	return nil
}

func (x *CodebookTypeCodebookConfig) GetType1() *Type1CodebookType {
	if x, ok := x.GetCodebookTypeCodebookConfig().(*CodebookTypeCodebookConfig_Type1); ok {
		return x.Type1
	}
	return nil
}

func (x *CodebookTypeCodebookConfig) GetType2() *Type2CodebookType {
	if x, ok := x.GetCodebookTypeCodebookConfig().(*CodebookTypeCodebookConfig_Type2); ok {
		return x.Type2
	}
	return nil
}

type isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig interface {
	isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig()
}

type CodebookTypeCodebookConfig_Type1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Type1 *Type1CodebookType `protobuf:"bytes,1,opt,name=type1,proto3,oneof" aper:"choiceIdx:1,"`
}

type CodebookTypeCodebookConfig_Type2 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Type2 *Type2CodebookType `protobuf:"bytes,2,opt,name=type2,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*CodebookTypeCodebookConfig_Type1) isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig() {}

func (*CodebookTypeCodebookConfig_Type2) isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig() {}

// sequence from nr-rrc-definitions.asn1:668
// {CodebookConfig}
type CodebookConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodebookType *CodebookTypeCodebookConfig `protobuf:"bytes,1,opt,name=codebook_type,json=codebookType,proto3" json:"codebook_type,omitempty"`
}

func (x *CodebookConfig) Reset() {
	*x = CodebookConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookConfig) ProtoMessage() {}

func (x *CodebookConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookConfig.ProtoReflect.Descriptor instead.
func (*CodebookConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{114}
}

func (x *CodebookConfig) GetCodebookType() *CodebookTypeCodebookConfig {
	if x != nil {
		return x.CodebookType
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:676
// {n1-n2-codebookSubsetRestriction-r16typeII-r16}
type N1N2CodebookSubsetRestrictionr16TypeIir16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:676
	//
	// Types that are assignable to N1N2CodebookSubsetRestrictionR16TypeIiR16:
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoOne
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoTwo
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_FourOne
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_ThreeTwo
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_SixOne
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_FourTwo
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_EightOne
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_FourThree
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_SixTwo
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_TwelveOne
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_FourFour
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_EightTwo
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_SixteenOne
	N1N2CodebookSubsetRestrictionR16TypeIiR16 isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16 `protobuf_oneof:"n1_n2_codebook_subset_restriction_r16type_ii_r16"`
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) Reset() {
	*x = N1N2CodebookSubsetRestrictionr16TypeIir16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16) ProtoMessage() {}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N1N2CodebookSubsetRestrictionr16TypeIir16.ProtoReflect.Descriptor instead.
func (*N1N2CodebookSubsetRestrictionr16TypeIir16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{115}
}

func (m *N1N2CodebookSubsetRestrictionr16TypeIir16) GetN1N2CodebookSubsetRestrictionR16TypeIiR16() isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16 {
	if m != nil {
		return m.N1N2CodebookSubsetRestrictionR16TypeIiR16
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetTwoOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoOne); ok {
		return x.TwoOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetTwoTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoTwo); ok {
		return x.TwoTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetFourOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourOne); ok {
		return x.FourOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetThreeTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_ThreeTwo); ok {
		return x.ThreeTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetSixOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixOne); ok {
		return x.SixOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetFourTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourTwo); ok {
		return x.FourTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetEightOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_EightOne); ok {
		return x.EightOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetFourThree() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourThree); ok {
		return x.FourThree
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetSixTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixTwo); ok {
		return x.SixTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetTwelveOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwelveOne); ok {
		return x.TwelveOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetFourFour() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourFour); ok {
		return x.FourFour
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetEightTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_EightTwo); ok {
		return x.EightTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetSixteenOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixteenOne); ok {
		return x.SixteenOne
	}
	return nil
}

type isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16 interface {
	isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16()
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_TwoOne struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:16,sizeUB:16,"
	TwoOne *asn1.BitString `protobuf:"bytes,1,opt,name=two_one,json=two-one,proto3,oneof" aper:"choiceIdx:1,sizeLB:16,sizeUB:16,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_TwoTwo struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:43,sizeUB:43,"
	TwoTwo *asn1.BitString `protobuf:"bytes,2,opt,name=two_two,json=two-two,proto3,oneof" aper:"choiceIdx:2,sizeLB:43,sizeUB:43,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_FourOne struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:32,sizeUB:32,"
	FourOne *asn1.BitString `protobuf:"bytes,3,opt,name=four_one,json=four-one,proto3,oneof" aper:"choiceIdx:3,sizeLB:32,sizeUB:32,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_ThreeTwo struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:59,sizeUB:59,"
	ThreeTwo *asn1.BitString `protobuf:"bytes,4,opt,name=three_two,json=three-two,proto3,oneof" aper:"choiceIdx:4,sizeLB:59,sizeUB:59,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_SixOne struct {
	// @inject_tag: aper:"choiceIdx:5,sizeLB:48,sizeUB:48,"
	SixOne *asn1.BitString `protobuf:"bytes,5,opt,name=six_one,json=six-one,proto3,oneof" aper:"choiceIdx:5,sizeLB:48,sizeUB:48,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_FourTwo struct {
	// @inject_tag: aper:"choiceIdx:6,sizeLB:75,sizeUB:75,"
	FourTwo *asn1.BitString `protobuf:"bytes,6,opt,name=four_two,json=four-two,proto3,oneof" aper:"choiceIdx:6,sizeLB:75,sizeUB:75,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_EightOne struct {
	// @inject_tag: aper:"choiceIdx:7,sizeLB:64,sizeUB:64,"
	EightOne *asn1.BitString `protobuf:"bytes,7,opt,name=eight_one,json=eight-one,proto3,oneof" aper:"choiceIdx:7,sizeLB:64,sizeUB:64,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_FourThree struct {
	// @inject_tag: aper:"choiceIdx:8,sizeLB:107,sizeUB:107,"
	FourThree *asn1.BitString `protobuf:"bytes,8,opt,name=four_three,json=four-three,proto3,oneof" aper:"choiceIdx:8,sizeLB:107,sizeUB:107,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_SixTwo struct {
	// @inject_tag: aper:"choiceIdx:9,sizeLB:107,sizeUB:107,"
	SixTwo *asn1.BitString `protobuf:"bytes,9,opt,name=six_two,json=six-two,proto3,oneof" aper:"choiceIdx:9,sizeLB:107,sizeUB:107,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_TwelveOne struct {
	// @inject_tag: aper:"choiceIdx:10,sizeLB:96,sizeUB:96,"
	TwelveOne *asn1.BitString `protobuf:"bytes,10,opt,name=twelve_one,json=twelve-one,proto3,oneof" aper:"choiceIdx:10,sizeLB:96,sizeUB:96,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_FourFour struct {
	// @inject_tag: aper:"choiceIdx:11,sizeLB:139,sizeUB:139,"
	FourFour *asn1.BitString `protobuf:"bytes,11,opt,name=four_four,json=four-four,proto3,oneof" aper:"choiceIdx:11,sizeLB:139,sizeUB:139,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_EightTwo struct {
	// @inject_tag: aper:"choiceIdx:12,sizeLB:139,sizeUB:139,"
	EightTwo *asn1.BitString `protobuf:"bytes,12,opt,name=eight_two,json=eight-two,proto3,oneof" aper:"choiceIdx:12,sizeLB:139,sizeUB:139,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_SixteenOne struct {
	// @inject_tag: aper:"choiceIdx:13,sizeLB:128,sizeUB:128,"
	SixteenOne *asn1.BitString `protobuf:"bytes,13,opt,name=sixteen_one,json=sixteen-one,proto3,oneof" aper:"choiceIdx:13,sizeLB:128,sizeUB:128,"`
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoTwo) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_FourOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_ThreeTwo) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_SixOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_FourTwo) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_EightOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_FourThree) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_SixTwo) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_TwelveOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_FourFour) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_EightTwo) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_SixteenOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

// sequence from nr-rrc-definitions.asn1:689
// {typeII-r16subType}
type TypeIir16SubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N1N2CodebookSubsetRestrictionR16 *N1N2CodebookSubsetRestrictionr16TypeIir16 `protobuf:"bytes,1,opt,name=n1_n2_codebook_subset_restriction_r16,json=n1-n2-codebookSubsetRestriction-r16,proto3" json:"n1_n2_codebook_subset_restriction_r16,omitempty"`
	// @inject_tag: aper:"sizeLB:4,sizeUB:4,"
	TypeIiRiRestrictionR16 *asn1.BitString `protobuf:"bytes,2,opt,name=type_ii_ri_restriction_r16,json=typeII-RI-Restriction-r16,proto3" json:"type_ii_ri_restriction_r16,omitempty" aper:"sizeLB:4,sizeUB:4,"`
}

func (x *TypeIir16SubType) Reset() {
	*x = TypeIir16SubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeIir16SubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeIir16SubType) ProtoMessage() {}

func (x *TypeIir16SubType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeIir16SubType.ProtoReflect.Descriptor instead.
func (*TypeIir16SubType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{116}
}

func (x *TypeIir16SubType) GetN1N2CodebookSubsetRestrictionR16() *N1N2CodebookSubsetRestrictionr16TypeIir16 {
	if x != nil {
		return x.N1N2CodebookSubsetRestrictionR16
	}
	return nil
}

func (x *TypeIir16SubType) GetTypeIiRiRestrictionR16() *asn1.BitString {
	if x != nil {
		return x.TypeIiRiRestrictionR16
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:693
// {typeII-PortSelection-r16subType}
type TypeIiPortSelectionr16SubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	PortSelectionSamplingSizeR16 PortSelectionSamplingSizer16TypeIiportSelectionr16 `protobuf:"varint,1,opt,name=port_selection_sampling_size_r16,json=portSelectionSamplingSize-r16,proto3,enum=nr_rrc_definitions.v1.PortSelectionSamplingSizer16TypeIiportSelectionr16" json:"port_selection_sampling_size_r16,omitempty" aper:"valueLB:0,valueUB:3,"`
	// @inject_tag: aper:"sizeLB:4,sizeUB:4,"
	TypeIiPortSelectionRiRestrictionR16 *asn1.BitString `protobuf:"bytes,2,opt,name=type_ii_port_selection_ri_restriction_r16,json=typeII-PortSelectionRI-Restriction-r16,proto3" json:"type_ii_port_selection_ri_restriction_r16,omitempty" aper:"sizeLB:4,sizeUB:4,"`
}

func (x *TypeIiPortSelectionr16SubType) Reset() {
	*x = TypeIiPortSelectionr16SubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeIiPortSelectionr16SubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeIiPortSelectionr16SubType) ProtoMessage() {}

func (x *TypeIiPortSelectionr16SubType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeIiPortSelectionr16SubType.ProtoReflect.Descriptor instead.
func (*TypeIiPortSelectionr16SubType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{117}
}

func (x *TypeIiPortSelectionr16SubType) GetPortSelectionSamplingSizeR16() PortSelectionSamplingSizer16TypeIiportSelectionr16 {
	if x != nil {
		return x.PortSelectionSamplingSizeR16
	}
	return PortSelectionSamplingSizer16TypeIiportSelectionr16_PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N1
}

func (x *TypeIiPortSelectionr16SubType) GetTypeIiPortSelectionRiRestrictionR16() *asn1.BitString {
	if x != nil {
		return x.TypeIiPortSelectionRiRestrictionR16
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:691
// {subTypetype2-r16}
type SubTypetype2R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:691
	//
	// Types that are assignable to SubTypetype2R16:
	//	*SubTypetype2R16_TypeIiR16
	//	*SubTypetype2R16_TypeIiPortSelectionR16
	SubTypetype2R16 isSubTypetype2R16_SubTypetype2R16 `protobuf_oneof:"sub_typetype2_r16"`
}

func (x *SubTypetype2R16) Reset() {
	*x = SubTypetype2R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTypetype2R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTypetype2R16) ProtoMessage() {}

func (x *SubTypetype2R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTypetype2R16.ProtoReflect.Descriptor instead.
func (*SubTypetype2R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{118}
}

func (m *SubTypetype2R16) GetSubTypetype2R16() isSubTypetype2R16_SubTypetype2R16 {
	if m != nil {
		return m.SubTypetype2R16
	}
	return nil
}

func (x *SubTypetype2R16) GetTypeIiR16() *TypeIir16SubType {
	if x, ok := x.GetSubTypetype2R16().(*SubTypetype2R16_TypeIiR16); ok {
		return x.TypeIiR16
	}
	return nil
}

func (x *SubTypetype2R16) GetTypeIiPortSelectionR16() *TypeIiPortSelectionr16SubType {
	if x, ok := x.GetSubTypetype2R16().(*SubTypetype2R16_TypeIiPortSelectionR16); ok {
		return x.TypeIiPortSelectionR16
	}
	return nil
}

type isSubTypetype2R16_SubTypetype2R16 interface {
	isSubTypetype2R16_SubTypetype2R16()
}

type SubTypetype2R16_TypeIiR16 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	TypeIiR16 *TypeIir16SubType `protobuf:"bytes,1,opt,name=type_ii_r16,json=typeII-r16,proto3,oneof" aper:"choiceIdx:1,"`
}

type SubTypetype2R16_TypeIiPortSelectionR16 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	TypeIiPortSelectionR16 *TypeIiPortSelectionr16SubType `protobuf:"bytes,2,opt,name=type_ii_port_selection_r16,json=typeII-PortSelection-r16,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*SubTypetype2R16_TypeIiR16) isSubTypetype2R16_SubTypetype2R16() {}

func (*SubTypetype2R16_TypeIiPortSelectionR16) isSubTypetype2R16_SubTypetype2R16() {}

// sequence from nr-rrc-definitions.asn1:696
// {type2-r16codebookType-r16}
type Type2R16CodebookTyper16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubType *SubTypetype2R16 `protobuf:"bytes,1,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	// @inject_tag: aper:"valueLB:1,valueUB:2,"
	NumberOfPmiSubbandsPerCqiSubbandR16 int32 `protobuf:"varint,2,opt,name=number_of_pmi_subbands_per_cqi_subband_r16,json=numberOfPMI-SubbandsPerCQI-Subband-r16,proto3" json:"number_of_pmi_subbands_per_cqi_subband_r16,omitempty" aper:"valueLB:1,valueUB:2,"`
	// @inject_tag: aper:"valueLB:1,valueUB:8,"
	ParamCombinationR16 int32 `protobuf:"varint,3,opt,name=param_combination_r16,json=paramCombination-r16,proto3" json:"param_combination_r16,omitempty" aper:"valueLB:1,valueUB:8,"`
}

func (x *Type2R16CodebookTyper16) Reset() {
	*x = Type2R16CodebookTyper16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type2R16CodebookTyper16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type2R16CodebookTyper16) ProtoMessage() {}

func (x *Type2R16CodebookTyper16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type2R16CodebookTyper16.ProtoReflect.Descriptor instead.
func (*Type2R16CodebookTyper16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{119}
}

func (x *Type2R16CodebookTyper16) GetSubType() *SubTypetype2R16 {
	if x != nil {
		return x.SubType
	}
	return nil
}

func (x *Type2R16CodebookTyper16) GetNumberOfPmiSubbandsPerCqiSubbandR16() int32 {
	if x != nil {
		return x.NumberOfPmiSubbandsPerCqiSubbandR16
	}
	return 0
}

func (x *Type2R16CodebookTyper16) GetParamCombinationR16() int32 {
	if x != nil {
		return x.ParamCombinationR16
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:700
// {codebookType-r16CodebookConfig-r16}
type CodebookTyper16CodebookConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:700
	//
	// Types that are assignable to CodebookTypeR16CodebookConfigR16:
	//	*CodebookTyper16CodebookConfigr16_Type2R16
	CodebookTypeR16CodebookConfigR16 isCodebookTyper16CodebookConfigr16_CodebookTypeR16CodebookConfigR16 `protobuf_oneof:"codebook_type_r16_codebook_config_r16"`
}

func (x *CodebookTyper16CodebookConfigr16) Reset() {
	*x = CodebookTyper16CodebookConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookTyper16CodebookConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookTyper16CodebookConfigr16) ProtoMessage() {}

func (x *CodebookTyper16CodebookConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookTyper16CodebookConfigr16.ProtoReflect.Descriptor instead.
func (*CodebookTyper16CodebookConfigr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{120}
}

func (m *CodebookTyper16CodebookConfigr16) GetCodebookTypeR16CodebookConfigR16() isCodebookTyper16CodebookConfigr16_CodebookTypeR16CodebookConfigR16 {
	if m != nil {
		return m.CodebookTypeR16CodebookConfigR16
	}
	return nil
}

func (x *CodebookTyper16CodebookConfigr16) GetType2R16() *Type2R16CodebookTyper16 {
	if x, ok := x.GetCodebookTypeR16CodebookConfigR16().(*CodebookTyper16CodebookConfigr16_Type2R16); ok {
		return x.Type2R16
	}
	return nil
}

type isCodebookTyper16CodebookConfigr16_CodebookTypeR16CodebookConfigR16 interface {
	isCodebookTyper16CodebookConfigr16_CodebookTypeR16CodebookConfigR16()
}

type CodebookTyper16CodebookConfigr16_Type2R16 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Type2R16 *Type2R16CodebookTyper16 `protobuf:"bytes,1,opt,name=type2_r16,json=type2-r16,proto3,oneof" aper:"choiceIdx:1,"`
}

func (*CodebookTyper16CodebookConfigr16_Type2R16) isCodebookTyper16CodebookConfigr16_CodebookTypeR16CodebookConfigR16() {
}

// sequence from nr-rrc-definitions.asn1:701
// {CodebookConfig-r16}
type CodebookConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodebookTypeR16 *CodebookTyper16CodebookConfigr16 `protobuf:"bytes,1,opt,name=codebook_type_r16,json=codebookType-r16,proto3" json:"codebook_type_r16,omitempty"`
}

func (x *CodebookConfigr16) Reset() {
	*x = CodebookConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookConfigr16) ProtoMessage() {}

func (x *CodebookConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookConfigr16.ProtoReflect.Descriptor instead.
func (*CodebookConfigr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{121}
}

func (x *CodebookConfigr16) GetCodebookTypeR16() *CodebookTyper16CodebookConfigr16 {
	if x != nil {
		return x.CodebookTypeR16
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:710
// {nrOfAntennaPortstypeI-SinglePanel-Group1-r17}
type NrOfAntennaPortstypeISinglePanelGroup1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:710
	//
	// Types that are assignable to NrOfAntennaPortstypeISinglePanelGroup1R17:
	//	*NrOfAntennaPortstypeISinglePanelGroup1R17_Two
	//	*NrOfAntennaPortstypeISinglePanelGroup1R17_MoreThanTwo
	NrOfAntennaPortstypeISinglePanelGroup1R17 isNrOfAntennaPortstypeISinglePanelGroup1R17_NrOfAntennaPortstypeISinglePanelGroup1R17 `protobuf_oneof:"nr_of_antenna_portstype_i_single_panel_group1_r17"`
}

func (x *NrOfAntennaPortstypeISinglePanelGroup1R17) Reset() {
	*x = NrOfAntennaPortstypeISinglePanelGroup1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrOfAntennaPortstypeISinglePanelGroup1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrOfAntennaPortstypeISinglePanelGroup1R17) ProtoMessage() {}

func (x *NrOfAntennaPortstypeISinglePanelGroup1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrOfAntennaPortstypeISinglePanelGroup1R17.ProtoReflect.Descriptor instead.
func (*NrOfAntennaPortstypeISinglePanelGroup1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{122}
}

func (m *NrOfAntennaPortstypeISinglePanelGroup1R17) GetNrOfAntennaPortstypeISinglePanelGroup1R17() isNrOfAntennaPortstypeISinglePanelGroup1R17_NrOfAntennaPortstypeISinglePanelGroup1R17 {
	if m != nil {
		return m.NrOfAntennaPortstypeISinglePanelGroup1R17
	}
	return nil
}

func (x *NrOfAntennaPortstypeISinglePanelGroup1R17) GetTwo() *TwonrOfAntennaPorts {
	if x, ok := x.GetNrOfAntennaPortstypeISinglePanelGroup1R17().(*NrOfAntennaPortstypeISinglePanelGroup1R17_Two); ok {
		return x.Two
	}
	return nil
}

func (x *NrOfAntennaPortstypeISinglePanelGroup1R17) GetMoreThanTwo() *MoreThanTwonrOfAntennaPorts {
	if x, ok := x.GetNrOfAntennaPortstypeISinglePanelGroup1R17().(*NrOfAntennaPortstypeISinglePanelGroup1R17_MoreThanTwo); ok {
		return x.MoreThanTwo
	}
	return nil
}

type isNrOfAntennaPortstypeISinglePanelGroup1R17_NrOfAntennaPortstypeISinglePanelGroup1R17 interface {
	isNrOfAntennaPortstypeISinglePanelGroup1R17_NrOfAntennaPortstypeISinglePanelGroup1R17()
}

type NrOfAntennaPortstypeISinglePanelGroup1R17_Two struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Two *TwonrOfAntennaPorts `protobuf:"bytes,1,opt,name=two,proto3,oneof" aper:"choiceIdx:1,"`
}

type NrOfAntennaPortstypeISinglePanelGroup1R17_MoreThanTwo struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MoreThanTwo *MoreThanTwonrOfAntennaPorts `protobuf:"bytes,2,opt,name=more_than_two,json=moreThanTwo,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*NrOfAntennaPortstypeISinglePanelGroup1R17_Two) isNrOfAntennaPortstypeISinglePanelGroup1R17_NrOfAntennaPortstypeISinglePanelGroup1R17() {
}

func (*NrOfAntennaPortstypeISinglePanelGroup1R17_MoreThanTwo) isNrOfAntennaPortstypeISinglePanelGroup1R17_NrOfAntennaPortstypeISinglePanelGroup1R17() {
}

// sequence from nr-rrc-definitions.asn1:729
// {typeI-SinglePanel-Group1-r17type1-r17}
type TypeISinglePanelGroup1R17Type1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NrOfAntennaPorts *NrOfAntennaPortstypeISinglePanelGroup1R17 `protobuf:"bytes,1,opt,name=nr_of_antenna_ports,json=nrOfAntennaPorts,proto3" json:"nr_of_antenna_ports,omitempty"`
}

func (x *TypeISinglePanelGroup1R17Type1R17) Reset() {
	*x = TypeISinglePanelGroup1R17Type1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeISinglePanelGroup1R17Type1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeISinglePanelGroup1R17Type1R17) ProtoMessage() {}

func (x *TypeISinglePanelGroup1R17Type1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeISinglePanelGroup1R17Type1R17.ProtoReflect.Descriptor instead.
func (*TypeISinglePanelGroup1R17Type1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{123}
}

func (x *TypeISinglePanelGroup1R17Type1R17) GetNrOfAntennaPorts() *NrOfAntennaPortstypeISinglePanelGroup1R17 {
	if x != nil {
		return x.NrOfAntennaPorts
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:734
// {nrOfAntennaPortstypeI-SinglePanel-Group2-r17}
type NrOfAntennaPortstypeISinglePanelGroup2R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:734
	//
	// Types that are assignable to NrOfAntennaPortstypeISinglePanelGroup2R17:
	//	*NrOfAntennaPortstypeISinglePanelGroup2R17_Two
	//	*NrOfAntennaPortstypeISinglePanelGroup2R17_MoreThanTwo
	NrOfAntennaPortstypeISinglePanelGroup2R17 isNrOfAntennaPortstypeISinglePanelGroup2R17_NrOfAntennaPortstypeISinglePanelGroup2R17 `protobuf_oneof:"nr_of_antenna_portstype_i_single_panel_group2_r17"`
}

func (x *NrOfAntennaPortstypeISinglePanelGroup2R17) Reset() {
	*x = NrOfAntennaPortstypeISinglePanelGroup2R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrOfAntennaPortstypeISinglePanelGroup2R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrOfAntennaPortstypeISinglePanelGroup2R17) ProtoMessage() {}

func (x *NrOfAntennaPortstypeISinglePanelGroup2R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrOfAntennaPortstypeISinglePanelGroup2R17.ProtoReflect.Descriptor instead.
func (*NrOfAntennaPortstypeISinglePanelGroup2R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{124}
}

func (m *NrOfAntennaPortstypeISinglePanelGroup2R17) GetNrOfAntennaPortstypeISinglePanelGroup2R17() isNrOfAntennaPortstypeISinglePanelGroup2R17_NrOfAntennaPortstypeISinglePanelGroup2R17 {
	if m != nil {
		return m.NrOfAntennaPortstypeISinglePanelGroup2R17
	}
	return nil
}

func (x *NrOfAntennaPortstypeISinglePanelGroup2R17) GetTwo() *TwonrOfAntennaPorts {
	if x, ok := x.GetNrOfAntennaPortstypeISinglePanelGroup2R17().(*NrOfAntennaPortstypeISinglePanelGroup2R17_Two); ok {
		return x.Two
	}
	return nil
}

func (x *NrOfAntennaPortstypeISinglePanelGroup2R17) GetMoreThanTwo() *MoreThanTwonrOfAntennaPorts {
	if x, ok := x.GetNrOfAntennaPortstypeISinglePanelGroup2R17().(*NrOfAntennaPortstypeISinglePanelGroup2R17_MoreThanTwo); ok {
		return x.MoreThanTwo
	}
	return nil
}

type isNrOfAntennaPortstypeISinglePanelGroup2R17_NrOfAntennaPortstypeISinglePanelGroup2R17 interface {
	isNrOfAntennaPortstypeISinglePanelGroup2R17_NrOfAntennaPortstypeISinglePanelGroup2R17()
}

type NrOfAntennaPortstypeISinglePanelGroup2R17_Two struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Two *TwonrOfAntennaPorts `protobuf:"bytes,1,opt,name=two,proto3,oneof" aper:"choiceIdx:1,"`
}

type NrOfAntennaPortstypeISinglePanelGroup2R17_MoreThanTwo struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MoreThanTwo *MoreThanTwonrOfAntennaPorts `protobuf:"bytes,2,opt,name=more_than_two,json=moreThanTwo,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*NrOfAntennaPortstypeISinglePanelGroup2R17_Two) isNrOfAntennaPortstypeISinglePanelGroup2R17_NrOfAntennaPortstypeISinglePanelGroup2R17() {
}

func (*NrOfAntennaPortstypeISinglePanelGroup2R17_MoreThanTwo) isNrOfAntennaPortstypeISinglePanelGroup2R17_NrOfAntennaPortstypeISinglePanelGroup2R17() {
}

// sequence from nr-rrc-definitions.asn1:753
// {typeI-SinglePanel-Group2-r17type1-r17}
type TypeISinglePanelGroup2R17Type1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NrOfAntennaPorts *NrOfAntennaPortstypeISinglePanelGroup2R17 `protobuf:"bytes,1,opt,name=nr_of_antenna_ports,json=nrOfAntennaPorts,proto3" json:"nr_of_antenna_ports,omitempty"`
}

func (x *TypeISinglePanelGroup2R17Type1R17) Reset() {
	*x = TypeISinglePanelGroup2R17Type1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeISinglePanelGroup2R17Type1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeISinglePanelGroup2R17Type1R17) ProtoMessage() {}

func (x *TypeISinglePanelGroup2R17Type1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeISinglePanelGroup2R17Type1R17.ProtoReflect.Descriptor instead.
func (*TypeISinglePanelGroup2R17Type1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{125}
}

func (x *TypeISinglePanelGroup2R17Type1R17) GetNrOfAntennaPorts() *NrOfAntennaPortstypeISinglePanelGroup2R17 {
	if x != nil {
		return x.NrOfAntennaPorts
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:729
// {type1-r17codebookType-r17}
type Type1R17CodebookTyper17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	TypeISinglePanelGroup1R17 *TypeISinglePanelGroup1R17Type1R17 `protobuf:"bytes,1,opt,name=type_i_single_panel_group1_r17,json=typeI-SinglePanel-Group1-r17,proto3,oneof" json:"type_i_single_panel_group1_r17,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	TypeISinglePanelGroup2R17 *TypeISinglePanelGroup2R17Type1R17 `protobuf:"bytes,2,opt,name=type_i_single_panel_group2_r17,json=typeI-SinglePanel-Group2-r17,proto3,oneof" json:"type_i_single_panel_group2_r17,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,sizeLB:8,sizeUB:8,"
	TypeISinglePanelRiRestrictionStrpR17 *asn1.BitString `protobuf:"bytes,3,opt,name=type_i_single_panel_ri_restriction_strp_r17,json=typeI-SinglePanel-ri-RestrictionSTRP-r17,proto3,oneof" json:"type_i_single_panel_ri_restriction_strp_r17,omitempty" aper:"optional,sizeLB:8,sizeUB:8,"`
	// @inject_tag: aper:"optional,sizeLB:4,sizeUB:4,"
	TypeISinglePanelRiRestrictionSdmR17 *asn1.BitString `protobuf:"bytes,4,opt,name=type_i_single_panel_ri_restriction_sdm_r17,json=typeI-SinglePanel-ri-RestrictionSDM-r17,proto3,oneof" json:"type_i_single_panel_ri_restriction_sdm_r17,omitempty" aper:"optional,sizeLB:4,sizeUB:4,"`
}

func (x *Type1R17CodebookTyper17) Reset() {
	*x = Type1R17CodebookTyper17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type1R17CodebookTyper17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type1R17CodebookTyper17) ProtoMessage() {}

func (x *Type1R17CodebookTyper17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type1R17CodebookTyper17.ProtoReflect.Descriptor instead.
func (*Type1R17CodebookTyper17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{126}
}

func (x *Type1R17CodebookTyper17) GetTypeISinglePanelGroup1R17() *TypeISinglePanelGroup1R17Type1R17 {
	if x != nil {
		return x.TypeISinglePanelGroup1R17
	}
	return nil
}

func (x *Type1R17CodebookTyper17) GetTypeISinglePanelGroup2R17() *TypeISinglePanelGroup2R17Type1R17 {
	if x != nil {
		return x.TypeISinglePanelGroup2R17
	}
	return nil
}

func (x *Type1R17CodebookTyper17) GetTypeISinglePanelRiRestrictionStrpR17() *asn1.BitString {
	if x != nil {
		return x.TypeISinglePanelRiRestrictionStrpR17
	}
	return nil
}

func (x *Type1R17CodebookTyper17) GetTypeISinglePanelRiRestrictionSdmR17() *asn1.BitString {
	if x != nil {
		return x.TypeISinglePanelRiRestrictionSdmR17
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:759
// {typeII-PortSelection-r17type2-r17}
type TypeIiPortSelectionr17Type2R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:8,"
	ParamCombinationR17 int32 `protobuf:"varint,1,opt,name=param_combination_r17,json=paramCombination-r17,proto3" json:"param_combination_r17,omitempty" aper:"valueLB:1,valueUB:8,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,"
	ValueOfNR17 *ValueOfNr17TypeIiportSelectionr17 `protobuf:"varint,2,opt,name=value_of_n_r17,json=valueOfN-r17,proto3,enum=nr_rrc_definitions.v1.ValueOfNr17TypeIiportSelectionr17,oneof" json:"value_of_n_r17,omitempty" aper:"optional,valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"optional,valueLB:1,valueUB:2,"
	NumberOfPmiSubbandsPerCqiSubbandR17 *int32 `protobuf:"varint,3,opt,name=number_of_pmi_subbands_per_cqi_subband_r17,json=numberOfPMI-SubbandsPerCQI-Subband-r17,proto3,oneof" json:"number_of_pmi_subbands_per_cqi_subband_r17,omitempty" aper:"optional,valueLB:1,valueUB:2,"`
	// @inject_tag: aper:"sizeLB:4,sizeUB:4,"
	TypeIiPortSelectionRiRestrictionR17 *asn1.BitString `protobuf:"bytes,4,opt,name=type_ii_port_selection_ri_restriction_r17,json=typeII-PortSelectionRI-Restriction-r17,proto3" json:"type_ii_port_selection_ri_restriction_r17,omitempty" aper:"sizeLB:4,sizeUB:4,"`
}

func (x *TypeIiPortSelectionr17Type2R17) Reset() {
	*x = TypeIiPortSelectionr17Type2R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeIiPortSelectionr17Type2R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeIiPortSelectionr17Type2R17) ProtoMessage() {}

func (x *TypeIiPortSelectionr17Type2R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeIiPortSelectionr17Type2R17.ProtoReflect.Descriptor instead.
func (*TypeIiPortSelectionr17Type2R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{127}
}

func (x *TypeIiPortSelectionr17Type2R17) GetParamCombinationR17() int32 {
	if x != nil {
		return x.ParamCombinationR17
	}
	return 0
}

func (x *TypeIiPortSelectionr17Type2R17) GetValueOfNR17() ValueOfNr17TypeIiportSelectionr17 {
	if x != nil && x.ValueOfNR17 != nil {
		return *x.ValueOfNR17
	}
	return ValueOfNr17TypeIiportSelectionr17_VALUE_OF_NR17TYPE_IIPORT_SELECTIONR17_N2
}

func (x *TypeIiPortSelectionr17Type2R17) GetNumberOfPmiSubbandsPerCqiSubbandR17() int32 {
	if x != nil && x.NumberOfPmiSubbandsPerCqiSubbandR17 != nil {
		return *x.NumberOfPmiSubbandsPerCqiSubbandR17
	}
	return 0
}

func (x *TypeIiPortSelectionr17Type2R17) GetTypeIiPortSelectionRiRestrictionR17() *asn1.BitString {
	if x != nil {
		return x.TypeIiPortSelectionRiRestrictionR17
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:764
// {type2-r17codebookType-r17}
type Type2R17CodebookTyper17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeIiPortSelectionR17 *TypeIiPortSelectionr17Type2R17 `protobuf:"bytes,1,opt,name=type_ii_port_selection_r17,json=typeII-PortSelection-r17,proto3" json:"type_ii_port_selection_r17,omitempty"`
}

func (x *Type2R17CodebookTyper17) Reset() {
	*x = Type2R17CodebookTyper17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type2R17CodebookTyper17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type2R17CodebookTyper17) ProtoMessage() {}

func (x *Type2R17CodebookTyper17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type2R17CodebookTyper17.ProtoReflect.Descriptor instead.
func (*Type2R17CodebookTyper17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{128}
}

func (x *Type2R17CodebookTyper17) GetTypeIiPortSelectionR17() *TypeIiPortSelectionr17Type2R17 {
	if x != nil {
		return x.TypeIiPortSelectionR17
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:756
// {codebookType-r17CodebookConfig-r17}
type CodebookTyper17CodebookConfigr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:756
	//
	// Types that are assignable to CodebookTypeR17CodebookConfigR17:
	//	*CodebookTyper17CodebookConfigr17_Type1R17
	//	*CodebookTyper17CodebookConfigr17_Type2R17
	CodebookTypeR17CodebookConfigR17 isCodebookTyper17CodebookConfigr17_CodebookTypeR17CodebookConfigR17 `protobuf_oneof:"codebook_type_r17_codebook_config_r17"`
}

func (x *CodebookTyper17CodebookConfigr17) Reset() {
	*x = CodebookTyper17CodebookConfigr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookTyper17CodebookConfigr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookTyper17CodebookConfigr17) ProtoMessage() {}

func (x *CodebookTyper17CodebookConfigr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookTyper17CodebookConfigr17.ProtoReflect.Descriptor instead.
func (*CodebookTyper17CodebookConfigr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{129}
}

func (m *CodebookTyper17CodebookConfigr17) GetCodebookTypeR17CodebookConfigR17() isCodebookTyper17CodebookConfigr17_CodebookTypeR17CodebookConfigR17 {
	if m != nil {
		return m.CodebookTypeR17CodebookConfigR17
	}
	return nil
}

func (x *CodebookTyper17CodebookConfigr17) GetType1R17() *Type1R17CodebookTyper17 {
	if x, ok := x.GetCodebookTypeR17CodebookConfigR17().(*CodebookTyper17CodebookConfigr17_Type1R17); ok {
		return x.Type1R17
	}
	return nil
}

func (x *CodebookTyper17CodebookConfigr17) GetType2R17() *Type2R17CodebookTyper17 {
	if x, ok := x.GetCodebookTypeR17CodebookConfigR17().(*CodebookTyper17CodebookConfigr17_Type2R17); ok {
		return x.Type2R17
	}
	return nil
}

type isCodebookTyper17CodebookConfigr17_CodebookTypeR17CodebookConfigR17 interface {
	isCodebookTyper17CodebookConfigr17_CodebookTypeR17CodebookConfigR17()
}

type CodebookTyper17CodebookConfigr17_Type1R17 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Type1R17 *Type1R17CodebookTyper17 `protobuf:"bytes,1,opt,name=type1_r17,json=type1-r17,proto3,oneof" aper:"choiceIdx:1,"`
}

type CodebookTyper17CodebookConfigr17_Type2R17 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Type2R17 *Type2R17CodebookTyper17 `protobuf:"bytes,2,opt,name=type2_r17,json=type2-r17,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*CodebookTyper17CodebookConfigr17_Type1R17) isCodebookTyper17CodebookConfigr17_CodebookTypeR17CodebookConfigR17() {
}

func (*CodebookTyper17CodebookConfigr17_Type2R17) isCodebookTyper17CodebookConfigr17_CodebookTypeR17CodebookConfigR17() {
}

// sequence from nr-rrc-definitions.asn1:766
// {CodebookConfig-r17}
type CodebookConfigr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodebookTypeR17 *CodebookTyper17CodebookConfigr17 `protobuf:"bytes,1,opt,name=codebook_type_r17,json=codebookType-r17,proto3" json:"codebook_type_r17,omitempty"`
}

func (x *CodebookConfigr17) Reset() {
	*x = CodebookConfigr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookConfigr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookConfigr17) ProtoMessage() {}

func (x *CodebookConfigr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookConfigr17.ProtoReflect.Descriptor instead.
func (*CodebookConfigr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{130}
}

func (x *CodebookConfigr17) GetCodebookTypeR17() *CodebookTyper17CodebookConfigr17 {
	if x != nil {
		return x.CodebookTypeR17
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:771
// {type1-v1730codebookType-v1730}
type Type1V1730CodebookTypev1730 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:1,valueUB:2,"
	CodebookMode *int32 `protobuf:"varint,1,opt,name=codebook_mode,json=codebookMode,proto3,oneof" json:"codebook_mode,omitempty" aper:"optional,valueLB:1,valueUB:2,"`
}

func (x *Type1V1730CodebookTypev1730) Reset() {
	*x = Type1V1730CodebookTypev1730{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type1V1730CodebookTypev1730) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type1V1730CodebookTypev1730) ProtoMessage() {}

func (x *Type1V1730CodebookTypev1730) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type1V1730CodebookTypev1730.ProtoReflect.Descriptor instead.
func (*Type1V1730CodebookTypev1730) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{131}
}

func (x *Type1V1730CodebookTypev1730) GetCodebookMode() int32 {
	if x != nil && x.CodebookMode != nil {
		return *x.CodebookMode
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:773
// {codebookType-v1730CodebookConfig-v1730}
type CodebookTypev1730CodebookConfigv1730 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:773
	//
	// Types that are assignable to CodebookTypeV1730CodebookConfigV1730:
	//	*CodebookTypev1730CodebookConfigv1730_Type1V1730
	CodebookTypeV1730CodebookConfigV1730 isCodebookTypev1730CodebookConfigv1730_CodebookTypeV1730CodebookConfigV1730 `protobuf_oneof:"codebook_type_v1730_codebook_config_v1730"`
}

func (x *CodebookTypev1730CodebookConfigv1730) Reset() {
	*x = CodebookTypev1730CodebookConfigv1730{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookTypev1730CodebookConfigv1730) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookTypev1730CodebookConfigv1730) ProtoMessage() {}

func (x *CodebookTypev1730CodebookConfigv1730) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookTypev1730CodebookConfigv1730.ProtoReflect.Descriptor instead.
func (*CodebookTypev1730CodebookConfigv1730) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{132}
}

func (m *CodebookTypev1730CodebookConfigv1730) GetCodebookTypeV1730CodebookConfigV1730() isCodebookTypev1730CodebookConfigv1730_CodebookTypeV1730CodebookConfigV1730 {
	if m != nil {
		return m.CodebookTypeV1730CodebookConfigV1730
	}
	return nil
}

func (x *CodebookTypev1730CodebookConfigv1730) GetType1V1730() *Type1V1730CodebookTypev1730 {
	if x, ok := x.GetCodebookTypeV1730CodebookConfigV1730().(*CodebookTypev1730CodebookConfigv1730_Type1V1730); ok {
		return x.Type1V1730
	}
	return nil
}

type isCodebookTypev1730CodebookConfigv1730_CodebookTypeV1730CodebookConfigV1730 interface {
	isCodebookTypev1730CodebookConfigv1730_CodebookTypeV1730CodebookConfigV1730()
}

type CodebookTypev1730CodebookConfigv1730_Type1V1730 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Type1V1730 *Type1V1730CodebookTypev1730 `protobuf:"bytes,1,opt,name=type1_v1730,json=type1-v1730,proto3,oneof" aper:"choiceIdx:1,"`
}

func (*CodebookTypev1730CodebookConfigv1730_Type1V1730) isCodebookTypev1730CodebookConfigv1730_CodebookTypeV1730CodebookConfigV1730() {
}

// sequence from nr-rrc-definitions.asn1:774
// {CodebookConfig-v1730}
type CodebookConfigv1730 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodebookTypeV1730 *CodebookTypev1730CodebookConfigv1730 `protobuf:"bytes,1,opt,name=codebook_type_v1730,json=codebookType-v1730,proto3" json:"codebook_type_v1730,omitempty"`
}

func (x *CodebookConfigv1730) Reset() {
	*x = CodebookConfigv1730{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookConfigv1730) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookConfigv1730) ProtoMessage() {}

func (x *CodebookConfigv1730) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookConfigv1730.ProtoReflect.Descriptor instead.
func (*CodebookConfigv1730) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{133}
}

func (x *CodebookConfigv1730) GetCodebookTypeV1730() *CodebookTypev1730CodebookConfigv1730 {
	if x != nil {
		return x.CodebookTypeV1730
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:785
// {interleavedcce-REG-MappingType}
type InterleavedcceREgMappingType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:2,"
	RegBundleSize RegBundleSizeinterleaved `protobuf:"varint,1,opt,name=reg_bundle_size,json=reg-BundleSize,proto3,enum=nr_rrc_definitions.v1.RegBundleSizeinterleaved" json:"reg_bundle_size,omitempty" aper:"valueLB:0,valueUB:2,"`
	// @inject_tag: aper:"valueLB:0,valueUB:2,"
	InterleaverSize InterleaverSizeinterleaved `protobuf:"varint,2,opt,name=interleaver_size,json=interleaverSize,proto3,enum=nr_rrc_definitions.v1.InterleaverSizeinterleaved" json:"interleaver_size,omitempty" aper:"valueLB:0,valueUB:2,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:274,"
	ShiftIndex *int32 `protobuf:"varint,3,opt,name=shift_index,json=shiftIndex,proto3,oneof" json:"shift_index,omitempty" aper:"optional,valueLB:0,valueUB:274,"`
}

func (x *InterleavedcceREgMappingType) Reset() {
	*x = InterleavedcceREgMappingType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterleavedcceREgMappingType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterleavedcceREgMappingType) ProtoMessage() {}

func (x *InterleavedcceREgMappingType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterleavedcceREgMappingType.ProtoReflect.Descriptor instead.
func (*InterleavedcceREgMappingType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{134}
}

func (x *InterleavedcceREgMappingType) GetRegBundleSize() RegBundleSizeinterleaved {
	if x != nil {
		return x.RegBundleSize
	}
	return RegBundleSizeinterleaved_REG_BUNDLE_SIZEINTERLEAVED_N2
}

func (x *InterleavedcceREgMappingType) GetInterleaverSize() InterleaverSizeinterleaved {
	if x != nil {
		return x.InterleaverSize
	}
	return InterleaverSizeinterleaved_INTERLEAVER_SIZEINTERLEAVED_N2
}

func (x *InterleavedcceREgMappingType) GetShiftIndex() int32 {
	if x != nil && x.ShiftIndex != nil {
		return *x.ShiftIndex
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:788
// {cce-REG-MappingTypeControlResourceSet}
type CceREgMappingTypeControlResourceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:788
	//
	// Types that are assignable to CceRegMappingTypeControlResourceSet:
	//	*CceREgMappingTypeControlResourceSet_Interleaved
	//	*CceREgMappingTypeControlResourceSet_NonInterleaved
	CceRegMappingTypeControlResourceSet isCceREgMappingTypeControlResourceSet_CceRegMappingTypeControlResourceSet `protobuf_oneof:"cce_reg_mapping_type_control_resource_set"`
}

func (x *CceREgMappingTypeControlResourceSet) Reset() {
	*x = CceREgMappingTypeControlResourceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CceREgMappingTypeControlResourceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CceREgMappingTypeControlResourceSet) ProtoMessage() {}

func (x *CceREgMappingTypeControlResourceSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CceREgMappingTypeControlResourceSet.ProtoReflect.Descriptor instead.
func (*CceREgMappingTypeControlResourceSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{135}
}

func (m *CceREgMappingTypeControlResourceSet) GetCceRegMappingTypeControlResourceSet() isCceREgMappingTypeControlResourceSet_CceRegMappingTypeControlResourceSet {
	if m != nil {
		return m.CceRegMappingTypeControlResourceSet
	}
	return nil
}

func (x *CceREgMappingTypeControlResourceSet) GetInterleaved() *InterleavedcceREgMappingType {
	if x, ok := x.GetCceRegMappingTypeControlResourceSet().(*CceREgMappingTypeControlResourceSet_Interleaved); ok {
		return x.Interleaved
	}
	return nil
}

func (x *CceREgMappingTypeControlResourceSet) GetNonInterleaved() int32 {
	if x, ok := x.GetCceRegMappingTypeControlResourceSet().(*CceREgMappingTypeControlResourceSet_NonInterleaved); ok {
		return x.NonInterleaved
	}
	return 0
}

type isCceREgMappingTypeControlResourceSet_CceRegMappingTypeControlResourceSet interface {
	isCceREgMappingTypeControlResourceSet_CceRegMappingTypeControlResourceSet()
}

type CceREgMappingTypeControlResourceSet_Interleaved struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Interleaved *InterleavedcceREgMappingType `protobuf:"bytes,1,opt,name=interleaved,proto3,oneof" aper:"choiceIdx:1,"`
}

type CceREgMappingTypeControlResourceSet_NonInterleaved struct {
	// @inject_tag: aper:"choiceIdx:2,"
	NonInterleaved int32 `protobuf:"varint,2,opt,name=non_interleaved,json=nonInterleaved,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*CceREgMappingTypeControlResourceSet_Interleaved) isCceREgMappingTypeControlResourceSet_CceRegMappingTypeControlResourceSet() {
}

func (*CceREgMappingTypeControlResourceSet_NonInterleaved) isCceREgMappingTypeControlResourceSet_CceRegMappingTypeControlResourceSet() {
}

// sequence from nr-rrc-definitions.asn1:780
// @inject_tag: aper:"valueExt"
// {ControlResourceSet}
type ControlResourceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlResourceSetId *ControlResourceSetId `protobuf:"bytes,1,opt,name=control_resource_set_id,json=controlResourceSetId,proto3" json:"control_resource_set_id,omitempty"`
	// @inject_tag: aper:"sizeLB:45,sizeUB:45,"
	FrequencyDomainResources *asn1.BitString `protobuf:"bytes,2,opt,name=frequency_domain_resources,json=frequencyDomainResources,proto3" json:"frequency_domain_resources,omitempty" aper:"sizeLB:45,sizeUB:45,"`
	// @inject_tag: aper:"valueLB:1,valueUB:3,"
	Duration          int32                                `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty" aper:"valueLB:1,valueUB:3,"`
	CceRegMappingType *CceREgMappingTypeControlResourceSet `protobuf:"bytes,4,opt,name=cce_reg_mapping_type,json=cce-REG-MappingType,proto3" json:"cce_reg_mapping_type,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	PrecoderGranularity PrecoderGranularityControlResourceSet `protobuf:"varint,5,opt,name=precoder_granularity,json=precoderGranularity,proto3,enum=nr_rrc_definitions.v1.PrecoderGranularityControlResourceSet" json:"precoder_granularity,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:64,"
	TciStatesPdcchToAddList []*TciStateId `protobuf:"bytes,6,rep,name=tci_states_pdcch_to_add_list,json=tci-StatesPDCCH-ToAddList,proto3" json:"tci_states_pdcch_to_add_list,omitempty" aper:"optional,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:64,"
	TciStatesPdcchToReleaseList []*TciStateId `protobuf:"bytes,7,rep,name=tci_states_pdcch_to_release_list,json=tci-StatesPDCCH-ToReleaseList,proto3" json:"tci_states_pdcch_to_release_list,omitempty" aper:"optional,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:0,"
	TciPresentInDci *TciPresentInDcicontrolResourceSet `protobuf:"varint,8,opt,name=tci_present_in_dci,json=tci-PresentInDCI,proto3,enum=nr_rrc_definitions.v1.TciPresentInDcicontrolResourceSet,oneof" json:"tci_present_in_dci,omitempty" aper:"optional,valueLB:0,valueUB:0,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:65535,"
	PdcchDmrsScramblingId *int32 `protobuf:"varint,9,opt,name=pdcch_dmrs_scrambling_id,json=pdcch-DMRS-ScramblingID,proto3,oneof" json:"pdcch_dmrs_scrambling_id,omitempty" aper:"optional,valueLB:0,valueUB:65535,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:5,fromValueExt,"
	RbOffsetR16 *int32 `protobuf:"varint,10,opt,name=rb_offset_r16,json=rb-Offset-r16,proto3,oneof" json:"rb_offset_r16,omitempty" aper:"optional,valueLB:0,valueUB:5,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:1,valueUB:3,fromValueExt,"
	TciPresentDci_1_2R16 *int32 `protobuf:"varint,11,opt,name=tci_present_dci_1_2_r16,json=tci-PresentDCI-1-2-r16,proto3,oneof" json:"tci_present_dci_1_2_r16,omitempty" aper:"optional,valueLB:1,valueUB:3,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,fromValueExt,"
	CoresetPoolIndexR16 *int32 `protobuf:"varint,12,opt,name=coreset_pool_index_r16,json=coresetPoolIndex-r16,proto3,oneof" json:"coreset_pool_index_r16,omitempty" aper:"optional,valueLB:0,valueUB:1,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	ControlResourceSetIdV1610 *ControlResourceSetIdv1610 `protobuf:"bytes,13,opt,name=control_resource_set_id_v1610,json=controlResourceSetId-v1610,proto3,oneof" json:"control_resource_set_id_v1610,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:0,fromValueExt,"
	FollowUnifiedTciStateR17 *FollowUnifiedTcistater17ControlResourceSet `protobuf:"varint,14,opt,name=follow_unified_tci_state_r17,json=followUnifiedTCI-State-r17,proto3,enum=nr_rrc_definitions.v1.FollowUnifiedTcistater17ControlResourceSet,oneof" json:"follow_unified_tci_state_r17,omitempty" aper:"optional,valueLB:0,valueUB:0,fromValueExt,"`
}

func (x *ControlResourceSet) Reset() {
	*x = ControlResourceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlResourceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlResourceSet) ProtoMessage() {}

func (x *ControlResourceSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlResourceSet.ProtoReflect.Descriptor instead.
func (*ControlResourceSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{136}
}

func (x *ControlResourceSet) GetControlResourceSetId() *ControlResourceSetId {
	if x != nil {
		return x.ControlResourceSetId
	}
	return nil
}

func (x *ControlResourceSet) GetFrequencyDomainResources() *asn1.BitString {
	if x != nil {
		return x.FrequencyDomainResources
	}
	return nil
}

func (x *ControlResourceSet) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ControlResourceSet) GetCceRegMappingType() *CceREgMappingTypeControlResourceSet {
	if x != nil {
		return x.CceRegMappingType
	}
	return nil
}

func (x *ControlResourceSet) GetPrecoderGranularity() PrecoderGranularityControlResourceSet {
	if x != nil {
		return x.PrecoderGranularity
	}
	return PrecoderGranularityControlResourceSet_PRECODER_GRANULARITY_CONTROL_RESOURCE_SET_SAME_AS_REG_BUNDLE
}

func (x *ControlResourceSet) GetTciStatesPdcchToAddList() []*TciStateId {
	if x != nil {
		return x.TciStatesPdcchToAddList
	}
	return nil
}

func (x *ControlResourceSet) GetTciStatesPdcchToReleaseList() []*TciStateId {
	if x != nil {
		return x.TciStatesPdcchToReleaseList
	}
	return nil
}

func (x *ControlResourceSet) GetTciPresentInDci() TciPresentInDcicontrolResourceSet {
	if x != nil && x.TciPresentInDci != nil {
		return *x.TciPresentInDci
	}
	return TciPresentInDcicontrolResourceSet_TCI_PRESENT_IN_DCICONTROL_RESOURCE_SET_ENABLED
}

func (x *ControlResourceSet) GetPdcchDmrsScramblingId() int32 {
	if x != nil && x.PdcchDmrsScramblingId != nil {
		return *x.PdcchDmrsScramblingId
	}
	return 0
}

func (x *ControlResourceSet) GetRbOffsetR16() int32 {
	if x != nil && x.RbOffsetR16 != nil {
		return *x.RbOffsetR16
	}
	return 0
}

func (x *ControlResourceSet) GetTciPresentDci_1_2R16() int32 {
	if x != nil && x.TciPresentDci_1_2R16 != nil {
		return *x.TciPresentDci_1_2R16
	}
	return 0
}

func (x *ControlResourceSet) GetCoresetPoolIndexR16() int32 {
	if x != nil && x.CoresetPoolIndexR16 != nil {
		return *x.CoresetPoolIndexR16
	}
	return 0
}

func (x *ControlResourceSet) GetControlResourceSetIdV1610() *ControlResourceSetIdv1610 {
	if x != nil {
		return x.ControlResourceSetIdV1610
	}
	return nil
}

func (x *ControlResourceSet) GetFollowUnifiedTciStateR17() FollowUnifiedTcistater17ControlResourceSet {
	if x != nil && x.FollowUnifiedTciStateR17 != nil {
		return *x.FollowUnifiedTciStateR17
	}
	return FollowUnifiedTcistater17ControlResourceSet_FOLLOW_UNIFIED_TCISTATER17_CONTROL_RESOURCE_SET_ENABLED
}

// range of Integer from nr-rrc-definitions.asn1:811
// {ControlResourceSetId}
type ControlResourceSetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:11,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:11,"`
}

func (x *ControlResourceSetId) Reset() {
	*x = ControlResourceSetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlResourceSetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlResourceSetId) ProtoMessage() {}

func (x *ControlResourceSetId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlResourceSetId.ProtoReflect.Descriptor instead.
func (*ControlResourceSetId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{137}
}

func (x *ControlResourceSetId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:813
// {ControlResourceSetId-r16}
type ControlResourceSetIdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:15,"`
}

func (x *ControlResourceSetIdr16) Reset() {
	*x = ControlResourceSetIdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlResourceSetIdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlResourceSetIdr16) ProtoMessage() {}

func (x *ControlResourceSetIdr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlResourceSetIdr16.ProtoReflect.Descriptor instead.
func (*ControlResourceSetIdr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{138}
}

func (x *ControlResourceSetIdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:815
// {ControlResourceSetId-v1610}
type ControlResourceSetIdv1610 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:15,"`
}

func (x *ControlResourceSetIdv1610) Reset() {
	*x = ControlResourceSetIdv1610{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlResourceSetIdv1610) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlResourceSetIdv1610) ProtoMessage() {}

func (x *ControlResourceSetIdv1610) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlResourceSetIdv1610.ProtoReflect.Descriptor instead.
func (*ControlResourceSetIdv1610) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{139}
}

func (x *ControlResourceSetIdv1610) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:820
// {ControlResourceSetZero}
type ControlResourceSetZero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:15,"`
}

func (x *ControlResourceSetZero) Reset() {
	*x = ControlResourceSetZero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlResourceSetZero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlResourceSetZero) ProtoMessage() {}

func (x *ControlResourceSetZero) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlResourceSetZero.ProtoReflect.Descriptor instead.
func (*ControlResourceSetZero) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{140}
}

func (x *ControlResourceSetZero) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:827
// {CSI-AperiodicTriggerStateList}
type CsiAperiodicTriggerStateList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:128,"
	Value []*CsiAperiodicTriggerState `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:128,"`
}

func (x *CsiAperiodicTriggerStateList) Reset() {
	*x = CsiAperiodicTriggerStateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiAperiodicTriggerStateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiAperiodicTriggerStateList) ProtoMessage() {}

func (x *CsiAperiodicTriggerStateList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiAperiodicTriggerStateList.ProtoReflect.Descriptor instead.
func (*CsiAperiodicTriggerStateList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{141}
}

func (x *CsiAperiodicTriggerStateList) GetValue() []*CsiAperiodicTriggerState {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:828
// @inject_tag: aper:"valueExt"
// {CSI-AperiodicTriggerState}
type CsiAperiodicTriggerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:16,"
	AssociatedReportConfigInfoList []*CsiAssociatedReportConfigInfo `protobuf:"bytes,1,rep,name=associated_report_config_info_list,json=associatedReportConfigInfoList,proto3" json:"associated_report_config_info_list,omitempty" aper:"sizeLB:1,sizeUB:16,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:0,fromValueExt,"
	ApCsiMultiplexingModeR17 *ApCsimultiplexingModer17CsiaperiodicTriggerState `protobuf:"varint,2,opt,name=ap_csi_multiplexing_mode_r17,json=ap-CSI-MultiplexingMode-r17,proto3,enum=nr_rrc_definitions.v1.ApCsimultiplexingModer17CsiaperiodicTriggerState,oneof" json:"ap_csi_multiplexing_mode_r17,omitempty" aper:"optional,valueLB:0,valueUB:0,fromValueExt,"`
}

func (x *CsiAperiodicTriggerState) Reset() {
	*x = CsiAperiodicTriggerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiAperiodicTriggerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiAperiodicTriggerState) ProtoMessage() {}

func (x *CsiAperiodicTriggerState) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiAperiodicTriggerState.ProtoReflect.Descriptor instead.
func (*CsiAperiodicTriggerState) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{142}
}

func (x *CsiAperiodicTriggerState) GetAssociatedReportConfigInfoList() []*CsiAssociatedReportConfigInfo {
	if x != nil {
		return x.AssociatedReportConfigInfoList
	}
	return nil
}

func (x *CsiAperiodicTriggerState) GetApCsiMultiplexingModeR17() ApCsimultiplexingModer17CsiaperiodicTriggerState {
	if x != nil && x.ApCsiMultiplexingModeR17 != nil {
		return *x.ApCsiMultiplexingModeR17
	}
	return ApCsimultiplexingModer17CsiaperiodicTriggerState_AP_CSIMULTIPLEXING_MODER17_CSIAPERIODIC_TRIGGER_STATE_ENABLED
}

// sequence from nr-rrc-definitions.asn1:839
// {nzp-CSI-RSresourcesForChannel}
type NzpCSiRSresourcesForChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:16,"
	ResourceSet int32 `protobuf:"varint,1,opt,name=resource_set,json=resourceSet,proto3" json:"resource_set,omitempty" aper:"valueLB:1,valueUB:16,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:16,"
	QclInfo []*TciStateId `protobuf:"bytes,2,rep,name=qcl_info,json=qcl-info,proto3" json:"qcl_info,omitempty" aper:"optional,sizeLB:1,sizeUB:16,"`
}

func (x *NzpCSiRSresourcesForChannel) Reset() {
	*x = NzpCSiRSresourcesForChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NzpCSiRSresourcesForChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NzpCSiRSresourcesForChannel) ProtoMessage() {}

func (x *NzpCSiRSresourcesForChannel) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NzpCSiRSresourcesForChannel.ProtoReflect.Descriptor instead.
func (*NzpCSiRSresourcesForChannel) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{143}
}

func (x *NzpCSiRSresourcesForChannel) GetResourceSet() int32 {
	if x != nil {
		return x.ResourceSet
	}
	return 0
}

func (x *NzpCSiRSresourcesForChannel) GetQclInfo() []*TciStateId {
	if x != nil {
		return x.QclInfo
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:842
// {resourcesForChannelCSI-AssociatedReportConfigInfo}
type ResourcesForChannelCsiAssociatedReportConfigInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:842
	//
	// Types that are assignable to ResourcesForChannelCsiAssociatedReportConfigInfo:
	//	*ResourcesForChannelCsiAssociatedReportConfigInfo_NzpCsiRs
	//	*ResourcesForChannelCsiAssociatedReportConfigInfo_CsiSsbResourceSet
	ResourcesForChannelCsiAssociatedReportConfigInfo isResourcesForChannelCsiAssociatedReportConfigInfo_ResourcesForChannelCsiAssociatedReportConfigInfo `protobuf_oneof:"resources_for_channel_csi_associated_report_config_info"`
}

func (x *ResourcesForChannelCsiAssociatedReportConfigInfo) Reset() {
	*x = ResourcesForChannelCsiAssociatedReportConfigInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcesForChannelCsiAssociatedReportConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesForChannelCsiAssociatedReportConfigInfo) ProtoMessage() {}

func (x *ResourcesForChannelCsiAssociatedReportConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesForChannelCsiAssociatedReportConfigInfo.ProtoReflect.Descriptor instead.
func (*ResourcesForChannelCsiAssociatedReportConfigInfo) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{144}
}

func (m *ResourcesForChannelCsiAssociatedReportConfigInfo) GetResourcesForChannelCsiAssociatedReportConfigInfo() isResourcesForChannelCsiAssociatedReportConfigInfo_ResourcesForChannelCsiAssociatedReportConfigInfo {
	if m != nil {
		return m.ResourcesForChannelCsiAssociatedReportConfigInfo
	}
	return nil
}

func (x *ResourcesForChannelCsiAssociatedReportConfigInfo) GetNzpCsiRs() *NzpCSiRSresourcesForChannel {
	if x, ok := x.GetResourcesForChannelCsiAssociatedReportConfigInfo().(*ResourcesForChannelCsiAssociatedReportConfigInfo_NzpCsiRs); ok {
		return x.NzpCsiRs
	}
	return nil
}

func (x *ResourcesForChannelCsiAssociatedReportConfigInfo) GetCsiSsbResourceSet() int32 {
	if x, ok := x.GetResourcesForChannelCsiAssociatedReportConfigInfo().(*ResourcesForChannelCsiAssociatedReportConfigInfo_CsiSsbResourceSet); ok {
		return x.CsiSsbResourceSet
	}
	return 0
}

type isResourcesForChannelCsiAssociatedReportConfigInfo_ResourcesForChannelCsiAssociatedReportConfigInfo interface {
	isResourcesForChannelCsiAssociatedReportConfigInfo_ResourcesForChannelCsiAssociatedReportConfigInfo()
}

type ResourcesForChannelCsiAssociatedReportConfigInfo_NzpCsiRs struct {
	// @inject_tag: aper:"choiceIdx:1,"
	NzpCsiRs *NzpCSiRSresourcesForChannel `protobuf:"bytes,1,opt,name=nzp_csi_rs,json=nzp-CSI-RS,proto3,oneof" aper:"choiceIdx:1,"`
}

type ResourcesForChannelCsiAssociatedReportConfigInfo_CsiSsbResourceSet struct {
	// @inject_tag: aper:"choiceIdx:2,valueLB:1,valueUB:1,"
	CsiSsbResourceSet int32 `protobuf:"varint,2,opt,name=csi_ssb_resource_set,json=csi-SSB-ResourceSet,proto3,oneof" aper:"choiceIdx:2,valueLB:1,valueUB:1,"`
}

func (*ResourcesForChannelCsiAssociatedReportConfigInfo_NzpCsiRs) isResourcesForChannelCsiAssociatedReportConfigInfo_ResourcesForChannelCsiAssociatedReportConfigInfo() {
}

func (*ResourcesForChannelCsiAssociatedReportConfigInfo_CsiSsbResourceSet) isResourcesForChannelCsiAssociatedReportConfigInfo_ResourcesForChannelCsiAssociatedReportConfigInfo() {
}

// sequence from nr-rrc-definitions.asn1:851
// {nzp-CSI-RS2-r17resourcesForChannel2-r17}
type NzpCSiRS2R17ResourcesForChannel2R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:16,"
	ResourceSet2R17 int32 `protobuf:"varint,1,opt,name=resource_set2_r17,json=resourceSet2-r17,proto3" json:"resource_set2_r17,omitempty" aper:"valueLB:1,valueUB:16,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:16,"
	QclInfo2R17 []*TciStateId `protobuf:"bytes,2,rep,name=qcl_info2_r17,json=qcl-info2-r17,proto3" json:"qcl_info2_r17,omitempty" aper:"optional,sizeLB:1,sizeUB:16,"`
}

func (x *NzpCSiRS2R17ResourcesForChannel2R17) Reset() {
	*x = NzpCSiRS2R17ResourcesForChannel2R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NzpCSiRS2R17ResourcesForChannel2R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NzpCSiRS2R17ResourcesForChannel2R17) ProtoMessage() {}

func (x *NzpCSiRS2R17ResourcesForChannel2R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NzpCSiRS2R17ResourcesForChannel2R17.ProtoReflect.Descriptor instead.
func (*NzpCSiRS2R17ResourcesForChannel2R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{145}
}

func (x *NzpCSiRS2R17ResourcesForChannel2R17) GetResourceSet2R17() int32 {
	if x != nil {
		return x.ResourceSet2R17
	}
	return 0
}

func (x *NzpCSiRS2R17ResourcesForChannel2R17) GetQclInfo2R17() []*TciStateId {
	if x != nil {
		return x.QclInfo2R17
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:854
// {resourcesForChannel2-r17CSI-AssociatedReportConfigInfo}
type ResourcesForChannel2R17CsiAssociatedReportConfigInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:854
	//
	// Types that are assignable to ResourcesForChannel2R17CsiAssociatedReportConfigInfo:
	//	*ResourcesForChannel2R17CsiAssociatedReportConfigInfo_NzpCsiRs2R17
	//	*ResourcesForChannel2R17CsiAssociatedReportConfigInfo_CsiSsbResourceSet2R17
	ResourcesForChannel2R17CsiAssociatedReportConfigInfo isResourcesForChannel2R17CsiAssociatedReportConfigInfo_ResourcesForChannel2R17CsiAssociatedReportConfigInfo `protobuf_oneof:"resources_for_channel2_r17_csi_associated_report_config_info"`
}

func (x *ResourcesForChannel2R17CsiAssociatedReportConfigInfo) Reset() {
	*x = ResourcesForChannel2R17CsiAssociatedReportConfigInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcesForChannel2R17CsiAssociatedReportConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesForChannel2R17CsiAssociatedReportConfigInfo) ProtoMessage() {}

func (x *ResourcesForChannel2R17CsiAssociatedReportConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesForChannel2R17CsiAssociatedReportConfigInfo.ProtoReflect.Descriptor instead.
func (*ResourcesForChannel2R17CsiAssociatedReportConfigInfo) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{146}
}

func (m *ResourcesForChannel2R17CsiAssociatedReportConfigInfo) GetResourcesForChannel2R17CsiAssociatedReportConfigInfo() isResourcesForChannel2R17CsiAssociatedReportConfigInfo_ResourcesForChannel2R17CsiAssociatedReportConfigInfo {
	if m != nil {
		return m.ResourcesForChannel2R17CsiAssociatedReportConfigInfo
	}
	return nil
}

func (x *ResourcesForChannel2R17CsiAssociatedReportConfigInfo) GetNzpCsiRs2R17() *NzpCSiRS2R17ResourcesForChannel2R17 {
	if x, ok := x.GetResourcesForChannel2R17CsiAssociatedReportConfigInfo().(*ResourcesForChannel2R17CsiAssociatedReportConfigInfo_NzpCsiRs2R17); ok {
		return x.NzpCsiRs2R17
	}
	return nil
}

func (x *ResourcesForChannel2R17CsiAssociatedReportConfigInfo) GetCsiSsbResourceSet2R17() int32 {
	if x, ok := x.GetResourcesForChannel2R17CsiAssociatedReportConfigInfo().(*ResourcesForChannel2R17CsiAssociatedReportConfigInfo_CsiSsbResourceSet2R17); ok {
		return x.CsiSsbResourceSet2R17
	}
	return 0
}

type isResourcesForChannel2R17CsiAssociatedReportConfigInfo_ResourcesForChannel2R17CsiAssociatedReportConfigInfo interface {
	isResourcesForChannel2R17CsiAssociatedReportConfigInfo_ResourcesForChannel2R17CsiAssociatedReportConfigInfo()
}

type ResourcesForChannel2R17CsiAssociatedReportConfigInfo_NzpCsiRs2R17 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	NzpCsiRs2R17 *NzpCSiRS2R17ResourcesForChannel2R17 `protobuf:"bytes,1,opt,name=nzp_csi_rs2_r17,json=nzp-CSI-RS2-r17,proto3,oneof" aper:"choiceIdx:1,"`
}

type ResourcesForChannel2R17CsiAssociatedReportConfigInfo_CsiSsbResourceSet2R17 struct {
	// @inject_tag: aper:"choiceIdx:2,valueLB:1,valueUB:2,"
	CsiSsbResourceSet2R17 int32 `protobuf:"varint,2,opt,name=csi_ssb_resource_set2_r17,json=csi-SSB-ResourceSet2-r17,proto3,oneof" aper:"choiceIdx:2,valueLB:1,valueUB:2,"`
}

func (*ResourcesForChannel2R17CsiAssociatedReportConfigInfo_NzpCsiRs2R17) isResourcesForChannel2R17CsiAssociatedReportConfigInfo_ResourcesForChannel2R17CsiAssociatedReportConfigInfo() {
}

func (*ResourcesForChannel2R17CsiAssociatedReportConfigInfo_CsiSsbResourceSet2R17) isResourcesForChannel2R17CsiAssociatedReportConfigInfo_ResourcesForChannel2R17CsiAssociatedReportConfigInfo() {
}

// sequence from nr-rrc-definitions.asn1:836
// @inject_tag: aper:"valueExt"
// {CSI-AssociatedReportConfigInfo}
type CsiAssociatedReportConfigInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportConfigId      *CsiReportConfigId                                `protobuf:"bytes,1,opt,name=report_config_id,json=reportConfigId,proto3" json:"report_config_id,omitempty"`
	ResourcesForChannel *ResourcesForChannelCsiAssociatedReportConfigInfo `protobuf:"bytes,2,opt,name=resources_for_channel,json=resourcesForChannel,proto3" json:"resources_for_channel,omitempty"`
	// @inject_tag: aper:"optional,valueLB:1,valueUB:16,"
	CsiImResourcesForInterference *int32 `protobuf:"varint,3,opt,name=csi_im_resources_for_interference,json=csi-IM-ResourcesForInterference,proto3,oneof" json:"csi_im_resources_for_interference,omitempty" aper:"optional,valueLB:1,valueUB:16,"`
	// @inject_tag: aper:"optional,valueLB:1,valueUB:16,"
	NzpCsiRsResourcesForInterference *int32 `protobuf:"varint,4,opt,name=nzp_csi_rs_resources_for_interference,json=nzp-CSI-RS-ResourcesForInterference,proto3,oneof" json:"nzp_csi_rs_resources_for_interference,omitempty" aper:"optional,valueLB:1,valueUB:16,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	ResourcesForChannel2R17 *ResourcesForChannel2R17CsiAssociatedReportConfigInfo `protobuf:"bytes,5,opt,name=resources_for_channel2_r17,json=resourcesForChannel2-r17,proto3,oneof" json:"resources_for_channel2_r17,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:1,valueUB:2,fromValueExt,"
	CsiSsbResourceSetExt *int32 `protobuf:"varint,6,opt,name=csi_ssb_resource_set_ext,json=csi-SSB-ResourceSetExt,proto3,oneof" json:"csi_ssb_resource_set_ext,omitempty" aper:"optional,valueLB:1,valueUB:2,fromValueExt,"`
}

func (x *CsiAssociatedReportConfigInfo) Reset() {
	*x = CsiAssociatedReportConfigInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiAssociatedReportConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiAssociatedReportConfigInfo) ProtoMessage() {}

func (x *CsiAssociatedReportConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiAssociatedReportConfigInfo.ProtoReflect.Descriptor instead.
func (*CsiAssociatedReportConfigInfo) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{147}
}

func (x *CsiAssociatedReportConfigInfo) GetReportConfigId() *CsiReportConfigId {
	if x != nil {
		return x.ReportConfigId
	}
	return nil
}

func (x *CsiAssociatedReportConfigInfo) GetResourcesForChannel() *ResourcesForChannelCsiAssociatedReportConfigInfo {
	if x != nil {
		return x.ResourcesForChannel
	}
	return nil
}

func (x *CsiAssociatedReportConfigInfo) GetCsiImResourcesForInterference() int32 {
	if x != nil && x.CsiImResourcesForInterference != nil {
		return *x.CsiImResourcesForInterference
	}
	return 0
}

func (x *CsiAssociatedReportConfigInfo) GetNzpCsiRsResourcesForInterference() int32 {
	if x != nil && x.NzpCsiRsResourcesForInterference != nil {
		return *x.NzpCsiRsResourcesForInterference
	}
	return 0
}

func (x *CsiAssociatedReportConfigInfo) GetResourcesForChannel2R17() *ResourcesForChannel2R17CsiAssociatedReportConfigInfo {
	if x != nil {
		return x.ResourcesForChannel2R17
	}
	return nil
}

func (x *CsiAssociatedReportConfigInfo) GetCsiSsbResourceSetExt() int32 {
	if x != nil && x.CsiSsbResourceSetExt != nil {
		return *x.CsiSsbResourceSetExt
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:865
// @inject_tag: aper:"valueExt"
// {CSI-FrequencyOccupation}
type CsiFrequencyOccupation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:274,"
	StartingRb int32 `protobuf:"varint,1,opt,name=starting_rb,json=startingRB,proto3" json:"starting_rb,omitempty" aper:"valueLB:0,valueUB:274,"`
	// @inject_tag: aper:"valueLB:24,valueUB:276,"
	NrofRbs int32 `protobuf:"varint,2,opt,name=nrof_rbs,json=nrofRBs,proto3" json:"nrof_rbs,omitempty" aper:"valueLB:24,valueUB:276,"`
}

func (x *CsiFrequencyOccupation) Reset() {
	*x = CsiFrequencyOccupation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiFrequencyOccupation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiFrequencyOccupation) ProtoMessage() {}

func (x *CsiFrequencyOccupation) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiFrequencyOccupation.ProtoReflect.Descriptor instead.
func (*CsiFrequencyOccupation) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{148}
}

func (x *CsiFrequencyOccupation) GetStartingRb() int32 {
	if x != nil {
		return x.StartingRb
	}
	return 0
}

func (x *CsiFrequencyOccupation) GetNrofRbs() int32 {
	if x != nil {
		return x.NrofRbs
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:877
// {pattern0csi-IM-ResourceElementPattern}
type Pattern0CsiIMResourceElementPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:5,"
	SubcarrierLocationP0 SubcarrierLocationp0Pattern0 `protobuf:"varint,1,opt,name=subcarrier_location_p0,json=subcarrierLocation-p0,proto3,enum=nr_rrc_definitions.v1.SubcarrierLocationp0Pattern0" json:"subcarrier_location_p0,omitempty" aper:"valueLB:0,valueUB:5,"`
	// @inject_tag: aper:"valueLB:0,valueUB:12,"
	SymbolLocationP0 int32 `protobuf:"varint,2,opt,name=symbol_location_p0,json=symbolLocation-p0,proto3" json:"symbol_location_p0,omitempty" aper:"valueLB:0,valueUB:12,"`
}

func (x *Pattern0CsiIMResourceElementPattern) Reset() {
	*x = Pattern0CsiIMResourceElementPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pattern0CsiIMResourceElementPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pattern0CsiIMResourceElementPattern) ProtoMessage() {}

func (x *Pattern0CsiIMResourceElementPattern) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pattern0CsiIMResourceElementPattern.ProtoReflect.Descriptor instead.
func (*Pattern0CsiIMResourceElementPattern) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{149}
}

func (x *Pattern0CsiIMResourceElementPattern) GetSubcarrierLocationP0() SubcarrierLocationp0Pattern0 {
	if x != nil {
		return x.SubcarrierLocationP0
	}
	return SubcarrierLocationp0Pattern0_SUBCARRIER_LOCATIONP0PATTERN0_S0
}

func (x *Pattern0CsiIMResourceElementPattern) GetSymbolLocationP0() int32 {
	if x != nil {
		return x.SymbolLocationP0
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:881
// {pattern1csi-IM-ResourceElementPattern}
type Pattern1CsiIMResourceElementPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:2,"
	SubcarrierLocationP1 SubcarrierLocationp1Pattern1 `protobuf:"varint,1,opt,name=subcarrier_location_p1,json=subcarrierLocation-p1,proto3,enum=nr_rrc_definitions.v1.SubcarrierLocationp1Pattern1" json:"subcarrier_location_p1,omitempty" aper:"valueLB:0,valueUB:2,"`
	// @inject_tag: aper:"valueLB:0,valueUB:13,"
	SymbolLocationP1 int32 `protobuf:"varint,2,opt,name=symbol_location_p1,json=symbolLocation-p1,proto3" json:"symbol_location_p1,omitempty" aper:"valueLB:0,valueUB:13,"`
}

func (x *Pattern1CsiIMResourceElementPattern) Reset() {
	*x = Pattern1CsiIMResourceElementPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pattern1CsiIMResourceElementPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pattern1CsiIMResourceElementPattern) ProtoMessage() {}

func (x *Pattern1CsiIMResourceElementPattern) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pattern1CsiIMResourceElementPattern.ProtoReflect.Descriptor instead.
func (*Pattern1CsiIMResourceElementPattern) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{150}
}

func (x *Pattern1CsiIMResourceElementPattern) GetSubcarrierLocationP1() SubcarrierLocationp1Pattern1 {
	if x != nil {
		return x.SubcarrierLocationP1
	}
	return SubcarrierLocationp1Pattern1_SUBCARRIER_LOCATIONP1PATTERN1_S0
}

func (x *Pattern1CsiIMResourceElementPattern) GetSymbolLocationP1() int32 {
	if x != nil {
		return x.SymbolLocationP1
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:879
// {csi-IM-ResourceElementPatternCSI-IM-Resource}
type CsiIMResourceElementPatternCsiIMResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:879
	//
	// Types that are assignable to CsiImResourceElementPatternCsiImResource:
	//	*CsiIMResourceElementPatternCsiIMResource_Pattern0
	//	*CsiIMResourceElementPatternCsiIMResource_Pattern1
	CsiImResourceElementPatternCsiImResource isCsiIMResourceElementPatternCsiIMResource_CsiImResourceElementPatternCsiImResource `protobuf_oneof:"csi_im_resource_element_pattern_csi_im_resource"`
}

func (x *CsiIMResourceElementPatternCsiIMResource) Reset() {
	*x = CsiIMResourceElementPatternCsiIMResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiIMResourceElementPatternCsiIMResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiIMResourceElementPatternCsiIMResource) ProtoMessage() {}

func (x *CsiIMResourceElementPatternCsiIMResource) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiIMResourceElementPatternCsiIMResource.ProtoReflect.Descriptor instead.
func (*CsiIMResourceElementPatternCsiIMResource) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{151}
}

func (m *CsiIMResourceElementPatternCsiIMResource) GetCsiImResourceElementPatternCsiImResource() isCsiIMResourceElementPatternCsiIMResource_CsiImResourceElementPatternCsiImResource {
	if m != nil {
		return m.CsiImResourceElementPatternCsiImResource
	}
	return nil
}

func (x *CsiIMResourceElementPatternCsiIMResource) GetPattern0() *Pattern0CsiIMResourceElementPattern {
	if x, ok := x.GetCsiImResourceElementPatternCsiImResource().(*CsiIMResourceElementPatternCsiIMResource_Pattern0); ok {
		return x.Pattern0
	}
	return nil
}

func (x *CsiIMResourceElementPatternCsiIMResource) GetPattern1() *Pattern1CsiIMResourceElementPattern {
	if x, ok := x.GetCsiImResourceElementPatternCsiImResource().(*CsiIMResourceElementPatternCsiIMResource_Pattern1); ok {
		return x.Pattern1
	}
	return nil
}

type isCsiIMResourceElementPatternCsiIMResource_CsiImResourceElementPatternCsiImResource interface {
	isCsiIMResourceElementPatternCsiIMResource_CsiImResourceElementPatternCsiImResource()
}

type CsiIMResourceElementPatternCsiIMResource_Pattern0 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Pattern0 *Pattern0CsiIMResourceElementPattern `protobuf:"bytes,1,opt,name=pattern0,proto3,oneof" aper:"choiceIdx:1,"`
}

type CsiIMResourceElementPatternCsiIMResource_Pattern1 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Pattern1 *Pattern1CsiIMResourceElementPattern `protobuf:"bytes,2,opt,name=pattern1,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*CsiIMResourceElementPatternCsiIMResource_Pattern0) isCsiIMResourceElementPatternCsiIMResource_CsiImResourceElementPatternCsiImResource() {
}

func (*CsiIMResourceElementPatternCsiIMResource_Pattern1) isCsiIMResourceElementPatternCsiIMResource_CsiImResourceElementPatternCsiImResource() {
}

// sequence from nr-rrc-definitions.asn1:874
// @inject_tag: aper:"valueExt"
// {CSI-IM-Resource}
type CsiIMResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CsiImResourceId *CsiIMResourceId `protobuf:"bytes,1,opt,name=csi_im_resource_id,json=csi-IM-ResourceId,proto3" json:"csi_im_resource_id,omitempty"`
	// @inject_tag: aper:"optional,"
	CsiImResourceElementPattern *CsiIMResourceElementPatternCsiIMResource `protobuf:"bytes,2,opt,name=csi_im_resource_element_pattern,json=csi-IM-ResourceElementPattern,proto3,oneof" json:"csi_im_resource_element_pattern,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueExt,"
	FreqBand *CsiFrequencyOccupation `protobuf:"bytes,3,opt,name=freq_band,json=freqBand,proto3,oneof" json:"freq_band,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,"
	PeriodicityAndOffset *CsiResourcePeriodicityAndOffset `protobuf:"bytes,4,opt,name=periodicity_and_offset,json=periodicityAndOffset,proto3,oneof" json:"periodicity_and_offset,omitempty" aper:"optional,"`
}

func (x *CsiIMResource) Reset() {
	*x = CsiIMResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiIMResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiIMResource) ProtoMessage() {}

func (x *CsiIMResource) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiIMResource.ProtoReflect.Descriptor instead.
func (*CsiIMResource) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{152}
}

func (x *CsiIMResource) GetCsiImResourceId() *CsiIMResourceId {
	if x != nil {
		return x.CsiImResourceId
	}
	return nil
}

func (x *CsiIMResource) GetCsiImResourceElementPattern() *CsiIMResourceElementPatternCsiIMResource {
	if x != nil {
		return x.CsiImResourceElementPattern
	}
	return nil
}

func (x *CsiIMResource) GetFreqBand() *CsiFrequencyOccupation {
	if x != nil {
		return x.FreqBand
	}
	return nil
}

func (x *CsiIMResource) GetPeriodicityAndOffset() *CsiResourcePeriodicityAndOffset {
	if x != nil {
		return x.PeriodicityAndOffset
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:893
// {CSI-IM-ResourceId}
type CsiIMResourceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:31,"`
}

func (x *CsiIMResourceId) Reset() {
	*x = CsiIMResourceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiIMResourceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiIMResourceId) ProtoMessage() {}

func (x *CsiIMResourceId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiIMResourceId.ProtoReflect.Descriptor instead.
func (*CsiIMResourceId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{153}
}

func (x *CsiIMResourceId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:899
// @inject_tag: aper:"valueExt"
// {CSI-IM-ResourceSet}
type CsiIMResourceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CsiImResourceSetId *CsiIMResourceSetId `protobuf:"bytes,1,opt,name=csi_im_resource_set_id,json=csi-IM-ResourceSetId,proto3" json:"csi_im_resource_set_id,omitempty"`
	// @inject_tag: aper:"sizeLB:1,sizeUB:8,"
	CsiImResources []*CsiIMResourceId `protobuf:"bytes,2,rep,name=csi_im_resources,json=csi-IM-Resources,proto3" json:"csi_im_resources,omitempty" aper:"sizeLB:1,sizeUB:8,"`
}

func (x *CsiIMResourceSet) Reset() {
	*x = CsiIMResourceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiIMResourceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiIMResourceSet) ProtoMessage() {}

func (x *CsiIMResourceSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiIMResourceSet.ProtoReflect.Descriptor instead.
func (*CsiIMResourceSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{154}
}

func (x *CsiIMResourceSet) GetCsiImResourceSetId() *CsiIMResourceSetId {
	if x != nil {
		return x.CsiImResourceSetId
	}
	return nil
}

func (x *CsiIMResourceSet) GetCsiImResources() []*CsiIMResourceId {
	if x != nil {
		return x.CsiImResources
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:906
// {CSI-IM-ResourceSetId}
type CsiIMResourceSetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:63,"`
}

func (x *CsiIMResourceSetId) Reset() {
	*x = CsiIMResourceSetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiIMResourceSetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiIMResourceSetId) ProtoMessage() {}

func (x *CsiIMResourceSetId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiIMResourceSetId.ProtoReflect.Descriptor instead.
func (*CsiIMResourceSetId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{155}
}

func (x *CsiIMResourceSetId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:932
// {aperiodicTriggerStateListCSI-MeasConfig}
type AperiodicTriggerStateListCsiMeasConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:932
	//
	// Types that are assignable to AperiodicTriggerStateListCsiMeasConfig:
	//	*AperiodicTriggerStateListCsiMeasConfig_Release
	//	*AperiodicTriggerStateListCsiMeasConfig_Setup
	AperiodicTriggerStateListCsiMeasConfig isAperiodicTriggerStateListCsiMeasConfig_AperiodicTriggerStateListCsiMeasConfig `protobuf_oneof:"aperiodic_trigger_state_list_csi_meas_config"`
}

func (x *AperiodicTriggerStateListCsiMeasConfig) Reset() {
	*x = AperiodicTriggerStateListCsiMeasConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AperiodicTriggerStateListCsiMeasConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AperiodicTriggerStateListCsiMeasConfig) ProtoMessage() {}

func (x *AperiodicTriggerStateListCsiMeasConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AperiodicTriggerStateListCsiMeasConfig.ProtoReflect.Descriptor instead.
func (*AperiodicTriggerStateListCsiMeasConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{156}
}

func (m *AperiodicTriggerStateListCsiMeasConfig) GetAperiodicTriggerStateListCsiMeasConfig() isAperiodicTriggerStateListCsiMeasConfig_AperiodicTriggerStateListCsiMeasConfig {
	if m != nil {
		return m.AperiodicTriggerStateListCsiMeasConfig
	}
	return nil
}

func (x *AperiodicTriggerStateListCsiMeasConfig) GetRelease() int32 {
	if x, ok := x.GetAperiodicTriggerStateListCsiMeasConfig().(*AperiodicTriggerStateListCsiMeasConfig_Release); ok {
		return x.Release
	}
	return 0
}

func (x *AperiodicTriggerStateListCsiMeasConfig) GetSetup() *CsiAperiodicTriggerStateList {
	if x, ok := x.GetAperiodicTriggerStateListCsiMeasConfig().(*AperiodicTriggerStateListCsiMeasConfig_Setup); ok {
		return x.Setup
	}
	return nil
}

type isAperiodicTriggerStateListCsiMeasConfig_AperiodicTriggerStateListCsiMeasConfig interface {
	isAperiodicTriggerStateListCsiMeasConfig_AperiodicTriggerStateListCsiMeasConfig()
}

type AperiodicTriggerStateListCsiMeasConfig_Release struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Release int32 `protobuf:"varint,1,opt,name=release,proto3,oneof" aper:"choiceIdx:1,"`
}

type AperiodicTriggerStateListCsiMeasConfig_Setup struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Setup *CsiAperiodicTriggerStateList `protobuf:"bytes,2,opt,name=setup,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*AperiodicTriggerStateListCsiMeasConfig_Release) isAperiodicTriggerStateListCsiMeasConfig_AperiodicTriggerStateListCsiMeasConfig() {
}

func (*AperiodicTriggerStateListCsiMeasConfig_Setup) isAperiodicTriggerStateListCsiMeasConfig_AperiodicTriggerStateListCsiMeasConfig() {
}

// choice from nr-rrc-definitions.asn1:936
// {semiPersistentOnPUSCH-TriggerStateListCSI-MeasConfig}
type SemiPersistentOnPuschTriggerStateListCsiMeasConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:936
	//
	// Types that are assignable to SemiPersistentOnPuschTriggerStateListCsiMeasConfig:
	//	*SemiPersistentOnPuschTriggerStateListCsiMeasConfig_Release
	//	*SemiPersistentOnPuschTriggerStateListCsiMeasConfig_Setup
	SemiPersistentOnPuschTriggerStateListCsiMeasConfig isSemiPersistentOnPuschTriggerStateListCsiMeasConfig_SemiPersistentOnPuschTriggerStateListCsiMeasConfig `protobuf_oneof:"semi_persistent_on_pusch_trigger_state_list_csi_meas_config"`
}

func (x *SemiPersistentOnPuschTriggerStateListCsiMeasConfig) Reset() {
	*x = SemiPersistentOnPuschTriggerStateListCsiMeasConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemiPersistentOnPuschTriggerStateListCsiMeasConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemiPersistentOnPuschTriggerStateListCsiMeasConfig) ProtoMessage() {}

func (x *SemiPersistentOnPuschTriggerStateListCsiMeasConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemiPersistentOnPuschTriggerStateListCsiMeasConfig.ProtoReflect.Descriptor instead.
func (*SemiPersistentOnPuschTriggerStateListCsiMeasConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{157}
}

func (m *SemiPersistentOnPuschTriggerStateListCsiMeasConfig) GetSemiPersistentOnPuschTriggerStateListCsiMeasConfig() isSemiPersistentOnPuschTriggerStateListCsiMeasConfig_SemiPersistentOnPuschTriggerStateListCsiMeasConfig {
	if m != nil {
		return m.SemiPersistentOnPuschTriggerStateListCsiMeasConfig
	}
	return nil
}

func (x *SemiPersistentOnPuschTriggerStateListCsiMeasConfig) GetRelease() int32 {
	if x, ok := x.GetSemiPersistentOnPuschTriggerStateListCsiMeasConfig().(*SemiPersistentOnPuschTriggerStateListCsiMeasConfig_Release); ok {
		return x.Release
	}
	return 0
}

func (x *SemiPersistentOnPuschTriggerStateListCsiMeasConfig) GetSetup() *CsiSemiPersistentOnPuschTriggerStateList {
	if x, ok := x.GetSemiPersistentOnPuschTriggerStateListCsiMeasConfig().(*SemiPersistentOnPuschTriggerStateListCsiMeasConfig_Setup); ok {
		return x.Setup
	}
	return nil
}

type isSemiPersistentOnPuschTriggerStateListCsiMeasConfig_SemiPersistentOnPuschTriggerStateListCsiMeasConfig interface {
	isSemiPersistentOnPuschTriggerStateListCsiMeasConfig_SemiPersistentOnPuschTriggerStateListCsiMeasConfig()
}

type SemiPersistentOnPuschTriggerStateListCsiMeasConfig_Release struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Release int32 `protobuf:"varint,1,opt,name=release,proto3,oneof" aper:"choiceIdx:1,"`
}

type SemiPersistentOnPuschTriggerStateListCsiMeasConfig_Setup struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Setup *CsiSemiPersistentOnPuschTriggerStateList `protobuf:"bytes,2,opt,name=setup,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*SemiPersistentOnPuschTriggerStateListCsiMeasConfig_Release) isSemiPersistentOnPuschTriggerStateListCsiMeasConfig_SemiPersistentOnPuschTriggerStateListCsiMeasConfig() {
}

func (*SemiPersistentOnPuschTriggerStateListCsiMeasConfig_Setup) isSemiPersistentOnPuschTriggerStateListCsiMeasConfig_SemiPersistentOnPuschTriggerStateListCsiMeasConfig() {
}

// sequence from nr-rrc-definitions.asn1:912
// @inject_tag: aper:"valueExt"
// {CSI-MeasConfig}
type CsiMeasConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:192,"
	NzpCsiRsResourceToAddModList []*NzpCSiRSResource `protobuf:"bytes,1,rep,name=nzp_csi_rs_resource_to_add_mod_list,json=nzp-CSI-RS-ResourceToAddModList,proto3" json:"nzp_csi_rs_resource_to_add_mod_list,omitempty" aper:"optional,sizeLB:1,sizeUB:192,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:192,"
	NzpCsiRsResourceToReleaseList []*NzpCSiRSResourceId `protobuf:"bytes,2,rep,name=nzp_csi_rs_resource_to_release_list,json=nzp-CSI-RS-ResourceToReleaseList,proto3" json:"nzp_csi_rs_resource_to_release_list,omitempty" aper:"optional,sizeLB:1,sizeUB:192,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:64,"
	NzpCsiRsResourceSetToAddModList []*NzpCSiRSResourceSet `protobuf:"bytes,3,rep,name=nzp_csi_rs_resource_set_to_add_mod_list,json=nzp-CSI-RS-ResourceSetToAddModList,proto3" json:"nzp_csi_rs_resource_set_to_add_mod_list,omitempty" aper:"optional,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:64,"
	NzpCsiRsResourceSetToReleaseList []*NzpCSiRSResourceSetId `protobuf:"bytes,4,rep,name=nzp_csi_rs_resource_set_to_release_list,json=nzp-CSI-RS-ResourceSetToReleaseList,proto3" json:"nzp_csi_rs_resource_set_to_release_list,omitempty" aper:"optional,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:32,"
	CsiImResourceToAddModList []*CsiIMResource `protobuf:"bytes,5,rep,name=csi_im_resource_to_add_mod_list,json=csi-IM-ResourceToAddModList,proto3" json:"csi_im_resource_to_add_mod_list,omitempty" aper:"optional,sizeLB:1,sizeUB:32,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:32,"
	CsiImResourceToReleaseList []*CsiIMResourceId `protobuf:"bytes,6,rep,name=csi_im_resource_to_release_list,json=csi-IM-ResourceToReleaseList,proto3" json:"csi_im_resource_to_release_list,omitempty" aper:"optional,sizeLB:1,sizeUB:32,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:64,"
	CsiImResourceSetToAddModList []*CsiIMResourceSet `protobuf:"bytes,7,rep,name=csi_im_resource_set_to_add_mod_list,json=csi-IM-ResourceSetToAddModList,proto3" json:"csi_im_resource_set_to_add_mod_list,omitempty" aper:"optional,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:64,"
	CsiImResourceSetToReleaseList []*CsiIMResourceSetId `protobuf:"bytes,8,rep,name=csi_im_resource_set_to_release_list,json=csi-IM-ResourceSetToReleaseList,proto3" json:"csi_im_resource_set_to_release_list,omitempty" aper:"optional,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:64,"
	CsiSsbResourceSetToAddModList []*CsiSSbResourceSet `protobuf:"bytes,9,rep,name=csi_ssb_resource_set_to_add_mod_list,json=csi-SSB-ResourceSetToAddModList,proto3" json:"csi_ssb_resource_set_to_add_mod_list,omitempty" aper:"optional,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:64,"
	CsiSsbResourceSetToReleaseList []*CsiSSbResourceSetId `protobuf:"bytes,10,rep,name=csi_ssb_resource_set_to_release_list,json=csi-SSB-ResourceSetToReleaseList,proto3" json:"csi_ssb_resource_set_to_release_list,omitempty" aper:"optional,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:112,"
	CsiResourceConfigToAddModList []*CsiResourceConfig `protobuf:"bytes,11,rep,name=csi_resource_config_to_add_mod_list,json=csi-ResourceConfigToAddModList,proto3" json:"csi_resource_config_to_add_mod_list,omitempty" aper:"optional,sizeLB:1,sizeUB:112,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:112,"
	CsiResourceConfigToReleaseList []*CsiResourceConfigId `protobuf:"bytes,12,rep,name=csi_resource_config_to_release_list,json=csi-ResourceConfigToReleaseList,proto3" json:"csi_resource_config_to_release_list,omitempty" aper:"optional,sizeLB:1,sizeUB:112,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:48,"
	CsiReportConfigToAddModList []*CsiReportConfig `protobuf:"bytes,13,rep,name=csi_report_config_to_add_mod_list,json=csi-ReportConfigToAddModList,proto3" json:"csi_report_config_to_add_mod_list,omitempty" aper:"optional,sizeLB:1,sizeUB:48,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:48,"
	CsiReportConfigToReleaseList []*CsiReportConfigId `protobuf:"bytes,14,rep,name=csi_report_config_to_release_list,json=csi-ReportConfigToReleaseList,proto3" json:"csi_report_config_to_release_list,omitempty" aper:"optional,sizeLB:1,sizeUB:48,"`
	// @inject_tag: aper:"optional,"
	AperiodicTriggerStateList *AperiodicTriggerStateListCsiMeasConfig `protobuf:"bytes,15,opt,name=aperiodic_trigger_state_list,json=aperiodicTriggerStateList,proto3,oneof" json:"aperiodic_trigger_state_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	SemiPersistentOnPuschTriggerStateList *SemiPersistentOnPuschTriggerStateListCsiMeasConfig `protobuf:"bytes,16,opt,name=semi_persistent_on_pusch_trigger_state_list,json=semiPersistentOnPUSCH-TriggerStateList,proto3,oneof" json:"semi_persistent_on_pusch_trigger_state_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:6,fromValueExt,"
	ReportTriggerSizeDci_0_2R16 *int32 `protobuf:"varint,17,opt,name=report_trigger_size_dci_0_2_r16,json=reportTriggerSizeDCI-0-2-r16,proto3,oneof" json:"report_trigger_size_dci_0_2_r16,omitempty" aper:"optional,valueLB:0,valueUB:6,fromValueExt,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:255,fromValueExt,"
	SCellActivationRsConfigToAddModListR17 []*ScellActivationRsConfigr17 `protobuf:"bytes,18,rep,name=s_cell_activation_rs_config_to_add_mod_list_r17,json=sCellActivationRS-ConfigToAddModList-r17,proto3" json:"s_cell_activation_rs_config_to_add_mod_list_r17,omitempty" aper:"optional,sizeLB:1,sizeUB:255,fromValueExt,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:255,fromValueExt,"
	SCellActivationRsConfigToReleaseListR17 []*ScellActivationRsConfigIdr17 `protobuf:"bytes,19,rep,name=s_cell_activation_rs_config_to_release_list_r17,json=sCellActivationRS-ConfigToReleaseList-r17,proto3" json:"s_cell_activation_rs_config_to_release_list_r17,omitempty" aper:"optional,sizeLB:1,sizeUB:255,fromValueExt,"`
}

func (x *CsiMeasConfig) Reset() {
	*x = CsiMeasConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiMeasConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiMeasConfig) ProtoMessage() {}

func (x *CsiMeasConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiMeasConfig.ProtoReflect.Descriptor instead.
func (*CsiMeasConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{158}
}

func (x *CsiMeasConfig) GetNzpCsiRsResourceToAddModList() []*NzpCSiRSResource {
	if x != nil {
		return x.NzpCsiRsResourceToAddModList
	}
	return nil
}

func (x *CsiMeasConfig) GetNzpCsiRsResourceToReleaseList() []*NzpCSiRSResourceId {
	if x != nil {
		return x.NzpCsiRsResourceToReleaseList
	}
	return nil
}

func (x *CsiMeasConfig) GetNzpCsiRsResourceSetToAddModList() []*NzpCSiRSResourceSet {
	if x != nil {
		return x.NzpCsiRsResourceSetToAddModList
	}
	return nil
}

func (x *CsiMeasConfig) GetNzpCsiRsResourceSetToReleaseList() []*NzpCSiRSResourceSetId {
	if x != nil {
		return x.NzpCsiRsResourceSetToReleaseList
	}
	return nil
}

func (x *CsiMeasConfig) GetCsiImResourceToAddModList() []*CsiIMResource {
	if x != nil {
		return x.CsiImResourceToAddModList
	}
	return nil
}

func (x *CsiMeasConfig) GetCsiImResourceToReleaseList() []*CsiIMResourceId {
	if x != nil {
		return x.CsiImResourceToReleaseList
	}
	return nil
}

func (x *CsiMeasConfig) GetCsiImResourceSetToAddModList() []*CsiIMResourceSet {
	if x != nil {
		return x.CsiImResourceSetToAddModList
	}
	return nil
}

func (x *CsiMeasConfig) GetCsiImResourceSetToReleaseList() []*CsiIMResourceSetId {
	if x != nil {
		return x.CsiImResourceSetToReleaseList
	}
	return nil
}

func (x *CsiMeasConfig) GetCsiSsbResourceSetToAddModList() []*CsiSSbResourceSet {
	if x != nil {
		return x.CsiSsbResourceSetToAddModList
	}
	return nil
}

func (x *CsiMeasConfig) GetCsiSsbResourceSetToReleaseList() []*CsiSSbResourceSetId {
	if x != nil {
		return x.CsiSsbResourceSetToReleaseList
	}
	return nil
}

func (x *CsiMeasConfig) GetCsiResourceConfigToAddModList() []*CsiResourceConfig {
	if x != nil {
		return x.CsiResourceConfigToAddModList
	}
	return nil
}

func (x *CsiMeasConfig) GetCsiResourceConfigToReleaseList() []*CsiResourceConfigId {
	if x != nil {
		return x.CsiResourceConfigToReleaseList
	}
	return nil
}

func (x *CsiMeasConfig) GetCsiReportConfigToAddModList() []*CsiReportConfig {
	if x != nil {
		return x.CsiReportConfigToAddModList
	}
	return nil
}

func (x *CsiMeasConfig) GetCsiReportConfigToReleaseList() []*CsiReportConfigId {
	if x != nil {
		return x.CsiReportConfigToReleaseList
	}
	return nil
}

func (x *CsiMeasConfig) GetAperiodicTriggerStateList() *AperiodicTriggerStateListCsiMeasConfig {
	if x != nil {
		return x.AperiodicTriggerStateList
	}
	return nil
}

func (x *CsiMeasConfig) GetSemiPersistentOnPuschTriggerStateList() *SemiPersistentOnPuschTriggerStateListCsiMeasConfig {
	if x != nil {
		return x.SemiPersistentOnPuschTriggerStateList
	}
	return nil
}

func (x *CsiMeasConfig) GetReportTriggerSizeDci_0_2R16() int32 {
	if x != nil && x.ReportTriggerSizeDci_0_2R16 != nil {
		return *x.ReportTriggerSizeDci_0_2R16
	}
	return 0
}

func (x *CsiMeasConfig) GetSCellActivationRsConfigToAddModListR17() []*ScellActivationRsConfigr17 {
	if x != nil {
		return x.SCellActivationRsConfigToAddModListR17
	}
	return nil
}

func (x *CsiMeasConfig) GetSCellActivationRsConfigToReleaseListR17() []*ScellActivationRsConfigIdr17 {
	if x != nil {
		return x.SCellActivationRsConfigToReleaseListR17
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:960
// {periodicreportConfigType}
type PeriodicreportConfigType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportSlotConfig *CsiReportPeriodicityAndOffset `protobuf:"bytes,1,opt,name=report_slot_config,json=reportSlotConfig,proto3" json:"report_slot_config,omitempty"`
	// @inject_tag: aper:"sizeLB:1,sizeUB:4,"
	PucchCsiResourceList []*PucchCSiResource `protobuf:"bytes,2,rep,name=pucch_csi_resource_list,json=pucch-CSI-ResourceList,proto3" json:"pucch_csi_resource_list,omitempty" aper:"sizeLB:1,sizeUB:4,"`
}

func (x *PeriodicreportConfigType) Reset() {
	*x = PeriodicreportConfigType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeriodicreportConfigType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodicreportConfigType) ProtoMessage() {}

func (x *PeriodicreportConfigType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodicreportConfigType.ProtoReflect.Descriptor instead.
func (*PeriodicreportConfigType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{159}
}

func (x *PeriodicreportConfigType) GetReportSlotConfig() *CsiReportPeriodicityAndOffset {
	if x != nil {
		return x.ReportSlotConfig
	}
	return nil
}

func (x *PeriodicreportConfigType) GetPucchCsiResourceList() []*PucchCSiResource {
	if x != nil {
		return x.PucchCsiResourceList
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:964
// {semiPersistentOnPUCCHreportConfigType}
type SemiPersistentOnPucchreportConfigType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportSlotConfig *CsiReportPeriodicityAndOffset `protobuf:"bytes,1,opt,name=report_slot_config,json=reportSlotConfig,proto3" json:"report_slot_config,omitempty"`
	// @inject_tag: aper:"sizeLB:1,sizeUB:4,"
	PucchCsiResourceList []*PucchCSiResource `protobuf:"bytes,2,rep,name=pucch_csi_resource_list,json=pucch-CSI-ResourceList,proto3" json:"pucch_csi_resource_list,omitempty" aper:"sizeLB:1,sizeUB:4,"`
}

func (x *SemiPersistentOnPucchreportConfigType) Reset() {
	*x = SemiPersistentOnPucchreportConfigType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemiPersistentOnPucchreportConfigType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemiPersistentOnPucchreportConfigType) ProtoMessage() {}

func (x *SemiPersistentOnPucchreportConfigType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemiPersistentOnPucchreportConfigType.ProtoReflect.Descriptor instead.
func (*SemiPersistentOnPucchreportConfigType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{160}
}

func (x *SemiPersistentOnPucchreportConfigType) GetReportSlotConfig() *CsiReportPeriodicityAndOffset {
	if x != nil {
		return x.ReportSlotConfig
	}
	return nil
}

func (x *SemiPersistentOnPucchreportConfigType) GetPucchCsiResourceList() []*PucchCSiResource {
	if x != nil {
		return x.PucchCsiResourceList
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:968
// {semiPersistentOnPUSCHreportConfigType}
type SemiPersistentOnPuschreportConfigType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:6,"
	ReportSlotConfig ReportSlotConfigsemiPersistentOnPusch `protobuf:"varint,1,opt,name=report_slot_config,json=reportSlotConfig,proto3,enum=nr_rrc_definitions.v1.ReportSlotConfigsemiPersistentOnPusch" json:"report_slot_config,omitempty" aper:"valueLB:0,valueUB:6,"`
	// @inject_tag: aper:"valueLB:0,valueUB:32,sizeLB:1,sizeUB:16,"
	ReportSlotOffsetList []int32            `protobuf:"varint,2,rep,packed,name=report_slot_offset_list,json=reportSlotOffsetList,proto3" json:"report_slot_offset_list,omitempty" aper:"valueLB:0,valueUB:32,sizeLB:1,sizeUB:16,"`
	P0Alpha              *P0PUschAlphaSetId `protobuf:"bytes,3,opt,name=p0alpha,proto3" json:"p0alpha,omitempty"`
}

func (x *SemiPersistentOnPuschreportConfigType) Reset() {
	*x = SemiPersistentOnPuschreportConfigType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemiPersistentOnPuschreportConfigType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemiPersistentOnPuschreportConfigType) ProtoMessage() {}

func (x *SemiPersistentOnPuschreportConfigType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemiPersistentOnPuschreportConfigType.ProtoReflect.Descriptor instead.
func (*SemiPersistentOnPuschreportConfigType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{161}
}

func (x *SemiPersistentOnPuschreportConfigType) GetReportSlotConfig() ReportSlotConfigsemiPersistentOnPusch {
	if x != nil {
		return x.ReportSlotConfig
	}
	return ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL5
}

func (x *SemiPersistentOnPuschreportConfigType) GetReportSlotOffsetList() []int32 {
	if x != nil {
		return x.ReportSlotOffsetList
	}
	return nil
}

func (x *SemiPersistentOnPuschreportConfigType) GetP0Alpha() *P0PUschAlphaSetId {
	if x != nil {
		return x.P0Alpha
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:974
// {aperiodicreportConfigType}
type AperiodicreportConfigType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:32,sizeLB:1,sizeUB:16,"
	ReportSlotOffsetList []int32 `protobuf:"varint,1,rep,packed,name=report_slot_offset_list,json=reportSlotOffsetList,proto3" json:"report_slot_offset_list,omitempty" aper:"valueLB:0,valueUB:32,sizeLB:1,sizeUB:16,"`
}

func (x *AperiodicreportConfigType) Reset() {
	*x = AperiodicreportConfigType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AperiodicreportConfigType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AperiodicreportConfigType) ProtoMessage() {}

func (x *AperiodicreportConfigType) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AperiodicreportConfigType.ProtoReflect.Descriptor instead.
func (*AperiodicreportConfigType) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{162}
}

func (x *AperiodicreportConfigType) GetReportSlotOffsetList() []int32 {
	if x != nil {
		return x.ReportSlotOffsetList
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:962
// {reportConfigTypeCSI-ReportConfig}
type ReportConfigTypeCsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:962
	//
	// Types that are assignable to ReportConfigTypeCsiReportConfig:
	//	*ReportConfigTypeCsiReportConfig_Periodic
	//	*ReportConfigTypeCsiReportConfig_SemiPersistentOnPucch
	//	*ReportConfigTypeCsiReportConfig_SemiPersistentOnPusch
	//	*ReportConfigTypeCsiReportConfig_Aperiodic
	ReportConfigTypeCsiReportConfig isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig `protobuf_oneof:"report_config_type_csi_report_config"`
}

func (x *ReportConfigTypeCsiReportConfig) Reset() {
	*x = ReportConfigTypeCsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportConfigTypeCsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportConfigTypeCsiReportConfig) ProtoMessage() {}

func (x *ReportConfigTypeCsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportConfigTypeCsiReportConfig.ProtoReflect.Descriptor instead.
func (*ReportConfigTypeCsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{163}
}

func (m *ReportConfigTypeCsiReportConfig) GetReportConfigTypeCsiReportConfig() isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig {
	if m != nil {
		return m.ReportConfigTypeCsiReportConfig
	}
	return nil
}

func (x *ReportConfigTypeCsiReportConfig) GetPeriodic() *PeriodicreportConfigType {
	if x, ok := x.GetReportConfigTypeCsiReportConfig().(*ReportConfigTypeCsiReportConfig_Periodic); ok {
		return x.Periodic
	}
	return nil
}

func (x *ReportConfigTypeCsiReportConfig) GetSemiPersistentOnPucch() *SemiPersistentOnPucchreportConfigType {
	if x, ok := x.GetReportConfigTypeCsiReportConfig().(*ReportConfigTypeCsiReportConfig_SemiPersistentOnPucch); ok {
		return x.SemiPersistentOnPucch
	}
	return nil
}

func (x *ReportConfigTypeCsiReportConfig) GetSemiPersistentOnPusch() *SemiPersistentOnPuschreportConfigType {
	if x, ok := x.GetReportConfigTypeCsiReportConfig().(*ReportConfigTypeCsiReportConfig_SemiPersistentOnPusch); ok {
		return x.SemiPersistentOnPusch
	}
	return nil
}

func (x *ReportConfigTypeCsiReportConfig) GetAperiodic() *AperiodicreportConfigType {
	if x, ok := x.GetReportConfigTypeCsiReportConfig().(*ReportConfigTypeCsiReportConfig_Aperiodic); ok {
		return x.Aperiodic
	}
	return nil
}

type isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig interface {
	isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig()
}

type ReportConfigTypeCsiReportConfig_Periodic struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Periodic *PeriodicreportConfigType `protobuf:"bytes,1,opt,name=periodic,proto3,oneof" aper:"choiceIdx:1,"`
}

type ReportConfigTypeCsiReportConfig_SemiPersistentOnPucch struct {
	// @inject_tag: aper:"choiceIdx:2,"
	SemiPersistentOnPucch *SemiPersistentOnPucchreportConfigType `protobuf:"bytes,2,opt,name=semi_persistent_on_pucch,json=semiPersistentOnPUCCH,proto3,oneof" aper:"choiceIdx:2,"`
}

type ReportConfigTypeCsiReportConfig_SemiPersistentOnPusch struct {
	// @inject_tag: aper:"choiceIdx:3,"
	SemiPersistentOnPusch *SemiPersistentOnPuschreportConfigType `protobuf:"bytes,3,opt,name=semi_persistent_on_pusch,json=semiPersistentOnPUSCH,proto3,oneof" aper:"choiceIdx:3,"`
}

type ReportConfigTypeCsiReportConfig_Aperiodic struct {
	// @inject_tag: aper:"choiceIdx:4,"
	Aperiodic *AperiodicreportConfigType `protobuf:"bytes,4,opt,name=aperiodic,proto3,oneof" aper:"choiceIdx:4,"`
}

func (*ReportConfigTypeCsiReportConfig_Periodic) isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig() {
}

func (*ReportConfigTypeCsiReportConfig_SemiPersistentOnPucch) isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig() {
}

func (*ReportConfigTypeCsiReportConfig_SemiPersistentOnPusch) isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig() {
}

func (*ReportConfigTypeCsiReportConfig_Aperiodic) isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig() {
}

// sequence from nr-rrc-definitions.asn1:981
// {cri-RI-i1-CQIreportQuantity}
type CriRIi1CQireportQuantity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,"
	PdschBundleSizeForCsi *PdschBundleSizeForCsicriRii1Cqi `protobuf:"varint,1,opt,name=pdsch_bundle_size_for_csi,json=pdsch-BundleSizeForCSI,proto3,enum=nr_rrc_definitions.v1.PdschBundleSizeForCsicriRii1Cqi,oneof" json:"pdsch_bundle_size_for_csi,omitempty" aper:"optional,valueLB:0,valueUB:1,"`
}

func (x *CriRIi1CQireportQuantity) Reset() {
	*x = CriRIi1CQireportQuantity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriRIi1CQireportQuantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriRIi1CQireportQuantity) ProtoMessage() {}

func (x *CriRIi1CQireportQuantity) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriRIi1CQireportQuantity.ProtoReflect.Descriptor instead.
func (*CriRIi1CQireportQuantity) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{164}
}

func (x *CriRIi1CQireportQuantity) GetPdschBundleSizeForCsi() PdschBundleSizeForCsicriRii1Cqi {
	if x != nil && x.PdschBundleSizeForCsi != nil {
		return *x.PdschBundleSizeForCsi
	}
	return PdschBundleSizeForCsicriRii1Cqi_PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N2
}

// choice from nr-rrc-definitions.asn1:977
// {reportQuantityCSI-ReportConfig}
type ReportQuantityCsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:977
	//
	// Types that are assignable to ReportQuantityCsiReportConfig:
	//	*ReportQuantityCsiReportConfig_None
	//	*ReportQuantityCsiReportConfig_CriRiPmiCqi
	//	*ReportQuantityCsiReportConfig_CriRiI1
	//	*ReportQuantityCsiReportConfig_CriRiI1Cqi
	//	*ReportQuantityCsiReportConfig_CriRiCqi
	//	*ReportQuantityCsiReportConfig_CriRsrp
	//	*ReportQuantityCsiReportConfig_SsbIndexRsrp
	//	*ReportQuantityCsiReportConfig_CriRiLiPmiCqi
	ReportQuantityCsiReportConfig isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig `protobuf_oneof:"report_quantity_csi_report_config"`
}

func (x *ReportQuantityCsiReportConfig) Reset() {
	*x = ReportQuantityCsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportQuantityCsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportQuantityCsiReportConfig) ProtoMessage() {}

func (x *ReportQuantityCsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportQuantityCsiReportConfig.ProtoReflect.Descriptor instead.
func (*ReportQuantityCsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{165}
}

func (m *ReportQuantityCsiReportConfig) GetReportQuantityCsiReportConfig() isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig {
	if m != nil {
		return m.ReportQuantityCsiReportConfig
	}
	return nil
}

func (x *ReportQuantityCsiReportConfig) GetNone() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_None); ok {
		return x.None
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetCriRiPmiCqi() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRiPmiCqi); ok {
		return x.CriRiPmiCqi
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetCriRiI1() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRiI1); ok {
		return x.CriRiI1
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetCriRiI1Cqi() *CriRIi1CQireportQuantity {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRiI1Cqi); ok {
		return x.CriRiI1Cqi
	}
	return nil
}

func (x *ReportQuantityCsiReportConfig) GetCriRiCqi() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRiCqi); ok {
		return x.CriRiCqi
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetCriRsrp() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRsrp); ok {
		return x.CriRsrp
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetSsbIndexRsrp() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_SsbIndexRsrp); ok {
		return x.SsbIndexRsrp
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetCriRiLiPmiCqi() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRiLiPmiCqi); ok {
		return x.CriRiLiPmiCqi
	}
	return 0
}

type isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig interface {
	isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig()
}

type ReportQuantityCsiReportConfig_None struct {
	// @inject_tag: aper:"choiceIdx:1,"
	None int32 `protobuf:"varint,1,opt,name=none,proto3,oneof" aper:"choiceIdx:1,"`
}

type ReportQuantityCsiReportConfig_CriRiPmiCqi struct {
	// @inject_tag: aper:"choiceIdx:2,"
	CriRiPmiCqi int32 `protobuf:"varint,2,opt,name=cri_ri_pmi_cqi,json=cri-RI-PMI-CQI,proto3,oneof" aper:"choiceIdx:2,"`
}

type ReportQuantityCsiReportConfig_CriRiI1 struct {
	// @inject_tag: aper:"choiceIdx:3,"
	CriRiI1 int32 `protobuf:"varint,3,opt,name=cri_ri_i1,json=cri-RI-i1,proto3,oneof" aper:"choiceIdx:3,"`
}

type ReportQuantityCsiReportConfig_CriRiI1Cqi struct {
	// @inject_tag: aper:"choiceIdx:4,"
	CriRiI1Cqi *CriRIi1CQireportQuantity `protobuf:"bytes,4,opt,name=cri_ri_i1_cqi,json=cri-RI-i1-CQI,proto3,oneof" aper:"choiceIdx:4,"`
}

type ReportQuantityCsiReportConfig_CriRiCqi struct {
	// @inject_tag: aper:"choiceIdx:5,"
	CriRiCqi int32 `protobuf:"varint,5,opt,name=cri_ri_cqi,json=cri-RI-CQI,proto3,oneof" aper:"choiceIdx:5,"`
}

type ReportQuantityCsiReportConfig_CriRsrp struct {
	// @inject_tag: aper:"choiceIdx:6,"
	CriRsrp int32 `protobuf:"varint,6,opt,name=cri_rsrp,json=cri-RSRP,proto3,oneof" aper:"choiceIdx:6,"`
}

type ReportQuantityCsiReportConfig_SsbIndexRsrp struct {
	// @inject_tag: aper:"choiceIdx:7,"
	SsbIndexRsrp int32 `protobuf:"varint,7,opt,name=ssb_index_rsrp,json=ssb-Index-RSRP,proto3,oneof" aper:"choiceIdx:7,"`
}

type ReportQuantityCsiReportConfig_CriRiLiPmiCqi struct {
	// @inject_tag: aper:"choiceIdx:8,"
	CriRiLiPmiCqi int32 `protobuf:"varint,8,opt,name=cri_ri_li_pmi_cqi,json=cri-RI-LI-PMI-CQI,proto3,oneof" aper:"choiceIdx:8,"`
}

func (*ReportQuantityCsiReportConfig_None) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRiPmiCqi) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRiI1) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRiI1Cqi) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRiCqi) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRsrp) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_SsbIndexRsrp) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRiLiPmiCqi) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

// choice from nr-rrc-definitions.asn1:992
// @inject_tag: aper:"choiceExt"
// {csi-ReportingBandreportFreqConfiguration}
type CsiReportingBandreportFreqConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:992
	//
	// Types that are assignable to CsiReportingBandreportFreqConfiguration:
	//	*CsiReportingBandreportFreqConfiguration_Subbands3
	//	*CsiReportingBandreportFreqConfiguration_Subbands4
	//	*CsiReportingBandreportFreqConfiguration_Subbands5
	//	*CsiReportingBandreportFreqConfiguration_Subbands6
	//	*CsiReportingBandreportFreqConfiguration_Subbands7
	//	*CsiReportingBandreportFreqConfiguration_Subbands8
	//	*CsiReportingBandreportFreqConfiguration_Subbands9
	//	*CsiReportingBandreportFreqConfiguration_Subbands10
	//	*CsiReportingBandreportFreqConfiguration_Subbands11
	//	*CsiReportingBandreportFreqConfiguration_Subbands12
	//	*CsiReportingBandreportFreqConfiguration_Subbands13
	//	*CsiReportingBandreportFreqConfiguration_Subbands14
	//	*CsiReportingBandreportFreqConfiguration_Subbands15
	//	*CsiReportingBandreportFreqConfiguration_Subbands16
	//	*CsiReportingBandreportFreqConfiguration_Subbands17
	//	*CsiReportingBandreportFreqConfiguration_Subbands18
	//	*CsiReportingBandreportFreqConfiguration_Subbands19V1530
	CsiReportingBandreportFreqConfiguration isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration `protobuf_oneof:"csi_reporting_bandreport_freq_configuration"`
}

func (x *CsiReportingBandreportFreqConfiguration) Reset() {
	*x = CsiReportingBandreportFreqConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiReportingBandreportFreqConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiReportingBandreportFreqConfiguration) ProtoMessage() {}

func (x *CsiReportingBandreportFreqConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiReportingBandreportFreqConfiguration.ProtoReflect.Descriptor instead.
func (*CsiReportingBandreportFreqConfiguration) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{166}
}

func (m *CsiReportingBandreportFreqConfiguration) GetCsiReportingBandreportFreqConfiguration() isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration {
	if m != nil {
		return m.CsiReportingBandreportFreqConfiguration
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands3() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands3); ok {
		return x.Subbands3
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands4() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands4); ok {
		return x.Subbands4
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands5() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands5); ok {
		return x.Subbands5
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands6() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands6); ok {
		return x.Subbands6
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands7() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands7); ok {
		return x.Subbands7
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands8() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands8); ok {
		return x.Subbands8
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands9() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands9); ok {
		return x.Subbands9
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands10() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands10); ok {
		return x.Subbands10
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands11() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands11); ok {
		return x.Subbands11
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands12() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands12); ok {
		return x.Subbands12
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands13() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands13); ok {
		return x.Subbands13
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands14() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands14); ok {
		return x.Subbands14
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands15() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands15); ok {
		return x.Subbands15
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands16() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands16); ok {
		return x.Subbands16
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands17() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands17); ok {
		return x.Subbands17
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands18() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands18); ok {
		return x.Subbands18
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands19V1530() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands19V1530); ok {
		return x.Subbands19V1530
	}
	return nil
}

type isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration interface {
	isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration()
}

type CsiReportingBandreportFreqConfiguration_Subbands3 struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:3,sizeUB:3,"
	Subbands3 *asn1.BitString `protobuf:"bytes,1,opt,name=subbands3,proto3,oneof" aper:"choiceIdx:1,sizeLB:3,sizeUB:3,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands4 struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:4,sizeUB:4,"
	Subbands4 *asn1.BitString `protobuf:"bytes,2,opt,name=subbands4,proto3,oneof" aper:"choiceIdx:2,sizeLB:4,sizeUB:4,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands5 struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:5,sizeUB:5,"
	Subbands5 *asn1.BitString `protobuf:"bytes,3,opt,name=subbands5,proto3,oneof" aper:"choiceIdx:3,sizeLB:5,sizeUB:5,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands6 struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:6,sizeUB:6,"
	Subbands6 *asn1.BitString `protobuf:"bytes,4,opt,name=subbands6,proto3,oneof" aper:"choiceIdx:4,sizeLB:6,sizeUB:6,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands7 struct {
	// @inject_tag: aper:"choiceIdx:5,sizeLB:7,sizeUB:7,"
	Subbands7 *asn1.BitString `protobuf:"bytes,5,opt,name=subbands7,proto3,oneof" aper:"choiceIdx:5,sizeLB:7,sizeUB:7,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands8 struct {
	// @inject_tag: aper:"choiceIdx:6,sizeLB:8,sizeUB:8,"
	Subbands8 *asn1.BitString `protobuf:"bytes,6,opt,name=subbands8,proto3,oneof" aper:"choiceIdx:6,sizeLB:8,sizeUB:8,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands9 struct {
	// @inject_tag: aper:"choiceIdx:7,sizeLB:9,sizeUB:9,"
	Subbands9 *asn1.BitString `protobuf:"bytes,7,opt,name=subbands9,proto3,oneof" aper:"choiceIdx:7,sizeLB:9,sizeUB:9,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands10 struct {
	// @inject_tag: aper:"choiceIdx:8,sizeLB:10,sizeUB:10,"
	Subbands10 *asn1.BitString `protobuf:"bytes,8,opt,name=subbands10,proto3,oneof" aper:"choiceIdx:8,sizeLB:10,sizeUB:10,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands11 struct {
	// @inject_tag: aper:"choiceIdx:9,sizeLB:11,sizeUB:11,"
	Subbands11 *asn1.BitString `protobuf:"bytes,9,opt,name=subbands11,proto3,oneof" aper:"choiceIdx:9,sizeLB:11,sizeUB:11,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands12 struct {
	// @inject_tag: aper:"choiceIdx:10,sizeLB:12,sizeUB:12,"
	Subbands12 *asn1.BitString `protobuf:"bytes,10,opt,name=subbands12,proto3,oneof" aper:"choiceIdx:10,sizeLB:12,sizeUB:12,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands13 struct {
	// @inject_tag: aper:"choiceIdx:11,sizeLB:13,sizeUB:13,"
	Subbands13 *asn1.BitString `protobuf:"bytes,11,opt,name=subbands13,proto3,oneof" aper:"choiceIdx:11,sizeLB:13,sizeUB:13,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands14 struct {
	// @inject_tag: aper:"choiceIdx:12,sizeLB:14,sizeUB:14,"
	Subbands14 *asn1.BitString `protobuf:"bytes,12,opt,name=subbands14,proto3,oneof" aper:"choiceIdx:12,sizeLB:14,sizeUB:14,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands15 struct {
	// @inject_tag: aper:"choiceIdx:13,sizeLB:15,sizeUB:15,"
	Subbands15 *asn1.BitString `protobuf:"bytes,13,opt,name=subbands15,proto3,oneof" aper:"choiceIdx:13,sizeLB:15,sizeUB:15,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands16 struct {
	// @inject_tag: aper:"choiceIdx:14,sizeLB:16,sizeUB:16,"
	Subbands16 *asn1.BitString `protobuf:"bytes,14,opt,name=subbands16,proto3,oneof" aper:"choiceIdx:14,sizeLB:16,sizeUB:16,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands17 struct {
	// @inject_tag: aper:"choiceIdx:15,sizeLB:17,sizeUB:17,"
	Subbands17 *asn1.BitString `protobuf:"bytes,15,opt,name=subbands17,proto3,oneof" aper:"choiceIdx:15,sizeLB:17,sizeUB:17,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands18 struct {
	// @inject_tag: aper:"choiceIdx:16,sizeLB:18,sizeUB:18,"
	Subbands18 *asn1.BitString `protobuf:"bytes,16,opt,name=subbands18,proto3,oneof" aper:"choiceIdx:16,sizeLB:18,sizeUB:18,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands19V1530 struct {
	// @inject_tag: aper:"choiceIdx:17,fromChoiceExt,sizeLB:19,sizeUB:19,"
	Subbands19V1530 *asn1.BitString `protobuf:"bytes,17,opt,name=subbands19_v1530,json=subbands19-v1530,proto3,oneof" aper:"choiceIdx:17,fromChoiceExt,sizeLB:19,sizeUB:19,"`
}

func (*CsiReportingBandreportFreqConfiguration_Subbands3) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands4) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands5) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands6) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands7) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands8) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands9) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands10) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands11) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands12) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands13) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands14) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands15) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands16) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands17) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands18) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands19V1530) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

// sequence from nr-rrc-definitions.asn1:989
// {reportFreqConfigurationCSI-ReportConfig}
type ReportFreqConfigurationCsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,"
	CqiFormatIndicator *CqiFormatIndicatorreportFreqConfiguration `protobuf:"varint,1,opt,name=cqi_format_indicator,json=cqi-FormatIndicator,proto3,enum=nr_rrc_definitions.v1.CqiFormatIndicatorreportFreqConfiguration,oneof" json:"cqi_format_indicator,omitempty" aper:"optional,valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,"
	PmiFormatIndicator *PmiFormatIndicatorreportFreqConfiguration `protobuf:"varint,2,opt,name=pmi_format_indicator,json=pmi-FormatIndicator,proto3,enum=nr_rrc_definitions.v1.PmiFormatIndicatorreportFreqConfiguration,oneof" json:"pmi_format_indicator,omitempty" aper:"optional,valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"optional,choiceExt,"
	CsiReportingBand *CsiReportingBandreportFreqConfiguration `protobuf:"bytes,3,opt,name=csi_reporting_band,json=csi-ReportingBand,proto3,oneof" json:"csi_reporting_band,omitempty" aper:"optional,choiceExt,"`
}

func (x *ReportFreqConfigurationCsiReportConfig) Reset() {
	*x = ReportFreqConfigurationCsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportFreqConfigurationCsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportFreqConfigurationCsiReportConfig) ProtoMessage() {}

func (x *ReportFreqConfigurationCsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportFreqConfigurationCsiReportConfig.ProtoReflect.Descriptor instead.
func (*ReportFreqConfigurationCsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{167}
}

func (x *ReportFreqConfigurationCsiReportConfig) GetCqiFormatIndicator() CqiFormatIndicatorreportFreqConfiguration {
	if x != nil && x.CqiFormatIndicator != nil {
		return *x.CqiFormatIndicator
	}
	return CqiFormatIndicatorreportFreqConfiguration_CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_CQI
}

func (x *ReportFreqConfigurationCsiReportConfig) GetPmiFormatIndicator() PmiFormatIndicatorreportFreqConfiguration {
	if x != nil && x.PmiFormatIndicator != nil {
		return *x.PmiFormatIndicator
	}
	return PmiFormatIndicatorreportFreqConfiguration_PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_PMI
}

func (x *ReportFreqConfigurationCsiReportConfig) GetCsiReportingBand() *CsiReportingBandreportFreqConfiguration {
	if x != nil {
		return x.CsiReportingBand
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1020
// {disabledgroupBasedBeamReporting}
type DisabledgroupBasedBeamReporting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:3,"
	NrofReportedRs *NrofReportedRsdisabled `protobuf:"varint,1,opt,name=nrof_reported_rs,json=nrofReportedRS,proto3,enum=nr_rrc_definitions.v1.NrofReportedRsdisabled,oneof" json:"nrof_reported_rs,omitempty" aper:"optional,valueLB:0,valueUB:3,"`
}

func (x *DisabledgroupBasedBeamReporting) Reset() {
	*x = DisabledgroupBasedBeamReporting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisabledgroupBasedBeamReporting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisabledgroupBasedBeamReporting) ProtoMessage() {}

func (x *DisabledgroupBasedBeamReporting) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisabledgroupBasedBeamReporting.ProtoReflect.Descriptor instead.
func (*DisabledgroupBasedBeamReporting) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{168}
}

func (x *DisabledgroupBasedBeamReporting) GetNrofReportedRs() NrofReportedRsdisabled {
	if x != nil && x.NrofReportedRs != nil {
		return *x.NrofReportedRs
	}
	return NrofReportedRsdisabled_NROF_REPORTED_RSDISABLED_N1
}

// choice from nr-rrc-definitions.asn1:1018
// {groupBasedBeamReportingCSI-ReportConfig}
type GroupBasedBeamReportingCsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1018
	//
	// Types that are assignable to GroupBasedBeamReportingCsiReportConfig:
	//	*GroupBasedBeamReportingCsiReportConfig_Enabled
	//	*GroupBasedBeamReportingCsiReportConfig_Disabled
	GroupBasedBeamReportingCsiReportConfig isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig `protobuf_oneof:"group_based_beam_reporting_csi_report_config"`
}

func (x *GroupBasedBeamReportingCsiReportConfig) Reset() {
	*x = GroupBasedBeamReportingCsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupBasedBeamReportingCsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBasedBeamReportingCsiReportConfig) ProtoMessage() {}

func (x *GroupBasedBeamReportingCsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupBasedBeamReportingCsiReportConfig.ProtoReflect.Descriptor instead.
func (*GroupBasedBeamReportingCsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{169}
}

func (m *GroupBasedBeamReportingCsiReportConfig) GetGroupBasedBeamReportingCsiReportConfig() isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig {
	if m != nil {
		return m.GroupBasedBeamReportingCsiReportConfig
	}
	return nil
}

func (x *GroupBasedBeamReportingCsiReportConfig) GetEnabled() int32 {
	if x, ok := x.GetGroupBasedBeamReportingCsiReportConfig().(*GroupBasedBeamReportingCsiReportConfig_Enabled); ok {
		return x.Enabled
	}
	return 0
}

func (x *GroupBasedBeamReportingCsiReportConfig) GetDisabled() *DisabledgroupBasedBeamReporting {
	if x, ok := x.GetGroupBasedBeamReportingCsiReportConfig().(*GroupBasedBeamReportingCsiReportConfig_Disabled); ok {
		return x.Disabled
	}
	return nil
}

type isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig interface {
	isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig()
}

type GroupBasedBeamReportingCsiReportConfig_Enabled struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Enabled int32 `protobuf:"varint,1,opt,name=enabled,proto3,oneof" aper:"choiceIdx:1,"`
}

type GroupBasedBeamReportingCsiReportConfig_Disabled struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Disabled *DisabledgroupBasedBeamReporting `protobuf:"bytes,2,opt,name=disabled,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*GroupBasedBeamReportingCsiReportConfig_Enabled) isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig() {
}

func (*GroupBasedBeamReportingCsiReportConfig_Disabled) isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig() {
}

// sequence from nr-rrc-definitions.asn1:1030
// {semiPersistentOnPUSCH-v1530CSI-ReportConfig}
type SemiPersistentOnPuschv1530CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:2,"
	ReportSlotConfigV1530 ReportSlotConfigv1530SemiPersistentOnPuschv1530 `protobuf:"varint,1,opt,name=report_slot_config_v1530,json=reportSlotConfig-v1530,proto3,enum=nr_rrc_definitions.v1.ReportSlotConfigv1530SemiPersistentOnPuschv1530" json:"report_slot_config_v1530,omitempty" aper:"valueLB:0,valueUB:2,"`
}

func (x *SemiPersistentOnPuschv1530CsiReportConfig) Reset() {
	*x = SemiPersistentOnPuschv1530CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemiPersistentOnPuschv1530CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemiPersistentOnPuschv1530CsiReportConfig) ProtoMessage() {}

func (x *SemiPersistentOnPuschv1530CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemiPersistentOnPuschv1530CsiReportConfig.ProtoReflect.Descriptor instead.
func (*SemiPersistentOnPuschv1530CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{170}
}

func (x *SemiPersistentOnPuschv1530CsiReportConfig) GetReportSlotConfigV1530() ReportSlotConfigv1530SemiPersistentOnPuschv1530 {
	if x != nil {
		return x.ReportSlotConfigV1530
	}
	return ReportSlotConfigv1530SemiPersistentOnPuschv1530_REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL4
}

// sequence from nr-rrc-definitions.asn1:1034
// {semiPersistentOnPUSCH-v1610CSI-ReportConfig}
type SemiPersistentOnPuschv1610CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_2R16 []int32 `protobuf:"varint,1,rep,packed,name=report_slot_offset_list_dci_0_2_r16,json=reportSlotOffsetListDCI-0-2-r16,proto3" json:"report_slot_offset_list_dci_0_2_r16,omitempty" aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_1R16 []int32 `protobuf:"varint,2,rep,packed,name=report_slot_offset_list_dci_0_1_r16,json=reportSlotOffsetListDCI-0-1-r16,proto3" json:"report_slot_offset_list_dci_0_1_r16,omitempty" aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"`
}

func (x *SemiPersistentOnPuschv1610CsiReportConfig) Reset() {
	*x = SemiPersistentOnPuschv1610CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemiPersistentOnPuschv1610CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemiPersistentOnPuschv1610CsiReportConfig) ProtoMessage() {}

func (x *SemiPersistentOnPuschv1610CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemiPersistentOnPuschv1610CsiReportConfig.ProtoReflect.Descriptor instead.
func (*SemiPersistentOnPuschv1610CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{171}
}

func (x *SemiPersistentOnPuschv1610CsiReportConfig) GetReportSlotOffsetListDci_0_2R16() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_2R16
	}
	return nil
}

func (x *SemiPersistentOnPuschv1610CsiReportConfig) GetReportSlotOffsetListDci_0_1R16() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_1R16
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1038
// {aperiodic-v1610CSI-ReportConfig}
type Aperiodicv1610CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_2R16 []int32 `protobuf:"varint,1,rep,packed,name=report_slot_offset_list_dci_0_2_r16,json=reportSlotOffsetListDCI-0-2-r16,proto3" json:"report_slot_offset_list_dci_0_2_r16,omitempty" aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_1R16 []int32 `protobuf:"varint,2,rep,packed,name=report_slot_offset_list_dci_0_1_r16,json=reportSlotOffsetListDCI-0-1-r16,proto3" json:"report_slot_offset_list_dci_0_1_r16,omitempty" aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"`
}

func (x *Aperiodicv1610CsiReportConfig) Reset() {
	*x = Aperiodicv1610CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aperiodicv1610CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aperiodicv1610CsiReportConfig) ProtoMessage() {}

func (x *Aperiodicv1610CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aperiodicv1610CsiReportConfig.ProtoReflect.Descriptor instead.
func (*Aperiodicv1610CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{172}
}

func (x *Aperiodicv1610CsiReportConfig) GetReportSlotOffsetListDci_0_2R16() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_2R16
	}
	return nil
}

func (x *Aperiodicv1610CsiReportConfig) GetReportSlotOffsetListDci_0_1R16() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_1R16
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:1042
// {reportQuantity-r16CSI-ReportConfig}
type ReportQuantityr16CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1042
	//
	// Types that are assignable to ReportQuantityR16CsiReportConfig:
	//	*ReportQuantityr16CsiReportConfig_CriSinrR16
	//	*ReportQuantityr16CsiReportConfig_SsbIndexSinrR16
	ReportQuantityR16CsiReportConfig isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig `protobuf_oneof:"report_quantity_r16_csi_report_config"`
}

func (x *ReportQuantityr16CsiReportConfig) Reset() {
	*x = ReportQuantityr16CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportQuantityr16CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportQuantityr16CsiReportConfig) ProtoMessage() {}

func (x *ReportQuantityr16CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportQuantityr16CsiReportConfig.ProtoReflect.Descriptor instead.
func (*ReportQuantityr16CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{173}
}

func (m *ReportQuantityr16CsiReportConfig) GetReportQuantityR16CsiReportConfig() isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig {
	if m != nil {
		return m.ReportQuantityR16CsiReportConfig
	}
	return nil
}

func (x *ReportQuantityr16CsiReportConfig) GetCriSinrR16() int32 {
	if x, ok := x.GetReportQuantityR16CsiReportConfig().(*ReportQuantityr16CsiReportConfig_CriSinrR16); ok {
		return x.CriSinrR16
	}
	return 0
}

func (x *ReportQuantityr16CsiReportConfig) GetSsbIndexSinrR16() int32 {
	if x, ok := x.GetReportQuantityR16CsiReportConfig().(*ReportQuantityr16CsiReportConfig_SsbIndexSinrR16); ok {
		return x.SsbIndexSinrR16
	}
	return 0
}

type isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig interface {
	isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig()
}

type ReportQuantityr16CsiReportConfig_CriSinrR16 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	CriSinrR16 int32 `protobuf:"varint,1,opt,name=cri_sinr_r16,json=cri-SINR-r16,proto3,oneof" aper:"choiceIdx:1,"`
}

type ReportQuantityr16CsiReportConfig_SsbIndexSinrR16 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	SsbIndexSinrR16 int32 `protobuf:"varint,2,opt,name=ssb_index_sinr_r16,json=ssb-Index-SINR-r16,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*ReportQuantityr16CsiReportConfig_CriSinrR16) isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig() {
}

func (*ReportQuantityr16CsiReportConfig_SsbIndexSinrR16) isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig() {
}

// sequence from nr-rrc-definitions.asn1:1051
// {groupBasedBeamReporting-v1710CSI-ReportConfig}
type GroupBasedBeamReportingv1710CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	NrofReportedGroupsR17 NrofReportedGroupsr17GroupBasedBeamReportingv1710 `protobuf:"varint,1,opt,name=nrof_reported_groups_r17,json=nrofReportedGroups-r17,proto3,enum=nr_rrc_definitions.v1.NrofReportedGroupsr17GroupBasedBeamReportingv1710" json:"nrof_reported_groups_r17,omitempty" aper:"valueLB:0,valueUB:3,"`
}

func (x *GroupBasedBeamReportingv1710CsiReportConfig) Reset() {
	*x = GroupBasedBeamReportingv1710CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupBasedBeamReportingv1710CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBasedBeamReportingv1710CsiReportConfig) ProtoMessage() {}

func (x *GroupBasedBeamReportingv1710CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupBasedBeamReportingv1710CsiReportConfig.ProtoReflect.Descriptor instead.
func (*GroupBasedBeamReportingv1710CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{174}
}

func (x *GroupBasedBeamReportingv1710CsiReportConfig) GetNrofReportedGroupsR17() NrofReportedGroupsr17GroupBasedBeamReportingv1710 {
	if x != nil {
		return x.NrofReportedGroupsR17
	}
	return NrofReportedGroupsr17GroupBasedBeamReportingv1710_NROF_REPORTED_GROUPSR17GROUP_BASED_BEAM_REPORTINGV1710_N1
}

// choice from nr-rrc-definitions.asn1:1057
// {reportQuantity-r17CSI-ReportConfig}
type ReportQuantityr17CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1057
	//
	// Types that are assignable to ReportQuantityR17CsiReportConfig:
	//	*ReportQuantityr17CsiReportConfig_CriRsrpIndexR17
	//	*ReportQuantityr17CsiReportConfig_SsbIndexRsrpIndexR17
	//	*ReportQuantityr17CsiReportConfig_CriSinrIndexR17
	//	*ReportQuantityr17CsiReportConfig_SsbIndexSinrIndexR17
	ReportQuantityR17CsiReportConfig isReportQuantityr17CsiReportConfig_ReportQuantityR17CsiReportConfig `protobuf_oneof:"report_quantity_r17_csi_report_config"`
}

func (x *ReportQuantityr17CsiReportConfig) Reset() {
	*x = ReportQuantityr17CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportQuantityr17CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportQuantityr17CsiReportConfig) ProtoMessage() {}

func (x *ReportQuantityr17CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportQuantityr17CsiReportConfig.ProtoReflect.Descriptor instead.
func (*ReportQuantityr17CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{175}
}

func (m *ReportQuantityr17CsiReportConfig) GetReportQuantityR17CsiReportConfig() isReportQuantityr17CsiReportConfig_ReportQuantityR17CsiReportConfig {
	if m != nil {
		return m.ReportQuantityR17CsiReportConfig
	}
	return nil
}

func (x *ReportQuantityr17CsiReportConfig) GetCriRsrpIndexR17() int32 {
	if x, ok := x.GetReportQuantityR17CsiReportConfig().(*ReportQuantityr17CsiReportConfig_CriRsrpIndexR17); ok {
		return x.CriRsrpIndexR17
	}
	return 0
}

func (x *ReportQuantityr17CsiReportConfig) GetSsbIndexRsrpIndexR17() int32 {
	if x, ok := x.GetReportQuantityR17CsiReportConfig().(*ReportQuantityr17CsiReportConfig_SsbIndexRsrpIndexR17); ok {
		return x.SsbIndexRsrpIndexR17
	}
	return 0
}

func (x *ReportQuantityr17CsiReportConfig) GetCriSinrIndexR17() int32 {
	if x, ok := x.GetReportQuantityR17CsiReportConfig().(*ReportQuantityr17CsiReportConfig_CriSinrIndexR17); ok {
		return x.CriSinrIndexR17
	}
	return 0
}

func (x *ReportQuantityr17CsiReportConfig) GetSsbIndexSinrIndexR17() int32 {
	if x, ok := x.GetReportQuantityR17CsiReportConfig().(*ReportQuantityr17CsiReportConfig_SsbIndexSinrIndexR17); ok {
		return x.SsbIndexSinrIndexR17
	}
	return 0
}

type isReportQuantityr17CsiReportConfig_ReportQuantityR17CsiReportConfig interface {
	isReportQuantityr17CsiReportConfig_ReportQuantityR17CsiReportConfig()
}

type ReportQuantityr17CsiReportConfig_CriRsrpIndexR17 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	CriRsrpIndexR17 int32 `protobuf:"varint,1,opt,name=cri_rsrp_index_r17,json=cri-RSRP-Index-r17,proto3,oneof" aper:"choiceIdx:1,"`
}

type ReportQuantityr17CsiReportConfig_SsbIndexRsrpIndexR17 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	SsbIndexRsrpIndexR17 int32 `protobuf:"varint,2,opt,name=ssb_index_rsrp_index_r17,json=ssb-Index-RSRP-Index-r17,proto3,oneof" aper:"choiceIdx:2,"`
}

type ReportQuantityr17CsiReportConfig_CriSinrIndexR17 struct {
	// @inject_tag: aper:"choiceIdx:3,"
	CriSinrIndexR17 int32 `protobuf:"varint,3,opt,name=cri_sinr_index_r17,json=cri-SINR-Index-r17,proto3,oneof" aper:"choiceIdx:3,"`
}

type ReportQuantityr17CsiReportConfig_SsbIndexSinrIndexR17 struct {
	// @inject_tag: aper:"choiceIdx:4,"
	SsbIndexSinrIndexR17 int32 `protobuf:"varint,4,opt,name=ssb_index_sinr_index_r17,json=ssb-Index-SINR-Index-r17,proto3,oneof" aper:"choiceIdx:4,"`
}

func (*ReportQuantityr17CsiReportConfig_CriRsrpIndexR17) isReportQuantityr17CsiReportConfig_ReportQuantityR17CsiReportConfig() {
}

func (*ReportQuantityr17CsiReportConfig_SsbIndexRsrpIndexR17) isReportQuantityr17CsiReportConfig_ReportQuantityR17CsiReportConfig() {
}

func (*ReportQuantityr17CsiReportConfig_CriSinrIndexR17) isReportQuantityr17CsiReportConfig_ReportQuantityR17CsiReportConfig() {
}

func (*ReportQuantityr17CsiReportConfig_SsbIndexSinrIndexR17) isReportQuantityr17CsiReportConfig_ReportQuantityR17CsiReportConfig() {
}

// sequence from nr-rrc-definitions.asn1:1065
// {semiPersistentOnPUSCH-v1720CSI-ReportConfig}
type SemiPersistentOnPuschv1720CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListR17 []int32 `protobuf:"varint,1,rep,packed,name=report_slot_offset_list_r17,json=reportSlotOffsetList-r17,proto3" json:"report_slot_offset_list_r17,omitempty" aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_2R17 []int32 `protobuf:"varint,2,rep,packed,name=report_slot_offset_list_dci_0_2_r17,json=reportSlotOffsetListDCI-0-2-r17,proto3" json:"report_slot_offset_list_dci_0_2_r17,omitempty" aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_1R17 []int32 `protobuf:"varint,3,rep,packed,name=report_slot_offset_list_dci_0_1_r17,json=reportSlotOffsetListDCI-0-1-r17,proto3" json:"report_slot_offset_list_dci_0_1_r17,omitempty" aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"`
}

func (x *SemiPersistentOnPuschv1720CsiReportConfig) Reset() {
	*x = SemiPersistentOnPuschv1720CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemiPersistentOnPuschv1720CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemiPersistentOnPuschv1720CsiReportConfig) ProtoMessage() {}

func (x *SemiPersistentOnPuschv1720CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemiPersistentOnPuschv1720CsiReportConfig.ProtoReflect.Descriptor instead.
func (*SemiPersistentOnPuschv1720CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{176}
}

func (x *SemiPersistentOnPuschv1720CsiReportConfig) GetReportSlotOffsetListR17() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListR17
	}
	return nil
}

func (x *SemiPersistentOnPuschv1720CsiReportConfig) GetReportSlotOffsetListDci_0_2R17() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_2R17
	}
	return nil
}

func (x *SemiPersistentOnPuschv1720CsiReportConfig) GetReportSlotOffsetListDci_0_1R17() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_1R17
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1070
// {aperiodic-v1720CSI-ReportConfig}
type Aperiodicv1720CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListR17 []int32 `protobuf:"varint,1,rep,packed,name=report_slot_offset_list_r17,json=reportSlotOffsetList-r17,proto3" json:"report_slot_offset_list_r17,omitempty" aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_2R17 []int32 `protobuf:"varint,2,rep,packed,name=report_slot_offset_list_dci_0_2_r17,json=reportSlotOffsetListDCI-0-2-r17,proto3" json:"report_slot_offset_list_dci_0_2_r17,omitempty" aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_1R17 []int32 `protobuf:"varint,3,rep,packed,name=report_slot_offset_list_dci_0_1_r17,json=reportSlotOffsetListDCI-0-1-r17,proto3" json:"report_slot_offset_list_dci_0_1_r17,omitempty" aper:"optional,valueLB:0,valueUB:128,sizeLB:1,sizeUB:64,"`
}

func (x *Aperiodicv1720CsiReportConfig) Reset() {
	*x = Aperiodicv1720CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aperiodicv1720CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aperiodicv1720CsiReportConfig) ProtoMessage() {}

func (x *Aperiodicv1720CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aperiodicv1720CsiReportConfig.ProtoReflect.Descriptor instead.
func (*Aperiodicv1720CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{177}
}

func (x *Aperiodicv1720CsiReportConfig) GetReportSlotOffsetListR17() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListR17
	}
	return nil
}

func (x *Aperiodicv1720CsiReportConfig) GetReportSlotOffsetListDci_0_2R17() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_2R17
	}
	return nil
}

func (x *Aperiodicv1720CsiReportConfig) GetReportSlotOffsetListDci_0_1R17() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_1R17
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:953
// @inject_tag: aper:"valueExt"
// {CSI-ReportConfig}
type CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportConfigId *CsiReportConfigId `protobuf:"bytes,1,opt,name=report_config_id,json=reportConfigId,proto3" json:"report_config_id,omitempty"`
	// @inject_tag: aper:"optional,"
	Carrier                        *ServCellIndex       `protobuf:"bytes,2,opt,name=carrier,proto3,oneof" json:"carrier,omitempty" aper:"optional,"`
	ResourcesForChannelMeasurement *CsiResourceConfigId `protobuf:"bytes,3,opt,name=resources_for_channel_measurement,json=resourcesForChannelMeasurement,proto3" json:"resources_for_channel_measurement,omitempty"`
	// @inject_tag: aper:"optional,"
	CsiImResourcesForInterference *CsiResourceConfigId `protobuf:"bytes,4,opt,name=csi_im_resources_for_interference,json=csi-IM-ResourcesForInterference,proto3,oneof" json:"csi_im_resources_for_interference,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	NzpCsiRsResourcesForInterference *CsiResourceConfigId             `protobuf:"bytes,5,opt,name=nzp_csi_rs_resources_for_interference,json=nzp-CSI-RS-ResourcesForInterference,proto3,oneof" json:"nzp_csi_rs_resources_for_interference,omitempty" aper:"optional,"`
	ReportConfigType                 *ReportConfigTypeCsiReportConfig `protobuf:"bytes,6,opt,name=report_config_type,json=reportConfigType,proto3" json:"report_config_type,omitempty"`
	ReportQuantity                   *ReportQuantityCsiReportConfig   `protobuf:"bytes,7,opt,name=report_quantity,json=reportQuantity,proto3" json:"report_quantity,omitempty"`
	// @inject_tag: aper:"optional,"
	ReportFreqConfiguration *ReportFreqConfigurationCsiReportConfig `protobuf:"bytes,8,opt,name=report_freq_configuration,json=reportFreqConfiguration,proto3,oneof" json:"report_freq_configuration,omitempty" aper:"optional,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	TimeRestrictionForChannelMeasurements TimeRestrictionForChannelMeasurementsCsireportConfig `protobuf:"varint,9,opt,name=time_restriction_for_channel_measurements,json=timeRestrictionForChannelMeasurements,proto3,enum=nr_rrc_definitions.v1.TimeRestrictionForChannelMeasurementsCsireportConfig" json:"time_restriction_for_channel_measurements,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	TimeRestrictionForInterferenceMeasurements TimeRestrictionForInterferenceMeasurementsCsireportConfig `protobuf:"varint,10,opt,name=time_restriction_for_interference_measurements,json=timeRestrictionForInterferenceMeasurements,proto3,enum=nr_rrc_definitions.v1.TimeRestrictionForInterferenceMeasurementsCsireportConfig" json:"time_restriction_for_interference_measurements,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"optional,"
	CodebookConfig *CodebookConfig `protobuf:"bytes,11,opt,name=codebook_config,json=codebookConfig,proto3,oneof" json:"codebook_config,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,"
	Dummy                   *DummyCsireportConfig                   `protobuf:"varint,12,opt,name=dummy,proto3,enum=nr_rrc_definitions.v1.DummyCsireportConfig,oneof" json:"dummy,omitempty" aper:"optional,valueLB:0,valueUB:1,"`
	GroupBasedBeamReporting *GroupBasedBeamReportingCsiReportConfig `protobuf:"bytes,13,opt,name=group_based_beam_reporting,json=groupBasedBeamReporting,proto3" json:"group_based_beam_reporting,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:3,"
	CqiTable *CqiTableCsireportConfig `protobuf:"varint,14,opt,name=cqi_table,json=cqi-Table,proto3,enum=nr_rrc_definitions.v1.CqiTableCsireportConfig,oneof" json:"cqi_table,omitempty" aper:"optional,valueLB:0,valueUB:3,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	SubbandSize SubbandSizeCsireportConfig `protobuf:"varint,15,opt,name=subband_size,json=subbandSize,proto3,enum=nr_rrc_definitions.v1.SubbandSizeCsireportConfig" json:"subband_size,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:128,"
	NonPmiPortIndication []*PortIndexFor8Ranks `protobuf:"bytes,16,rep,name=non_pmi_port_indication,json=non-PMI-PortIndication,proto3" json:"non_pmi_port_indication,omitempty" aper:"optional,sizeLB:1,sizeUB:128,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	SemiPersistentOnPuschV1530 *SemiPersistentOnPuschv1530CsiReportConfig `protobuf:"bytes,17,opt,name=semi_persistent_on_pusch_v1530,json=semiPersistentOnPUSCH-v1530,proto3,oneof" json:"semi_persistent_on_pusch_v1530,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	SemiPersistentOnPuschV1610 *SemiPersistentOnPuschv1610CsiReportConfig `protobuf:"bytes,18,opt,name=semi_persistent_on_pusch_v1610,json=semiPersistentOnPUSCH-v1610,proto3,oneof" json:"semi_persistent_on_pusch_v1610,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	AperiodicV1610 *Aperiodicv1610CsiReportConfig `protobuf:"bytes,19,opt,name=aperiodic_v1610,json=aperiodic-v1610,proto3,oneof" json:"aperiodic_v1610,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	ReportQuantityR16 *ReportQuantityr16CsiReportConfig `protobuf:"bytes,20,opt,name=report_quantity_r16,json=reportQuantity-r16,proto3,oneof" json:"report_quantity_r16,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	CodebookConfigR16 *CodebookConfigr16 `protobuf:"bytes,21,opt,name=codebook_config_r16,json=codebookConfig-r16,proto3,oneof" json:"codebook_config_r16,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:0,fromValueExt,"
	CqiBitsPerSubbandR17 *CqiBitsPerSubbandr17CsireportConfig `protobuf:"varint,22,opt,name=cqi_bits_per_subband_r17,json=cqi-BitsPerSubband-r17,proto3,enum=nr_rrc_definitions.v1.CqiBitsPerSubbandr17CsireportConfig,oneof" json:"cqi_bits_per_subband_r17,omitempty" aper:"optional,valueLB:0,valueUB:0,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	GroupBasedBeamReportingV1710 *GroupBasedBeamReportingv1710CsiReportConfig `protobuf:"bytes,23,opt,name=group_based_beam_reporting_v1710,json=groupBasedBeamReporting-v1710,proto3,oneof" json:"group_based_beam_reporting_v1710,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	CodebookConfigR17 *CodebookConfigr17 `protobuf:"bytes,24,opt,name=codebook_config_r17,json=codebookConfig-r17,proto3,oneof" json:"codebook_config_r17,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:0,fromValueExt,"
	SharedCmrR17 *SharedCmrr17CsireportConfig `protobuf:"varint,25,opt,name=shared_cmr_r17,json=sharedCMR-r17,proto3,enum=nr_rrc_definitions.v1.SharedCmrr17CsireportConfig,oneof" json:"shared_cmr_r17,omitempty" aper:"optional,valueLB:0,valueUB:0,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,fromValueExt,"
	CsiReportModeR17 *CsiReportModer17CsireportConfig `protobuf:"varint,26,opt,name=csi_report_mode_r17,json=csi-ReportMode-r17,proto3,enum=nr_rrc_definitions.v1.CsiReportModer17CsireportConfig,oneof" json:"csi_report_mode_r17,omitempty" aper:"optional,valueLB:0,valueUB:1,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:2,fromValueExt,"
	NumberOfSingleTrpCsiMode1R17 *NumberOfSingleTrpcsimode1R17CsireportConfig `protobuf:"varint,27,opt,name=number_of_single_trp_csi_mode1_r17,json=numberOfSingleTRP-CSI-Mode1-r17,proto3,enum=nr_rrc_definitions.v1.NumberOfSingleTrpcsimode1R17CsireportConfig,oneof" json:"number_of_single_trp_csi_mode1_r17,omitempty" aper:"optional,valueLB:0,valueUB:2,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	ReportQuantityR17 *ReportQuantityr17CsiReportConfig `protobuf:"bytes,28,opt,name=report_quantity_r17,json=reportQuantity-r17,proto3,oneof" json:"report_quantity_r17,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	SemiPersistentOnPuschV1720 *SemiPersistentOnPuschv1720CsiReportConfig `protobuf:"bytes,29,opt,name=semi_persistent_on_pusch_v1720,json=semiPersistentOnPUSCH-v1720,proto3,oneof" json:"semi_persistent_on_pusch_v1720,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	AperiodicV1720 *Aperiodicv1720CsiReportConfig `protobuf:"bytes,30,opt,name=aperiodic_v1720,json=aperiodic-v1720,proto3,oneof" json:"aperiodic_v1720,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	CodebookConfigV1730 *CodebookConfigv1730 `protobuf:"bytes,31,opt,name=codebook_config_v1730,json=codebookConfig-v1730,proto3,oneof" json:"codebook_config_v1730,omitempty" aper:"optional,fromValueExt,"`
}

func (x *CsiReportConfig) Reset() {
	*x = CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiReportConfig) ProtoMessage() {}

func (x *CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiReportConfig.ProtoReflect.Descriptor instead.
func (*CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{178}
}

func (x *CsiReportConfig) GetReportConfigId() *CsiReportConfigId {
	if x != nil {
		return x.ReportConfigId
	}
	return nil
}

func (x *CsiReportConfig) GetCarrier() *ServCellIndex {
	if x != nil {
		return x.Carrier
	}
	return nil
}

func (x *CsiReportConfig) GetResourcesForChannelMeasurement() *CsiResourceConfigId {
	if x != nil {
		return x.ResourcesForChannelMeasurement
	}
	return nil
}

func (x *CsiReportConfig) GetCsiImResourcesForInterference() *CsiResourceConfigId {
	if x != nil {
		return x.CsiImResourcesForInterference
	}
	return nil
}

func (x *CsiReportConfig) GetNzpCsiRsResourcesForInterference() *CsiResourceConfigId {
	if x != nil {
		return x.NzpCsiRsResourcesForInterference
	}
	return nil
}

func (x *CsiReportConfig) GetReportConfigType() *ReportConfigTypeCsiReportConfig {
	if x != nil {
		return x.ReportConfigType
	}
	return nil
}

func (x *CsiReportConfig) GetReportQuantity() *ReportQuantityCsiReportConfig {
	if x != nil {
		return x.ReportQuantity
	}
	return nil
}

func (x *CsiReportConfig) GetReportFreqConfiguration() *ReportFreqConfigurationCsiReportConfig {
	if x != nil {
		return x.ReportFreqConfiguration
	}
	return nil
}

func (x *CsiReportConfig) GetTimeRestrictionForChannelMeasurements() TimeRestrictionForChannelMeasurementsCsireportConfig {
	if x != nil {
		return x.TimeRestrictionForChannelMeasurements
	}
	return TimeRestrictionForChannelMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED
}

func (x *CsiReportConfig) GetTimeRestrictionForInterferenceMeasurements() TimeRestrictionForInterferenceMeasurementsCsireportConfig {
	if x != nil {
		return x.TimeRestrictionForInterferenceMeasurements
	}
	return TimeRestrictionForInterferenceMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED
}

func (x *CsiReportConfig) GetCodebookConfig() *CodebookConfig {
	if x != nil {
		return x.CodebookConfig
	}
	return nil
}

func (x *CsiReportConfig) GetDummy() DummyCsireportConfig {
	if x != nil && x.Dummy != nil {
		return *x.Dummy
	}
	return DummyCsireportConfig_DUMMY_CSIREPORT_CONFIG_N1
}

func (x *CsiReportConfig) GetGroupBasedBeamReporting() *GroupBasedBeamReportingCsiReportConfig {
	if x != nil {
		return x.GroupBasedBeamReporting
	}
	return nil
}

func (x *CsiReportConfig) GetCqiTable() CqiTableCsireportConfig {
	if x != nil && x.CqiTable != nil {
		return *x.CqiTable
	}
	return CqiTableCsireportConfig_CQI_TABLE_CSIREPORT_CONFIG_TABLE1
}

func (x *CsiReportConfig) GetSubbandSize() SubbandSizeCsireportConfig {
	if x != nil {
		return x.SubbandSize
	}
	return SubbandSizeCsireportConfig_SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE1
}

func (x *CsiReportConfig) GetNonPmiPortIndication() []*PortIndexFor8Ranks {
	if x != nil {
		return x.NonPmiPortIndication
	}
	return nil
}

func (x *CsiReportConfig) GetSemiPersistentOnPuschV1530() *SemiPersistentOnPuschv1530CsiReportConfig {
	if x != nil {
		return x.SemiPersistentOnPuschV1530
	}
	return nil
}

func (x *CsiReportConfig) GetSemiPersistentOnPuschV1610() *SemiPersistentOnPuschv1610CsiReportConfig {
	if x != nil {
		return x.SemiPersistentOnPuschV1610
	}
	return nil
}

func (x *CsiReportConfig) GetAperiodicV1610() *Aperiodicv1610CsiReportConfig {
	if x != nil {
		return x.AperiodicV1610
	}
	return nil
}

func (x *CsiReportConfig) GetReportQuantityR16() *ReportQuantityr16CsiReportConfig {
	if x != nil {
		return x.ReportQuantityR16
	}
	return nil
}

func (x *CsiReportConfig) GetCodebookConfigR16() *CodebookConfigr16 {
	if x != nil {
		return x.CodebookConfigR16
	}
	return nil
}

func (x *CsiReportConfig) GetCqiBitsPerSubbandR17() CqiBitsPerSubbandr17CsireportConfig {
	if x != nil && x.CqiBitsPerSubbandR17 != nil {
		return *x.CqiBitsPerSubbandR17
	}
	return CqiBitsPerSubbandr17CsireportConfig_CQI_BITS_PER_SUBBANDR17_CSIREPORT_CONFIG_BITS4
}

func (x *CsiReportConfig) GetGroupBasedBeamReportingV1710() *GroupBasedBeamReportingv1710CsiReportConfig {
	if x != nil {
		return x.GroupBasedBeamReportingV1710
	}
	return nil
}

func (x *CsiReportConfig) GetCodebookConfigR17() *CodebookConfigr17 {
	if x != nil {
		return x.CodebookConfigR17
	}
	return nil
}

func (x *CsiReportConfig) GetSharedCmrR17() SharedCmrr17CsireportConfig {
	if x != nil && x.SharedCmrR17 != nil {
		return *x.SharedCmrR17
	}
	return SharedCmrr17CsireportConfig_SHARED_CMRR17_CSIREPORT_CONFIG_ENABLE
}

func (x *CsiReportConfig) GetCsiReportModeR17() CsiReportModer17CsireportConfig {
	if x != nil && x.CsiReportModeR17 != nil {
		return *x.CsiReportModeR17
	}
	return CsiReportModer17CsireportConfig_CSI_REPORT_MODER17_CSIREPORT_CONFIG_MODE1
}

func (x *CsiReportConfig) GetNumberOfSingleTrpCsiMode1R17() NumberOfSingleTrpcsimode1R17CsireportConfig {
	if x != nil && x.NumberOfSingleTrpCsiMode1R17 != nil {
		return *x.NumberOfSingleTrpCsiMode1R17
	}
	return NumberOfSingleTrpcsimode1R17CsireportConfig_NUMBER_OF_SINGLE_TRPCSIMODE1R17_CSIREPORT_CONFIG_N0
}

func (x *CsiReportConfig) GetReportQuantityR17() *ReportQuantityr17CsiReportConfig {
	if x != nil {
		return x.ReportQuantityR17
	}
	return nil
}

func (x *CsiReportConfig) GetSemiPersistentOnPuschV1720() *SemiPersistentOnPuschv1720CsiReportConfig {
	if x != nil {
		return x.SemiPersistentOnPuschV1720
	}
	return nil
}

func (x *CsiReportConfig) GetAperiodicV1720() *Aperiodicv1720CsiReportConfig {
	if x != nil {
		return x.AperiodicV1720
	}
	return nil
}

func (x *CsiReportConfig) GetCodebookConfigV1730() *CodebookConfigv1730 {
	if x != nil {
		return x.CodebookConfigV1730
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1081
// {CSI-ReportPeriodicityAndOffset}
type CsiReportPeriodicityAndOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1081
	//
	// Types that are assignable to CsiReportPeriodicityAndOffset:
	//	*CsiReportPeriodicityAndOffset_Slots4
	//	*CsiReportPeriodicityAndOffset_Slots5
	//	*CsiReportPeriodicityAndOffset_Slots8
	//	*CsiReportPeriodicityAndOffset_Slots10
	//	*CsiReportPeriodicityAndOffset_Slots16
	//	*CsiReportPeriodicityAndOffset_Slots20
	//	*CsiReportPeriodicityAndOffset_Slots40
	//	*CsiReportPeriodicityAndOffset_Slots80
	//	*CsiReportPeriodicityAndOffset_Slots160
	//	*CsiReportPeriodicityAndOffset_Slots320
	CsiReportPeriodicityAndOffset isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset `protobuf_oneof:"csi_report_periodicity_and_offset"`
}

func (x *CsiReportPeriodicityAndOffset) Reset() {
	*x = CsiReportPeriodicityAndOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiReportPeriodicityAndOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiReportPeriodicityAndOffset) ProtoMessage() {}

func (x *CsiReportPeriodicityAndOffset) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiReportPeriodicityAndOffset.ProtoReflect.Descriptor instead.
func (*CsiReportPeriodicityAndOffset) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{179}
}

func (m *CsiReportPeriodicityAndOffset) GetCsiReportPeriodicityAndOffset() isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset {
	if m != nil {
		return m.CsiReportPeriodicityAndOffset
	}
	return nil
}

func (x *CsiReportPeriodicityAndOffset) GetSlots4() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots4); ok {
		return x.Slots4
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots5() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots5); ok {
		return x.Slots5
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots8() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots8); ok {
		return x.Slots8
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots10() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots10); ok {
		return x.Slots10
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots16() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots16); ok {
		return x.Slots16
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots20() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots20); ok {
		return x.Slots20
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots40() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots40); ok {
		return x.Slots40
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots80() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots80); ok {
		return x.Slots80
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots160() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots160); ok {
		return x.Slots160
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots320() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots320); ok {
		return x.Slots320
	}
	return 0
}

type isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset interface {
	isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset()
}

type CsiReportPeriodicityAndOffset_Slots4 struct {
	// @inject_tag: aper:"choiceIdx:1,valueLB:0,valueUB:3,"
	Slots4 int32 `protobuf:"varint,1,opt,name=slots4,proto3,oneof" aper:"choiceIdx:1,valueLB:0,valueUB:3,"`
}

type CsiReportPeriodicityAndOffset_Slots5 struct {
	// @inject_tag: aper:"choiceIdx:2,valueLB:0,valueUB:4,"
	Slots5 int32 `protobuf:"varint,2,opt,name=slots5,proto3,oneof" aper:"choiceIdx:2,valueLB:0,valueUB:4,"`
}

type CsiReportPeriodicityAndOffset_Slots8 struct {
	// @inject_tag: aper:"choiceIdx:3,valueLB:0,valueUB:7,"
	Slots8 int32 `protobuf:"varint,3,opt,name=slots8,proto3,oneof" aper:"choiceIdx:3,valueLB:0,valueUB:7,"`
}

type CsiReportPeriodicityAndOffset_Slots10 struct {
	// @inject_tag: aper:"choiceIdx:4,valueLB:0,valueUB:9,"
	Slots10 int32 `protobuf:"varint,4,opt,name=slots10,proto3,oneof" aper:"choiceIdx:4,valueLB:0,valueUB:9,"`
}

type CsiReportPeriodicityAndOffset_Slots16 struct {
	// @inject_tag: aper:"choiceIdx:5,valueLB:0,valueUB:15,"
	Slots16 int32 `protobuf:"varint,5,opt,name=slots16,proto3,oneof" aper:"choiceIdx:5,valueLB:0,valueUB:15,"`
}

type CsiReportPeriodicityAndOffset_Slots20 struct {
	// @inject_tag: aper:"choiceIdx:6,valueLB:0,valueUB:19,"
	Slots20 int32 `protobuf:"varint,6,opt,name=slots20,proto3,oneof" aper:"choiceIdx:6,valueLB:0,valueUB:19,"`
}

type CsiReportPeriodicityAndOffset_Slots40 struct {
	// @inject_tag: aper:"choiceIdx:7,valueLB:0,valueUB:39,"
	Slots40 int32 `protobuf:"varint,7,opt,name=slots40,proto3,oneof" aper:"choiceIdx:7,valueLB:0,valueUB:39,"`
}

type CsiReportPeriodicityAndOffset_Slots80 struct {
	// @inject_tag: aper:"choiceIdx:8,valueLB:0,valueUB:79,"
	Slots80 int32 `protobuf:"varint,8,opt,name=slots80,proto3,oneof" aper:"choiceIdx:8,valueLB:0,valueUB:79,"`
}

type CsiReportPeriodicityAndOffset_Slots160 struct {
	// @inject_tag: aper:"choiceIdx:9,valueLB:0,valueUB:159,"
	Slots160 int32 `protobuf:"varint,9,opt,name=slots160,proto3,oneof" aper:"choiceIdx:9,valueLB:0,valueUB:159,"`
}

type CsiReportPeriodicityAndOffset_Slots320 struct {
	// @inject_tag: aper:"choiceIdx:10,valueLB:0,valueUB:319,"
	Slots320 int32 `protobuf:"varint,10,opt,name=slots320,proto3,oneof" aper:"choiceIdx:10,valueLB:0,valueUB:319,"`
}

func (*CsiReportPeriodicityAndOffset_Slots4) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots5) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots8) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots10) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots16) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots20) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots40) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots80) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots160) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots320) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

// sequence from nr-rrc-definitions.asn1:1094
// {PUCCH-CSI-Resource}
type PucchCSiResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UplinkBandwidthPartId *BwpId           `protobuf:"bytes,1,opt,name=uplink_bandwidth_part_id,json=uplinkBandwidthPartId,proto3" json:"uplink_bandwidth_part_id,omitempty"`
	PucchResource         *PucchResourceId `protobuf:"bytes,2,opt,name=pucch_resource,json=pucch-Resource,proto3" json:"pucch_resource,omitempty"`
}

func (x *PucchCSiResource) Reset() {
	*x = PucchCSiResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PucchCSiResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PucchCSiResource) ProtoMessage() {}

func (x *PucchCSiResource) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PucchCSiResource.ProtoReflect.Descriptor instead.
func (*PucchCSiResource) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{180}
}

func (x *PucchCSiResource) GetUplinkBandwidthPartId() *BwpId {
	if x != nil {
		return x.UplinkBandwidthPartId
	}
	return nil
}

func (x *PucchCSiResource) GetPucchResource() *PucchResourceId {
	if x != nil {
		return x.PucchResource
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1100
// {portIndex8PortIndexFor8Ranks}
type PortIndex8PortIndexFor8Ranks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	Rank1_8 *PortIndex8 `protobuf:"bytes,1,opt,name=rank1_8,json=rank1-8,proto3,oneof" json:"rank1_8,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,sizeLB:2,sizeUB:2,"
	Rank2_8 []*PortIndex8 `protobuf:"bytes,2,rep,name=rank2_8,json=rank2-8,proto3" json:"rank2_8,omitempty" aper:"optional,sizeLB:2,sizeUB:2,"`
	// @inject_tag: aper:"optional,sizeLB:3,sizeUB:3,"
	Rank3_8 []*PortIndex8 `protobuf:"bytes,3,rep,name=rank3_8,json=rank3-8,proto3" json:"rank3_8,omitempty" aper:"optional,sizeLB:3,sizeUB:3,"`
	// @inject_tag: aper:"optional,sizeLB:4,sizeUB:4,"
	Rank4_8 []*PortIndex8 `protobuf:"bytes,4,rep,name=rank4_8,json=rank4-8,proto3" json:"rank4_8,omitempty" aper:"optional,sizeLB:4,sizeUB:4,"`
	// @inject_tag: aper:"optional,sizeLB:5,sizeUB:5,"
	Rank5_8 []*PortIndex8 `protobuf:"bytes,5,rep,name=rank5_8,json=rank5-8,proto3" json:"rank5_8,omitempty" aper:"optional,sizeLB:5,sizeUB:5,"`
	// @inject_tag: aper:"optional,sizeLB:6,sizeUB:6,"
	Rank6_8 []*PortIndex8 `protobuf:"bytes,6,rep,name=rank6_8,json=rank6-8,proto3" json:"rank6_8,omitempty" aper:"optional,sizeLB:6,sizeUB:6,"`
	// @inject_tag: aper:"optional,sizeLB:7,sizeUB:7,"
	Rank7_8 []*PortIndex8 `protobuf:"bytes,7,rep,name=rank7_8,json=rank7-8,proto3" json:"rank7_8,omitempty" aper:"optional,sizeLB:7,sizeUB:7,"`
	// @inject_tag: aper:"optional,sizeLB:8,sizeUB:8,"
	Rank8_8 []*PortIndex8 `protobuf:"bytes,8,rep,name=rank8_8,json=rank8-8,proto3" json:"rank8_8,omitempty" aper:"optional,sizeLB:8,sizeUB:8,"`
}

func (x *PortIndex8PortIndexFor8Ranks) Reset() {
	*x = PortIndex8PortIndexFor8Ranks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex8PortIndexFor8Ranks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex8PortIndexFor8Ranks) ProtoMessage() {}

func (x *PortIndex8PortIndexFor8Ranks) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex8PortIndexFor8Ranks.ProtoReflect.Descriptor instead.
func (*PortIndex8PortIndexFor8Ranks) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{181}
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank1_8() *PortIndex8 {
	if x != nil {
		return x.Rank1_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank2_8() []*PortIndex8 {
	if x != nil {
		return x.Rank2_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank3_8() []*PortIndex8 {
	if x != nil {
		return x.Rank3_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank4_8() []*PortIndex8 {
	if x != nil {
		return x.Rank4_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank5_8() []*PortIndex8 {
	if x != nil {
		return x.Rank5_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank6_8() []*PortIndex8 {
	if x != nil {
		return x.Rank6_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank7_8() []*PortIndex8 {
	if x != nil {
		return x.Rank7_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank8_8() []*PortIndex8 {
	if x != nil {
		return x.Rank8_8
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1110
// {portIndex4PortIndexFor8Ranks}
type PortIndex4PortIndexFor8Ranks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	Rank1_4 *PortIndex4 `protobuf:"bytes,1,opt,name=rank1_4,json=rank1-4,proto3,oneof" json:"rank1_4,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,sizeLB:2,sizeUB:2,"
	Rank2_4 []*PortIndex4 `protobuf:"bytes,2,rep,name=rank2_4,json=rank2-4,proto3" json:"rank2_4,omitempty" aper:"optional,sizeLB:2,sizeUB:2,"`
	// @inject_tag: aper:"optional,sizeLB:3,sizeUB:3,"
	Rank3_4 []*PortIndex4 `protobuf:"bytes,3,rep,name=rank3_4,json=rank3-4,proto3" json:"rank3_4,omitempty" aper:"optional,sizeLB:3,sizeUB:3,"`
	// @inject_tag: aper:"optional,sizeLB:4,sizeUB:4,"
	Rank4_4 []*PortIndex4 `protobuf:"bytes,4,rep,name=rank4_4,json=rank4-4,proto3" json:"rank4_4,omitempty" aper:"optional,sizeLB:4,sizeUB:4,"`
}

func (x *PortIndex4PortIndexFor8Ranks) Reset() {
	*x = PortIndex4PortIndexFor8Ranks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex4PortIndexFor8Ranks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex4PortIndexFor8Ranks) ProtoMessage() {}

func (x *PortIndex4PortIndexFor8Ranks) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex4PortIndexFor8Ranks.ProtoReflect.Descriptor instead.
func (*PortIndex4PortIndexFor8Ranks) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{182}
}

func (x *PortIndex4PortIndexFor8Ranks) GetRank1_4() *PortIndex4 {
	if x != nil {
		return x.Rank1_4
	}
	return nil
}

func (x *PortIndex4PortIndexFor8Ranks) GetRank2_4() []*PortIndex4 {
	if x != nil {
		return x.Rank2_4
	}
	return nil
}

func (x *PortIndex4PortIndexFor8Ranks) GetRank3_4() []*PortIndex4 {
	if x != nil {
		return x.Rank3_4
	}
	return nil
}

func (x *PortIndex4PortIndexFor8Ranks) GetRank4_4() []*PortIndex4 {
	if x != nil {
		return x.Rank4_4
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1116
// {portIndex2PortIndexFor8Ranks}
type PortIndex2PortIndexFor8Ranks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	Rank1_2 *PortIndex2 `protobuf:"bytes,1,opt,name=rank1_2,json=rank1-2,proto3,oneof" json:"rank1_2,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,sizeLB:2,sizeUB:2,"
	Rank2_2 []*PortIndex2 `protobuf:"bytes,2,rep,name=rank2_2,json=rank2-2,proto3" json:"rank2_2,omitempty" aper:"optional,sizeLB:2,sizeUB:2,"`
}

func (x *PortIndex2PortIndexFor8Ranks) Reset() {
	*x = PortIndex2PortIndexFor8Ranks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex2PortIndexFor8Ranks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex2PortIndexFor8Ranks) ProtoMessage() {}

func (x *PortIndex2PortIndexFor8Ranks) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex2PortIndexFor8Ranks.ProtoReflect.Descriptor instead.
func (*PortIndex2PortIndexFor8Ranks) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{183}
}

func (x *PortIndex2PortIndexFor8Ranks) GetRank1_2() *PortIndex2 {
	if x != nil {
		return x.Rank1_2
	}
	return nil
}

func (x *PortIndex2PortIndexFor8Ranks) GetRank2_2() []*PortIndex2 {
	if x != nil {
		return x.Rank2_2
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1108
// {PortIndexFor8Ranks}
type PortIndexFor8Ranks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1108
	//
	// Types that are assignable to PortIndexFor8Ranks:
	//	*PortIndexFor8Ranks_PortIndex8
	//	*PortIndexFor8Ranks_PortIndex4
	//	*PortIndexFor8Ranks_PortIndex2
	//	*PortIndexFor8Ranks_PortIndex1
	PortIndexFor8Ranks isPortIndexFor8Ranks_PortIndexFor8Ranks `protobuf_oneof:"port_index_for8_ranks"`
}

func (x *PortIndexFor8Ranks) Reset() {
	*x = PortIndexFor8Ranks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndexFor8Ranks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndexFor8Ranks) ProtoMessage() {}

func (x *PortIndexFor8Ranks) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndexFor8Ranks.ProtoReflect.Descriptor instead.
func (*PortIndexFor8Ranks) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{184}
}

func (m *PortIndexFor8Ranks) GetPortIndexFor8Ranks() isPortIndexFor8Ranks_PortIndexFor8Ranks {
	if m != nil {
		return m.PortIndexFor8Ranks
	}
	return nil
}

func (x *PortIndexFor8Ranks) GetPortIndex8() *PortIndex8PortIndexFor8Ranks {
	if x, ok := x.GetPortIndexFor8Ranks().(*PortIndexFor8Ranks_PortIndex8); ok {
		return x.PortIndex8
	}
	return nil
}

func (x *PortIndexFor8Ranks) GetPortIndex4() *PortIndex4PortIndexFor8Ranks {
	if x, ok := x.GetPortIndexFor8Ranks().(*PortIndexFor8Ranks_PortIndex4); ok {
		return x.PortIndex4
	}
	return nil
}

func (x *PortIndexFor8Ranks) GetPortIndex2() *PortIndex2PortIndexFor8Ranks {
	if x, ok := x.GetPortIndexFor8Ranks().(*PortIndexFor8Ranks_PortIndex2); ok {
		return x.PortIndex2
	}
	return nil
}

func (x *PortIndexFor8Ranks) GetPortIndex1() int32 {
	if x, ok := x.GetPortIndexFor8Ranks().(*PortIndexFor8Ranks_PortIndex1); ok {
		return x.PortIndex1
	}
	return 0
}

type isPortIndexFor8Ranks_PortIndexFor8Ranks interface {
	isPortIndexFor8Ranks_PortIndexFor8Ranks()
}

type PortIndexFor8Ranks_PortIndex8 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	PortIndex8 *PortIndex8PortIndexFor8Ranks `protobuf:"bytes,1,opt,name=port_index8,json=portIndex8,proto3,oneof" aper:"choiceIdx:1,"`
}

type PortIndexFor8Ranks_PortIndex4 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	PortIndex4 *PortIndex4PortIndexFor8Ranks `protobuf:"bytes,2,opt,name=port_index4,json=portIndex4,proto3,oneof" aper:"choiceIdx:2,"`
}

type PortIndexFor8Ranks_PortIndex2 struct {
	// @inject_tag: aper:"choiceIdx:3,"
	PortIndex2 *PortIndex2PortIndexFor8Ranks `protobuf:"bytes,3,opt,name=port_index2,json=portIndex2,proto3,oneof" aper:"choiceIdx:3,"`
}

type PortIndexFor8Ranks_PortIndex1 struct {
	// @inject_tag: aper:"choiceIdx:4,"
	PortIndex1 int32 `protobuf:"varint,4,opt,name=port_index1,json=portIndex1,proto3,oneof" aper:"choiceIdx:4,"`
}

func (*PortIndexFor8Ranks_PortIndex8) isPortIndexFor8Ranks_PortIndexFor8Ranks() {}

func (*PortIndexFor8Ranks_PortIndex4) isPortIndexFor8Ranks_PortIndexFor8Ranks() {}

func (*PortIndexFor8Ranks_PortIndex2) isPortIndexFor8Ranks_PortIndexFor8Ranks() {}

func (*PortIndexFor8Ranks_PortIndex1) isPortIndexFor8Ranks_PortIndexFor8Ranks() {}

// range of Integer from nr-rrc-definitions.asn1:1122
// {PortIndex8}
type PortIndex8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:7,"`
}

func (x *PortIndex8) Reset() {
	*x = PortIndex8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex8) ProtoMessage() {}

func (x *PortIndex8) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex8.ProtoReflect.Descriptor instead.
func (*PortIndex8) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{185}
}

func (x *PortIndex8) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1123
// {PortIndex4}
type PortIndex4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:3,"`
}

func (x *PortIndex4) Reset() {
	*x = PortIndex4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex4) ProtoMessage() {}

func (x *PortIndex4) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex4.ProtoReflect.Descriptor instead.
func (*PortIndex4) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{186}
}

func (x *PortIndex4) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1124
// {PortIndex2}
type PortIndex2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:1,"`
}

func (x *PortIndex2) Reset() {
	*x = PortIndex2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex2) ProtoMessage() {}

func (x *PortIndex2) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex2.ProtoReflect.Descriptor instead.
func (*PortIndex2) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{187}
}

func (x *PortIndex2) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1129
// {CSI-ReportConfigId}
type CsiReportConfigId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:47,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:47,"`
}

func (x *CsiReportConfigId) Reset() {
	*x = CsiReportConfigId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiReportConfigId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiReportConfigId) ProtoMessage() {}

func (x *CsiReportConfigId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiReportConfigId.ProtoReflect.Descriptor instead.
func (*CsiReportConfigId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{188}
}

func (x *CsiReportConfigId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1139
// {nzp-CSI-RS-SSBcsi-RS-ResourceSetList}
type NzpCSiRSSSbcsiRSResourceSetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:16,"
	NzpCsiRsResourceSetList []*NzpCSiRSResourceSetId `protobuf:"bytes,1,rep,name=nzp_csi_rs_resource_set_list,json=nzp-CSI-RS-ResourceSetList,proto3" json:"nzp_csi_rs_resource_set_list,omitempty" aper:"optional,sizeLB:1,sizeUB:16,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:1,"
	CsiSsbResourceSetList []*CsiSSbResourceSetId `protobuf:"bytes,2,rep,name=csi_ssb_resource_set_list,json=csi-SSB-ResourceSetList,proto3" json:"csi_ssb_resource_set_list,omitempty" aper:"optional,sizeLB:1,sizeUB:1,"`
}

func (x *NzpCSiRSSSbcsiRSResourceSetList) Reset() {
	*x = NzpCSiRSSSbcsiRSResourceSetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NzpCSiRSSSbcsiRSResourceSetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NzpCSiRSSSbcsiRSResourceSetList) ProtoMessage() {}

func (x *NzpCSiRSSSbcsiRSResourceSetList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NzpCSiRSSSbcsiRSResourceSetList.ProtoReflect.Descriptor instead.
func (*NzpCSiRSSSbcsiRSResourceSetList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{189}
}

func (x *NzpCSiRSSSbcsiRSResourceSetList) GetNzpCsiRsResourceSetList() []*NzpCSiRSResourceSetId {
	if x != nil {
		return x.NzpCsiRsResourceSetList
	}
	return nil
}

func (x *NzpCSiRSSSbcsiRSResourceSetList) GetCsiSsbResourceSetList() []*CsiSSbResourceSetId {
	if x != nil {
		return x.CsiSsbResourceSetList
	}
	return nil
}

// repeated from nr-rrc-definitions.asn1:1143
// {csi-IM-ResourceSetListcsi-RS-ResourceSetList}
type CsiIMResourceSetListcsiRSResourceSetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:16,"
	CsiImResourceSetList []*CsiIMResourceSetId `protobuf:"bytes,1,rep,name=csi_im_resource_set_list,json=csi-IM-ResourceSetList,proto3" json:"csi_im_resource_set_list,omitempty" aper:"sizeLB:1,sizeUB:16,"`
}

func (x *CsiIMResourceSetListcsiRSResourceSetList) Reset() {
	*x = CsiIMResourceSetListcsiRSResourceSetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiIMResourceSetListcsiRSResourceSetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiIMResourceSetListcsiRSResourceSetList) ProtoMessage() {}

func (x *CsiIMResourceSetListcsiRSResourceSetList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiIMResourceSetListcsiRSResourceSetList.ProtoReflect.Descriptor instead.
func (*CsiIMResourceSetListcsiRSResourceSetList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{190}
}

func (x *CsiIMResourceSetListcsiRSResourceSetList) GetCsiImResourceSetList() []*CsiIMResourceSetId {
	if x != nil {
		return x.CsiImResourceSetList
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:1141
// {csi-RS-ResourceSetListCSI-ResourceConfig}
type CsiRSResourceSetListCsiResourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1141
	//
	// Types that are assignable to CsiRsResourceSetListCsiResourceConfig:
	//	*CsiRSResourceSetListCsiResourceConfig_NzpCsiRsSsb
	//	*CsiRSResourceSetListCsiResourceConfig_CsiImResourceSetList
	CsiRsResourceSetListCsiResourceConfig isCsiRSResourceSetListCsiResourceConfig_CsiRsResourceSetListCsiResourceConfig `protobuf_oneof:"csi_rs_resource_set_list_csi_resource_config"`
}

func (x *CsiRSResourceSetListCsiResourceConfig) Reset() {
	*x = CsiRSResourceSetListCsiResourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiRSResourceSetListCsiResourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiRSResourceSetListCsiResourceConfig) ProtoMessage() {}

func (x *CsiRSResourceSetListCsiResourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiRSResourceSetListCsiResourceConfig.ProtoReflect.Descriptor instead.
func (*CsiRSResourceSetListCsiResourceConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{191}
}

func (m *CsiRSResourceSetListCsiResourceConfig) GetCsiRsResourceSetListCsiResourceConfig() isCsiRSResourceSetListCsiResourceConfig_CsiRsResourceSetListCsiResourceConfig {
	if m != nil {
		return m.CsiRsResourceSetListCsiResourceConfig
	}
	return nil
}

func (x *CsiRSResourceSetListCsiResourceConfig) GetNzpCsiRsSsb() *NzpCSiRSSSbcsiRSResourceSetList {
	if x, ok := x.GetCsiRsResourceSetListCsiResourceConfig().(*CsiRSResourceSetListCsiResourceConfig_NzpCsiRsSsb); ok {
		return x.NzpCsiRsSsb
	}
	return nil
}

func (x *CsiRSResourceSetListCsiResourceConfig) GetCsiImResourceSetList() *CsiIMResourceSetListcsiRSResourceSetList {
	if x, ok := x.GetCsiRsResourceSetListCsiResourceConfig().(*CsiRSResourceSetListCsiResourceConfig_CsiImResourceSetList); ok {
		return x.CsiImResourceSetList
	}
	return nil
}

type isCsiRSResourceSetListCsiResourceConfig_CsiRsResourceSetListCsiResourceConfig interface {
	isCsiRSResourceSetListCsiResourceConfig_CsiRsResourceSetListCsiResourceConfig()
}

type CsiRSResourceSetListCsiResourceConfig_NzpCsiRsSsb struct {
	// @inject_tag: aper:"choiceIdx:1,"
	NzpCsiRsSsb *NzpCSiRSSSbcsiRSResourceSetList `protobuf:"bytes,1,opt,name=nzp_csi_rs_ssb,json=nzp-CSI-RS-SSB,proto3,oneof" aper:"choiceIdx:1,"`
}

type CsiRSResourceSetListCsiResourceConfig_CsiImResourceSetList struct {
	// @inject_tag: aper:"choiceIdx:2,"
	CsiImResourceSetList *CsiIMResourceSetListcsiRSResourceSetList `protobuf:"bytes,2,opt,name=csi_im_resource_set_list,json=csi-IM-ResourceSetList,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*CsiRSResourceSetListCsiResourceConfig_NzpCsiRsSsb) isCsiRSResourceSetListCsiResourceConfig_CsiRsResourceSetListCsiResourceConfig() {
}

func (*CsiRSResourceSetListCsiResourceConfig_CsiImResourceSetList) isCsiRSResourceSetListCsiResourceConfig_CsiRsResourceSetListCsiResourceConfig() {
}

// sequence from nr-rrc-definitions.asn1:1135
// @inject_tag: aper:"valueExt"
// {CSI-ResourceConfig}
type CsiResourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CsiResourceConfigId  *CsiResourceConfigId                   `protobuf:"bytes,1,opt,name=csi_resource_config_id,json=csi-ResourceConfigId,proto3" json:"csi_resource_config_id,omitempty"`
	CsiRsResourceSetList *CsiRSResourceSetListCsiResourceConfig `protobuf:"bytes,2,opt,name=csi_rs_resource_set_list,json=csi-RS-ResourceSetList,proto3" json:"csi_rs_resource_set_list,omitempty"`
	BwpId                *BwpId                                 `protobuf:"bytes,3,opt,name=bwp_id,json=bwp-Id,proto3" json:"bwp_id,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:2,"
	ResourceType ResourceTypeCsiresourceConfig `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3,enum=nr_rrc_definitions.v1.ResourceTypeCsiresourceConfig" json:"resource_type,omitempty" aper:"valueLB:0,valueUB:2,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	CsiSsbResourceSetListExtR17 *CsiSSbResourceSetId `protobuf:"bytes,5,opt,name=csi_ssb_resource_set_list_ext_r17,json=csi-SSB-ResourceSetListExt-r17,proto3,oneof" json:"csi_ssb_resource_set_list_ext_r17,omitempty" aper:"optional,fromValueExt,"`
}

func (x *CsiResourceConfig) Reset() {
	*x = CsiResourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiResourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiResourceConfig) ProtoMessage() {}

func (x *CsiResourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiResourceConfig.ProtoReflect.Descriptor instead.
func (*CsiResourceConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{192}
}

func (x *CsiResourceConfig) GetCsiResourceConfigId() *CsiResourceConfigId {
	if x != nil {
		return x.CsiResourceConfigId
	}
	return nil
}

func (x *CsiResourceConfig) GetCsiRsResourceSetList() *CsiRSResourceSetListCsiResourceConfig {
	if x != nil {
		return x.CsiRsResourceSetList
	}
	return nil
}

func (x *CsiResourceConfig) GetBwpId() *BwpId {
	if x != nil {
		return x.BwpId
	}
	return nil
}

func (x *CsiResourceConfig) GetResourceType() ResourceTypeCsiresourceConfig {
	if x != nil {
		return x.ResourceType
	}
	return ResourceTypeCsiresourceConfig_RESOURCE_TYPE_CSIRESOURCE_CONFIG_APERIODIC
}

func (x *CsiResourceConfig) GetCsiSsbResourceSetListExtR17() *CsiSSbResourceSetId {
	if x != nil {
		return x.CsiSsbResourceSetListExtR17
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1156
// {CSI-ResourceConfigId}
type CsiResourceConfigId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:111,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:111,"`
}

func (x *CsiResourceConfigId) Reset() {
	*x = CsiResourceConfigId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiResourceConfigId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiResourceConfigId) ProtoMessage() {}

func (x *CsiResourceConfigId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiResourceConfigId.ProtoReflect.Descriptor instead.
func (*CsiResourceConfigId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{193}
}

func (x *CsiResourceConfigId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1162
// {CSI-ResourcePeriodicityAndOffset}
type CsiResourcePeriodicityAndOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1162
	//
	// Types that are assignable to CsiResourcePeriodicityAndOffset:
	//	*CsiResourcePeriodicityAndOffset_Slots4
	//	*CsiResourcePeriodicityAndOffset_Slots5
	//	*CsiResourcePeriodicityAndOffset_Slots8
	//	*CsiResourcePeriodicityAndOffset_Slots10
	//	*CsiResourcePeriodicityAndOffset_Slots16
	//	*CsiResourcePeriodicityAndOffset_Slots20
	//	*CsiResourcePeriodicityAndOffset_Slots32
	//	*CsiResourcePeriodicityAndOffset_Slots40
	//	*CsiResourcePeriodicityAndOffset_Slots64
	//	*CsiResourcePeriodicityAndOffset_Slots80
	//	*CsiResourcePeriodicityAndOffset_Slots160
	//	*CsiResourcePeriodicityAndOffset_Slots320
	//	*CsiResourcePeriodicityAndOffset_Slots640
	CsiResourcePeriodicityAndOffset isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset `protobuf_oneof:"csi_resource_periodicity_and_offset"`
}

func (x *CsiResourcePeriodicityAndOffset) Reset() {
	*x = CsiResourcePeriodicityAndOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiResourcePeriodicityAndOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiResourcePeriodicityAndOffset) ProtoMessage() {}

func (x *CsiResourcePeriodicityAndOffset) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiResourcePeriodicityAndOffset.ProtoReflect.Descriptor instead.
func (*CsiResourcePeriodicityAndOffset) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{194}
}

func (m *CsiResourcePeriodicityAndOffset) GetCsiResourcePeriodicityAndOffset() isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset {
	if m != nil {
		return m.CsiResourcePeriodicityAndOffset
	}
	return nil
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots4() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots4); ok {
		return x.Slots4
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots5() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots5); ok {
		return x.Slots5
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots8() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots8); ok {
		return x.Slots8
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots10() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots10); ok {
		return x.Slots10
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots16() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots16); ok {
		return x.Slots16
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots20() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots20); ok {
		return x.Slots20
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots32() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots32); ok {
		return x.Slots32
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots40() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots40); ok {
		return x.Slots40
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots64() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots64); ok {
		return x.Slots64
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots80() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots80); ok {
		return x.Slots80
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots160() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots160); ok {
		return x.Slots160
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots320() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots320); ok {
		return x.Slots320
	}
	return 0
}

func (x *CsiResourcePeriodicityAndOffset) GetSlots640() int32 {
	if x, ok := x.GetCsiResourcePeriodicityAndOffset().(*CsiResourcePeriodicityAndOffset_Slots640); ok {
		return x.Slots640
	}
	return 0
}

type isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset interface {
	isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset()
}

type CsiResourcePeriodicityAndOffset_Slots4 struct {
	// @inject_tag: aper:"choiceIdx:1,valueLB:0,valueUB:3,"
	Slots4 int32 `protobuf:"varint,1,opt,name=slots4,proto3,oneof" aper:"choiceIdx:1,valueLB:0,valueUB:3,"`
}

type CsiResourcePeriodicityAndOffset_Slots5 struct {
	// @inject_tag: aper:"choiceIdx:2,valueLB:0,valueUB:4,"
	Slots5 int32 `protobuf:"varint,2,opt,name=slots5,proto3,oneof" aper:"choiceIdx:2,valueLB:0,valueUB:4,"`
}

type CsiResourcePeriodicityAndOffset_Slots8 struct {
	// @inject_tag: aper:"choiceIdx:3,valueLB:0,valueUB:7,"
	Slots8 int32 `protobuf:"varint,3,opt,name=slots8,proto3,oneof" aper:"choiceIdx:3,valueLB:0,valueUB:7,"`
}

type CsiResourcePeriodicityAndOffset_Slots10 struct {
	// @inject_tag: aper:"choiceIdx:4,valueLB:0,valueUB:9,"
	Slots10 int32 `protobuf:"varint,4,opt,name=slots10,proto3,oneof" aper:"choiceIdx:4,valueLB:0,valueUB:9,"`
}

type CsiResourcePeriodicityAndOffset_Slots16 struct {
	// @inject_tag: aper:"choiceIdx:5,valueLB:0,valueUB:15,"
	Slots16 int32 `protobuf:"varint,5,opt,name=slots16,proto3,oneof" aper:"choiceIdx:5,valueLB:0,valueUB:15,"`
}

type CsiResourcePeriodicityAndOffset_Slots20 struct {
	// @inject_tag: aper:"choiceIdx:6,valueLB:0,valueUB:19,"
	Slots20 int32 `protobuf:"varint,6,opt,name=slots20,proto3,oneof" aper:"choiceIdx:6,valueLB:0,valueUB:19,"`
}

type CsiResourcePeriodicityAndOffset_Slots32 struct {
	// @inject_tag: aper:"choiceIdx:7,valueLB:0,valueUB:31,"
	Slots32 int32 `protobuf:"varint,7,opt,name=slots32,proto3,oneof" aper:"choiceIdx:7,valueLB:0,valueUB:31,"`
}

type CsiResourcePeriodicityAndOffset_Slots40 struct {
	// @inject_tag: aper:"choiceIdx:8,valueLB:0,valueUB:39,"
	Slots40 int32 `protobuf:"varint,8,opt,name=slots40,proto3,oneof" aper:"choiceIdx:8,valueLB:0,valueUB:39,"`
}

type CsiResourcePeriodicityAndOffset_Slots64 struct {
	// @inject_tag: aper:"choiceIdx:9,valueLB:0,valueUB:63,"
	Slots64 int32 `protobuf:"varint,9,opt,name=slots64,proto3,oneof" aper:"choiceIdx:9,valueLB:0,valueUB:63,"`
}

type CsiResourcePeriodicityAndOffset_Slots80 struct {
	// @inject_tag: aper:"choiceIdx:10,valueLB:0,valueUB:79,"
	Slots80 int32 `protobuf:"varint,10,opt,name=slots80,proto3,oneof" aper:"choiceIdx:10,valueLB:0,valueUB:79,"`
}

type CsiResourcePeriodicityAndOffset_Slots160 struct {
	// @inject_tag: aper:"choiceIdx:11,valueLB:0,valueUB:159,"
	Slots160 int32 `protobuf:"varint,11,opt,name=slots160,proto3,oneof" aper:"choiceIdx:11,valueLB:0,valueUB:159,"`
}

type CsiResourcePeriodicityAndOffset_Slots320 struct {
	// @inject_tag: aper:"choiceIdx:12,valueLB:0,valueUB:319,"
	Slots320 int32 `protobuf:"varint,12,opt,name=slots320,proto3,oneof" aper:"choiceIdx:12,valueLB:0,valueUB:319,"`
}

type CsiResourcePeriodicityAndOffset_Slots640 struct {
	// @inject_tag: aper:"choiceIdx:13,valueLB:0,valueUB:639,"
	Slots640 int32 `protobuf:"varint,13,opt,name=slots640,proto3,oneof" aper:"choiceIdx:13,valueLB:0,valueUB:639,"`
}

func (*CsiResourcePeriodicityAndOffset_Slots4) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots5) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots8) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots10) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots16) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots20) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots32) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots40) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots64) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots80) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots160) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots320) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

func (*CsiResourcePeriodicityAndOffset_Slots640) isCsiResourcePeriodicityAndOffset_CsiResourcePeriodicityAndOffset() {
}

// range of Integer from nr-rrc-definitions.asn1:1180
// {CSI-RS-Index}
type CsiRSIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:95,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:95,"`
}

func (x *CsiRSIndex) Reset() {
	*x = CsiRSIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiRSIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiRSIndex) ProtoMessage() {}

func (x *CsiRSIndex) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiRSIndex.ProtoReflect.Descriptor instead.
func (*CsiRSIndex) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{195}
}

func (x *CsiRSIndex) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:1187
// {frequencyDomainAllocationCSI-RS-ResourceMapping}
type FrequencyDomainAllocationCsiRSResourceMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1187
	//
	// Types that are assignable to FrequencyDomainAllocationCsiRsResourceMapping:
	//	*FrequencyDomainAllocationCsiRSResourceMapping_Row1
	//	*FrequencyDomainAllocationCsiRSResourceMapping_Row2
	//	*FrequencyDomainAllocationCsiRSResourceMapping_Row4
	//	*FrequencyDomainAllocationCsiRSResourceMapping_Other
	FrequencyDomainAllocationCsiRsResourceMapping isFrequencyDomainAllocationCsiRSResourceMapping_FrequencyDomainAllocationCsiRsResourceMapping `protobuf_oneof:"frequency_domain_allocation_csi_rs_resource_mapping"`
}

func (x *FrequencyDomainAllocationCsiRSResourceMapping) Reset() {
	*x = FrequencyDomainAllocationCsiRSResourceMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrequencyDomainAllocationCsiRSResourceMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyDomainAllocationCsiRSResourceMapping) ProtoMessage() {}

func (x *FrequencyDomainAllocationCsiRSResourceMapping) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyDomainAllocationCsiRSResourceMapping.ProtoReflect.Descriptor instead.
func (*FrequencyDomainAllocationCsiRSResourceMapping) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{196}
}

func (m *FrequencyDomainAllocationCsiRSResourceMapping) GetFrequencyDomainAllocationCsiRsResourceMapping() isFrequencyDomainAllocationCsiRSResourceMapping_FrequencyDomainAllocationCsiRsResourceMapping {
	if m != nil {
		return m.FrequencyDomainAllocationCsiRsResourceMapping
	}
	return nil
}

func (x *FrequencyDomainAllocationCsiRSResourceMapping) GetRow1() *asn1.BitString {
	if x, ok := x.GetFrequencyDomainAllocationCsiRsResourceMapping().(*FrequencyDomainAllocationCsiRSResourceMapping_Row1); ok {
		return x.Row1
	}
	return nil
}

func (x *FrequencyDomainAllocationCsiRSResourceMapping) GetRow2() *asn1.BitString {
	if x, ok := x.GetFrequencyDomainAllocationCsiRsResourceMapping().(*FrequencyDomainAllocationCsiRSResourceMapping_Row2); ok {
		return x.Row2
	}
	return nil
}

func (x *FrequencyDomainAllocationCsiRSResourceMapping) GetRow4() *asn1.BitString {
	if x, ok := x.GetFrequencyDomainAllocationCsiRsResourceMapping().(*FrequencyDomainAllocationCsiRSResourceMapping_Row4); ok {
		return x.Row4
	}
	return nil
}

func (x *FrequencyDomainAllocationCsiRSResourceMapping) GetOther() *asn1.BitString {
	if x, ok := x.GetFrequencyDomainAllocationCsiRsResourceMapping().(*FrequencyDomainAllocationCsiRSResourceMapping_Other); ok {
		return x.Other
	}
	return nil
}

type isFrequencyDomainAllocationCsiRSResourceMapping_FrequencyDomainAllocationCsiRsResourceMapping interface {
	isFrequencyDomainAllocationCsiRSResourceMapping_FrequencyDomainAllocationCsiRsResourceMapping()
}

type FrequencyDomainAllocationCsiRSResourceMapping_Row1 struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:4,sizeUB:4,"
	Row1 *asn1.BitString `protobuf:"bytes,1,opt,name=row1,proto3,oneof" aper:"choiceIdx:1,sizeLB:4,sizeUB:4,"`
}

type FrequencyDomainAllocationCsiRSResourceMapping_Row2 struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:12,sizeUB:12,"
	Row2 *asn1.BitString `protobuf:"bytes,2,opt,name=row2,proto3,oneof" aper:"choiceIdx:2,sizeLB:12,sizeUB:12,"`
}

type FrequencyDomainAllocationCsiRSResourceMapping_Row4 struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:3,sizeUB:3,"
	Row4 *asn1.BitString `protobuf:"bytes,3,opt,name=row4,proto3,oneof" aper:"choiceIdx:3,sizeLB:3,sizeUB:3,"`
}

type FrequencyDomainAllocationCsiRSResourceMapping_Other struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:6,sizeUB:6,"
	Other *asn1.BitString `protobuf:"bytes,4,opt,name=other,proto3,oneof" aper:"choiceIdx:4,sizeLB:6,sizeUB:6,"`
}

func (*FrequencyDomainAllocationCsiRSResourceMapping_Row1) isFrequencyDomainAllocationCsiRSResourceMapping_FrequencyDomainAllocationCsiRsResourceMapping() {
}

func (*FrequencyDomainAllocationCsiRSResourceMapping_Row2) isFrequencyDomainAllocationCsiRSResourceMapping_FrequencyDomainAllocationCsiRsResourceMapping() {
}

func (*FrequencyDomainAllocationCsiRSResourceMapping_Row4) isFrequencyDomainAllocationCsiRSResourceMapping_FrequencyDomainAllocationCsiRsResourceMapping() {
}

func (*FrequencyDomainAllocationCsiRSResourceMapping_Other) isFrequencyDomainAllocationCsiRSResourceMapping_FrequencyDomainAllocationCsiRsResourceMapping() {
}

// choice from nr-rrc-definitions.asn1:1197
// {densityCSI-RS-ResourceMapping}
type DensityCsiRSResourceMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1197
	//
	// Types that are assignable to DensityCsiRsResourceMapping:
	//	*DensityCsiRSResourceMapping_Dot5
	//	*DensityCsiRSResourceMapping_One
	//	*DensityCsiRSResourceMapping_Three
	//	*DensityCsiRSResourceMapping_Spare
	DensityCsiRsResourceMapping isDensityCsiRSResourceMapping_DensityCsiRsResourceMapping `protobuf_oneof:"density_csi_rs_resource_mapping"`
}

func (x *DensityCsiRSResourceMapping) Reset() {
	*x = DensityCsiRSResourceMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DensityCsiRSResourceMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DensityCsiRSResourceMapping) ProtoMessage() {}

func (x *DensityCsiRSResourceMapping) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DensityCsiRSResourceMapping.ProtoReflect.Descriptor instead.
func (*DensityCsiRSResourceMapping) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{197}
}

func (m *DensityCsiRSResourceMapping) GetDensityCsiRsResourceMapping() isDensityCsiRSResourceMapping_DensityCsiRsResourceMapping {
	if m != nil {
		return m.DensityCsiRsResourceMapping
	}
	return nil
}

func (x *DensityCsiRSResourceMapping) GetDot5() Dot5Density {
	if x, ok := x.GetDensityCsiRsResourceMapping().(*DensityCsiRSResourceMapping_Dot5); ok {
		return x.Dot5
	}
	return Dot5Density_DOT5DENSITY_EVEN_PRBS
}

func (x *DensityCsiRSResourceMapping) GetOne() int32 {
	if x, ok := x.GetDensityCsiRsResourceMapping().(*DensityCsiRSResourceMapping_One); ok {
		return x.One
	}
	return 0
}

func (x *DensityCsiRSResourceMapping) GetThree() int32 {
	if x, ok := x.GetDensityCsiRsResourceMapping().(*DensityCsiRSResourceMapping_Three); ok {
		return x.Three
	}
	return 0
}

func (x *DensityCsiRSResourceMapping) GetSpare() int32 {
	if x, ok := x.GetDensityCsiRsResourceMapping().(*DensityCsiRSResourceMapping_Spare); ok {
		return x.Spare
	}
	return 0
}

type isDensityCsiRSResourceMapping_DensityCsiRsResourceMapping interface {
	isDensityCsiRSResourceMapping_DensityCsiRsResourceMapping()
}

type DensityCsiRSResourceMapping_Dot5 struct {
	// @inject_tag: aper:"choiceIdx:1,valueLB:0,valueUB:1,"
	Dot5 Dot5Density `protobuf:"varint,1,opt,name=dot5,proto3,enum=nr_rrc_definitions.v1.Dot5Density,oneof" aper:"choiceIdx:1,valueLB:0,valueUB:1,"`
}

type DensityCsiRSResourceMapping_One struct {
	// @inject_tag: aper:"choiceIdx:2,"
	One int32 `protobuf:"varint,2,opt,name=one,proto3,oneof" aper:"choiceIdx:2,"`
}

type DensityCsiRSResourceMapping_Three struct {
	// @inject_tag: aper:"choiceIdx:3,"
	Three int32 `protobuf:"varint,3,opt,name=three,proto3,oneof" aper:"choiceIdx:3,"`
}

type DensityCsiRSResourceMapping_Spare struct {
	// @inject_tag: aper:"choiceIdx:4,"
	Spare int32 `protobuf:"varint,4,opt,name=spare,proto3,oneof" aper:"choiceIdx:4,"`
}

func (*DensityCsiRSResourceMapping_Dot5) isDensityCsiRSResourceMapping_DensityCsiRsResourceMapping() {
}

func (*DensityCsiRSResourceMapping_One) isDensityCsiRSResourceMapping_DensityCsiRsResourceMapping() {}

func (*DensityCsiRSResourceMapping_Three) isDensityCsiRSResourceMapping_DensityCsiRsResourceMapping() {
}

func (*DensityCsiRSResourceMapping_Spare) isDensityCsiRSResourceMapping_DensityCsiRsResourceMapping() {
}

// sequence from nr-rrc-definitions.asn1:1191
// @inject_tag: aper:"valueExt"
// {CSI-RS-ResourceMapping}
type CsiRSResourceMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrequencyDomainAllocation *FrequencyDomainAllocationCsiRSResourceMapping `protobuf:"bytes,1,opt,name=frequency_domain_allocation,json=frequencyDomainAllocation,proto3" json:"frequency_domain_allocation,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:7,"
	NrofPorts NrofPortsCsirsresourceMapping `protobuf:"varint,2,opt,name=nrof_ports,json=nrofPorts,proto3,enum=nr_rrc_definitions.v1.NrofPortsCsirsresourceMapping" json:"nrof_ports,omitempty" aper:"valueLB:0,valueUB:7,"`
	// @inject_tag: aper:"valueLB:0,valueUB:13,"
	FirstOfdmsymbolInTimeDomain int32 `protobuf:"varint,3,opt,name=first_ofdmsymbol_in_time_domain,json=firstOFDMSymbolInTimeDomain,proto3" json:"first_ofdmsymbol_in_time_domain,omitempty" aper:"valueLB:0,valueUB:13,"`
	// @inject_tag: aper:"optional,valueLB:2,valueUB:12,"
	FirstOfdmsymbolInTimeDomain2 *int32 `protobuf:"varint,4,opt,name=first_ofdmsymbol_in_time_domain2,json=firstOFDMSymbolInTimeDomain2,proto3,oneof" json:"first_ofdmsymbol_in_time_domain2,omitempty" aper:"optional,valueLB:2,valueUB:12,"`
	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	CdmType CdmTypeCsirsresourceMapping  `protobuf:"varint,5,opt,name=cdm_type,json=cdm-Type,proto3,enum=nr_rrc_definitions.v1.CdmTypeCsirsresourceMapping" json:"cdm_type,omitempty" aper:"valueLB:0,valueUB:3,"`
	Density *DensityCsiRSResourceMapping `protobuf:"bytes,6,opt,name=density,proto3" json:"density,omitempty"`
	// @inject_tag: aper:"valueExt,"
	FreqBand *CsiFrequencyOccupation `protobuf:"bytes,7,opt,name=freq_band,json=freqBand,proto3" json:"freq_band,omitempty" aper:"valueExt,"`
}

func (x *CsiRSResourceMapping) Reset() {
	*x = CsiRSResourceMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiRSResourceMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiRSResourceMapping) ProtoMessage() {}

func (x *CsiRSResourceMapping) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiRSResourceMapping.ProtoReflect.Descriptor instead.
func (*CsiRSResourceMapping) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{198}
}

func (x *CsiRSResourceMapping) GetFrequencyDomainAllocation() *FrequencyDomainAllocationCsiRSResourceMapping {
	if x != nil {
		return x.FrequencyDomainAllocation
	}
	return nil
}

func (x *CsiRSResourceMapping) GetNrofPorts() NrofPortsCsirsresourceMapping {
	if x != nil {
		return x.NrofPorts
	}
	return NrofPortsCsirsresourceMapping_NROF_PORTS_CSIRSRESOURCE_MAPPING_P1
}

func (x *CsiRSResourceMapping) GetFirstOfdmsymbolInTimeDomain() int32 {
	if x != nil {
		return x.FirstOfdmsymbolInTimeDomain
	}
	return 0
}

func (x *CsiRSResourceMapping) GetFirstOfdmsymbolInTimeDomain2() int32 {
	if x != nil && x.FirstOfdmsymbolInTimeDomain2 != nil {
		return *x.FirstOfdmsymbolInTimeDomain2
	}
	return 0
}

func (x *CsiRSResourceMapping) GetCdmType() CdmTypeCsirsresourceMapping {
	if x != nil {
		return x.CdmType
	}
	return CdmTypeCsirsresourceMapping_CDM_TYPE_CSIRSRESOURCE_MAPPING_NO_CDM
}

func (x *CsiRSResourceMapping) GetDensity() *DensityCsiRSResourceMapping {
	if x != nil {
		return x.Density
	}
	return nil
}

func (x *CsiRSResourceMapping) GetFreqBand() *CsiFrequencyOccupation {
	if x != nil {
		return x.FreqBand
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1211
// {CSI-SemiPersistentOnPUSCH-TriggerStateList}
type CsiSemiPersistentOnPuschTriggerStateList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:64,"
	Value []*CsiSemiPersistentOnPuschTriggerState `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:64,"`
}

func (x *CsiSemiPersistentOnPuschTriggerStateList) Reset() {
	*x = CsiSemiPersistentOnPuschTriggerStateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiSemiPersistentOnPuschTriggerStateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiSemiPersistentOnPuschTriggerStateList) ProtoMessage() {}

func (x *CsiSemiPersistentOnPuschTriggerStateList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiSemiPersistentOnPuschTriggerStateList.ProtoReflect.Descriptor instead.
func (*CsiSemiPersistentOnPuschTriggerStateList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{199}
}

func (x *CsiSemiPersistentOnPuschTriggerStateList) GetValue() []*CsiSemiPersistentOnPuschTriggerState {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1212
// @inject_tag: aper:"valueExt"
// {CSI-SemiPersistentOnPUSCH-TriggerState}
type CsiSemiPersistentOnPuschTriggerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssociatedReportConfigInfo *CsiReportConfigId `protobuf:"bytes,1,opt,name=associated_report_config_info,json=associatedReportConfigInfo,proto3" json:"associated_report_config_info,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:0,fromValueExt,"
	SpCsiMultiplexingModeR17 *SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState `protobuf:"varint,2,opt,name=sp_csi_multiplexing_mode_r17,json=sp-CSI-MultiplexingMode-r17,proto3,enum=nr_rrc_definitions.v1.SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState,oneof" json:"sp_csi_multiplexing_mode_r17,omitempty" aper:"optional,valueLB:0,valueUB:0,fromValueExt,"`
}

func (x *CsiSemiPersistentOnPuschTriggerState) Reset() {
	*x = CsiSemiPersistentOnPuschTriggerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiSemiPersistentOnPuschTriggerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiSemiPersistentOnPuschTriggerState) ProtoMessage() {}

func (x *CsiSemiPersistentOnPuschTriggerState) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiSemiPersistentOnPuschTriggerState.ProtoReflect.Descriptor instead.
func (*CsiSemiPersistentOnPuschTriggerState) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{200}
}

func (x *CsiSemiPersistentOnPuschTriggerState) GetAssociatedReportConfigInfo() *CsiReportConfigId {
	if x != nil {
		return x.AssociatedReportConfigInfo
	}
	return nil
}

func (x *CsiSemiPersistentOnPuschTriggerState) GetSpCsiMultiplexingModeR17() SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState {
	if x != nil && x.SpCsiMultiplexingModeR17 != nil {
		return *x.SpCsiMultiplexingModeR17
	}
	return SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState_SP_CSIMULTIPLEXING_MODER17_CSISEMI_PERSISTENT_ON_PUSCHTRIGGER_STATE_ENABLED
}

// sequence from nr-rrc-definitions.asn1:1223
// @inject_tag: aper:"valueExt"
// {CSI-SSB-ResourceSet}
type CsiSSbResourceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CsiSsbResourceSetId *CsiSSbResourceSetId `protobuf:"bytes,1,opt,name=csi_ssb_resource_set_id,json=csi-SSB-ResourceSetId,proto3" json:"csi_ssb_resource_set_id,omitempty"`
	// @inject_tag: aper:"sizeLB:1,sizeUB:64,"
	CsiSsbResourceList []*SsbIndex `protobuf:"bytes,2,rep,name=csi_ssb_resource_list,json=csi-SSB-ResourceList,proto3" json:"csi_ssb_resource_list,omitempty" aper:"sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:64,fromValueExt,"
	ServingAdditionalPcilistR17 []*ServingAdditionalPciindexr17 `protobuf:"bytes,3,rep,name=serving_additional_pcilist_r17,json=servingAdditionalPCIList-r17,proto3" json:"serving_additional_pcilist_r17,omitempty" aper:"optional,sizeLB:1,sizeUB:64,fromValueExt,"`
}

func (x *CsiSSbResourceSet) Reset() {
	*x = CsiSSbResourceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiSSbResourceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiSSbResourceSet) ProtoMessage() {}

func (x *CsiSSbResourceSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiSSbResourceSet.ProtoReflect.Descriptor instead.
func (*CsiSSbResourceSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{201}
}

func (x *CsiSSbResourceSet) GetCsiSsbResourceSetId() *CsiSSbResourceSetId {
	if x != nil {
		return x.CsiSsbResourceSetId
	}
	return nil
}

func (x *CsiSSbResourceSet) GetCsiSsbResourceList() []*SsbIndex {
	if x != nil {
		return x.CsiSsbResourceList
	}
	return nil
}

func (x *CsiSSbResourceSet) GetServingAdditionalPcilistR17() []*ServingAdditionalPciindexr17 {
	if x != nil {
		return x.ServingAdditionalPcilistR17
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1231
// {ServingAdditionalPCIIndex-r17}
type ServingAdditionalPciindexr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:7,"`
}

func (x *ServingAdditionalPciindexr17) Reset() {
	*x = ServingAdditionalPciindexr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingAdditionalPciindexr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingAdditionalPciindexr17) ProtoMessage() {}

func (x *ServingAdditionalPciindexr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingAdditionalPciindexr17.ProtoReflect.Descriptor instead.
func (*ServingAdditionalPciindexr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{202}
}

func (x *ServingAdditionalPciindexr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1236
// {CSI-SSB-ResourceSetId}
type CsiSSbResourceSetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:63,"`
}

func (x *CsiSSbResourceSetId) Reset() {
	*x = CsiSSbResourceSetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiSSbResourceSetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiSSbResourceSetId) ProtoMessage() {}

func (x *CsiSSbResourceSetId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiSSbResourceSetId.ProtoReflect.Descriptor instead.
func (*CsiSSbResourceSetId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{203}
}

func (x *CsiSSbResourceSetId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1241
// {DedicatedNAS-Message}
type DedicatedNasMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DedicatedNasMessage) Reset() {
	*x = DedicatedNasMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DedicatedNasMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DedicatedNasMessage) ProtoMessage() {}

func (x *DedicatedNasMessage) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DedicatedNasMessage.ProtoReflect.Descriptor instead.
func (*DedicatedNasMessage) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{204}
}

func (x *DedicatedNasMessage) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1247
// @inject_tag: aper:"valueExt"
// {DownlinkConfigCommon}
type DownlinkConfigCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueExt,"
	FrequencyInfoDl *FrequencyInfoDl `protobuf:"bytes,1,opt,name=frequency_info_dl,json=frequencyInfoDL,proto3,oneof" json:"frequency_info_dl,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,valueExt,"
	InitialDownlinkBwp *BwpDownlinkCommon `protobuf:"bytes,2,opt,name=initial_downlink_bwp,json=initialDownlinkBWP,proto3,oneof" json:"initial_downlink_bwp,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,valueExt,fromValueExt,"
	InitialDownlinkBwpRedCapR17 *BwpDownlinkCommon `protobuf:"bytes,3,opt,name=initial_downlink_bwp_red_cap_r17,json=initialDownlinkBWP-RedCap-r17,proto3,oneof" json:"initial_downlink_bwp_red_cap_r17,omitempty" aper:"optional,valueExt,fromValueExt,"`
}

func (x *DownlinkConfigCommon) Reset() {
	*x = DownlinkConfigCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownlinkConfigCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownlinkConfigCommon) ProtoMessage() {}

func (x *DownlinkConfigCommon) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownlinkConfigCommon.ProtoReflect.Descriptor instead.
func (*DownlinkConfigCommon) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{205}
}

func (x *DownlinkConfigCommon) GetFrequencyInfoDl() *FrequencyInfoDl {
	if x != nil {
		return x.FrequencyInfoDl
	}
	return nil
}

func (x *DownlinkConfigCommon) GetInitialDownlinkBwp() *BwpDownlinkCommon {
	if x != nil {
		return x.InitialDownlinkBwp
	}
	return nil
}

func (x *DownlinkConfigCommon) GetInitialDownlinkBwpRedCapR17() *BwpDownlinkCommon {
	if x != nil {
		return x.InitialDownlinkBwpRedCapR17
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1264
// {FreqBandIndicatorNR}
type FreqBandIndicatorNr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:1024,"`
}

func (x *FreqBandIndicatorNr) Reset() {
	*x = FreqBandIndicatorNr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreqBandIndicatorNr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreqBandIndicatorNr) ProtoMessage() {}

func (x *FreqBandIndicatorNr) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreqBandIndicatorNr.ProtoReflect.Descriptor instead.
func (*FreqBandIndicatorNr) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{206}
}

func (x *FreqBandIndicatorNr) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1270
// @inject_tag: aper:"valueExt"
// {FrequencyInfoDL}
type FrequencyInfoDl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	AbsoluteFrequencySsb    *ArfcnValueNr             `protobuf:"bytes,1,opt,name=absolute_frequency_ssb,json=absoluteFrequencySSB,proto3,oneof" json:"absolute_frequency_ssb,omitempty" aper:"optional,"`
	FrequencyBandList       *MultiFrequencyBandListNr `protobuf:"bytes,2,opt,name=frequency_band_list,json=frequencyBandList,proto3" json:"frequency_band_list,omitempty"`
	AbsoluteFrequencyPointA *ArfcnValueNr             `protobuf:"bytes,3,opt,name=absolute_frequency_point_a,json=absoluteFrequencyPointA,proto3" json:"absolute_frequency_point_a,omitempty"`
	// @inject_tag: aper:"sizeLB:1,sizeUB:5,"
	ScsSpecificCarrierList []*ScsSpecificCarrier `protobuf:"bytes,4,rep,name=scs_specific_carrier_list,json=scs-SpecificCarrierList,proto3" json:"scs_specific_carrier_list,omitempty" aper:"sizeLB:1,sizeUB:5,"`
}

func (x *FrequencyInfoDl) Reset() {
	*x = FrequencyInfoDl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrequencyInfoDl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyInfoDl) ProtoMessage() {}

func (x *FrequencyInfoDl) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyInfoDl.ProtoReflect.Descriptor instead.
func (*FrequencyInfoDl) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{207}
}

func (x *FrequencyInfoDl) GetAbsoluteFrequencySsb() *ArfcnValueNr {
	if x != nil {
		return x.AbsoluteFrequencySsb
	}
	return nil
}

func (x *FrequencyInfoDl) GetFrequencyBandList() *MultiFrequencyBandListNr {
	if x != nil {
		return x.FrequencyBandList
	}
	return nil
}

func (x *FrequencyInfoDl) GetAbsoluteFrequencyPointA() *ArfcnValueNr {
	if x != nil {
		return x.AbsoluteFrequencyPointA
	}
	return nil
}

func (x *FrequencyInfoDl) GetScsSpecificCarrierList() []*ScsSpecificCarrier {
	if x != nil {
		return x.ScsSpecificCarrierList
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:1288
// {s-MeasureConfigMeasConfig}
type SMeasureConfigMeasConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1288
	//
	// Types that are assignable to SMeasureConfigMeasConfig:
	//	*SMeasureConfigMeasConfig_SsbRsrp
	//	*SMeasureConfigMeasConfig_CsiRsrp
	SMeasureConfigMeasConfig isSMeasureConfigMeasConfig_SMeasureConfigMeasConfig `protobuf_oneof:"s_measure_config_meas_config"`
}

func (x *SMeasureConfigMeasConfig) Reset() {
	*x = SMeasureConfigMeasConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMeasureConfigMeasConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMeasureConfigMeasConfig) ProtoMessage() {}

func (x *SMeasureConfigMeasConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMeasureConfigMeasConfig.ProtoReflect.Descriptor instead.
func (*SMeasureConfigMeasConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{208}
}

func (m *SMeasureConfigMeasConfig) GetSMeasureConfigMeasConfig() isSMeasureConfigMeasConfig_SMeasureConfigMeasConfig {
	if m != nil {
		return m.SMeasureConfigMeasConfig
	}
	return nil
}

func (x *SMeasureConfigMeasConfig) GetSsbRsrp() *RsrpRange {
	if x, ok := x.GetSMeasureConfigMeasConfig().(*SMeasureConfigMeasConfig_SsbRsrp); ok {
		return x.SsbRsrp
	}
	return nil
}

func (x *SMeasureConfigMeasConfig) GetCsiRsrp() *RsrpRange {
	if x, ok := x.GetSMeasureConfigMeasConfig().(*SMeasureConfigMeasConfig_CsiRsrp); ok {
		return x.CsiRsrp
	}
	return nil
}

type isSMeasureConfigMeasConfig_SMeasureConfigMeasConfig interface {
	isSMeasureConfigMeasConfig_SMeasureConfigMeasConfig()
}

type SMeasureConfigMeasConfig_SsbRsrp struct {
	// @inject_tag: aper:"choiceIdx:1,"
	SsbRsrp *RsrpRange `protobuf:"bytes,1,opt,name=ssb_rsrp,json=ssb-RSRP,proto3,oneof" aper:"choiceIdx:1,"`
}

type SMeasureConfigMeasConfig_CsiRsrp struct {
	// @inject_tag: aper:"choiceIdx:2,"
	CsiRsrp *RsrpRange `protobuf:"bytes,2,opt,name=csi_rsrp,json=csi-RSRP,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*SMeasureConfigMeasConfig_SsbRsrp) isSMeasureConfigMeasConfig_SMeasureConfigMeasConfig() {}

func (*SMeasureConfigMeasConfig_CsiRsrp) isSMeasureConfigMeasConfig_SMeasureConfigMeasConfig() {}

// sequence from nr-rrc-definitions.asn1:1281
// @inject_tag: aper:"valueExt"
// {MeasConfig}
type MeasConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	MeasObjectToRemoveList *MeasObjectToRemoveList `protobuf:"bytes,1,opt,name=meas_object_to_remove_list,json=measObjectToRemoveList,proto3,oneof" json:"meas_object_to_remove_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	MeasObjectToAddModList *MeasObjectToAddModList `protobuf:"bytes,2,opt,name=meas_object_to_add_mod_list,json=measObjectToAddModList,proto3,oneof" json:"meas_object_to_add_mod_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	ReportConfigToRemoveList *ReportConfigToRemoveList `protobuf:"bytes,3,opt,name=report_config_to_remove_list,json=reportConfigToRemoveList,proto3,oneof" json:"report_config_to_remove_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	ReportConfigToAddModList *ReportConfigToAddModList `protobuf:"bytes,4,opt,name=report_config_to_add_mod_list,json=reportConfigToAddModList,proto3,oneof" json:"report_config_to_add_mod_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	MeasIdToRemoveList *MeasIdToRemoveList `protobuf:"bytes,5,opt,name=meas_id_to_remove_list,json=measIdToRemoveList,proto3,oneof" json:"meas_id_to_remove_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	MeasIdToAddModList *MeasIdToAddModList `protobuf:"bytes,6,opt,name=meas_id_to_add_mod_list,json=measIdToAddModList,proto3,oneof" json:"meas_id_to_add_mod_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	SMeasureConfig *SMeasureConfigMeasConfig `protobuf:"bytes,7,opt,name=s_measure_config,json=s-MeasureConfig,proto3,oneof" json:"s_measure_config,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueExt,"
	QuantityConfig *QuantityConfig `protobuf:"bytes,8,opt,name=quantity_config,json=quantityConfig,proto3,oneof" json:"quantity_config,omitempty" aper:"optional,valueExt,"`
}

func (x *MeasConfig) Reset() {
	*x = MeasConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasConfig) ProtoMessage() {}

func (x *MeasConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasConfig.ProtoReflect.Descriptor instead.
func (*MeasConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{209}
}

func (x *MeasConfig) GetMeasObjectToRemoveList() *MeasObjectToRemoveList {
	if x != nil {
		return x.MeasObjectToRemoveList
	}
	return nil
}

func (x *MeasConfig) GetMeasObjectToAddModList() *MeasObjectToAddModList {
	if x != nil {
		return x.MeasObjectToAddModList
	}
	return nil
}

func (x *MeasConfig) GetReportConfigToRemoveList() *ReportConfigToRemoveList {
	if x != nil {
		return x.ReportConfigToRemoveList
	}
	return nil
}

func (x *MeasConfig) GetReportConfigToAddModList() *ReportConfigToAddModList {
	if x != nil {
		return x.ReportConfigToAddModList
	}
	return nil
}

func (x *MeasConfig) GetMeasIdToRemoveList() *MeasIdToRemoveList {
	if x != nil {
		return x.MeasIdToRemoveList
	}
	return nil
}

func (x *MeasConfig) GetMeasIdToAddModList() *MeasIdToAddModList {
	if x != nil {
		return x.MeasIdToAddModList
	}
	return nil
}

func (x *MeasConfig) GetSMeasureConfig() *SMeasureConfigMeasConfig {
	if x != nil {
		return x.SMeasureConfig
	}
	return nil
}

func (x *MeasConfig) GetQuantityConfig() *QuantityConfig {
	if x != nil {
		return x.QuantityConfig
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1297
// {MeasObjectToRemoveList}
type MeasObjectToRemoveList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:64,"
	Value []*MeasObjectId `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:64,"`
}

func (x *MeasObjectToRemoveList) Reset() {
	*x = MeasObjectToRemoveList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasObjectToRemoveList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasObjectToRemoveList) ProtoMessage() {}

func (x *MeasObjectToRemoveList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasObjectToRemoveList.ProtoReflect.Descriptor instead.
func (*MeasObjectToRemoveList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{210}
}

func (x *MeasObjectToRemoveList) GetValue() []*MeasObjectId {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1299
// {MeasIdToRemoveList}
type MeasIdToRemoveList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:64,"
	Value []*MeasId `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:64,"`
}

func (x *MeasIdToRemoveList) Reset() {
	*x = MeasIdToRemoveList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasIdToRemoveList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasIdToRemoveList) ProtoMessage() {}

func (x *MeasIdToRemoveList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasIdToRemoveList.ProtoReflect.Descriptor instead.
func (*MeasIdToRemoveList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{211}
}

func (x *MeasIdToRemoveList) GetValue() []*MeasId {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1304
// {ReportConfigToRemoveList}
type ReportConfigToRemoveList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:64,"
	Value []*ReportConfigId `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:64,"`
}

func (x *ReportConfigToRemoveList) Reset() {
	*x = ReportConfigToRemoveList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportConfigToRemoveList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportConfigToRemoveList) ProtoMessage() {}

func (x *ReportConfigToRemoveList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportConfigToRemoveList.ProtoReflect.Descriptor instead.
func (*ReportConfigToRemoveList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{212}
}

func (x *ReportConfigToRemoveList) GetValue() []*ReportConfigId {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1304
// {MeasId}
type MeasId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:64,"`
}

func (x *MeasId) Reset() {
	*x = MeasId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasId) ProtoMessage() {}

func (x *MeasId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasId.ProtoReflect.Descriptor instead.
func (*MeasId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{213}
}

func (x *MeasId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1311
// {MeasIdToAddModList}
type MeasIdToAddModList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:64,"
	Value []*MeasIdToAddMod `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:64,"`
}

func (x *MeasIdToAddModList) Reset() {
	*x = MeasIdToAddModList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasIdToAddModList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasIdToAddModList) ProtoMessage() {}

func (x *MeasIdToAddModList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasIdToAddModList.ProtoReflect.Descriptor instead.
func (*MeasIdToAddModList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{214}
}

func (x *MeasIdToAddModList) GetValue() []*MeasIdToAddMod {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1312
// {MeasIdToAddMod}
type MeasIdToAddMod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasId         *MeasId         `protobuf:"bytes,1,opt,name=meas_id,json=measId,proto3" json:"meas_id,omitempty"`
	MeasObjectId   *MeasObjectId   `protobuf:"bytes,2,opt,name=meas_object_id,json=measObjectId,proto3" json:"meas_object_id,omitempty"`
	ReportConfigId *ReportConfigId `protobuf:"bytes,3,opt,name=report_config_id,json=reportConfigId,proto3" json:"report_config_id,omitempty"`
}

func (x *MeasIdToAddMod) Reset() {
	*x = MeasIdToAddMod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasIdToAddMod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasIdToAddMod) ProtoMessage() {}

func (x *MeasIdToAddMod) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasIdToAddMod.ProtoReflect.Descriptor instead.
func (*MeasIdToAddMod) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{215}
}

func (x *MeasIdToAddMod) GetMeasId() *MeasId {
	if x != nil {
		return x.MeasId
	}
	return nil
}

func (x *MeasIdToAddMod) GetMeasObjectId() *MeasObjectId {
	if x != nil {
		return x.MeasObjectId
	}
	return nil
}

func (x *MeasIdToAddMod) GetReportConfigId() *ReportConfigId {
	if x != nil {
		return x.ReportConfigId
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1320
// {MeasObjectId}
type MeasObjectId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:64,"`
}

func (x *MeasObjectId) Reset() {
	*x = MeasObjectId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasObjectId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasObjectId) ProtoMessage() {}

func (x *MeasObjectId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasObjectId.ProtoReflect.Descriptor instead.
func (*MeasObjectId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{216}
}

func (x *MeasObjectId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1326
// @inject_tag: aper:"valueExt"
// {MeasObjectNR}
type MeasObjectNr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	SsbFrequency *ArfcnValueNr `protobuf:"bytes,1,opt,name=ssb_frequency,json=ssbFrequency,proto3,oneof" json:"ssb_frequency,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:7,"
	SsbSubcarrierSpacing *SubcarrierSpacing `protobuf:"varint,2,opt,name=ssb_subcarrier_spacing,json=ssbSubcarrierSpacing,proto3,enum=nr_rrc_definitions.v1.SubcarrierSpacing,oneof" json:"ssb_subcarrier_spacing,omitempty" aper:"optional,valueLB:0,valueUB:7,"`
	// @inject_tag: aper:"valueExt,"
	ReferenceSignalConfig *ReferenceSignalConfig `protobuf:"bytes,3,opt,name=reference_signal_config,json=referenceSignalConfig,proto3" json:"reference_signal_config,omitempty" aper:"valueExt,"`
	// @inject_tag: aper:"valueLB:1,valueUB:2,"
	QuantityConfigIndex int32 `protobuf:"varint,4,opt,name=quantity_config_index,json=quantityConfigIndex,proto3" json:"quantity_config_index,omitempty" aper:"valueLB:1,valueUB:2,"`
}

func (x *MeasObjectNr) Reset() {
	*x = MeasObjectNr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasObjectNr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasObjectNr) ProtoMessage() {}

func (x *MeasObjectNr) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasObjectNr.ProtoReflect.Descriptor instead.
func (*MeasObjectNr) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{217}
}

func (x *MeasObjectNr) GetSsbFrequency() *ArfcnValueNr {
	if x != nil {
		return x.SsbFrequency
	}
	return nil
}

func (x *MeasObjectNr) GetSsbSubcarrierSpacing() SubcarrierSpacing {
	if x != nil && x.SsbSubcarrierSpacing != nil {
		return *x.SsbSubcarrierSpacing
	}
	return SubcarrierSpacing_SUBCARRIER_SPACING_K_HZ15
}

func (x *MeasObjectNr) GetReferenceSignalConfig() *ReferenceSignalConfig {
	if x != nil {
		return x.ReferenceSignalConfig
	}
	return nil
}

func (x *MeasObjectNr) GetQuantityConfigIndex() int32 {
	if x != nil {
		return x.QuantityConfigIndex
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1335
// @inject_tag: aper:"valueExt"
// {ReferenceSignalConfig}
type ReferenceSignalConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	SsbConfigMobility *SsbConfigMobility `protobuf:"bytes,1,opt,name=ssb_config_mobility,json=ssb-ConfigMobility,proto3,oneof" json:"ssb_config_mobility,omitempty" aper:"optional,"`
}

func (x *ReferenceSignalConfig) Reset() {
	*x = ReferenceSignalConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferenceSignalConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceSignalConfig) ProtoMessage() {}

func (x *ReferenceSignalConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceSignalConfig.ProtoReflect.Descriptor instead.
func (*ReferenceSignalConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{218}
}

func (x *ReferenceSignalConfig) GetSsbConfigMobility() *SsbConfigMobility {
	if x != nil {
		return x.SsbConfigMobility
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:1341
// {ssb-ToMeasureSSB-ConfigMobility}
type SsbToMeasureSsbConfigMobility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1341
	//
	// Types that are assignable to SsbToMeasureSsbConfigMobility:
	//	*SsbToMeasureSsbConfigMobility_Release
	//	*SsbToMeasureSsbConfigMobility_Setup
	SsbToMeasureSsbConfigMobility isSsbToMeasureSsbConfigMobility_SsbToMeasureSsbConfigMobility `protobuf_oneof:"ssb_to_measure_ssb_config_mobility"`
}

func (x *SsbToMeasureSsbConfigMobility) Reset() {
	*x = SsbToMeasureSsbConfigMobility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsbToMeasureSsbConfigMobility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsbToMeasureSsbConfigMobility) ProtoMessage() {}

func (x *SsbToMeasureSsbConfigMobility) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsbToMeasureSsbConfigMobility.ProtoReflect.Descriptor instead.
func (*SsbToMeasureSsbConfigMobility) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{219}
}

func (m *SsbToMeasureSsbConfigMobility) GetSsbToMeasureSsbConfigMobility() isSsbToMeasureSsbConfigMobility_SsbToMeasureSsbConfigMobility {
	if m != nil {
		return m.SsbToMeasureSsbConfigMobility
	}
	return nil
}

func (x *SsbToMeasureSsbConfigMobility) GetRelease() int32 {
	if x, ok := x.GetSsbToMeasureSsbConfigMobility().(*SsbToMeasureSsbConfigMobility_Release); ok {
		return x.Release
	}
	return 0
}

func (x *SsbToMeasureSsbConfigMobility) GetSetup() *SsbToMeasure {
	if x, ok := x.GetSsbToMeasureSsbConfigMobility().(*SsbToMeasureSsbConfigMobility_Setup); ok {
		return x.Setup
	}
	return nil
}

type isSsbToMeasureSsbConfigMobility_SsbToMeasureSsbConfigMobility interface {
	isSsbToMeasureSsbConfigMobility_SsbToMeasureSsbConfigMobility()
}

type SsbToMeasureSsbConfigMobility_Release struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Release int32 `protobuf:"varint,1,opt,name=release,proto3,oneof" aper:"choiceIdx:1,"`
}

type SsbToMeasureSsbConfigMobility_Setup struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Setup *SsbToMeasure `protobuf:"bytes,2,opt,name=setup,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*SsbToMeasureSsbConfigMobility_Release) isSsbToMeasureSsbConfigMobility_SsbToMeasureSsbConfigMobility() {
}

func (*SsbToMeasureSsbConfigMobility_Setup) isSsbToMeasureSsbConfigMobility_SsbToMeasureSsbConfigMobility() {
}

// sequence from nr-rrc-definitions.asn1:1344
// {SSB-ConfigMobility}
type SsbConfigMobility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsbToMeasure *SsbToMeasureSsbConfigMobility `protobuf:"bytes,1,opt,name=ssb_to_measure,json=ssb-ToMeasure,proto3" json:"ssb_to_measure,omitempty"`
}

func (x *SsbConfigMobility) Reset() {
	*x = SsbConfigMobility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsbConfigMobility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsbConfigMobility) ProtoMessage() {}

func (x *SsbConfigMobility) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsbConfigMobility.ProtoReflect.Descriptor instead.
func (*SsbConfigMobility) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{220}
}

func (x *SsbConfigMobility) GetSsbToMeasure() *SsbToMeasureSsbConfigMobility {
	if x != nil {
		return x.SsbToMeasure
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1350
// {MeasObjectToAddModList}
type MeasObjectToAddModList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:64,"
	Value []*MeasObjectToAddMod `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:64,"`
}

func (x *MeasObjectToAddModList) Reset() {
	*x = MeasObjectToAddModList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasObjectToAddModList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasObjectToAddModList) ProtoMessage() {}

func (x *MeasObjectToAddModList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasObjectToAddModList.ProtoReflect.Descriptor instead.
func (*MeasObjectToAddModList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{221}
}

func (x *MeasObjectToAddModList) GetValue() []*MeasObjectToAddMod {
	if x != nil {
		return x.Value
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:1353
// @inject_tag: aper:"choiceExt"
// {measObjectMeasObjectToAddMod}
type MeasObjectMeasObjectToAddMod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1353
	//
	// Types that are assignable to MeasObjectMeasObjectToAddMod:
	//	*MeasObjectMeasObjectToAddMod_MeasObjectNr
	MeasObjectMeasObjectToAddMod isMeasObjectMeasObjectToAddMod_MeasObjectMeasObjectToAddMod `protobuf_oneof:"meas_object_meas_object_to_add_mod"`
}

func (x *MeasObjectMeasObjectToAddMod) Reset() {
	*x = MeasObjectMeasObjectToAddMod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasObjectMeasObjectToAddMod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasObjectMeasObjectToAddMod) ProtoMessage() {}

func (x *MeasObjectMeasObjectToAddMod) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasObjectMeasObjectToAddMod.ProtoReflect.Descriptor instead.
func (*MeasObjectMeasObjectToAddMod) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{222}
}

func (m *MeasObjectMeasObjectToAddMod) GetMeasObjectMeasObjectToAddMod() isMeasObjectMeasObjectToAddMod_MeasObjectMeasObjectToAddMod {
	if m != nil {
		return m.MeasObjectMeasObjectToAddMod
	}
	return nil
}

func (x *MeasObjectMeasObjectToAddMod) GetMeasObjectNr() *MeasObjectNr {
	if x, ok := x.GetMeasObjectMeasObjectToAddMod().(*MeasObjectMeasObjectToAddMod_MeasObjectNr); ok {
		return x.MeasObjectNr
	}
	return nil
}

type isMeasObjectMeasObjectToAddMod_MeasObjectMeasObjectToAddMod interface {
	isMeasObjectMeasObjectToAddMod_MeasObjectMeasObjectToAddMod()
}

type MeasObjectMeasObjectToAddMod_MeasObjectNr struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	MeasObjectNr *MeasObjectNr `protobuf:"bytes,1,opt,name=meas_object_nr,json=measObjectNR,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

func (*MeasObjectMeasObjectToAddMod_MeasObjectNr) isMeasObjectMeasObjectToAddMod_MeasObjectMeasObjectToAddMod() {
}

// sequence from nr-rrc-definitions.asn1:1351
// {MeasObjectToAddMod}
type MeasObjectToAddMod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasObjectId *MeasObjectId `protobuf:"bytes,1,opt,name=meas_object_id,json=measObjectId,proto3" json:"meas_object_id,omitempty"`
	// @inject_tag: aper:"choiceExt,"
	MeasObject *MeasObjectMeasObjectToAddMod `protobuf:"bytes,2,opt,name=meas_object,json=measObject,proto3" json:"meas_object,omitempty" aper:"choiceExt,"`
}

func (x *MeasObjectToAddMod) Reset() {
	*x = MeasObjectToAddMod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasObjectToAddMod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasObjectToAddMod) ProtoMessage() {}

func (x *MeasObjectToAddMod) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasObjectToAddMod.ProtoReflect.Descriptor instead.
func (*MeasObjectToAddMod) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{223}
}

func (x *MeasObjectToAddMod) GetMeasObjectId() *MeasObjectId {
	if x != nil {
		return x.MeasObjectId
	}
	return nil
}

func (x *MeasObjectToAddMod) GetMeasObject() *MeasObjectMeasObjectToAddMod {
	if x != nil {
		return x.MeasObject
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1361
// @inject_tag: aper:"valueExt"
// {MeasResults}
type MeasResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasId                  *MeasId               `protobuf:"bytes,1,opt,name=meas_id,json=measId,proto3" json:"meas_id,omitempty"`
	MeasResultServingMolist *MeasResultServMolist `protobuf:"bytes,2,opt,name=meas_result_serving_molist,json=measResultServingMOList,proto3" json:"meas_result_serving_molist,omitempty"`
}

func (x *MeasResults) Reset() {
	*x = MeasResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasResults) ProtoMessage() {}

func (x *MeasResults) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasResults.ProtoReflect.Descriptor instead.
func (*MeasResults) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{224}
}

func (x *MeasResults) GetMeasId() *MeasId {
	if x != nil {
		return x.MeasId
	}
	return nil
}

func (x *MeasResults) GetMeasResultServingMolist() *MeasResultServMolist {
	if x != nil {
		return x.MeasResultServingMolist
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1368
// {MeasResultServMOList}
type MeasResultServMolist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:32,"
	Value []*MeasResultServMo `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:32,"`
}

func (x *MeasResultServMolist) Reset() {
	*x = MeasResultServMolist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasResultServMolist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasResultServMolist) ProtoMessage() {}

func (x *MeasResultServMolist) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasResultServMolist.ProtoReflect.Descriptor instead.
func (*MeasResultServMolist) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{225}
}

func (x *MeasResultServMolist) GetValue() []*MeasResultServMo {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1369
// @inject_tag: aper:"valueExt"
// {MeasResultServMO}
type MeasResultServMo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServCellId *ServCellIndex `protobuf:"bytes,1,opt,name=serv_cell_id,json=servCellId,proto3" json:"serv_cell_id,omitempty"`
	// @inject_tag: aper:"valueExt,"
	MeasResultServingCell *MeasResultNr `protobuf:"bytes,2,opt,name=meas_result_serving_cell,json=measResultServingCell,proto3" json:"meas_result_serving_cell,omitempty" aper:"valueExt,"`
}

func (x *MeasResultServMo) Reset() {
	*x = MeasResultServMo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasResultServMo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasResultServMo) ProtoMessage() {}

func (x *MeasResultServMo) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasResultServMo.ProtoReflect.Descriptor instead.
func (*MeasResultServMo) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{226}
}

func (x *MeasResultServMo) GetServCellId() *ServCellIndex {
	if x != nil {
		return x.ServCellId
	}
	return nil
}

func (x *MeasResultServMo) GetMeasResultServingCell() *MeasResultNr {
	if x != nil {
		return x.MeasResultServingCell
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1378
// {cellResultsmeasResult}
type CellResultsmeasResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	ResultsSsbCell *MeasQuantityResults `protobuf:"bytes,1,opt,name=results_ssb_cell,json=resultsSSB-Cell,proto3,oneof" json:"results_ssb_cell,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	ResultsCsiRsCell *MeasQuantityResults `protobuf:"bytes,2,opt,name=results_csi_rs_cell,json=resultsCSI-RS-Cell,proto3,oneof" json:"results_csi_rs_cell,omitempty" aper:"optional,"`
}

func (x *CellResultsmeasResult) Reset() {
	*x = CellResultsmeasResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellResultsmeasResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellResultsmeasResult) ProtoMessage() {}

func (x *CellResultsmeasResult) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellResultsmeasResult.ProtoReflect.Descriptor instead.
func (*CellResultsmeasResult) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{227}
}

func (x *CellResultsmeasResult) GetResultsSsbCell() *MeasQuantityResults {
	if x != nil {
		return x.ResultsSsbCell
	}
	return nil
}

func (x *CellResultsmeasResult) GetResultsCsiRsCell() *MeasQuantityResults {
	if x != nil {
		return x.ResultsCsiRsCell
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1382
// {rsIndexResultsmeasResult}
type RsIndexResultsmeasResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	ResultsSsbIndexes *ResultsPerSsbIndexList `protobuf:"bytes,1,opt,name=results_ssb_indexes,json=resultsSSB-Indexes,proto3,oneof" json:"results_ssb_indexes,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	ResultsCsiRsIndexes *ResultsPerCsiRSIndexList `protobuf:"bytes,2,opt,name=results_csi_rs_indexes,json=resultsCSI-RS-Indexes,proto3,oneof" json:"results_csi_rs_indexes,omitempty" aper:"optional,"`
}

func (x *RsIndexResultsmeasResult) Reset() {
	*x = RsIndexResultsmeasResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RsIndexResultsmeasResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RsIndexResultsmeasResult) ProtoMessage() {}

func (x *RsIndexResultsmeasResult) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RsIndexResultsmeasResult.ProtoReflect.Descriptor instead.
func (*RsIndexResultsmeasResult) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{228}
}

func (x *RsIndexResultsmeasResult) GetResultsSsbIndexes() *ResultsPerSsbIndexList {
	if x != nil {
		return x.ResultsSsbIndexes
	}
	return nil
}

func (x *RsIndexResultsmeasResult) GetResultsCsiRsIndexes() *ResultsPerCsiRSIndexList {
	if x != nil {
		return x.ResultsCsiRsIndexes
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1380
// {measResultMeasResultNR}
type MeasResultMeasResultNr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellResults *CellResultsmeasResult `protobuf:"bytes,1,opt,name=cell_results,json=cellResults,proto3" json:"cell_results,omitempty"`
	// @inject_tag: aper:"optional,"
	RsIndexResults *RsIndexResultsmeasResult `protobuf:"bytes,2,opt,name=rs_index_results,json=rsIndexResults,proto3,oneof" json:"rs_index_results,omitempty" aper:"optional,"`
}

func (x *MeasResultMeasResultNr) Reset() {
	*x = MeasResultMeasResultNr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasResultMeasResultNr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasResultMeasResultNr) ProtoMessage() {}

func (x *MeasResultMeasResultNr) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasResultMeasResultNr.ProtoReflect.Descriptor instead.
func (*MeasResultMeasResultNr) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{229}
}

func (x *MeasResultMeasResultNr) GetCellResults() *CellResultsmeasResult {
	if x != nil {
		return x.CellResults
	}
	return nil
}

func (x *MeasResultMeasResultNr) GetRsIndexResults() *RsIndexResultsmeasResult {
	if x != nil {
		return x.RsIndexResults
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1375
// @inject_tag: aper:"valueExt"
// {MeasResultNR}
type MeasResultNr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	PhysCellId *PhysCellId             `protobuf:"bytes,1,opt,name=phys_cell_id,json=physCellId,proto3,oneof" json:"phys_cell_id,omitempty" aper:"optional,"`
	MeasResult *MeasResultMeasResultNr `protobuf:"bytes,2,opt,name=meas_result,json=measResult,proto3" json:"meas_result,omitempty"`
}

func (x *MeasResultNr) Reset() {
	*x = MeasResultNr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasResultNr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasResultNr) ProtoMessage() {}

func (x *MeasResultNr) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasResultNr.ProtoReflect.Descriptor instead.
func (*MeasResultNr) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{230}
}

func (x *MeasResultNr) GetPhysCellId() *PhysCellId {
	if x != nil {
		return x.PhysCellId
	}
	return nil
}

func (x *MeasResultNr) GetMeasResult() *MeasResultMeasResultNr {
	if x != nil {
		return x.MeasResult
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1390
// {MeasQuantityResults}
type MeasQuantityResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	Rsrp *RsrpRange `protobuf:"bytes,1,opt,name=rsrp,proto3,oneof" json:"rsrp,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	Rsrq *RsrqRange `protobuf:"bytes,2,opt,name=rsrq,proto3,oneof" json:"rsrq,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	Sinr *SinrRange `protobuf:"bytes,3,opt,name=sinr,proto3,oneof" json:"sinr,omitempty" aper:"optional,"`
}

func (x *MeasQuantityResults) Reset() {
	*x = MeasQuantityResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasQuantityResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasQuantityResults) ProtoMessage() {}

func (x *MeasQuantityResults) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasQuantityResults.ProtoReflect.Descriptor instead.
func (*MeasQuantityResults) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{231}
}

func (x *MeasQuantityResults) GetRsrp() *RsrpRange {
	if x != nil {
		return x.Rsrp
	}
	return nil
}

func (x *MeasQuantityResults) GetRsrq() *RsrqRange {
	if x != nil {
		return x.Rsrq
	}
	return nil
}

func (x *MeasQuantityResults) GetSinr() *SinrRange {
	if x != nil {
		return x.Sinr
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1397
// {ResultsPerSSB-IndexList}
type ResultsPerSsbIndexList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:64,"
	Value []*ResultsPerSsbIndex `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:64,"`
}

func (x *ResultsPerSsbIndexList) Reset() {
	*x = ResultsPerSsbIndexList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultsPerSsbIndexList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsPerSsbIndexList) ProtoMessage() {}

func (x *ResultsPerSsbIndexList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsPerSsbIndexList.ProtoReflect.Descriptor instead.
func (*ResultsPerSsbIndexList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{232}
}

func (x *ResultsPerSsbIndexList) GetValue() []*ResultsPerSsbIndex {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1398
// {ResultsPerSSB-Index}
type ResultsPerSsbIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsbIndex *SsbIndex `protobuf:"bytes,1,opt,name=ssb_index,json=ssb-Index,proto3" json:"ssb_index,omitempty"`
	// @inject_tag: aper:"optional,"
	SsbResults *MeasQuantityResults `protobuf:"bytes,2,opt,name=ssb_results,json=ssb-Results,proto3,oneof" json:"ssb_results,omitempty" aper:"optional,"`
}

func (x *ResultsPerSsbIndex) Reset() {
	*x = ResultsPerSsbIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultsPerSsbIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsPerSsbIndex) ProtoMessage() {}

func (x *ResultsPerSsbIndex) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsPerSsbIndex.ProtoReflect.Descriptor instead.
func (*ResultsPerSsbIndex) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{233}
}

func (x *ResultsPerSsbIndex) GetSsbIndex() *SsbIndex {
	if x != nil {
		return x.SsbIndex
	}
	return nil
}

func (x *ResultsPerSsbIndex) GetSsbResults() *MeasQuantityResults {
	if x != nil {
		return x.SsbResults
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1404
// {ResultsPerCSI-RS-IndexList}
type ResultsPerCsiRSIndexList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:64,"
	Value []*ResultsPerCsiRSIndex `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:64,"`
}

func (x *ResultsPerCsiRSIndexList) Reset() {
	*x = ResultsPerCsiRSIndexList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultsPerCsiRSIndexList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsPerCsiRSIndexList) ProtoMessage() {}

func (x *ResultsPerCsiRSIndexList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsPerCsiRSIndexList.ProtoReflect.Descriptor instead.
func (*ResultsPerCsiRSIndexList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{234}
}

func (x *ResultsPerCsiRSIndexList) GetValue() []*ResultsPerCsiRSIndex {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1405
// {ResultsPerCSI-RS-Index}
type ResultsPerCsiRSIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CsiRsIndex *CsiRSIndex `protobuf:"bytes,1,opt,name=csi_rs_index,json=csi-RS-Index,proto3" json:"csi_rs_index,omitempty"`
	// @inject_tag: aper:"optional,"
	CsiRsResults *MeasQuantityResults `protobuf:"bytes,2,opt,name=csi_rs_results,json=csi-RS-Results,proto3,oneof" json:"csi_rs_results,omitempty" aper:"optional,"`
}

func (x *ResultsPerCsiRSIndex) Reset() {
	*x = ResultsPerCsiRSIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultsPerCsiRSIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsPerCsiRSIndex) ProtoMessage() {}

func (x *ResultsPerCsiRSIndex) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsPerCsiRSIndex.ProtoReflect.Descriptor instead.
func (*ResultsPerCsiRSIndex) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{235}
}

func (x *ResultsPerCsiRSIndex) GetCsiRsIndex() *CsiRSIndex {
	if x != nil {
		return x.CsiRsIndex
	}
	return nil
}

func (x *ResultsPerCsiRSIndex) GetCsiRsResults() *MeasQuantityResults {
	if x != nil {
		return x.CsiRsResults
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1417
// {MultiFrequencyBandListNR}
type MultiFrequencyBandListNr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:8,"
	Value []*FreqBandIndicatorNr `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:8,"`
}

func (x *MultiFrequencyBandListNr) Reset() {
	*x = MultiFrequencyBandListNr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiFrequencyBandListNr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiFrequencyBandListNr) ProtoMessage() {}

func (x *MultiFrequencyBandListNr) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiFrequencyBandListNr.ProtoReflect.Descriptor instead.
func (*MultiFrequencyBandListNr) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{236}
}

func (x *MultiFrequencyBandListNr) GetValue() []*FreqBandIndicatorNr {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1417
// {NextHopChainingCount}
type NextHopChainingCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:7,"`
}

func (x *NextHopChainingCount) Reset() {
	*x = NextHopChainingCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextHopChainingCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextHopChainingCount) ProtoMessage() {}

func (x *NextHopChainingCount) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextHopChainingCount.ProtoReflect.Descriptor instead.
func (*NextHopChainingCount) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{237}
}

func (x *NextHopChainingCount) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1423
// @inject_tag: aper:"valueExt"
// {NZP-CSI-RS-Resource}
type NzpCSiRSResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NzpCsiRsResourceId *NzpCSiRSResourceId `protobuf:"bytes,1,opt,name=nzp_csi_rs_resource_id,json=nzp-CSI-RS-ResourceId,proto3" json:"nzp_csi_rs_resource_id,omitempty"`
	// @inject_tag: aper:"valueExt,"
	ResourceMapping *CsiRSResourceMapping `protobuf:"bytes,2,opt,name=resource_mapping,json=resourceMapping,proto3" json:"resource_mapping,omitempty" aper:"valueExt,"`
	// @inject_tag: aper:"valueLB:-8,valueUB:15,"
	PowerControlOffset int32 `protobuf:"varint,3,opt,name=power_control_offset,json=powerControlOffset,proto3" json:"power_control_offset,omitempty" aper:"valueLB:-8,valueUB:15,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:3,"
	PowerControlOffsetSs *PowerControlOffsetSsnzpcsirsresource `protobuf:"varint,4,opt,name=power_control_offset_ss,json=powerControlOffsetSS,proto3,enum=nr_rrc_definitions.v1.PowerControlOffsetSsnzpcsirsresource,oneof" json:"power_control_offset_ss,omitempty" aper:"optional,valueLB:0,valueUB:3,"`
	ScramblingId         *ScramblingId                         `protobuf:"bytes,5,opt,name=scrambling_id,json=scramblingID,proto3" json:"scrambling_id,omitempty"`
	// @inject_tag: aper:"optional,"
	PeriodicityAndOffset *CsiResourcePeriodicityAndOffset `protobuf:"bytes,6,opt,name=periodicity_and_offset,json=periodicityAndOffset,proto3,oneof" json:"periodicity_and_offset,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	QclInfoPeriodicCsiRs *TciStateId `protobuf:"bytes,7,opt,name=qcl_info_periodic_csi_rs,json=qcl-InfoPeriodicCSI-RS,proto3,oneof" json:"qcl_info_periodic_csi_rs,omitempty" aper:"optional,"`
}

func (x *NzpCSiRSResource) Reset() {
	*x = NzpCSiRSResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NzpCSiRSResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NzpCSiRSResource) ProtoMessage() {}

func (x *NzpCSiRSResource) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NzpCSiRSResource.ProtoReflect.Descriptor instead.
func (*NzpCSiRSResource) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{238}
}

func (x *NzpCSiRSResource) GetNzpCsiRsResourceId() *NzpCSiRSResourceId {
	if x != nil {
		return x.NzpCsiRsResourceId
	}
	return nil
}

func (x *NzpCSiRSResource) GetResourceMapping() *CsiRSResourceMapping {
	if x != nil {
		return x.ResourceMapping
	}
	return nil
}

func (x *NzpCSiRSResource) GetPowerControlOffset() int32 {
	if x != nil {
		return x.PowerControlOffset
	}
	return 0
}

func (x *NzpCSiRSResource) GetPowerControlOffsetSs() PowerControlOffsetSsnzpcsirsresource {
	if x != nil && x.PowerControlOffsetSs != nil {
		return *x.PowerControlOffsetSs
	}
	return PowerControlOffsetSsnzpcsirsresource_POWER_CONTROL_OFFSET_SSNZPCSIRSRESOURCE_DBM3
}

func (x *NzpCSiRSResource) GetScramblingId() *ScramblingId {
	if x != nil {
		return x.ScramblingId
	}
	return nil
}

func (x *NzpCSiRSResource) GetPeriodicityAndOffset() *CsiResourcePeriodicityAndOffset {
	if x != nil {
		return x.PeriodicityAndOffset
	}
	return nil
}

func (x *NzpCSiRSResource) GetQclInfoPeriodicCsiRs() *TciStateId {
	if x != nil {
		return x.QclInfoPeriodicCsiRs
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1436
// {NZP-CSI-RS-ResourceId}
type NzpCSiRSResourceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:191,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:191,"`
}

func (x *NzpCSiRSResourceId) Reset() {
	*x = NzpCSiRSResourceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NzpCSiRSResourceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NzpCSiRSResourceId) ProtoMessage() {}

func (x *NzpCSiRSResourceId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NzpCSiRSResourceId.ProtoReflect.Descriptor instead.
func (*NzpCSiRSResourceId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{239}
}

func (x *NzpCSiRSResourceId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1442
// @inject_tag: aper:"valueExt"
// {NZP-CSI-RS-ResourceSet}
type NzpCSiRSResourceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NzpCsiResourceSetId *NzpCSiRSResourceSetId `protobuf:"bytes,1,opt,name=nzp_csi_resource_set_id,json=nzp-CSI-ResourceSetId,proto3" json:"nzp_csi_resource_set_id,omitempty"`
	// @inject_tag: aper:"sizeLB:1,sizeUB:64,"
	NzpCsiRsResources []*NzpCSiRSResourceId `protobuf:"bytes,2,rep,name=nzp_csi_rs_resources,json=nzp-CSI-RS-Resources,proto3" json:"nzp_csi_rs_resources,omitempty" aper:"sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,"
	Repetition *RepetitionNzpcsirsresourceSet `protobuf:"varint,3,opt,name=repetition,proto3,enum=nr_rrc_definitions.v1.RepetitionNzpcsirsresourceSet,oneof" json:"repetition,omitempty" aper:"optional,valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:6,"
	AperiodicTriggeringOffset *int32 `protobuf:"varint,4,opt,name=aperiodic_triggering_offset,json=aperiodicTriggeringOffset,proto3,oneof" json:"aperiodic_triggering_offset,omitempty" aper:"optional,valueLB:0,valueUB:6,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:0,"
	TrsInfo *TrsInfoNzpcsirsresourceSet `protobuf:"varint,5,opt,name=trs_info,json=trs-Info,proto3,enum=nr_rrc_definitions.v1.TrsInfoNzpcsirsresourceSet,oneof" json:"trs_info,omitempty" aper:"optional,valueLB:0,valueUB:0,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:31,fromValueExt,"
	AperiodicTriggeringOffsetR16 *int32 `protobuf:"varint,6,opt,name=aperiodic_triggering_offset_r16,json=aperiodicTriggeringOffset-r16,proto3,oneof" json:"aperiodic_triggering_offset_r16,omitempty" aper:"optional,valueLB:0,valueUB:31,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:0,fromValueExt,"
	PdcInfoR17 *PdcInfor17NzpcsirsresourceSet `protobuf:"varint,7,opt,name=pdc_info_r17,json=pdc-Info-r17,proto3,enum=nr_rrc_definitions.v1.PdcInfor17NzpcsirsresourceSet,oneof" json:"pdc_info_r17,omitempty" aper:"optional,valueLB:0,valueUB:0,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	CmrGroupingAndPairingR17 *CmrgroupingAndPairingr17 `protobuf:"bytes,8,opt,name=cmr_grouping_and_pairing_r17,json=cmrGroupingAndPairing-r17,proto3,oneof" json:"cmr_grouping_and_pairing_r17,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:124,fromValueExt,"
	AperiodicTriggeringOffsetR17 *int32 `protobuf:"varint,9,opt,name=aperiodic_triggering_offset_r17,json=aperiodicTriggeringOffset-r17,proto3,oneof" json:"aperiodic_triggering_offset_r17,omitempty" aper:"optional,valueLB:0,valueUB:124,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:31,fromValueExt,"
	AperiodicTriggeringOffsetL2R17 *int32 `protobuf:"varint,10,opt,name=aperiodic_triggering_offset_l2_r17,json=aperiodicTriggeringOffsetL2-r17,proto3,oneof" json:"aperiodic_triggering_offset_l2_r17,omitempty" aper:"optional,valueLB:0,valueUB:31,fromValueExt,"`
}

func (x *NzpCSiRSResourceSet) Reset() {
	*x = NzpCSiRSResourceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NzpCSiRSResourceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NzpCSiRSResourceSet) ProtoMessage() {}

func (x *NzpCSiRSResourceSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NzpCSiRSResourceSet.ProtoReflect.Descriptor instead.
func (*NzpCSiRSResourceSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{240}
}

func (x *NzpCSiRSResourceSet) GetNzpCsiResourceSetId() *NzpCSiRSResourceSetId {
	if x != nil {
		return x.NzpCsiResourceSetId
	}
	return nil
}

func (x *NzpCSiRSResourceSet) GetNzpCsiRsResources() []*NzpCSiRSResourceId {
	if x != nil {
		return x.NzpCsiRsResources
	}
	return nil
}

func (x *NzpCSiRSResourceSet) GetRepetition() RepetitionNzpcsirsresourceSet {
	if x != nil && x.Repetition != nil {
		return *x.Repetition
	}
	return RepetitionNzpcsirsresourceSet_REPETITION_NZPCSIRSRESOURCE_SET_ON
}

func (x *NzpCSiRSResourceSet) GetAperiodicTriggeringOffset() int32 {
	if x != nil && x.AperiodicTriggeringOffset != nil {
		return *x.AperiodicTriggeringOffset
	}
	return 0
}

func (x *NzpCSiRSResourceSet) GetTrsInfo() TrsInfoNzpcsirsresourceSet {
	if x != nil && x.TrsInfo != nil {
		return *x.TrsInfo
	}
	return TrsInfoNzpcsirsresourceSet_TRS_INFO_NZPCSIRSRESOURCE_SET_TRUE
}

func (x *NzpCSiRSResourceSet) GetAperiodicTriggeringOffsetR16() int32 {
	if x != nil && x.AperiodicTriggeringOffsetR16 != nil {
		return *x.AperiodicTriggeringOffsetR16
	}
	return 0
}

func (x *NzpCSiRSResourceSet) GetPdcInfoR17() PdcInfor17NzpcsirsresourceSet {
	if x != nil && x.PdcInfoR17 != nil {
		return *x.PdcInfoR17
	}
	return PdcInfor17NzpcsirsresourceSet_PDC_INFOR17_NZPCSIRSRESOURCE_SET_TRUE
}

func (x *NzpCSiRSResourceSet) GetCmrGroupingAndPairingR17() *CmrgroupingAndPairingr17 {
	if x != nil {
		return x.CmrGroupingAndPairingR17
	}
	return nil
}

func (x *NzpCSiRSResourceSet) GetAperiodicTriggeringOffsetR17() int32 {
	if x != nil && x.AperiodicTriggeringOffsetR17 != nil {
		return *x.AperiodicTriggeringOffsetR17
	}
	return 0
}

func (x *NzpCSiRSResourceSet) GetAperiodicTriggeringOffsetL2R17() int32 {
	if x != nil && x.AperiodicTriggeringOffsetL2R17 != nil {
		return *x.AperiodicTriggeringOffsetL2R17
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1460
// {CMRGroupingAndPairing-r17}
type CmrgroupingAndPairingr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:7,"
	NrofResourcesGroup1R17 int32 `protobuf:"varint,1,opt,name=nrof_resources_group1_r17,json=nrofResourcesGroup1-r17,proto3" json:"nrof_resources_group1_r17,omitempty" aper:"valueLB:1,valueUB:7,"`
	// @inject_tag: aper:"optional,"
	Pair1OfNzpCsiRsR17 *NzpCSiRSPairingr17 `protobuf:"bytes,2,opt,name=pair1_of_nzp_csi_rs_r17,json=pair1OfNZP-CSI-RS-r17,proto3,oneof" json:"pair1_of_nzp_csi_rs_r17,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	Pair2OfNzpCsiRsR17 *NzpCSiRSPairingr17 `protobuf:"bytes,3,opt,name=pair2_of_nzp_csi_rs_r17,json=pair2OfNZP-CSI-RS-r17,proto3,oneof" json:"pair2_of_nzp_csi_rs_r17,omitempty" aper:"optional,"`
}

func (x *CmrgroupingAndPairingr17) Reset() {
	*x = CmrgroupingAndPairingr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmrgroupingAndPairingr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmrgroupingAndPairingr17) ProtoMessage() {}

func (x *CmrgroupingAndPairingr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmrgroupingAndPairingr17.ProtoReflect.Descriptor instead.
func (*CmrgroupingAndPairingr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{241}
}

func (x *CmrgroupingAndPairingr17) GetNrofResourcesGroup1R17() int32 {
	if x != nil {
		return x.NrofResourcesGroup1R17
	}
	return 0
}

func (x *CmrgroupingAndPairingr17) GetPair1OfNzpCsiRsR17() *NzpCSiRSPairingr17 {
	if x != nil {
		return x.Pair1OfNzpCsiRsR17
	}
	return nil
}

func (x *CmrgroupingAndPairingr17) GetPair2OfNzpCsiRsR17() *NzpCSiRSPairingr17 {
	if x != nil {
		return x.Pair2OfNzpCsiRsR17
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1466
// {NZP-CSI-RS-Pairing-r17}
type NzpCSiRSPairingr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:7,"
	NzpCsiRsResourceId1R17 int32 `protobuf:"varint,1,opt,name=nzp_csi_rs_resource_id1_r17,json=nzp-CSI-RS-ResourceId1-r17,proto3" json:"nzp_csi_rs_resource_id1_r17,omitempty" aper:"valueLB:1,valueUB:7,"`
	// @inject_tag: aper:"valueLB:1,valueUB:7,"
	NzpCsiRsResourceId2R17 int32 `protobuf:"varint,2,opt,name=nzp_csi_rs_resource_id2_r17,json=nzp-CSI-RS-ResourceId2-r17,proto3" json:"nzp_csi_rs_resource_id2_r17,omitempty" aper:"valueLB:1,valueUB:7,"`
}

func (x *NzpCSiRSPairingr17) Reset() {
	*x = NzpCSiRSPairingr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NzpCSiRSPairingr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NzpCSiRSPairingr17) ProtoMessage() {}

func (x *NzpCSiRSPairingr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NzpCSiRSPairingr17.ProtoReflect.Descriptor instead.
func (*NzpCSiRSPairingr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{242}
}

func (x *NzpCSiRSPairingr17) GetNzpCsiRsResourceId1R17() int32 {
	if x != nil {
		return x.NzpCsiRsResourceId1R17
	}
	return 0
}

func (x *NzpCSiRSPairingr17) GetNzpCsiRsResourceId2R17() int32 {
	if x != nil {
		return x.NzpCsiRsResourceId2R17
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1473
// {NZP-CSI-RS-ResourceSetId}
type NzpCSiRSResourceSetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:63,"`
}

func (x *NzpCSiRSResourceSetId) Reset() {
	*x = NzpCSiRSResourceSetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NzpCSiRSResourceSetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NzpCSiRSResourceSetId) ProtoMessage() {}

func (x *NzpCSiRSResourceSetId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NzpCSiRSResourceSetId.ProtoReflect.Descriptor instead.
func (*NzpCSiRSResourceSetId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{243}
}

func (x *NzpCSiRSResourceSetId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1478
// {P-Max}
type PMax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:-30,valueUB:33,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:-30,valueUB:33,"`
}

func (x *PMax) Reset() {
	*x = PMax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PMax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PMax) ProtoMessage() {}

func (x *PMax) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PMax.ProtoReflect.Descriptor instead.
func (*PMax) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{244}
}

func (x *PMax) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1483
// {PathlossReferenceRS-Id-r17}
type PathlossReferenceRsIdr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:63,"`
}

func (x *PathlossReferenceRsIdr17) Reset() {
	*x = PathlossReferenceRsIdr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathlossReferenceRsIdr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathlossReferenceRsIdr17) ProtoMessage() {}

func (x *PathlossReferenceRsIdr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathlossReferenceRsIdr17.ProtoReflect.Descriptor instead.
func (*PathlossReferenceRsIdr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{245}
}

func (x *PathlossReferenceRsIdr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1489
// {PCI-ARFCN-NR-r16}
type PciARfcnNRr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhysCellIdR16  *PhysCellId   `protobuf:"bytes,1,opt,name=phys_cell_id_r16,json=physCellId-r16,proto3" json:"phys_cell_id_r16,omitempty"`
	CarrierFreqR16 *ArfcnValueNr `protobuf:"bytes,2,opt,name=carrier_freq_r16,json=carrierFreq-r16,proto3" json:"carrier_freq_r16,omitempty"`
}

func (x *PciARfcnNRr16) Reset() {
	*x = PciARfcnNRr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PciARfcnNRr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PciARfcnNRr16) ProtoMessage() {}

func (x *PciARfcnNRr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PciARfcnNRr16.ProtoReflect.Descriptor instead.
func (*PciARfcnNRr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{246}
}

func (x *PciARfcnNRr16) GetPhysCellIdR16() *PhysCellId {
	if x != nil {
		return x.PhysCellIdR16
	}
	return nil
}

func (x *PciARfcnNRr16) GetCarrierFreqR16() *ArfcnValueNr {
	if x != nil {
		return x.CarrierFreqR16
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1501
// {PCI-List}
type PciList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:32,"
	Value []*PhysCellId `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:32,"`
}

func (x *PciList) Reset() {
	*x = PciList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PciList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PciList) ProtoMessage() {}

func (x *PciList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PciList.ProtoReflect.Descriptor instead.
func (*PciList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{247}
}

func (x *PciList) GetValue() []*PhysCellId {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1502
// {PCI-Range}
type PciRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *PhysCellId `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:15,"
	Range *RangePcirange `protobuf:"varint,2,opt,name=range,proto3,enum=nr_rrc_definitions.v1.RangePcirange,oneof" json:"range,omitempty" aper:"optional,valueLB:0,valueUB:15,"`
}

func (x *PciRange) Reset() {
	*x = PciRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PciRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PciRange) ProtoMessage() {}

func (x *PciRange) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PciRange.ProtoReflect.Descriptor instead.
func (*PciRange) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{248}
}

func (x *PciRange) GetStart() *PhysCellId {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *PciRange) GetRange() RangePcirange {
	if x != nil && x.Range != nil {
		return *x.Range
	}
	return RangePcirange_RANGE_PCIRANGE_N4
}

// sequence from nr-rrc-definitions.asn1:1511
// {PCI-RangeElement}
type PciRangeElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PciRangeIndex *PciRangeIndex `protobuf:"bytes,1,opt,name=pci_range_index,json=pci-RangeIndex,proto3" json:"pci_range_index,omitempty"`
	PciRange      *PciRange      `protobuf:"bytes,2,opt,name=pci_range,json=pci-Range,proto3" json:"pci_range,omitempty"`
}

func (x *PciRangeElement) Reset() {
	*x = PciRangeElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PciRangeElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PciRangeElement) ProtoMessage() {}

func (x *PciRangeElement) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PciRangeElement.ProtoReflect.Descriptor instead.
func (*PciRangeElement) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{249}
}

func (x *PciRangeElement) GetPciRangeIndex() *PciRangeIndex {
	if x != nil {
		return x.PciRangeIndex
	}
	return nil
}

func (x *PciRangeElement) GetPciRange() *PciRange {
	if x != nil {
		return x.PciRange
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1518
// {PCI-RangeIndex}
type PciRangeIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:8,"`
}

func (x *PciRangeIndex) Reset() {
	*x = PciRangeIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PciRangeIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PciRangeIndex) ProtoMessage() {}

func (x *PciRangeIndex) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PciRangeIndex.ProtoReflect.Descriptor instead.
func (*PciRangeIndex) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{250}
}

func (x *PciRangeIndex) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1528
// {PCI-RangeIndexList}
type PciRangeIndexList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:8,"
	Value []*PciRangeIndex `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:8,"`
}

func (x *PciRangeIndexList) Reset() {
	*x = PciRangeIndexList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PciRangeIndexList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PciRangeIndexList) ProtoMessage() {}

func (x *PciRangeIndexList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PciRangeIndexList.ProtoReflect.Descriptor instead.
func (*PciRangeIndexList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{251}
}

func (x *PciRangeIndexList) GetValue() []*PciRangeIndex {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1529
// {PDCCH-ConfigCommon}
type PdcchConfigCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PdcchConfigCommon) Reset() {
	*x = PdcchConfigCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdcchConfigCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdcchConfigCommon) ProtoMessage() {}

func (x *PdcchConfigCommon) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdcchConfigCommon.ProtoReflect.Descriptor instead.
func (*PdcchConfigCommon) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{252}
}

// sequence from nr-rrc-definitions.asn1:1535
// {PDCCH-ConfigSIB1}
type PdcchConfigSib1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlResourceSetZero *ControlResourceSetZero `protobuf:"bytes,1,opt,name=control_resource_set_zero,json=controlResourceSetZero,proto3" json:"control_resource_set_zero,omitempty"`
	SearchSpaceZero        *SearchSpaceZero        `protobuf:"bytes,2,opt,name=search_space_zero,json=searchSpaceZero,proto3" json:"search_space_zero,omitempty"`
}

func (x *PdcchConfigSib1) Reset() {
	*x = PdcchConfigSib1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdcchConfigSib1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdcchConfigSib1) ProtoMessage() {}

func (x *PdcchConfigSib1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdcchConfigSib1.ProtoReflect.Descriptor instead.
func (*PdcchConfigSib1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{253}
}

func (x *PdcchConfigSib1) GetControlResourceSetZero() *ControlResourceSetZero {
	if x != nil {
		return x.ControlResourceSetZero
	}
	return nil
}

func (x *PdcchConfigSib1) GetSearchSpaceZero() *SearchSpaceZero {
	if x != nil {
		return x.SearchSpaceZero
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1549
// {explicitlistdl-OrJointTCI-StateList-r17}
type ExplicitlistdlOrJointTciStateListr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:128,"
	DlOrJointTciStateToAddModListR17 []*TciState `protobuf:"bytes,1,rep,name=dl_or_joint_tci_state_to_add_mod_list_r17,json=dl-OrJointTCI-StateToAddModList-r17,proto3" json:"dl_or_joint_tci_state_to_add_mod_list_r17,omitempty" aper:"optional,sizeLB:1,sizeUB:128,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:128,"
	DlOrJointTciStateToReleaseListR17 []*TciStateId `protobuf:"bytes,2,rep,name=dl_or_joint_tci_state_to_release_list_r17,json=dl-OrJointTCI-StateToReleaseList-r17,proto3" json:"dl_or_joint_tci_state_to_release_list_r17,omitempty" aper:"optional,sizeLB:1,sizeUB:128,"`
}

func (x *ExplicitlistdlOrJointTciStateListr17) Reset() {
	*x = ExplicitlistdlOrJointTciStateListr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExplicitlistdlOrJointTciStateListr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplicitlistdlOrJointTciStateListr17) ProtoMessage() {}

func (x *ExplicitlistdlOrJointTciStateListr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplicitlistdlOrJointTciStateListr17.ProtoReflect.Descriptor instead.
func (*ExplicitlistdlOrJointTciStateListr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{254}
}

func (x *ExplicitlistdlOrJointTciStateListr17) GetDlOrJointTciStateToAddModListR17() []*TciState {
	if x != nil {
		return x.DlOrJointTciStateToAddModListR17
	}
	return nil
}

func (x *ExplicitlistdlOrJointTciStateListr17) GetDlOrJointTciStateToReleaseListR17() []*TciStateId {
	if x != nil {
		return x.DlOrJointTciStateToReleaseListR17
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:1552
// {dl-OrJointTCI-StateList-r17PDSCH-Config}
type DlOrJointTciStateListr17PdschConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1552
	//
	// Types that are assignable to DlOrJointTciStateListR17PdschConfig:
	//	*DlOrJointTciStateListr17PdschConfig_Explicitlist
	//	*DlOrJointTciStateListr17PdschConfig_UnifiedTciStateRefR17
	DlOrJointTciStateListR17PdschConfig isDlOrJointTciStateListr17PdschConfig_DlOrJointTciStateListR17PdschConfig `protobuf_oneof:"dl_or_joint_tci_state_list_r17_pdsch_config"`
}

func (x *DlOrJointTciStateListr17PdschConfig) Reset() {
	*x = DlOrJointTciStateListr17PdschConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DlOrJointTciStateListr17PdschConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DlOrJointTciStateListr17PdschConfig) ProtoMessage() {}

func (x *DlOrJointTciStateListr17PdschConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DlOrJointTciStateListr17PdschConfig.ProtoReflect.Descriptor instead.
func (*DlOrJointTciStateListr17PdschConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{255}
}

func (m *DlOrJointTciStateListr17PdschConfig) GetDlOrJointTciStateListR17PdschConfig() isDlOrJointTciStateListr17PdschConfig_DlOrJointTciStateListR17PdschConfig {
	if m != nil {
		return m.DlOrJointTciStateListR17PdschConfig
	}
	return nil
}

func (x *DlOrJointTciStateListr17PdschConfig) GetExplicitlist() *ExplicitlistdlOrJointTciStateListr17 {
	if x, ok := x.GetDlOrJointTciStateListR17PdschConfig().(*DlOrJointTciStateListr17PdschConfig_Explicitlist); ok {
		return x.Explicitlist
	}
	return nil
}

func (x *DlOrJointTciStateListr17PdschConfig) GetUnifiedTciStateRefR17() *ServingCellAndBwpIdr17 {
	if x, ok := x.GetDlOrJointTciStateListR17PdschConfig().(*DlOrJointTciStateListr17PdschConfig_UnifiedTciStateRefR17); ok {
		return x.UnifiedTciStateRefR17
	}
	return nil
}

type isDlOrJointTciStateListr17PdschConfig_DlOrJointTciStateListR17PdschConfig interface {
	isDlOrJointTciStateListr17PdschConfig_DlOrJointTciStateListR17PdschConfig()
}

type DlOrJointTciStateListr17PdschConfig_Explicitlist struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Explicitlist *ExplicitlistdlOrJointTciStateListr17 `protobuf:"bytes,1,opt,name=explicitlist,proto3,oneof" aper:"choiceIdx:1,"`
}

type DlOrJointTciStateListr17PdschConfig_UnifiedTciStateRefR17 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	UnifiedTciStateRefR17 *ServingCellAndBwpIdr17 `protobuf:"bytes,2,opt,name=unified_tci_state_ref_r17,json=unifiedTCI-StateRef-r17,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*DlOrJointTciStateListr17PdschConfig_Explicitlist) isDlOrJointTciStateListr17PdschConfig_DlOrJointTciStateListR17PdschConfig() {
}

func (*DlOrJointTciStateListr17PdschConfig_UnifiedTciStateRefR17) isDlOrJointTciStateListr17PdschConfig_DlOrJointTciStateListR17PdschConfig() {
}

// sequence from nr-rrc-definitions.asn1:1543
// @inject_tag: aper:"valueExt"
// {PDSCH-Config}
type PdschConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:128,"
	TciStatesToAddModList []*TciState `protobuf:"bytes,1,rep,name=tci_states_to_add_mod_list,json=tci-StatesToAddModList,proto3" json:"tci_states_to_add_mod_list,omitempty" aper:"optional,sizeLB:1,sizeUB:128,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:128,"
	TciStatesToReleaseList []*TciStateId `protobuf:"bytes,2,rep,name=tci_states_to_release_list,json=tci-StatesToReleaseList,proto3" json:"tci_states_to_release_list,omitempty" aper:"optional,sizeLB:1,sizeUB:128,"`
	// @inject_tag: aper:"optional,"
	DlOrJointTciStateListR17 *DlOrJointTciStateListr17PdschConfig `protobuf:"bytes,3,opt,name=dl_or_joint_tci_state_list_r17,json=dl-OrJointTCI-StateList-r17,proto3,oneof" json:"dl_or_joint_tci_state_list_r17,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:15,"
	BeamAppTimeR17 *BeamAppTimer17Pdschconfig `protobuf:"varint,4,opt,name=beam_app_time_r17,json=beamAppTime-r17,proto3,enum=nr_rrc_definitions.v1.BeamAppTimer17Pdschconfig,oneof" json:"beam_app_time_r17,omitempty" aper:"optional,valueLB:0,valueUB:15,"`
}

func (x *PdschConfig) Reset() {
	*x = PdschConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdschConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdschConfig) ProtoMessage() {}

func (x *PdschConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdschConfig.ProtoReflect.Descriptor instead.
func (*PdschConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{256}
}

func (x *PdschConfig) GetTciStatesToAddModList() []*TciState {
	if x != nil {
		return x.TciStatesToAddModList
	}
	return nil
}

func (x *PdschConfig) GetTciStatesToReleaseList() []*TciStateId {
	if x != nil {
		return x.TciStatesToReleaseList
	}
	return nil
}

func (x *PdschConfig) GetDlOrJointTciStateListR17() *DlOrJointTciStateListr17PdschConfig {
	if x != nil {
		return x.DlOrJointTciStateListR17
	}
	return nil
}

func (x *PdschConfig) GetBeamAppTimeR17() BeamAppTimer17Pdschconfig {
	if x != nil && x.BeamAppTimeR17 != nil {
		return *x.BeamAppTimeR17
	}
	return BeamAppTimer17Pdschconfig_BEAM_APP_TIMER17_PDSCHCONFIG_N1
}

// sequence from nr-rrc-definitions.asn1:1564
// @inject_tag: aper:"valueExt"
// {PDSCH-ConfigCommon}
type PdschConfigCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	PdschTimeDomainAllocationList *PdschTimeDomainResourceAllocationList `protobuf:"bytes,1,opt,name=pdsch_time_domain_allocation_list,json=pdsch-TimeDomainAllocationList,proto3,oneof" json:"pdsch_time_domain_allocation_list,omitempty" aper:"optional,"`
}

func (x *PdschConfigCommon) Reset() {
	*x = PdschConfigCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdschConfigCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdschConfigCommon) ProtoMessage() {}

func (x *PdschConfigCommon) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdschConfigCommon.ProtoReflect.Descriptor instead.
func (*PdschConfigCommon) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{257}
}

func (x *PdschConfigCommon) GetPdschTimeDomainAllocationList() *PdschTimeDomainResourceAllocationList {
	if x != nil {
		return x.PdschTimeDomainAllocationList
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1574
// {PDSCH-TimeDomainResourceAllocationList}
type PdschTimeDomainResourceAllocationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:16,"
	Value []*PdschTimeDomainResourceAllocation `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:16,"`
}

func (x *PdschTimeDomainResourceAllocationList) Reset() {
	*x = PdschTimeDomainResourceAllocationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdschTimeDomainResourceAllocationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdschTimeDomainResourceAllocationList) ProtoMessage() {}

func (x *PdschTimeDomainResourceAllocationList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdschTimeDomainResourceAllocationList.ProtoReflect.Descriptor instead.
func (*PdschTimeDomainResourceAllocationList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{258}
}

func (x *PdschTimeDomainResourceAllocationList) GetValue() []*PdschTimeDomainResourceAllocation {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1575
// {PDSCH-TimeDomainResourceAllocation}
type PdschTimeDomainResourceAllocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:32,"
	K0 *int32 `protobuf:"varint,1,opt,name=k0,proto3,oneof" json:"k0,omitempty" aper:"optional,valueLB:0,valueUB:32,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	MappingType MappingTypePdschtimeDomainResourceAllocation `protobuf:"varint,2,opt,name=mapping_type,json=mappingType,proto3,enum=nr_rrc_definitions.v1.MappingTypePdschtimeDomainResourceAllocation" json:"mapping_type,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"valueLB:0,valueUB:127,"
	StartSymbolAndLength int32 `protobuf:"varint,3,opt,name=start_symbol_and_length,json=startSymbolAndLength,proto3" json:"start_symbol_and_length,omitempty" aper:"valueLB:0,valueUB:127,"`
}

func (x *PdschTimeDomainResourceAllocation) Reset() {
	*x = PdschTimeDomainResourceAllocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdschTimeDomainResourceAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdschTimeDomainResourceAllocation) ProtoMessage() {}

func (x *PdschTimeDomainResourceAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdschTimeDomainResourceAllocation.ProtoReflect.Descriptor instead.
func (*PdschTimeDomainResourceAllocation) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{259}
}

func (x *PdschTimeDomainResourceAllocation) GetK0() int32 {
	if x != nil && x.K0 != nil {
		return *x.K0
	}
	return 0
}

func (x *PdschTimeDomainResourceAllocation) GetMappingType() MappingTypePdschtimeDomainResourceAllocation {
	if x != nil {
		return x.MappingType
	}
	return MappingTypePdschtimeDomainResourceAllocation_MAPPING_TYPE_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATION_TYPE_A
}

func (x *PdschTimeDomainResourceAllocation) GetStartSymbolAndLength() int32 {
	if x != nil {
		return x.StartSymbolAndLength
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1582
// {PDSCH-TimeDomainResourceAllocationList-r16}
type PdschTimeDomainResourceAllocationListr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:16,"
	Value []*PdschTimeDomainResourceAllocationr16 `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:16,"`
}

func (x *PdschTimeDomainResourceAllocationListr16) Reset() {
	*x = PdschTimeDomainResourceAllocationListr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdschTimeDomainResourceAllocationListr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdschTimeDomainResourceAllocationListr16) ProtoMessage() {}

func (x *PdschTimeDomainResourceAllocationListr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdschTimeDomainResourceAllocationListr16.ProtoReflect.Descriptor instead.
func (*PdschTimeDomainResourceAllocationListr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{260}
}

func (x *PdschTimeDomainResourceAllocationListr16) GetValue() []*PdschTimeDomainResourceAllocationr16 {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1583
// @inject_tag: aper:"valueExt"
// {PDSCH-TimeDomainResourceAllocation-r16}
type PdschTimeDomainResourceAllocationr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:32,"
	K0R16 *int32 `protobuf:"varint,1,opt,name=k0_r16,json=k0-r16,proto3,oneof" json:"k0_r16,omitempty" aper:"optional,valueLB:0,valueUB:32,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	MappingTypeR16 MappingTyper16PdschtimeDomainResourceAllocationr16 `protobuf:"varint,2,opt,name=mapping_type_r16,json=mappingType-r16,proto3,enum=nr_rrc_definitions.v1.MappingTyper16PdschtimeDomainResourceAllocationr16" json:"mapping_type_r16,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"valueLB:0,valueUB:127,"
	StartSymbolAndLengthR16 int32 `protobuf:"varint,3,opt,name=start_symbol_and_length_r16,json=startSymbolAndLength-r16,proto3" json:"start_symbol_and_length_r16,omitempty" aper:"valueLB:0,valueUB:127,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:7,"
	RepetitionNumberR16 *RepetitionNumberr16PdschtimeDomainResourceAllocationr16 `protobuf:"varint,4,opt,name=repetition_number_r16,json=repetitionNumber-r16,proto3,enum=nr_rrc_definitions.v1.RepetitionNumberr16PdschtimeDomainResourceAllocationr16,oneof" json:"repetition_number_r16,omitempty" aper:"optional,valueLB:0,valueUB:7,"`
	// @inject_tag: aper:"optional,valueLB:33,valueUB:128,fromValueExt,"
	K0V1710 *int32 `protobuf:"varint,5,opt,name=k0_v1710,json=k0-v1710,proto3,oneof" json:"k0_v1710,omitempty" aper:"optional,valueLB:33,valueUB:128,fromValueExt,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:7,fromValueExt,"
	RepetitionNumberV1730 *RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 `protobuf:"varint,6,opt,name=repetition_number_v1730,json=repetitionNumber-v1730,proto3,enum=nr_rrc_definitions.v1.RepetitionNumberv1730PdschtimeDomainResourceAllocationr16,oneof" json:"repetition_number_v1730,omitempty" aper:"optional,valueLB:0,valueUB:7,fromValueExt,"`
}

func (x *PdschTimeDomainResourceAllocationr16) Reset() {
	*x = PdschTimeDomainResourceAllocationr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdschTimeDomainResourceAllocationr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdschTimeDomainResourceAllocationr16) ProtoMessage() {}

func (x *PdschTimeDomainResourceAllocationr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdschTimeDomainResourceAllocationr16.ProtoReflect.Descriptor instead.
func (*PdschTimeDomainResourceAllocationr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{261}
}

func (x *PdschTimeDomainResourceAllocationr16) GetK0R16() int32 {
	if x != nil && x.K0R16 != nil {
		return *x.K0R16
	}
	return 0
}

func (x *PdschTimeDomainResourceAllocationr16) GetMappingTypeR16() MappingTyper16PdschtimeDomainResourceAllocationr16 {
	if x != nil {
		return x.MappingTypeR16
	}
	return MappingTyper16PdschtimeDomainResourceAllocationr16_MAPPING_TYPER16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_TYPE_A
}

func (x *PdschTimeDomainResourceAllocationr16) GetStartSymbolAndLengthR16() int32 {
	if x != nil {
		return x.StartSymbolAndLengthR16
	}
	return 0
}

func (x *PdschTimeDomainResourceAllocationr16) GetRepetitionNumberR16() RepetitionNumberr16PdschtimeDomainResourceAllocationr16 {
	if x != nil && x.RepetitionNumberR16 != nil {
		return *x.RepetitionNumberR16
	}
	return RepetitionNumberr16PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERR16_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N2
}

func (x *PdschTimeDomainResourceAllocationr16) GetK0V1710() int32 {
	if x != nil && x.K0V1710 != nil {
		return *x.K0V1710
	}
	return 0
}

func (x *PdschTimeDomainResourceAllocationr16) GetRepetitionNumberV1730() RepetitionNumberv1730PdschtimeDomainResourceAllocationr16 {
	if x != nil && x.RepetitionNumberV1730 != nil {
		return *x.RepetitionNumberV1730
	}
	return RepetitionNumberv1730PdschtimeDomainResourceAllocationr16_REPETITION_NUMBERV1730_PDSCHTIME_DOMAIN_RESOURCE_ALLOCATIONR16_N2
}

// sequence from nr-rrc-definitions.asn1:1598
// {Dummy-TDRA-List}
type DummyTDraList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:16,"
	Value []*MultiPdschTDrar17 `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:16,"`
}

func (x *DummyTDraList) Reset() {
	*x = DummyTDraList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DummyTDraList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DummyTDraList) ProtoMessage() {}

func (x *DummyTDraList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DummyTDraList.ProtoReflect.Descriptor instead.
func (*DummyTDraList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{262}
}

func (x *DummyTDraList) GetValue() []*MultiPdschTDrar17 {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1600
// {MultiPDSCH-TDRA-List-r17}
type MultiPdschTDraListr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:64,"
	Value []*MultiPdschTDrar17 `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:64,"`
}

func (x *MultiPdschTDraListr17) Reset() {
	*x = MultiPdschTDraListr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiPdschTDraListr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiPdschTDraListr17) ProtoMessage() {}

func (x *MultiPdschTDraListr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiPdschTDraListr17.ProtoReflect.Descriptor instead.
func (*MultiPdschTDraListr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{263}
}

func (x *MultiPdschTDraListr17) GetValue() []*MultiPdschTDrar17 {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1601
// @inject_tag: aper:"valueExt"
// {MultiPDSCH-TDRA-r17}
type MultiPdschTDrar17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:8,"
	PdschTdraListR17 []*PdschTimeDomainResourceAllocationr16 `protobuf:"bytes,1,rep,name=pdsch_tdra_list_r17,json=pdsch-TDRA-List-r17,proto3" json:"pdsch_tdra_list_r17,omitempty" aper:"sizeLB:1,sizeUB:8,"`
}

func (x *MultiPdschTDrar17) Reset() {
	*x = MultiPdschTDrar17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiPdschTDrar17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiPdschTDrar17) ProtoMessage() {}

func (x *MultiPdschTDrar17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiPdschTDrar17.ProtoReflect.Descriptor instead.
func (*MultiPdschTDrar17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{264}
}

func (x *MultiPdschTDrar17) GetPdschTdraListR17() []*PdschTimeDomainResourceAllocationr16 {
	if x != nil {
		return x.PdschTdraListR17
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1608
// {PhysCellId}
type PhysCellId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1007,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:1007,"`
}

func (x *PhysCellId) Reset() {
	*x = PhysCellId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhysCellId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhysCellId) ProtoMessage() {}

func (x *PhysCellId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhysCellId.ProtoReflect.Descriptor instead.
func (*PhysCellId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{265}
}

func (x *PhysCellId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1612
// {PUCCH-ResourceId}
type PucchResourceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:127,"`
}

func (x *PucchResourceId) Reset() {
	*x = PucchResourceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PucchResourceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PucchResourceId) ProtoMessage() {}

func (x *PucchResourceId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PucchResourceId.ProtoReflect.Descriptor instead.
func (*PucchResourceId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{266}
}

func (x *PucchResourceId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1613
// {P0-PUSCH-AlphaSetId}
type P0PUschAlphaSetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:29,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:29,"`
}

func (x *P0PUschAlphaSetId) Reset() {
	*x = P0PUschAlphaSetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P0PUschAlphaSetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P0PUschAlphaSetId) ProtoMessage() {}

func (x *P0PUschAlphaSetId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P0PUschAlphaSetId.ProtoReflect.Descriptor instead.
func (*P0PUschAlphaSetId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{267}
}

func (x *P0PUschAlphaSetId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1618
// @inject_tag: aper:"valueExt"
// {QuantityConfig}
type QuantityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:2,"
	QuantityConfigNrList []*QuantityConfigNr `protobuf:"bytes,1,rep,name=quantity_config_nr_list,json=quantityConfigNR-List,proto3" json:"quantity_config_nr_list,omitempty" aper:"optional,sizeLB:1,sizeUB:2,"`
}

func (x *QuantityConfig) Reset() {
	*x = QuantityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuantityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantityConfig) ProtoMessage() {}

func (x *QuantityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantityConfig.ProtoReflect.Descriptor instead.
func (*QuantityConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{268}
}

func (x *QuantityConfig) GetQuantityConfigNrList() []*QuantityConfigNr {
	if x != nil {
		return x.QuantityConfigNrList
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1622
// {QuantityConfigNR}
type QuantityConfigNr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuantityConfigCell *QuantityConfigRs `protobuf:"bytes,1,opt,name=quantity_config_cell,json=quantityConfigCell,proto3" json:"quantity_config_cell,omitempty"`
	// @inject_tag: aper:"optional,"
	QuantityConfigRsIndex *QuantityConfigRs `protobuf:"bytes,2,opt,name=quantity_config_rs_index,json=quantityConfigRS-Index,proto3,oneof" json:"quantity_config_rs_index,omitempty" aper:"optional,"`
}

func (x *QuantityConfigNr) Reset() {
	*x = QuantityConfigNr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuantityConfigNr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantityConfigNr) ProtoMessage() {}

func (x *QuantityConfigNr) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantityConfigNr.ProtoReflect.Descriptor instead.
func (*QuantityConfigNr) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{269}
}

func (x *QuantityConfigNr) GetQuantityConfigCell() *QuantityConfigRs {
	if x != nil {
		return x.QuantityConfigCell
	}
	return nil
}

func (x *QuantityConfigNr) GetQuantityConfigRsIndex() *QuantityConfigRs {
	if x != nil {
		return x.QuantityConfigRsIndex
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1626
// {QuantityConfigRS}
type QuantityConfigRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsbFilterConfig   *FilterConfig `protobuf:"bytes,1,opt,name=ssb_filter_config,json=ssb-FilterConfig,proto3" json:"ssb_filter_config,omitempty"`
	CsiRsFilterConfig *FilterConfig `protobuf:"bytes,2,opt,name=csi_rs_filter_config,json=csi-RS-FilterConfig,proto3" json:"csi_rs_filter_config,omitempty"`
}

func (x *QuantityConfigRs) Reset() {
	*x = QuantityConfigRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuantityConfigRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantityConfigRs) ProtoMessage() {}

func (x *QuantityConfigRs) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantityConfigRs.ProtoReflect.Descriptor instead.
func (*QuantityConfigRs) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{270}
}

func (x *QuantityConfigRs) GetSsbFilterConfig() *FilterConfig {
	if x != nil {
		return x.SsbFilterConfig
	}
	return nil
}

func (x *QuantityConfigRs) GetCsiRsFilterConfig() *FilterConfig {
	if x != nil {
		return x.CsiRsFilterConfig
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1630
// {FilterConfig}
type FilterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:15,"
	FilterCoefficientRsrp FilterCoefficient `protobuf:"varint,1,opt,name=filter_coefficient_rsrp,json=filterCoefficientRSRP,proto3,enum=nr_rrc_definitions.v1.FilterCoefficient" json:"filter_coefficient_rsrp,omitempty" aper:"valueExt,valueLB:0,valueUB:15,"`
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:15,"
	FilterCoefficientRsrq FilterCoefficient `protobuf:"varint,2,opt,name=filter_coefficient_rsrq,json=filterCoefficientRSRQ,proto3,enum=nr_rrc_definitions.v1.FilterCoefficient" json:"filter_coefficient_rsrq,omitempty" aper:"valueExt,valueLB:0,valueUB:15,"`
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:15,"
	FilterCoefficientRsSinr FilterCoefficient `protobuf:"varint,3,opt,name=filter_coefficient_rs_sinr,json=filterCoefficientRS-SINR,proto3,enum=nr_rrc_definitions.v1.FilterCoefficient" json:"filter_coefficient_rs_sinr,omitempty" aper:"valueExt,valueLB:0,valueUB:15,"`
}

func (x *FilterConfig) Reset() {
	*x = FilterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterConfig) ProtoMessage() {}

func (x *FilterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterConfig.ProtoReflect.Descriptor instead.
func (*FilterConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{271}
}

func (x *FilterConfig) GetFilterCoefficientRsrp() FilterCoefficient {
	if x != nil {
		return x.FilterCoefficientRsrp
	}
	return FilterCoefficient_FILTER_COEFFICIENT_FC0
}

func (x *FilterConfig) GetFilterCoefficientRsrq() FilterCoefficient {
	if x != nil {
		return x.FilterCoefficientRsrq
	}
	return FilterCoefficient_FILTER_COEFFICIENT_FC0
}

func (x *FilterConfig) GetFilterCoefficientRsSinr() FilterCoefficient {
	if x != nil {
		return x.FilterCoefficientRsSinr
	}
	return FilterCoefficient_FILTER_COEFFICIENT_FC0
}

// range of Integer from nr-rrc-definitions.asn1:1637
// {ReportConfigId}
type ReportConfigId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:64,"`
}

func (x *ReportConfigId) Reset() {
	*x = ReportConfigId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportConfigId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportConfigId) ProtoMessage() {}

func (x *ReportConfigId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportConfigId.ProtoReflect.Descriptor instead.
func (*ReportConfigId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{272}
}

func (x *ReportConfigId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:1643
// @inject_tag: aper:"choiceExt"
// {reportTypeReportConfigNR}
type ReportTypeReportConfigNr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1643
	//
	// Types that are assignable to ReportTypeReportConfigNr:
	//	*ReportTypeReportConfigNr_Periodical
	ReportTypeReportConfigNr isReportTypeReportConfigNr_ReportTypeReportConfigNr `protobuf_oneof:"report_type_report_config_nr"`
}

func (x *ReportTypeReportConfigNr) Reset() {
	*x = ReportTypeReportConfigNr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportTypeReportConfigNr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportTypeReportConfigNr) ProtoMessage() {}

func (x *ReportTypeReportConfigNr) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportTypeReportConfigNr.ProtoReflect.Descriptor instead.
func (*ReportTypeReportConfigNr) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{273}
}

func (m *ReportTypeReportConfigNr) GetReportTypeReportConfigNr() isReportTypeReportConfigNr_ReportTypeReportConfigNr {
	if m != nil {
		return m.ReportTypeReportConfigNr
	}
	return nil
}

func (x *ReportTypeReportConfigNr) GetPeriodical() *PeriodicalReportConfig {
	if x, ok := x.GetReportTypeReportConfigNr().(*ReportTypeReportConfigNr_Periodical); ok {
		return x.Periodical
	}
	return nil
}

type isReportTypeReportConfigNr_ReportTypeReportConfigNr interface {
	isReportTypeReportConfigNr_ReportTypeReportConfigNr()
}

type ReportTypeReportConfigNr_Periodical struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	Periodical *PeriodicalReportConfig `protobuf:"bytes,1,opt,name=periodical,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

func (*ReportTypeReportConfigNr_Periodical) isReportTypeReportConfigNr_ReportTypeReportConfigNr() {}

// sequence from nr-rrc-definitions.asn1:1646
// {ReportConfigNR}
type ReportConfigNr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt,"
	ReportType *ReportTypeReportConfigNr `protobuf:"bytes,1,opt,name=report_type,json=reportType,proto3" json:"report_type,omitempty" aper:"choiceExt,"`
}

func (x *ReportConfigNr) Reset() {
	*x = ReportConfigNr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportConfigNr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportConfigNr) ProtoMessage() {}

func (x *ReportConfigNr) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportConfigNr.ProtoReflect.Descriptor instead.
func (*ReportConfigNr) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{274}
}

func (x *ReportConfigNr) GetReportType() *ReportTypeReportConfigNr {
	if x != nil {
		return x.ReportType
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1648
// @inject_tag: aper:"valueExt"
// {PeriodicalReportConfig}
type PeriodicalReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	RsType NrRSType `protobuf:"varint,1,opt,name=rs_type,json=rsType,proto3,enum=nr_rrc_definitions.v1.NrRSType" json:"rs_type,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"valueLB:0,valueUB:13,"
	ReportInterval     ReportInterval      `protobuf:"varint,2,opt,name=report_interval,json=reportInterval,proto3,enum=nr_rrc_definitions.v1.ReportInterval" json:"report_interval,omitempty" aper:"valueLB:0,valueUB:13,"`
	ReportQuantityCell *MeasReportQuantity `protobuf:"bytes,3,opt,name=report_quantity_cell,json=reportQuantityCell,proto3" json:"report_quantity_cell,omitempty"`
	// @inject_tag: aper:"valueLB:1,valueUB:8,"
	MaxReportCells int32 `protobuf:"varint,4,opt,name=max_report_cells,json=maxReportCells,proto3" json:"max_report_cells,omitempty" aper:"valueLB:1,valueUB:8,"`
	// @inject_tag: aper:"optional,"
	ReportQuantityRsIndexes *MeasReportQuantity `protobuf:"bytes,5,opt,name=report_quantity_rs_indexes,json=reportQuantityRS-Indexes,proto3,oneof" json:"report_quantity_rs_indexes,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueLB:1,valueUB:32,"
	MaxNrofRsIndexesToReport *int32 `protobuf:"varint,6,opt,name=max_nrof_rs_indexes_to_report,json=maxNrofRS-IndexesToReport,proto3,oneof" json:"max_nrof_rs_indexes_to_report,omitempty" aper:"optional,valueLB:1,valueUB:32,"`
}

func (x *PeriodicalReportConfig) Reset() {
	*x = PeriodicalReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeriodicalReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodicalReportConfig) ProtoMessage() {}

func (x *PeriodicalReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodicalReportConfig.ProtoReflect.Descriptor instead.
func (*PeriodicalReportConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{275}
}

func (x *PeriodicalReportConfig) GetRsType() NrRSType {
	if x != nil {
		return x.RsType
	}
	return NrRSType_NR_RS_TYPE_SSB
}

func (x *PeriodicalReportConfig) GetReportInterval() ReportInterval {
	if x != nil {
		return x.ReportInterval
	}
	return ReportInterval_REPORT_INTERVAL_MS120
}

func (x *PeriodicalReportConfig) GetReportQuantityCell() *MeasReportQuantity {
	if x != nil {
		return x.ReportQuantityCell
	}
	return nil
}

func (x *PeriodicalReportConfig) GetMaxReportCells() int32 {
	if x != nil {
		return x.MaxReportCells
	}
	return 0
}

func (x *PeriodicalReportConfig) GetReportQuantityRsIndexes() *MeasReportQuantity {
	if x != nil {
		return x.ReportQuantityRsIndexes
	}
	return nil
}

func (x *PeriodicalReportConfig) GetMaxNrofRsIndexesToReport() int32 {
	if x != nil && x.MaxNrofRsIndexesToReport != nil {
		return *x.MaxNrofRsIndexesToReport
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1660
// {MeasReportQuantity}
type MeasReportQuantity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rsrp bool `protobuf:"varint,1,opt,name=rsrp,proto3" json:"rsrp,omitempty"`
	Rsrq bool `protobuf:"varint,2,opt,name=rsrq,proto3" json:"rsrq,omitempty"`
	Sinr bool `protobuf:"varint,3,opt,name=sinr,proto3" json:"sinr,omitempty"`
}

func (x *MeasReportQuantity) Reset() {
	*x = MeasReportQuantity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasReportQuantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasReportQuantity) ProtoMessage() {}

func (x *MeasReportQuantity) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasReportQuantity.ProtoReflect.Descriptor instead.
func (*MeasReportQuantity) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{276}
}

func (x *MeasReportQuantity) GetRsrp() bool {
	if x != nil {
		return x.Rsrp
	}
	return false
}

func (x *MeasReportQuantity) GetRsrq() bool {
	if x != nil {
		return x.Rsrq
	}
	return false
}

func (x *MeasReportQuantity) GetSinr() bool {
	if x != nil {
		return x.Sinr
	}
	return false
}

// sequence from nr-rrc-definitions.asn1:1670
// {ReportConfigToAddModList}
type ReportConfigToAddModList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:64,"
	Value []*ReportConfigToAddMod `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:64,"`
}

func (x *ReportConfigToAddModList) Reset() {
	*x = ReportConfigToAddModList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportConfigToAddModList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportConfigToAddModList) ProtoMessage() {}

func (x *ReportConfigToAddModList) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportConfigToAddModList.ProtoReflect.Descriptor instead.
func (*ReportConfigToAddModList) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{277}
}

func (x *ReportConfigToAddModList) GetValue() []*ReportConfigToAddMod {
	if x != nil {
		return x.Value
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:1673
// @inject_tag: aper:"choiceExt"
// {reportConfigReportConfigToAddMod}
type ReportConfigReportConfigToAddMod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1673
	//
	// Types that are assignable to ReportConfigReportConfigToAddMod:
	//	*ReportConfigReportConfigToAddMod_ReportConfigNr
	ReportConfigReportConfigToAddMod isReportConfigReportConfigToAddMod_ReportConfigReportConfigToAddMod `protobuf_oneof:"report_config_report_config_to_add_mod"`
}

func (x *ReportConfigReportConfigToAddMod) Reset() {
	*x = ReportConfigReportConfigToAddMod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportConfigReportConfigToAddMod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportConfigReportConfigToAddMod) ProtoMessage() {}

func (x *ReportConfigReportConfigToAddMod) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportConfigReportConfigToAddMod.ProtoReflect.Descriptor instead.
func (*ReportConfigReportConfigToAddMod) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{278}
}

func (m *ReportConfigReportConfigToAddMod) GetReportConfigReportConfigToAddMod() isReportConfigReportConfigToAddMod_ReportConfigReportConfigToAddMod {
	if m != nil {
		return m.ReportConfigReportConfigToAddMod
	}
	return nil
}

func (x *ReportConfigReportConfigToAddMod) GetReportConfigNr() *ReportConfigNr {
	if x, ok := x.GetReportConfigReportConfigToAddMod().(*ReportConfigReportConfigToAddMod_ReportConfigNr); ok {
		return x.ReportConfigNr
	}
	return nil
}

type isReportConfigReportConfigToAddMod_ReportConfigReportConfigToAddMod interface {
	isReportConfigReportConfigToAddMod_ReportConfigReportConfigToAddMod()
}

type ReportConfigReportConfigToAddMod_ReportConfigNr struct {
	// @inject_tag: aper:"choiceIdx:1,"
	ReportConfigNr *ReportConfigNr `protobuf:"bytes,1,opt,name=report_config_nr,json=reportConfigNR,proto3,oneof" aper:"choiceIdx:1,"`
}

func (*ReportConfigReportConfigToAddMod_ReportConfigNr) isReportConfigReportConfigToAddMod_ReportConfigReportConfigToAddMod() {
}

// sequence from nr-rrc-definitions.asn1:1671
// {ReportConfigToAddMod}
type ReportConfigToAddMod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportConfigId *ReportConfigId `protobuf:"bytes,1,opt,name=report_config_id,json=reportConfigId,proto3" json:"report_config_id,omitempty"`
	// @inject_tag: aper:"choiceExt,"
	ReportConfig *ReportConfigReportConfigToAddMod `protobuf:"bytes,2,opt,name=report_config,json=reportConfig,proto3" json:"report_config,omitempty" aper:"choiceExt,"`
}

func (x *ReportConfigToAddMod) Reset() {
	*x = ReportConfigToAddMod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportConfigToAddMod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportConfigToAddMod) ProtoMessage() {}

func (x *ReportConfigToAddMod) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportConfigToAddMod.ProtoReflect.Descriptor instead.
func (*ReportConfigToAddMod) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{279}
}

func (x *ReportConfigToAddMod) GetReportConfigId() *ReportConfigId {
	if x != nil {
		return x.ReportConfigId
	}
	return nil
}

func (x *ReportConfigToAddMod) GetReportConfig() *ReportConfigReportConfigToAddMod {
	if x != nil {
		return x.ReportConfig
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1686
// {RSRP-Range}
type RsrpRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:127,"`
}

func (x *RsrpRange) Reset() {
	*x = RsrpRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RsrpRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RsrpRange) ProtoMessage() {}

func (x *RsrpRange) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RsrpRange.ProtoReflect.Descriptor instead.
func (*RsrpRange) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{280}
}

func (x *RsrpRange) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1691
// {RSRQ-Range}
type RsrqRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:127,"`
}

func (x *RsrqRange) Reset() {
	*x = RsrqRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RsrqRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RsrqRange) ProtoMessage() {}

func (x *RsrqRange) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RsrqRange.ProtoReflect.Descriptor instead.
func (*RsrqRange) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{281}
}

func (x *RsrqRange) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1697
// @inject_tag: aper:"valueExt"
// {SCellActivationRS-Config-r17}
type ScellActivationRsConfigr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScellActivationRsIdR17 *ScellActivationRsConfigIdr17 `protobuf:"bytes,1,opt,name=scell_activation_rs_id_r17,json=scellActivationRS-Id-r17,proto3" json:"scell_activation_rs_id_r17,omitempty"`
	ResourceSetR17         *NzpCSiRSResourceSetId        `protobuf:"bytes,2,opt,name=resource_set_r17,json=resourceSet-r17,proto3" json:"resource_set_r17,omitempty"`
	// @inject_tag: aper:"optional,valueLB:2,valueUB:31,"
	GapBetweenBurstsR17 *int32      `protobuf:"varint,3,opt,name=gap_between_bursts_r17,json=gapBetweenBursts-r17,proto3,oneof" json:"gap_between_bursts_r17,omitempty" aper:"optional,valueLB:2,valueUB:31,"`
	QclInfoR17          *TciStateId `protobuf:"bytes,4,opt,name=qcl_info_r17,json=qcl-Info-r17,proto3" json:"qcl_info_r17,omitempty"`
}

func (x *ScellActivationRsConfigr17) Reset() {
	*x = ScellActivationRsConfigr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScellActivationRsConfigr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScellActivationRsConfigr17) ProtoMessage() {}

func (x *ScellActivationRsConfigr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScellActivationRsConfigr17.ProtoReflect.Descriptor instead.
func (*ScellActivationRsConfigr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{282}
}

func (x *ScellActivationRsConfigr17) GetScellActivationRsIdR17() *ScellActivationRsConfigIdr17 {
	if x != nil {
		return x.ScellActivationRsIdR17
	}
	return nil
}

func (x *ScellActivationRsConfigr17) GetResourceSetR17() *NzpCSiRSResourceSetId {
	if x != nil {
		return x.ResourceSetR17
	}
	return nil
}

func (x *ScellActivationRsConfigr17) GetGapBetweenBurstsR17() int32 {
	if x != nil && x.GapBetweenBurstsR17 != nil {
		return *x.GapBetweenBurstsR17
	}
	return 0
}

func (x *ScellActivationRsConfigr17) GetQclInfoR17() *TciStateId {
	if x != nil {
		return x.QclInfoR17
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1707
// {SCellActivationRS-ConfigId-r17}
type ScellActivationRsConfigIdr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:255,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:255,"`
}

func (x *ScellActivationRsConfigIdr17) Reset() {
	*x = ScellActivationRsConfigIdr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScellActivationRsConfigIdr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScellActivationRsConfigIdr17) ProtoMessage() {}

func (x *ScellActivationRsConfigIdr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScellActivationRsConfigIdr17.ProtoReflect.Descriptor instead.
func (*ScellActivationRsConfigIdr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{283}
}

func (x *ScellActivationRsConfigIdr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1712
// {ScramblingId}
type ScramblingId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1023,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:1023,"`
}

func (x *ScramblingId) Reset() {
	*x = ScramblingId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScramblingId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScramblingId) ProtoMessage() {}

func (x *ScramblingId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScramblingId.ProtoReflect.Descriptor instead.
func (*ScramblingId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{284}
}

func (x *ScramblingId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1718
// @inject_tag: aper:"valueExt"
// {SCS-SpecificCarrier}
type ScsSpecificCarrier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:2199,"
	OffsetToCarrier int32 `protobuf:"varint,1,opt,name=offset_to_carrier,json=offsetToCarrier,proto3" json:"offset_to_carrier,omitempty" aper:"valueLB:0,valueUB:2199,"`
	// @inject_tag: aper:"valueLB:0,valueUB:7,"
	SubcarrierSpacing SubcarrierSpacing `protobuf:"varint,2,opt,name=subcarrier_spacing,json=subcarrierSpacing,proto3,enum=nr_rrc_definitions.v1.SubcarrierSpacing" json:"subcarrier_spacing,omitempty" aper:"valueLB:0,valueUB:7,"`
	// @inject_tag: aper:"valueLB:1,valueUB:275,"
	CarrierBandwidth int32 `protobuf:"varint,3,opt,name=carrier_bandwidth,json=carrierBandwidth,proto3" json:"carrier_bandwidth,omitempty" aper:"valueLB:1,valueUB:275,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:4095,fromValueExt,"
	TxDirectCurrentLocation *int32 `protobuf:"varint,4,opt,name=tx_direct_current_location,json=txDirectCurrentLocation,proto3,oneof" json:"tx_direct_current_location,omitempty" aper:"optional,valueLB:0,valueUB:4095,fromValueExt,"`
}

func (x *ScsSpecificCarrier) Reset() {
	*x = ScsSpecificCarrier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScsSpecificCarrier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScsSpecificCarrier) ProtoMessage() {}

func (x *ScsSpecificCarrier) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScsSpecificCarrier.ProtoReflect.Descriptor instead.
func (*ScsSpecificCarrier) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{285}
}

func (x *ScsSpecificCarrier) GetOffsetToCarrier() int32 {
	if x != nil {
		return x.OffsetToCarrier
	}
	return 0
}

func (x *ScsSpecificCarrier) GetSubcarrierSpacing() SubcarrierSpacing {
	if x != nil {
		return x.SubcarrierSpacing
	}
	return SubcarrierSpacing_SUBCARRIER_SPACING_K_HZ15
}

func (x *ScsSpecificCarrier) GetCarrierBandwidth() int32 {
	if x != nil {
		return x.CarrierBandwidth
	}
	return 0
}

func (x *ScsSpecificCarrier) GetTxDirectCurrentLocation() int32 {
	if x != nil && x.TxDirectCurrentLocation != nil {
		return *x.TxDirectCurrentLocation
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1730
// {SearchSpaceZero}
type SearchSpaceZero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:15,"`
}

func (x *SearchSpaceZero) Reset() {
	*x = SearchSpaceZero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpaceZero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpaceZero) ProtoMessage() {}

func (x *SearchSpaceZero) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpaceZero.ProtoReflect.Descriptor instead.
func (*SearchSpaceZero) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{286}
}

func (x *SearchSpaceZero) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1736
// {ServingCellAndBWP-Id-r17}
type ServingCellAndBwpIdr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServingcellR17 *ServCellIndex `protobuf:"bytes,1,opt,name=servingcell_r17,json=servingcell-r17,proto3" json:"servingcell_r17,omitempty"`
	BwpR17         *BwpId         `protobuf:"bytes,2,opt,name=bwp_r17,json=bwp-r17,proto3" json:"bwp_r17,omitempty"`
}

func (x *ServingCellAndBwpIdr17) Reset() {
	*x = ServingCellAndBwpIdr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingCellAndBwpIdr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingCellAndBwpIdr17) ProtoMessage() {}

func (x *ServingCellAndBwpIdr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingCellAndBwpIdr17.ProtoReflect.Descriptor instead.
func (*ServingCellAndBwpIdr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{287}
}

func (x *ServingCellAndBwpIdr17) GetServingcellR17() *ServCellIndex {
	if x != nil {
		return x.ServingcellR17
	}
	return nil
}

func (x *ServingCellAndBwpIdr17) GetBwpR17() *BwpId {
	if x != nil {
		return x.BwpR17
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1743
// {ServCellIndex}
type ServCellIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:31,"`
}

func (x *ServCellIndex) Reset() {
	*x = ServCellIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServCellIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServCellIndex) ProtoMessage() {}

func (x *ServCellIndex) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServCellIndex.ProtoReflect.Descriptor instead.
func (*ServCellIndex) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{288}
}

func (x *ServCellIndex) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:1751
// {csi-MeasConfigServingCellConfig}
type CsiMeasConfigServingCellConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1751
	//
	// Types that are assignable to CsiMeasConfigServingCellConfig:
	//	*CsiMeasConfigServingCellConfig_Release
	//	*CsiMeasConfigServingCellConfig_Setup
	CsiMeasConfigServingCellConfig isCsiMeasConfigServingCellConfig_CsiMeasConfigServingCellConfig `protobuf_oneof:"csi_meas_config_serving_cell_config"`
}

func (x *CsiMeasConfigServingCellConfig) Reset() {
	*x = CsiMeasConfigServingCellConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiMeasConfigServingCellConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiMeasConfigServingCellConfig) ProtoMessage() {}

func (x *CsiMeasConfigServingCellConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiMeasConfigServingCellConfig.ProtoReflect.Descriptor instead.
func (*CsiMeasConfigServingCellConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{289}
}

func (m *CsiMeasConfigServingCellConfig) GetCsiMeasConfigServingCellConfig() isCsiMeasConfigServingCellConfig_CsiMeasConfigServingCellConfig {
	if m != nil {
		return m.CsiMeasConfigServingCellConfig
	}
	return nil
}

func (x *CsiMeasConfigServingCellConfig) GetRelease() int32 {
	if x, ok := x.GetCsiMeasConfigServingCellConfig().(*CsiMeasConfigServingCellConfig_Release); ok {
		return x.Release
	}
	return 0
}

func (x *CsiMeasConfigServingCellConfig) GetSetup() *CsiMeasConfig {
	if x, ok := x.GetCsiMeasConfigServingCellConfig().(*CsiMeasConfigServingCellConfig_Setup); ok {
		return x.Setup
	}
	return nil
}

type isCsiMeasConfigServingCellConfig_CsiMeasConfigServingCellConfig interface {
	isCsiMeasConfigServingCellConfig_CsiMeasConfigServingCellConfig()
}

type CsiMeasConfigServingCellConfig_Release struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Release int32 `protobuf:"varint,1,opt,name=release,proto3,oneof" aper:"choiceIdx:1,"`
}

type CsiMeasConfigServingCellConfig_Setup struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,"
	Setup *CsiMeasConfig `protobuf:"bytes,2,opt,name=setup,proto3,oneof" aper:"choiceIdx:2,valueExt,"`
}

func (*CsiMeasConfigServingCellConfig_Release) isCsiMeasConfigServingCellConfig_CsiMeasConfigServingCellConfig() {
}

func (*CsiMeasConfigServingCellConfig_Setup) isCsiMeasConfigServingCellConfig_CsiMeasConfigServingCellConfig() {
}

// sequence from nr-rrc-definitions.asn1:1749
// @inject_tag: aper:"valueExt"
// {ServingCellConfig}
type ServingCellConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	InitialDownlinkBwp *BwpDownlinkDedicated `protobuf:"bytes,1,opt,name=initial_downlink_bwp,json=initialDownlinkBWP,proto3,oneof" json:"initial_downlink_bwp,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	CsiMeasConfig *CsiMeasConfigServingCellConfig `protobuf:"bytes,2,opt,name=csi_meas_config,json=csi-MeasConfig,proto3,oneof" json:"csi_meas_config,omitempty" aper:"optional,"`
}

func (x *ServingCellConfig) Reset() {
	*x = ServingCellConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingCellConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingCellConfig) ProtoMessage() {}

func (x *ServingCellConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingCellConfig.ProtoReflect.Descriptor instead.
func (*ServingCellConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{290}
}

func (x *ServingCellConfig) GetInitialDownlinkBwp() *BwpDownlinkDedicated {
	if x != nil {
		return x.InitialDownlinkBwp
	}
	return nil
}

func (x *ServingCellConfig) GetCsiMeasConfig() *CsiMeasConfigServingCellConfig {
	if x != nil {
		return x.CsiMeasConfig
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1761
// @inject_tag: aper:"valueExt"
// {ServingCellConfigCommon}
type ServingCellConfigCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	PhysCellId *PhysCellId `protobuf:"bytes,1,opt,name=phys_cell_id,json=physCellId,proto3,oneof" json:"phys_cell_id,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueExt,"
	DownlinkConfigCommon *DownlinkConfigCommon `protobuf:"bytes,2,opt,name=downlink_config_common,json=downlinkConfigCommon,proto3,oneof" json:"downlink_config_common,omitempty" aper:"optional,valueExt,"`
}

func (x *ServingCellConfigCommon) Reset() {
	*x = ServingCellConfigCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingCellConfigCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingCellConfigCommon) ProtoMessage() {}

func (x *ServingCellConfigCommon) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingCellConfigCommon.ProtoReflect.Descriptor instead.
func (*ServingCellConfigCommon) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{291}
}

func (x *ServingCellConfigCommon) GetPhysCellId() *PhysCellId {
	if x != nil {
		return x.PhysCellId
	}
	return nil
}

func (x *ServingCellConfigCommon) GetDownlinkConfigCommon() *DownlinkConfigCommon {
	if x != nil {
		return x.DownlinkConfigCommon
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1771
// {ssb-PositionsInBurstServingCellConfigCommonSIB}
type SsbPositionsInBurstServingCellConfigCommonSib struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:8,sizeUB:8,"
	InOneGroup *asn1.BitString `protobuf:"bytes,1,opt,name=in_one_group,json=inOneGroup,proto3" json:"in_one_group,omitempty" aper:"sizeLB:8,sizeUB:8,"`
	// @inject_tag: aper:"optional,sizeLB:8,sizeUB:8,"
	GroupPresence *asn1.BitString `protobuf:"bytes,2,opt,name=group_presence,json=groupPresence,proto3,oneof" json:"group_presence,omitempty" aper:"optional,sizeLB:8,sizeUB:8,"`
}

func (x *SsbPositionsInBurstServingCellConfigCommonSib) Reset() {
	*x = SsbPositionsInBurstServingCellConfigCommonSib{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsbPositionsInBurstServingCellConfigCommonSib) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsbPositionsInBurstServingCellConfigCommonSib) ProtoMessage() {}

func (x *SsbPositionsInBurstServingCellConfigCommonSib) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsbPositionsInBurstServingCellConfigCommonSib.ProtoReflect.Descriptor instead.
func (*SsbPositionsInBurstServingCellConfigCommonSib) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{292}
}

func (x *SsbPositionsInBurstServingCellConfigCommonSib) GetInOneGroup() *asn1.BitString {
	if x != nil {
		return x.InOneGroup
	}
	return nil
}

func (x *SsbPositionsInBurstServingCellConfigCommonSib) GetGroupPresence() *asn1.BitString {
	if x != nil {
		return x.GroupPresence
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1773
// @inject_tag: aper:"valueExt"
// {ServingCellConfigCommonSIB}
type ServingCellConfigCommonSib struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsbPositionsInBurst *SsbPositionsInBurstServingCellConfigCommonSib `protobuf:"bytes,1,opt,name=ssb_positions_in_burst,json=ssb-PositionsInBurst,proto3" json:"ssb_positions_in_burst,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:5,"
	SsbPeriodicityServingCell SsbPeriodicityServingCellServingCellConfigCommonSib `protobuf:"varint,2,opt,name=ssb_periodicity_serving_cell,json=ssb-PeriodicityServingCell,proto3,enum=nr_rrc_definitions.v1.SsbPeriodicityServingCellServingCellConfigCommonSib" json:"ssb_periodicity_serving_cell,omitempty" aper:"valueLB:0,valueUB:5,"`
	// @inject_tag: aper:"valueLB:-60,valueUB:50,"
	SsPbchBlockPower int32 `protobuf:"varint,3,opt,name=ss_pbch_block_power,json=ss-PBCH-BlockPower,proto3" json:"ss_pbch_block_power,omitempty" aper:"valueLB:-60,valueUB:50,"`
}

func (x *ServingCellConfigCommonSib) Reset() {
	*x = ServingCellConfigCommonSib{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[293]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingCellConfigCommonSib) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingCellConfigCommonSib) ProtoMessage() {}

func (x *ServingCellConfigCommonSib) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[293]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingCellConfigCommonSib.ProtoReflect.Descriptor instead.
func (*ServingCellConfigCommonSib) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{293}
}

func (x *ServingCellConfigCommonSib) GetSsbPositionsInBurst() *SsbPositionsInBurstServingCellConfigCommonSib {
	if x != nil {
		return x.SsbPositionsInBurst
	}
	return nil
}

func (x *ServingCellConfigCommonSib) GetSsbPeriodicityServingCell() SsbPeriodicityServingCellServingCellConfigCommonSib {
	if x != nil {
		return x.SsbPeriodicityServingCell
	}
	return SsbPeriodicityServingCellServingCellConfigCommonSib_SSB_PERIODICITY_SERVING_CELL_SERVING_CELL_CONFIG_COMMON_SIB_MS5
}

func (x *ServingCellConfigCommonSib) GetSsPbchBlockPower() int32 {
	if x != nil {
		return x.SsPbchBlockPower
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1782
// {SINR-Range}
type SinrRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:127,"`
}

func (x *SinrRange) Reset() {
	*x = SinrRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[294]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SinrRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinrRange) ProtoMessage() {}

func (x *SinrRange) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[294]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinrRange.ProtoReflect.Descriptor instead.
func (*SinrRange) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{294}
}

func (x *SinrRange) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1787
// {SSB-Index}
type SsbIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:63,"`
}

func (x *SsbIndex) Reset() {
	*x = SsbIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[295]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsbIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsbIndex) ProtoMessage() {}

func (x *SsbIndex) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[295]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsbIndex.ProtoReflect.Descriptor instead.
func (*SsbIndex) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{295}
}

func (x *SsbIndex) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1790
// {AdditionalPCIIndex-r17}
type AdditionalPciindexr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:7,"`
}

func (x *AdditionalPciindexr17) Reset() {
	*x = AdditionalPciindexr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[296]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalPciindexr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalPciindexr17) ProtoMessage() {}

func (x *AdditionalPciindexr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[296]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalPciindexr17.ProtoReflect.Descriptor instead.
func (*AdditionalPciindexr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{296}
}

func (x *AdditionalPciindexr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1794
// {SSB-ToMeasure}
type SsbToMeasure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1794
	//
	// Types that are assignable to SsbToMeasure:
	//	*SsbToMeasure_ShortBitmap
	//	*SsbToMeasure_MediumBitmap
	//	*SsbToMeasure_LongBitmap
	SsbToMeasure isSsbToMeasure_SsbToMeasure `protobuf_oneof:"ssb_to_measure"`
}

func (x *SsbToMeasure) Reset() {
	*x = SsbToMeasure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[297]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsbToMeasure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsbToMeasure) ProtoMessage() {}

func (x *SsbToMeasure) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[297]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsbToMeasure.ProtoReflect.Descriptor instead.
func (*SsbToMeasure) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{297}
}

func (m *SsbToMeasure) GetSsbToMeasure() isSsbToMeasure_SsbToMeasure {
	if m != nil {
		return m.SsbToMeasure
	}
	return nil
}

func (x *SsbToMeasure) GetShortBitmap() *asn1.BitString {
	if x, ok := x.GetSsbToMeasure().(*SsbToMeasure_ShortBitmap); ok {
		return x.ShortBitmap
	}
	return nil
}

func (x *SsbToMeasure) GetMediumBitmap() *asn1.BitString {
	if x, ok := x.GetSsbToMeasure().(*SsbToMeasure_MediumBitmap); ok {
		return x.MediumBitmap
	}
	return nil
}

func (x *SsbToMeasure) GetLongBitmap() *asn1.BitString {
	if x, ok := x.GetSsbToMeasure().(*SsbToMeasure_LongBitmap); ok {
		return x.LongBitmap
	}
	return nil
}

type isSsbToMeasure_SsbToMeasure interface {
	isSsbToMeasure_SsbToMeasure()
}

type SsbToMeasure_ShortBitmap struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:4,sizeUB:4,"
	ShortBitmap *asn1.BitString `protobuf:"bytes,1,opt,name=short_bitmap,json=shortBitmap,proto3,oneof" aper:"choiceIdx:1,sizeLB:4,sizeUB:4,"`
}

type SsbToMeasure_MediumBitmap struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:8,sizeUB:8,"
	MediumBitmap *asn1.BitString `protobuf:"bytes,2,opt,name=medium_bitmap,json=mediumBitmap,proto3,oneof" aper:"choiceIdx:2,sizeLB:8,sizeUB:8,"`
}

type SsbToMeasure_LongBitmap struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:64,sizeUB:64,"
	LongBitmap *asn1.BitString `protobuf:"bytes,3,opt,name=long_bitmap,json=longBitmap,proto3,oneof" aper:"choiceIdx:3,sizeLB:64,sizeUB:64,"`
}

func (*SsbToMeasure_ShortBitmap) isSsbToMeasure_SsbToMeasure() {}

func (*SsbToMeasure_MediumBitmap) isSsbToMeasure_SsbToMeasure() {}

func (*SsbToMeasure_LongBitmap) isSsbToMeasure_SsbToMeasure() {}

// sequence from nr-rrc-definitions.asn1:1808
// @inject_tag: aper:"valueExt"
// {TCI-State}
type TciState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TciStateId *TciStateId `protobuf:"bytes,1,opt,name=tci_state_id,json=tci-StateId,proto3" json:"tci_state_id,omitempty"`
	// @inject_tag: aper:"valueExt,"
	QclType1 *QclInfo `protobuf:"bytes,2,opt,name=qcl_type1,json=qcl-Type1,proto3" json:"qcl_type1,omitempty" aper:"valueExt,"`
	// @inject_tag: aper:"optional,valueExt,"
	QclType2 *QclInfo `protobuf:"bytes,3,opt,name=qcl_type2,json=qcl-Type2,proto3,oneof" json:"qcl_type2,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	AdditionalPciR17 *AdditionalPciindexr17 `protobuf:"bytes,4,opt,name=additional_pci_r17,json=additionalPCI-r17,proto3,oneof" json:"additional_pci_r17,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	PathlossReferenceRsIdR17 *PathlossReferenceRsIdr17 `protobuf:"bytes,5,opt,name=pathloss_reference_rs_id_r17,json=pathlossReferenceRS-Id-r17,proto3,oneof" json:"pathloss_reference_rs_id_r17,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	UlPowerControlR17 *UplinkpowerControlIdr17 `protobuf:"bytes,6,opt,name=ul_power_control_r17,json=ul-powerControl-r17,proto3,oneof" json:"ul_power_control_r17,omitempty" aper:"optional,fromValueExt,"`
}

func (x *TciState) Reset() {
	*x = TciState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[298]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TciState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TciState) ProtoMessage() {}

func (x *TciState) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[298]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TciState.ProtoReflect.Descriptor instead.
func (*TciState) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{298}
}

func (x *TciState) GetTciStateId() *TciStateId {
	if x != nil {
		return x.TciStateId
	}
	return nil
}

func (x *TciState) GetQclType1() *QclInfo {
	if x != nil {
		return x.QclType1
	}
	return nil
}

func (x *TciState) GetQclType2() *QclInfo {
	if x != nil {
		return x.QclType2
	}
	return nil
}

func (x *TciState) GetAdditionalPciR17() *AdditionalPciindexr17 {
	if x != nil {
		return x.AdditionalPciR17
	}
	return nil
}

func (x *TciState) GetPathlossReferenceRsIdR17() *PathlossReferenceRsIdr17 {
	if x != nil {
		return x.PathlossReferenceRsIdR17
	}
	return nil
}

func (x *TciState) GetUlPowerControlR17() *UplinkpowerControlIdr17 {
	if x != nil {
		return x.UlPowerControlR17
	}
	return nil
}

// choice from nr-rrc-definitions.asn1:1824
// {referenceSignalQCL-Info}
type ReferenceSignalQclInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1824
	//
	// Types that are assignable to ReferenceSignalQclInfo:
	//	*ReferenceSignalQclInfo_CsiRs
	//	*ReferenceSignalQclInfo_Ssb
	ReferenceSignalQclInfo isReferenceSignalQclInfo_ReferenceSignalQclInfo `protobuf_oneof:"reference_signal_qcl_info"`
}

func (x *ReferenceSignalQclInfo) Reset() {
	*x = ReferenceSignalQclInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[299]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferenceSignalQclInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceSignalQclInfo) ProtoMessage() {}

func (x *ReferenceSignalQclInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[299]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceSignalQclInfo.ProtoReflect.Descriptor instead.
func (*ReferenceSignalQclInfo) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{299}
}

func (m *ReferenceSignalQclInfo) GetReferenceSignalQclInfo() isReferenceSignalQclInfo_ReferenceSignalQclInfo {
	if m != nil {
		return m.ReferenceSignalQclInfo
	}
	return nil
}

func (x *ReferenceSignalQclInfo) GetCsiRs() *NzpCSiRSResourceId {
	if x, ok := x.GetReferenceSignalQclInfo().(*ReferenceSignalQclInfo_CsiRs); ok {
		return x.CsiRs
	}
	return nil
}

func (x *ReferenceSignalQclInfo) GetSsb() *SsbIndex {
	if x, ok := x.GetReferenceSignalQclInfo().(*ReferenceSignalQclInfo_Ssb); ok {
		return x.Ssb
	}
	return nil
}

type isReferenceSignalQclInfo_ReferenceSignalQclInfo interface {
	isReferenceSignalQclInfo_ReferenceSignalQclInfo()
}

type ReferenceSignalQclInfo_CsiRs struct {
	// @inject_tag: aper:"choiceIdx:1,"
	CsiRs *NzpCSiRSResourceId `protobuf:"bytes,1,opt,name=csi_rs,json=csi-rs,proto3,oneof" aper:"choiceIdx:1,"`
}

type ReferenceSignalQclInfo_Ssb struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Ssb *SsbIndex `protobuf:"bytes,2,opt,name=ssb,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*ReferenceSignalQclInfo_CsiRs) isReferenceSignalQclInfo_ReferenceSignalQclInfo() {}

func (*ReferenceSignalQclInfo_Ssb) isReferenceSignalQclInfo_ReferenceSignalQclInfo() {}

// sequence from nr-rrc-definitions.asn1:1821
// @inject_tag: aper:"valueExt"
// {QCL-Info}
type QclInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	Cell *ServCellIndex `protobuf:"bytes,1,opt,name=cell,proto3,oneof" json:"cell,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	BwpId           *BwpId                  `protobuf:"bytes,2,opt,name=bwp_id,json=bwp-Id,proto3,oneof" json:"bwp_id,omitempty" aper:"optional,"`
	ReferenceSignal *ReferenceSignalQclInfo `protobuf:"bytes,3,opt,name=reference_signal,json=referenceSignal,proto3" json:"reference_signal,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	QclType QclTypeQclinfo `protobuf:"varint,4,opt,name=qcl_type,json=qcl-Type,proto3,enum=nr_rrc_definitions.v1.QclTypeQclinfo" json:"qcl_type,omitempty" aper:"valueLB:0,valueUB:3,"`
}

func (x *QclInfo) Reset() {
	*x = QclInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[300]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QclInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QclInfo) ProtoMessage() {}

func (x *QclInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[300]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QclInfo.ProtoReflect.Descriptor instead.
func (*QclInfo) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{300}
}

func (x *QclInfo) GetCell() *ServCellIndex {
	if x != nil {
		return x.Cell
	}
	return nil
}

func (x *QclInfo) GetBwpId() *BwpId {
	if x != nil {
		return x.BwpId
	}
	return nil
}

func (x *QclInfo) GetReferenceSignal() *ReferenceSignalQclInfo {
	if x != nil {
		return x.ReferenceSignal
	}
	return nil
}

func (x *QclInfo) GetQclType() QclTypeQclinfo {
	if x != nil {
		return x.QclType
	}
	return QclTypeQclinfo_QCL_TYPE_QCLINFO_TYPE_A
}

// range of Integer from nr-rrc-definitions.asn1:1834
// {TCI-StateId}
type TciStateId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:127,"`
}

func (x *TciStateId) Reset() {
	*x = TciStateId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[301]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TciStateId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TciStateId) ProtoMessage() {}

func (x *TciStateId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[301]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TciStateId.ProtoReflect.Descriptor instead.
func (*TciStateId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{301}
}

func (x *TciStateId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1840
// @inject_tag: aper:"valueExt"
// {TDD-UL-DL-ConfigDedicated}
type TddULDLConfigDedicated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:320,"
	SlotSpecificConfigurationsToAddModList []*TddULDLSlotConfig `protobuf:"bytes,1,rep,name=slot_specific_configurations_to_add_mod_list,json=slotSpecificConfigurationsToAddModList,proto3" json:"slot_specific_configurations_to_add_mod_list,omitempty" aper:"optional,sizeLB:1,sizeUB:320,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:320,"
	SlotSpecificConfigurationsToReleaseList []*TddULDLSlotIndex `protobuf:"bytes,2,rep,name=slot_specific_configurations_to_release_list,json=slotSpecificConfigurationsToReleaseList,proto3" json:"slot_specific_configurations_to_release_list,omitempty" aper:"optional,sizeLB:1,sizeUB:320,"`
}

func (x *TddULDLConfigDedicated) Reset() {
	*x = TddULDLConfigDedicated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[302]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TddULDLConfigDedicated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TddULDLConfigDedicated) ProtoMessage() {}

func (x *TddULDLConfigDedicated) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[302]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TddULDLConfigDedicated.ProtoReflect.Descriptor instead.
func (*TddULDLConfigDedicated) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{302}
}

func (x *TddULDLConfigDedicated) GetSlotSpecificConfigurationsToAddModList() []*TddULDLSlotConfig {
	if x != nil {
		return x.SlotSpecificConfigurationsToAddModList
	}
	return nil
}

func (x *TddULDLConfigDedicated) GetSlotSpecificConfigurationsToReleaseList() []*TddULDLSlotIndex {
	if x != nil {
		return x.SlotSpecificConfigurationsToReleaseList
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1846
// @inject_tag: aper:"valueExt"
// {TDD-UL-DL-ConfigDedicated-IAB-MT-r16}
type TddULDLConfigDedicatedIAbMTr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:320,"
	SlotSpecificConfigurationsToAddModListIabMtR16 []*TddULDLSlotConfigIAbMTr16 `protobuf:"bytes,1,rep,name=slot_specific_configurations_to_add_mod_list_iab_mt_r16,json=slotSpecificConfigurationsToAddModList-IAB-MT-r16,proto3" json:"slot_specific_configurations_to_add_mod_list_iab_mt_r16,omitempty" aper:"optional,sizeLB:1,sizeUB:320,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:320,"
	SlotSpecificConfigurationsToReleaseListIabMtR16 []*TddULDLSlotIndex `protobuf:"bytes,2,rep,name=slot_specific_configurations_to_release_list_iab_mt_r16,json=slotSpecificConfigurationsToReleaseList-IAB-MT-r16,proto3" json:"slot_specific_configurations_to_release_list_iab_mt_r16,omitempty" aper:"optional,sizeLB:1,sizeUB:320,"`
}

func (x *TddULDLConfigDedicatedIAbMTr16) Reset() {
	*x = TddULDLConfigDedicatedIAbMTr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[303]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TddULDLConfigDedicatedIAbMTr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TddULDLConfigDedicatedIAbMTr16) ProtoMessage() {}

func (x *TddULDLConfigDedicatedIAbMTr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[303]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TddULDLConfigDedicatedIAbMTr16.ProtoReflect.Descriptor instead.
func (*TddULDLConfigDedicatedIAbMTr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{303}
}

func (x *TddULDLConfigDedicatedIAbMTr16) GetSlotSpecificConfigurationsToAddModListIabMtR16() []*TddULDLSlotConfigIAbMTr16 {
	if x != nil {
		return x.SlotSpecificConfigurationsToAddModListIabMtR16
	}
	return nil
}

func (x *TddULDLConfigDedicatedIAbMTr16) GetSlotSpecificConfigurationsToReleaseListIabMtR16() []*TddULDLSlotIndex {
	if x != nil {
		return x.SlotSpecificConfigurationsToReleaseListIabMtR16
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1857
// {explicitsymbols}
type Explicitsymbols struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:1,valueUB:13,"
	NrofDownlinkSymbols *int32 `protobuf:"varint,1,opt,name=nrof_downlink_symbols,json=nrofDownlinkSymbols,proto3,oneof" json:"nrof_downlink_symbols,omitempty" aper:"optional,valueLB:1,valueUB:13,"`
	// @inject_tag: aper:"optional,valueLB:1,valueUB:13,"
	NrofUplinkSymbols *int32 `protobuf:"varint,2,opt,name=nrof_uplink_symbols,json=nrofUplinkSymbols,proto3,oneof" json:"nrof_uplink_symbols,omitempty" aper:"optional,valueLB:1,valueUB:13,"`
}

func (x *Explicitsymbols) Reset() {
	*x = Explicitsymbols{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[304]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Explicitsymbols) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Explicitsymbols) ProtoMessage() {}

func (x *Explicitsymbols) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[304]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Explicitsymbols.ProtoReflect.Descriptor instead.
func (*Explicitsymbols) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{304}
}

func (x *Explicitsymbols) GetNrofDownlinkSymbols() int32 {
	if x != nil && x.NrofDownlinkSymbols != nil {
		return *x.NrofDownlinkSymbols
	}
	return 0
}

func (x *Explicitsymbols) GetNrofUplinkSymbols() int32 {
	if x != nil && x.NrofUplinkSymbols != nil {
		return *x.NrofUplinkSymbols
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:1854
// {symbolsTDD-UL-DL-SlotConfig}
type SymbolsTddULDLSlotConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1854
	//
	// Types that are assignable to SymbolsTddUlDlSlotConfig:
	//	*SymbolsTddULDLSlotConfig_AllDownlink
	//	*SymbolsTddULDLSlotConfig_AllUplink
	//	*SymbolsTddULDLSlotConfig_Explicit
	SymbolsTddUlDlSlotConfig isSymbolsTddULDLSlotConfig_SymbolsTddUlDlSlotConfig `protobuf_oneof:"symbols_tdd_ul_dl_slot_config"`
}

func (x *SymbolsTddULDLSlotConfig) Reset() {
	*x = SymbolsTddULDLSlotConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[305]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolsTddULDLSlotConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolsTddULDLSlotConfig) ProtoMessage() {}

func (x *SymbolsTddULDLSlotConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[305]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolsTddULDLSlotConfig.ProtoReflect.Descriptor instead.
func (*SymbolsTddULDLSlotConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{305}
}

func (m *SymbolsTddULDLSlotConfig) GetSymbolsTddUlDlSlotConfig() isSymbolsTddULDLSlotConfig_SymbolsTddUlDlSlotConfig {
	if m != nil {
		return m.SymbolsTddUlDlSlotConfig
	}
	return nil
}

func (x *SymbolsTddULDLSlotConfig) GetAllDownlink() int32 {
	if x, ok := x.GetSymbolsTddUlDlSlotConfig().(*SymbolsTddULDLSlotConfig_AllDownlink); ok {
		return x.AllDownlink
	}
	return 0
}

func (x *SymbolsTddULDLSlotConfig) GetAllUplink() int32 {
	if x, ok := x.GetSymbolsTddUlDlSlotConfig().(*SymbolsTddULDLSlotConfig_AllUplink); ok {
		return x.AllUplink
	}
	return 0
}

func (x *SymbolsTddULDLSlotConfig) GetExplicit() *Explicitsymbols {
	if x, ok := x.GetSymbolsTddUlDlSlotConfig().(*SymbolsTddULDLSlotConfig_Explicit); ok {
		return x.Explicit
	}
	return nil
}

type isSymbolsTddULDLSlotConfig_SymbolsTddUlDlSlotConfig interface {
	isSymbolsTddULDLSlotConfig_SymbolsTddUlDlSlotConfig()
}

type SymbolsTddULDLSlotConfig_AllDownlink struct {
	// @inject_tag: aper:"choiceIdx:1,"
	AllDownlink int32 `protobuf:"varint,1,opt,name=all_downlink,json=allDownlink,proto3,oneof" aper:"choiceIdx:1,"`
}

type SymbolsTddULDLSlotConfig_AllUplink struct {
	// @inject_tag: aper:"choiceIdx:2,"
	AllUplink int32 `protobuf:"varint,2,opt,name=all_uplink,json=allUplink,proto3,oneof" aper:"choiceIdx:2,"`
}

type SymbolsTddULDLSlotConfig_Explicit struct {
	// @inject_tag: aper:"choiceIdx:3,"
	Explicit *Explicitsymbols `protobuf:"bytes,3,opt,name=explicit,proto3,oneof" aper:"choiceIdx:3,"`
}

func (*SymbolsTddULDLSlotConfig_AllDownlink) isSymbolsTddULDLSlotConfig_SymbolsTddUlDlSlotConfig() {}

func (*SymbolsTddULDLSlotConfig_AllUplink) isSymbolsTddULDLSlotConfig_SymbolsTddUlDlSlotConfig() {}

func (*SymbolsTddULDLSlotConfig_Explicit) isSymbolsTddULDLSlotConfig_SymbolsTddUlDlSlotConfig() {}

// sequence from nr-rrc-definitions.asn1:1852
// {TDD-UL-DL-SlotConfig}
type TddULDLSlotConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotIndex *TddULDLSlotIndex         `protobuf:"bytes,1,opt,name=slot_index,json=slotIndex,proto3" json:"slot_index,omitempty"`
	Symbols   *SymbolsTddULDLSlotConfig `protobuf:"bytes,2,opt,name=symbols,proto3" json:"symbols,omitempty"`
}

func (x *TddULDLSlotConfig) Reset() {
	*x = TddULDLSlotConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[306]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TddULDLSlotConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TddULDLSlotConfig) ProtoMessage() {}

func (x *TddULDLSlotConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[306]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TddULDLSlotConfig.ProtoReflect.Descriptor instead.
func (*TddULDLSlotConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{306}
}

func (x *TddULDLSlotConfig) GetSlotIndex() *TddULDLSlotIndex {
	if x != nil {
		return x.SlotIndex
	}
	return nil
}

func (x *TddULDLSlotConfig) GetSymbols() *SymbolsTddULDLSlotConfig {
	if x != nil {
		return x.Symbols
	}
	return nil
}

// sequence from nr-rrc-definitions.asn1:1869
// {explicit-r16symbols-IAB-MT-r16}
type Explicitr16SymbolsIAbMTr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:1,valueUB:13,"
	NrofDownlinkSymbolsR16 *int32 `protobuf:"varint,1,opt,name=nrof_downlink_symbols_r16,json=nrofDownlinkSymbols-r16,proto3,oneof" json:"nrof_downlink_symbols_r16,omitempty" aper:"optional,valueLB:1,valueUB:13,"`
	// @inject_tag: aper:"optional,valueLB:1,valueUB:13,"
	NrofUplinkSymbolsR16 *int32 `protobuf:"varint,2,opt,name=nrof_uplink_symbols_r16,json=nrofUplinkSymbols-r16,proto3,oneof" json:"nrof_uplink_symbols_r16,omitempty" aper:"optional,valueLB:1,valueUB:13,"`
}

func (x *Explicitr16SymbolsIAbMTr16) Reset() {
	*x = Explicitr16SymbolsIAbMTr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[307]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Explicitr16SymbolsIAbMTr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Explicitr16SymbolsIAbMTr16) ProtoMessage() {}

func (x *Explicitr16SymbolsIAbMTr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[307]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Explicitr16SymbolsIAbMTr16.ProtoReflect.Descriptor instead.
func (*Explicitr16SymbolsIAbMTr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{307}
}

func (x *Explicitr16SymbolsIAbMTr16) GetNrofDownlinkSymbolsR16() int32 {
	if x != nil && x.NrofDownlinkSymbolsR16 != nil {
		return *x.NrofDownlinkSymbolsR16
	}
	return 0
}

func (x *Explicitr16SymbolsIAbMTr16) GetNrofUplinkSymbolsR16() int32 {
	if x != nil && x.NrofUplinkSymbolsR16 != nil {
		return *x.NrofUplinkSymbolsR16
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1873
// {explicit-IAB-MT-r16symbols-IAB-MT-r16}
type ExplicitIAbMTr16SymbolsIAbMTr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:1,valueUB:13,"
	NrofDownlinkSymbolsR16 *int32 `protobuf:"varint,1,opt,name=nrof_downlink_symbols_r16,json=nrofDownlinkSymbols-r16,proto3,oneof" json:"nrof_downlink_symbols_r16,omitempty" aper:"optional,valueLB:1,valueUB:13,"`
	// @inject_tag: aper:"optional,valueLB:1,valueUB:13,"
	NrofUplinkSymbolsR16 *int32 `protobuf:"varint,2,opt,name=nrof_uplink_symbols_r16,json=nrofUplinkSymbols-r16,proto3,oneof" json:"nrof_uplink_symbols_r16,omitempty" aper:"optional,valueLB:1,valueUB:13,"`
}

func (x *ExplicitIAbMTr16SymbolsIAbMTr16) Reset() {
	*x = ExplicitIAbMTr16SymbolsIAbMTr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[308]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExplicitIAbMTr16SymbolsIAbMTr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplicitIAbMTr16SymbolsIAbMTr16) ProtoMessage() {}

func (x *ExplicitIAbMTr16SymbolsIAbMTr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[308]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplicitIAbMTr16SymbolsIAbMTr16.ProtoReflect.Descriptor instead.
func (*ExplicitIAbMTr16SymbolsIAbMTr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{308}
}

func (x *ExplicitIAbMTr16SymbolsIAbMTr16) GetNrofDownlinkSymbolsR16() int32 {
	if x != nil && x.NrofDownlinkSymbolsR16 != nil {
		return *x.NrofDownlinkSymbolsR16
	}
	return 0
}

func (x *ExplicitIAbMTr16SymbolsIAbMTr16) GetNrofUplinkSymbolsR16() int32 {
	if x != nil && x.NrofUplinkSymbolsR16 != nil {
		return *x.NrofUplinkSymbolsR16
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:1866
// {symbols-IAB-MT-r16TDD-UL-DL-SlotConfig-IAB-MT-r16}
type SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1866
	//
	// Types that are assignable to SymbolsIabMtR16TddUlDlSlotConfigIabMtR16:
	//	*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_AllDownlinkR16
	//	*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_AllUplinkR16
	//	*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_ExplicitR16
	//	*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_ExplicitIabMtR16
	SymbolsIabMtR16TddUlDlSlotConfigIabMtR16 isSymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_SymbolsIabMtR16TddUlDlSlotConfigIabMtR16 `protobuf_oneof:"symbols_iab_mt_r16_tdd_ul_dl_slot_config_iab_mt_r16"`
}

func (x *SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16) Reset() {
	*x = SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[309]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16) ProtoMessage() {}

func (x *SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[309]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16.ProtoReflect.Descriptor instead.
func (*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{309}
}

func (m *SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16) GetSymbolsIabMtR16TddUlDlSlotConfigIabMtR16() isSymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_SymbolsIabMtR16TddUlDlSlotConfigIabMtR16 {
	if m != nil {
		return m.SymbolsIabMtR16TddUlDlSlotConfigIabMtR16
	}
	return nil
}

func (x *SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16) GetAllDownlinkR16() int32 {
	if x, ok := x.GetSymbolsIabMtR16TddUlDlSlotConfigIabMtR16().(*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_AllDownlinkR16); ok {
		return x.AllDownlinkR16
	}
	return 0
}

func (x *SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16) GetAllUplinkR16() int32 {
	if x, ok := x.GetSymbolsIabMtR16TddUlDlSlotConfigIabMtR16().(*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_AllUplinkR16); ok {
		return x.AllUplinkR16
	}
	return 0
}

func (x *SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16) GetExplicitR16() *Explicitr16SymbolsIAbMTr16 {
	if x, ok := x.GetSymbolsIabMtR16TddUlDlSlotConfigIabMtR16().(*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_ExplicitR16); ok {
		return x.ExplicitR16
	}
	return nil
}

func (x *SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16) GetExplicitIabMtR16() *ExplicitIAbMTr16SymbolsIAbMTr16 {
	if x, ok := x.GetSymbolsIabMtR16TddUlDlSlotConfigIabMtR16().(*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_ExplicitIabMtR16); ok {
		return x.ExplicitIabMtR16
	}
	return nil
}

type isSymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_SymbolsIabMtR16TddUlDlSlotConfigIabMtR16 interface {
	isSymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_SymbolsIabMtR16TddUlDlSlotConfigIabMtR16()
}

type SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_AllDownlinkR16 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	AllDownlinkR16 int32 `protobuf:"varint,1,opt,name=all_downlink_r16,json=allDownlink-r16,proto3,oneof" aper:"choiceIdx:1,"`
}

type SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_AllUplinkR16 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	AllUplinkR16 int32 `protobuf:"varint,2,opt,name=all_uplink_r16,json=allUplink-r16,proto3,oneof" aper:"choiceIdx:2,"`
}

type SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_ExplicitR16 struct {
	// @inject_tag: aper:"choiceIdx:3,"
	ExplicitR16 *Explicitr16SymbolsIAbMTr16 `protobuf:"bytes,3,opt,name=explicit_r16,json=explicit-r16,proto3,oneof" aper:"choiceIdx:3,"`
}

type SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_ExplicitIabMtR16 struct {
	// @inject_tag: aper:"choiceIdx:4,"
	ExplicitIabMtR16 *ExplicitIAbMTr16SymbolsIAbMTr16 `protobuf:"bytes,4,opt,name=explicit_iab_mt_r16,json=explicit-IAB-MT-r16,proto3,oneof" aper:"choiceIdx:4,"`
}

func (*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_AllDownlinkR16) isSymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_SymbolsIabMtR16TddUlDlSlotConfigIabMtR16() {
}

func (*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_AllUplinkR16) isSymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_SymbolsIabMtR16TddUlDlSlotConfigIabMtR16() {
}

func (*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_ExplicitR16) isSymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_SymbolsIabMtR16TddUlDlSlotConfigIabMtR16() {
}

func (*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_ExplicitIabMtR16) isSymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_SymbolsIabMtR16TddUlDlSlotConfigIabMtR16() {
}

// sequence from nr-rrc-definitions.asn1:1864
// {TDD-UL-DL-SlotConfig-IAB-MT-r16}
type TddULDLSlotConfigIAbMTr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotIndexR16    *TddULDLSlotIndex                         `protobuf:"bytes,1,opt,name=slot_index_r16,json=slotIndex-r16,proto3" json:"slot_index_r16,omitempty"`
	SymbolsIabMtR16 *SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16 `protobuf:"bytes,2,opt,name=symbols_iab_mt_r16,json=symbols-IAB-MT-r16,proto3" json:"symbols_iab_mt_r16,omitempty"`
}

func (x *TddULDLSlotConfigIAbMTr16) Reset() {
	*x = TddULDLSlotConfigIAbMTr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[310]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TddULDLSlotConfigIAbMTr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TddULDLSlotConfigIAbMTr16) ProtoMessage() {}

func (x *TddULDLSlotConfigIAbMTr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[310]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TddULDLSlotConfigIAbMTr16.ProtoReflect.Descriptor instead.
func (*TddULDLSlotConfigIAbMTr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{310}
}

func (x *TddULDLSlotConfigIAbMTr16) GetSlotIndexR16() *TddULDLSlotIndex {
	if x != nil {
		return x.SlotIndexR16
	}
	return nil
}

func (x *TddULDLSlotConfigIAbMTr16) GetSymbolsIabMtR16() *SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16 {
	if x != nil {
		return x.SymbolsIabMtR16
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1879
// {TDD-UL-DL-SlotIndex}
type TddULDLSlotIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:319,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:319,"`
}

func (x *TddULDLSlotIndex) Reset() {
	*x = TddULDLSlotIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[311]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TddULDLSlotIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TddULDLSlotIndex) ProtoMessage() {}

func (x *TddULDLSlotIndex) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[311]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TddULDLSlotIndex.ProtoReflect.Descriptor instead.
func (*TddULDLSlotIndex) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{311}
}

func (x *TddULDLSlotIndex) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1883
// {Uplink-powerControlId-r17}
type UplinkpowerControlIdr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:64,"`
}

func (x *UplinkpowerControlIdr17) Reset() {
	*x = UplinkpowerControlIdr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[312]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UplinkpowerControlIdr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UplinkpowerControlIdr17) ProtoMessage() {}

func (x *UplinkpowerControlIdr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[312]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UplinkpowerControlIdr17.ProtoReflect.Descriptor instead.
func (*UplinkpowerControlIdr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{312}
}

func (x *UplinkpowerControlIdr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from nr-rrc-definitions.asn1:1892
// {setupdelayBudgetReportingConfig}
type SetupdelayBudgetReportingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:7,"
	DelayBudgetReportingProhibitTimer DelayBudgetReportingProhibitTimersetup `protobuf:"varint,1,opt,name=delay_budget_reporting_prohibit_timer,json=delayBudgetReportingProhibitTimer,proto3,enum=nr_rrc_definitions.v1.DelayBudgetReportingProhibitTimersetup" json:"delay_budget_reporting_prohibit_timer,omitempty" aper:"valueLB:0,valueUB:7,"`
}

func (x *SetupdelayBudgetReportingConfig) Reset() {
	*x = SetupdelayBudgetReportingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[313]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupdelayBudgetReportingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupdelayBudgetReportingConfig) ProtoMessage() {}

func (x *SetupdelayBudgetReportingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[313]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupdelayBudgetReportingConfig.ProtoReflect.Descriptor instead.
func (*SetupdelayBudgetReportingConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{313}
}

func (x *SetupdelayBudgetReportingConfig) GetDelayBudgetReportingProhibitTimer() DelayBudgetReportingProhibitTimersetup {
	if x != nil {
		return x.DelayBudgetReportingProhibitTimer
	}
	return DelayBudgetReportingProhibitTimersetup_DELAY_BUDGET_REPORTING_PROHIBIT_TIMERSETUP_S0
}

// choice from nr-rrc-definitions.asn1:1889
// {delayBudgetReportingConfigOtherConfig}
type DelayBudgetReportingConfigOtherConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:1889
	//
	// Types that are assignable to DelayBudgetReportingConfigOtherConfig:
	//	*DelayBudgetReportingConfigOtherConfig_Release
	//	*DelayBudgetReportingConfigOtherConfig_Setup
	DelayBudgetReportingConfigOtherConfig isDelayBudgetReportingConfigOtherConfig_DelayBudgetReportingConfigOtherConfig `protobuf_oneof:"delay_budget_reporting_config_other_config"`
}

func (x *DelayBudgetReportingConfigOtherConfig) Reset() {
	*x = DelayBudgetReportingConfigOtherConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[314]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelayBudgetReportingConfigOtherConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayBudgetReportingConfigOtherConfig) ProtoMessage() {}

func (x *DelayBudgetReportingConfigOtherConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[314]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayBudgetReportingConfigOtherConfig.ProtoReflect.Descriptor instead.
func (*DelayBudgetReportingConfigOtherConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{314}
}

func (m *DelayBudgetReportingConfigOtherConfig) GetDelayBudgetReportingConfigOtherConfig() isDelayBudgetReportingConfigOtherConfig_DelayBudgetReportingConfigOtherConfig {
	if m != nil {
		return m.DelayBudgetReportingConfigOtherConfig
	}
	return nil
}

func (x *DelayBudgetReportingConfigOtherConfig) GetRelease() int32 {
	if x, ok := x.GetDelayBudgetReportingConfigOtherConfig().(*DelayBudgetReportingConfigOtherConfig_Release); ok {
		return x.Release
	}
	return 0
}

func (x *DelayBudgetReportingConfigOtherConfig) GetSetup() *SetupdelayBudgetReportingConfig {
	if x, ok := x.GetDelayBudgetReportingConfigOtherConfig().(*DelayBudgetReportingConfigOtherConfig_Setup); ok {
		return x.Setup
	}
	return nil
}

type isDelayBudgetReportingConfigOtherConfig_DelayBudgetReportingConfigOtherConfig interface {
	isDelayBudgetReportingConfigOtherConfig_DelayBudgetReportingConfigOtherConfig()
}

type DelayBudgetReportingConfigOtherConfig_Release struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Release int32 `protobuf:"varint,1,opt,name=release,proto3,oneof" aper:"choiceIdx:1,"`
}

type DelayBudgetReportingConfigOtherConfig_Setup struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Setup *SetupdelayBudgetReportingConfig `protobuf:"bytes,2,opt,name=setup,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*DelayBudgetReportingConfigOtherConfig_Release) isDelayBudgetReportingConfigOtherConfig_DelayBudgetReportingConfigOtherConfig() {
}

func (*DelayBudgetReportingConfigOtherConfig_Setup) isDelayBudgetReportingConfigOtherConfig_DelayBudgetReportingConfigOtherConfig() {
}

// sequence from nr-rrc-definitions.asn1:1893
// {OtherConfig}
type OtherConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	DelayBudgetReportingConfig *DelayBudgetReportingConfigOtherConfig `protobuf:"bytes,1,opt,name=delay_budget_reporting_config,json=delayBudgetReportingConfig,proto3,oneof" json:"delay_budget_reporting_config,omitempty" aper:"optional,"`
}

func (x *OtherConfig) Reset() {
	*x = OtherConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[315]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherConfig) ProtoMessage() {}

func (x *OtherConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[315]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherConfig.ProtoReflect.Descriptor instead.
func (*OtherConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{315}
}

func (x *OtherConfig) GetDelayBudgetReportingConfig() *DelayBudgetReportingConfigOtherConfig {
	if x != nil {
		return x.DelayBudgetReportingConfig
	}
	return nil
}

// range of Integer from nr-rrc-definitions.asn1:1899
// {PhysCellIdUTRA-FDD-r16}
type PhysCellIdUtraFDdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:511,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:511,"`
}

func (x *PhysCellIdUtraFDdr16) Reset() {
	*x = PhysCellIdUtraFDdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[316]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhysCellIdUtraFDdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhysCellIdUtraFDdr16) ProtoMessage() {}

func (x *PhysCellIdUtraFDdr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[316]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhysCellIdUtraFDdr16.ProtoReflect.Descriptor instead.
func (*PhysCellIdUtraFDdr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{316}
}

func (x *PhysCellIdUtraFDdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from nr-rrc-definitions.asn1:1904
// {RRC-TransactionIdentifier}
type RrcTransactionIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:3,"`
}

func (x *RrcTransactionIdentifier) Reset() {
	*x = RrcTransactionIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[317]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcTransactionIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcTransactionIdentifier) ProtoMessage() {}

func (x *RrcTransactionIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[317]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcTransactionIdentifier.ProtoReflect.Descriptor instead.
func (*RrcTransactionIdentifier) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{317}
}

func (x *RrcTransactionIdentifier) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1909
// {-}
type MaxAdditionalRachr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxAdditionalRachr17) Reset() {
	*x = MaxAdditionalRachr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[318]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxAdditionalRachr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxAdditionalRachr17) ProtoMessage() {}

func (x *MaxAdditionalRachr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[318]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxAdditionalRachr17.ProtoReflect.Descriptor instead.
func (*MaxAdditionalRachr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{318}
}

func (x *MaxAdditionalRachr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1910
// {-}
type MaxAiDCiPayloadSizer16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxAiDCiPayloadSizer16) Reset() {
	*x = MaxAiDCiPayloadSizer16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[319]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxAiDCiPayloadSizer16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxAiDCiPayloadSizer16) ProtoMessage() {}

func (x *MaxAiDCiPayloadSizer16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[319]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxAiDCiPayloadSizer16.ProtoReflect.Descriptor instead.
func (*MaxAiDCiPayloadSizer16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{319}
}

func (x *MaxAiDCiPayloadSizer16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1911
// {-}
type MaxAiDCiPayloadSize1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:127,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:127,valueUB:127,"`
}

func (x *MaxAiDCiPayloadSize1R16) Reset() {
	*x = MaxAiDCiPayloadSize1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[320]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxAiDCiPayloadSize1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxAiDCiPayloadSize1R16) ProtoMessage() {}

func (x *MaxAiDCiPayloadSize1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[320]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxAiDCiPayloadSize1R16.ProtoReflect.Descriptor instead.
func (*MaxAiDCiPayloadSize1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{320}
}

func (x *MaxAiDCiPayloadSize1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1912
// {-}
type MaxBandComb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65536,valueUB:65536,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65536,valueUB:65536,"`
}

func (x *MaxBandComb) Reset() {
	*x = MaxBandComb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[321]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBandComb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBandComb) ProtoMessage() {}

func (x *MaxBandComb) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[321]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBandComb.ProtoReflect.Descriptor instead.
func (*MaxBandComb) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{321}
}

func (x *MaxBandComb) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1913
// {-}
type MaxBandsUtraFDdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxBandsUtraFDdr16) Reset() {
	*x = MaxBandsUtraFDdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[322]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBandsUtraFDdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBandsUtraFDdr16) ProtoMessage() {}

func (x *MaxBandsUtraFDdr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[322]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBandsUtraFDdr16.ProtoReflect.Descriptor instead.
func (*MaxBandsUtraFDdr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{322}
}

func (x *MaxBandsUtraFDdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1914
// {-}
type MaxBhRLcChannelIdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65536,valueUB:65536,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65536,valueUB:65536,"`
}

func (x *MaxBhRLcChannelIdr16) Reset() {
	*x = MaxBhRLcChannelIdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[323]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBhRLcChannelIdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBhRLcChannelIdr16) ProtoMessage() {}

func (x *MaxBhRLcChannelIdr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[323]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBhRLcChannelIdr16.ProtoReflect.Descriptor instead.
func (*MaxBhRLcChannelIdr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{323}
}

func (x *MaxBhRLcChannelIdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1915
// {-}
type MaxBtIdReportr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxBtIdReportr16) Reset() {
	*x = MaxBtIdReportr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[324]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBtIdReportr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBtIdReportr16) ProtoMessage() {}

func (x *MaxBtIdReportr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[324]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBtIdReportr16.ProtoReflect.Descriptor instead.
func (*MaxBtIdReportr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{324}
}

func (x *MaxBtIdReportr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1916
// {-}
type MaxBtNamer16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxBtNamer16) Reset() {
	*x = MaxBtNamer16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[325]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBtNamer16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBtNamer16) ProtoMessage() {}

func (x *MaxBtNamer16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[325]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBtNamer16.ProtoReflect.Descriptor instead.
func (*MaxBtNamer16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{325}
}

func (x *MaxBtNamer16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1917
// {-}
type MaxCagCellr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCagCellr16) Reset() {
	*x = MaxCagCellr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[326]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCagCellr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCagCellr16) ProtoMessage() {}

func (x *MaxCagCellr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[326]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCagCellr16.ProtoReflect.Descriptor instead.
func (*MaxCagCellr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{326}
}

func (x *MaxCagCellr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1918
// {-}
type MaxTwoPucchGrpConfigListr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxTwoPucchGrpConfigListr16) Reset() {
	*x = MaxTwoPucchGrpConfigListr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[327]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxTwoPucchGrpConfigListr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxTwoPucchGrpConfigListr16) ProtoMessage() {}

func (x *MaxTwoPucchGrpConfigListr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[327]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxTwoPucchGrpConfigListr16.ProtoReflect.Descriptor instead.
func (*MaxTwoPucchGrpConfigListr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{327}
}

func (x *MaxTwoPucchGrpConfigListr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1920
// {-}
type MaxTwoPucchGrpConfigListr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxTwoPucchGrpConfigListr17) Reset() {
	*x = MaxTwoPucchGrpConfigListr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[328]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxTwoPucchGrpConfigListr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxTwoPucchGrpConfigListr17) ProtoMessage() {}

func (x *MaxTwoPucchGrpConfigListr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[328]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxTwoPucchGrpConfigListr17.ProtoReflect.Descriptor instead.
func (*MaxTwoPucchGrpConfigListr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{328}
}

func (x *MaxTwoPucchGrpConfigListr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1922
// {-}
type MaxCbrConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxCbrConfigr16) Reset() {
	*x = MaxCbrConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[329]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCbrConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCbrConfigr16) ProtoMessage() {}

func (x *MaxCbrConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[329]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCbrConfigr16.ProtoReflect.Descriptor instead.
func (*MaxCbrConfigr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{329}
}

func (x *MaxCbrConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1924
// {-}
type MaxCbrConfig1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxCbrConfig1R16) Reset() {
	*x = MaxCbrConfig1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[330]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCbrConfig1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCbrConfig1R16) ProtoMessage() {}

func (x *MaxCbrConfig1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[330]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCbrConfig1R16.ProtoReflect.Descriptor instead.
func (*MaxCbrConfig1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{330}
}

func (x *MaxCbrConfig1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1926
// {-}
type MaxCbrLevelr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCbrLevelr16) Reset() {
	*x = MaxCbrLevelr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[331]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCbrLevelr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCbrLevelr16) ProtoMessage() {}

func (x *MaxCbrLevelr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[331]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCbrLevelr16.ProtoReflect.Descriptor instead.
func (*MaxCbrLevelr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{331}
}

func (x *MaxCbrLevelr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1927
// {-}
type MaxCbrLevel1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxCbrLevel1R16) Reset() {
	*x = MaxCbrLevel1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[332]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCbrLevel1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCbrLevel1R16) ProtoMessage() {}

func (x *MaxCbrLevel1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[332]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCbrLevel1R16.ProtoReflect.Descriptor instead.
func (*MaxCbrLevel1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{332}
}

func (x *MaxCbrLevel1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1928
// {-}
type MaxCellExcluded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCellExcluded) Reset() {
	*x = MaxCellExcluded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[333]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellExcluded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellExcluded) ProtoMessage() {}

func (x *MaxCellExcluded) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[333]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellExcluded.ProtoReflect.Descriptor instead.
func (*MaxCellExcluded) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{333}
}

func (x *MaxCellExcluded) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1929
// {-}
type MaxCellGroupingsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxCellGroupingsr16) Reset() {
	*x = MaxCellGroupingsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[334]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellGroupingsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellGroupingsr16) ProtoMessage() {}

func (x *MaxCellGroupingsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[334]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellGroupingsr16.ProtoReflect.Descriptor instead.
func (*MaxCellGroupingsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{334}
}

func (x *MaxCellGroupingsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1930
// {-}
type MaxCellHistoryr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCellHistoryr16) Reset() {
	*x = MaxCellHistoryr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[335]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellHistoryr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellHistoryr16) ProtoMessage() {}

func (x *MaxCellHistoryr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[335]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellHistoryr16.ProtoReflect.Descriptor instead.
func (*MaxCellHistoryr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{335}
}

func (x *MaxCellHistoryr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1931
// {-}
type MaxPscellHistoryr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxPscellHistoryr17) Reset() {
	*x = MaxPscellHistoryr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[336]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPscellHistoryr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPscellHistoryr17) ProtoMessage() {}

func (x *MaxPscellHistoryr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[336]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPscellHistoryr17.ProtoReflect.Descriptor instead.
func (*MaxPscellHistoryr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{336}
}

func (x *MaxPscellHistoryr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1932
// {-}
type MaxCellInter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCellInter) Reset() {
	*x = MaxCellInter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[337]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellInter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellInter) ProtoMessage() {}

func (x *MaxCellInter) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[337]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellInter.ProtoReflect.Descriptor instead.
func (*MaxCellInter) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{337}
}

func (x *MaxCellInter) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1933
// {-}
type MaxCellIntra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCellIntra) Reset() {
	*x = MaxCellIntra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[338]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellIntra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellIntra) ProtoMessage() {}

func (x *MaxCellIntra) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[338]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellIntra.ProtoReflect.Descriptor instead.
func (*MaxCellIntra) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{338}
}

func (x *MaxCellIntra) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1934
// {-}
type MaxCellMeasEutra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxCellMeasEutra) Reset() {
	*x = MaxCellMeasEutra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[339]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellMeasEutra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellMeasEutra) ProtoMessage() {}

func (x *MaxCellMeasEutra) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[339]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellMeasEutra.ProtoReflect.Descriptor instead.
func (*MaxCellMeasEutra) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{339}
}

func (x *MaxCellMeasEutra) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1935
// {-}
type MaxCellMeasIdler16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxCellMeasIdler16) Reset() {
	*x = MaxCellMeasIdler16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[340]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellMeasIdler16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellMeasIdler16) ProtoMessage() {}

func (x *MaxCellMeasIdler16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[340]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellMeasIdler16.ProtoReflect.Descriptor instead.
func (*MaxCellMeasIdler16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{340}
}

func (x *MaxCellMeasIdler16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1936
// {-}
type MaxCellMeasUtraFDdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxCellMeasUtraFDdr16) Reset() {
	*x = MaxCellMeasUtraFDdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[341]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellMeasUtraFDdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellMeasUtraFDdr16) ProtoMessage() {}

func (x *MaxCellMeasUtraFDdr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[341]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellMeasUtraFDdr16.ProtoReflect.Descriptor instead.
func (*MaxCellMeasUtraFDdr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{341}
}

func (x *MaxCellMeasUtraFDdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1937
// {-}
type MaxCellNtnr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxCellNtnr17) Reset() {
	*x = MaxCellNtnr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[342]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellNtnr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellNtnr17) ProtoMessage() {}

func (x *MaxCellNtnr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[342]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellNtnr17.ProtoReflect.Descriptor instead.
func (*MaxCellNtnr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{342}
}

func (x *MaxCellNtnr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1939
// {-}
type MaxCarrierTypePairListr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCarrierTypePairListr16) Reset() {
	*x = MaxCarrierTypePairListr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[343]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCarrierTypePairListr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCarrierTypePairListr16) ProtoMessage() {}

func (x *MaxCarrierTypePairListr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[343]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCarrierTypePairListr16.ProtoReflect.Descriptor instead.
func (*MaxCarrierTypePairListr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{343}
}

func (x *MaxCarrierTypePairListr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1942
// {-}
type MaxCellAllowed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCellAllowed) Reset() {
	*x = MaxCellAllowed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[344]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellAllowed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellAllowed) ProtoMessage() {}

func (x *MaxCellAllowed) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[344]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellAllowed.ProtoReflect.Descriptor instead.
func (*MaxCellAllowed) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{344}
}

func (x *MaxCellAllowed) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1943
// {-}
type MaxEarfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:262143,valueUB:262143,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:262143,valueUB:262143,"`
}

func (x *MaxEarfcn) Reset() {
	*x = MaxEarfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[345]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEarfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEarfcn) ProtoMessage() {}

func (x *MaxEarfcn) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[345]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEarfcn.ProtoReflect.Descriptor instead.
func (*MaxEarfcn) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{345}
}

func (x *MaxEarfcn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1944
// {-}
type MaxEutraCellExcluded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxEutraCellExcluded) Reset() {
	*x = MaxEutraCellExcluded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[346]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEutraCellExcluded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEutraCellExcluded) ProtoMessage() {}

func (x *MaxEutraCellExcluded) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[346]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEutraCellExcluded.ProtoReflect.Descriptor instead.
func (*MaxEutraCellExcluded) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{346}
}

func (x *MaxEutraCellExcluded) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1946
// {-}
type MaxEutraNSPmax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxEutraNSPmax) Reset() {
	*x = MaxEutraNSPmax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[347]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEutraNSPmax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEutraNSPmax) ProtoMessage() {}

func (x *MaxEutraNSPmax) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[347]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEutraNSPmax.ProtoReflect.Descriptor instead.
func (*MaxEutraNSPmax) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{347}
}

func (x *MaxEutraNSPmax) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1947
// {-}
type MaxFeatureCombPreamblesPerRachresourcer17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxFeatureCombPreamblesPerRachresourcer17) Reset() {
	*x = MaxFeatureCombPreamblesPerRachresourcer17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[348]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFeatureCombPreamblesPerRachresourcer17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFeatureCombPreamblesPerRachresourcer17) ProtoMessage() {}

func (x *MaxFeatureCombPreamblesPerRachresourcer17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[348]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFeatureCombPreamblesPerRachresourcer17.ProtoReflect.Descriptor instead.
func (*MaxFeatureCombPreamblesPerRachresourcer17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{348}
}

func (x *MaxFeatureCombPreamblesPerRachresourcer17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1948
// {-}
type MaxLogMeasReportr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:520,valueUB:520,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:520,valueUB:520,"`
}

func (x *MaxLogMeasReportr16) Reset() {
	*x = MaxLogMeasReportr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[349]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxLogMeasReportr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxLogMeasReportr16) ProtoMessage() {}

func (x *MaxLogMeasReportr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[349]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxLogMeasReportr16.ProtoReflect.Descriptor instead.
func (*MaxLogMeasReportr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{349}
}

func (x *MaxLogMeasReportr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1949
// {-}
type MaxMultiBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxMultiBands) Reset() {
	*x = MaxMultiBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[350]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxMultiBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxMultiBands) ProtoMessage() {}

func (x *MaxMultiBands) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[350]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxMultiBands.ProtoReflect.Descriptor instead.
func (*MaxMultiBands) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{350}
}

func (x *MaxMultiBands) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1950
// {-}
type MaxNarfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3279165,valueUB:3279165,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3279165,valueUB:3279165,"`
}

func (x *MaxNarfcn) Reset() {
	*x = MaxNarfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[351]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNarfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNarfcn) ProtoMessage() {}

func (x *MaxNarfcn) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[351]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNarfcn.ProtoReflect.Descriptor instead.
func (*MaxNarfcn) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{351}
}

func (x *MaxNarfcn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1951
// {-}
type MaxNrNSPmax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrNSPmax) Reset() {
	*x = MaxNrNSPmax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[352]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrNSPmax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrNSPmax) ProtoMessage() {}

func (x *MaxNrNSPmax) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[352]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrNSPmax.ProtoReflect.Descriptor instead.
func (*MaxNrNSPmax) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{352}
}

func (x *MaxNrNSPmax) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1952
// {-}
type MaxFreqIdler16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxFreqIdler16) Reset() {
	*x = MaxFreqIdler16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[353]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqIdler16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqIdler16) ProtoMessage() {}

func (x *MaxFreqIdler16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[353]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqIdler16.ProtoReflect.Descriptor instead.
func (*MaxFreqIdler16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{353}
}

func (x *MaxFreqIdler16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1953
// {-}
type MaxNrofServingCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofServingCells) Reset() {
	*x = MaxNrofServingCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[354]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofServingCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofServingCells) ProtoMessage() {}

func (x *MaxNrofServingCells) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[354]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofServingCells.ProtoReflect.Descriptor instead.
func (*MaxNrofServingCells) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{354}
}

func (x *MaxNrofServingCells) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1954
// {-}
type MaxNrofServingCells1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofServingCells1) Reset() {
	*x = MaxNrofServingCells1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[355]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofServingCells1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofServingCells1) ProtoMessage() {}

func (x *MaxNrofServingCells1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[355]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofServingCells1.ProtoReflect.Descriptor instead.
func (*MaxNrofServingCells1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{355}
}

func (x *MaxNrofServingCells1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1955
// {-}
type MaxNrofAggregatedCellsPerCellGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofAggregatedCellsPerCellGroup) Reset() {
	*x = MaxNrofAggregatedCellsPerCellGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[356]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofAggregatedCellsPerCellGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofAggregatedCellsPerCellGroup) ProtoMessage() {}

func (x *MaxNrofAggregatedCellsPerCellGroup) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[356]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofAggregatedCellsPerCellGroup.ProtoReflect.Descriptor instead.
func (*MaxNrofAggregatedCellsPerCellGroup) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{356}
}

func (x *MaxNrofAggregatedCellsPerCellGroup) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1956
// {-}
type MaxNrofAggregatedCellsPerCellGroupMinus4R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:12,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:12,"`
}

func (x *MaxNrofAggregatedCellsPerCellGroupMinus4R16) Reset() {
	*x = MaxNrofAggregatedCellsPerCellGroupMinus4R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[357]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofAggregatedCellsPerCellGroupMinus4R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofAggregatedCellsPerCellGroupMinus4R16) ProtoMessage() {}

func (x *MaxNrofAggregatedCellsPerCellGroupMinus4R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[357]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofAggregatedCellsPerCellGroupMinus4R16.ProtoReflect.Descriptor instead.
func (*MaxNrofAggregatedCellsPerCellGroupMinus4R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{357}
}

func (x *MaxNrofAggregatedCellsPerCellGroupMinus4R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1957
// {-}
type MaxNrofDucellsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxNrofDucellsr16) Reset() {
	*x = MaxNrofDucellsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[358]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofDucellsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofDucellsr16) ProtoMessage() {}

func (x *MaxNrofDucellsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[358]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofDucellsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofDucellsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{358}
}

func (x *MaxNrofDucellsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1958
// {-}
type MaxNrofAppLayerMeasr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofAppLayerMeasr17) Reset() {
	*x = MaxNrofAppLayerMeasr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[359]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofAppLayerMeasr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofAppLayerMeasr17) ProtoMessage() {}

func (x *MaxNrofAppLayerMeasr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[359]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofAppLayerMeasr17.ProtoReflect.Descriptor instead.
func (*MaxNrofAppLayerMeasr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{359}
}

func (x *MaxNrofAppLayerMeasr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1959
// {-}
type MaxNrofAppLayerMeas1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofAppLayerMeas1R17) Reset() {
	*x = MaxNrofAppLayerMeas1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[360]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofAppLayerMeas1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofAppLayerMeas1R17) ProtoMessage() {}

func (x *MaxNrofAppLayerMeas1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[360]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofAppLayerMeas1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofAppLayerMeas1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{360}
}

func (x *MaxNrofAppLayerMeas1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1960
// {-}
type MaxNrofAvailabilityCombinationsPerSetr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxNrofAvailabilityCombinationsPerSetr16) Reset() {
	*x = MaxNrofAvailabilityCombinationsPerSetr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[361]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofAvailabilityCombinationsPerSetr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofAvailabilityCombinationsPerSetr16) ProtoMessage() {}

func (x *MaxNrofAvailabilityCombinationsPerSetr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[361]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofAvailabilityCombinationsPerSetr16.ProtoReflect.Descriptor instead.
func (*MaxNrofAvailabilityCombinationsPerSetr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{361}
}

func (x *MaxNrofAvailabilityCombinationsPerSetr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1961
// {-}
type MaxNrofAvailabilityCombinationsPerSet1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:511,valueUB:511,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:511,valueUB:511,"`
}

func (x *MaxNrofAvailabilityCombinationsPerSet1R16) Reset() {
	*x = MaxNrofAvailabilityCombinationsPerSet1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[362]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofAvailabilityCombinationsPerSet1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofAvailabilityCombinationsPerSet1R16) ProtoMessage() {}

func (x *MaxNrofAvailabilityCombinationsPerSet1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[362]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofAvailabilityCombinationsPerSet1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofAvailabilityCombinationsPerSet1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{362}
}

func (x *MaxNrofAvailabilityCombinationsPerSet1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1962
// {-}
type MaxNrofIabresourceConfigr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65536,valueUB:65536,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65536,valueUB:65536,"`
}

func (x *MaxNrofIabresourceConfigr17) Reset() {
	*x = MaxNrofIabresourceConfigr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[363]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofIabresourceConfigr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofIabresourceConfigr17) ProtoMessage() {}

func (x *MaxNrofIabresourceConfigr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[363]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofIabresourceConfigr17.ProtoReflect.Descriptor instead.
func (*MaxNrofIabresourceConfigr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{363}
}

func (x *MaxNrofIabresourceConfigr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1963
// {-}
type MaxNrofIabresourceConfig1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65535,valueUB:65535,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65535,valueUB:65535,"`
}

func (x *MaxNrofIabresourceConfig1R17) Reset() {
	*x = MaxNrofIabresourceConfig1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[364]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofIabresourceConfig1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofIabresourceConfig1R17) ProtoMessage() {}

func (x *MaxNrofIabresourceConfig1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[364]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofIabresourceConfig1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofIabresourceConfig1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{364}
}

func (x *MaxNrofIabresourceConfig1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1964
// {-}
type MaxNrofScellActRsr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:255,valueUB:255,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:255,valueUB:255,"`
}

func (x *MaxNrofScellActRsr17) Reset() {
	*x = MaxNrofScellActRsr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[365]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofScellActRsr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofScellActRsr17) ProtoMessage() {}

func (x *MaxNrofScellActRsr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[365]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofScellActRsr17.ProtoReflect.Descriptor instead.
func (*MaxNrofScellActRsr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{365}
}

func (x *MaxNrofScellActRsr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1965
// {-}
type MaxNrofScells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofScells) Reset() {
	*x = MaxNrofScells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[366]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofScells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofScells) ProtoMessage() {}

func (x *MaxNrofScells) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[366]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofScells.ProtoReflect.Descriptor instead.
func (*MaxNrofScells) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{366}
}

func (x *MaxNrofScells) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1966
// {-}
type MaxNrofCellMeas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofCellMeas) Reset() {
	*x = MaxNrofCellMeas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[367]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCellMeas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCellMeas) ProtoMessage() {}

func (x *MaxNrofCellMeas) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[367]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCellMeas.ProtoReflect.Descriptor instead.
func (*MaxNrofCellMeas) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{367}
}

func (x *MaxNrofCellMeas) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1967
// {-}
type MaxNrofCrsIMInterfCellr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofCrsIMInterfCellr17) Reset() {
	*x = MaxNrofCrsIMInterfCellr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[368]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCrsIMInterfCellr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCrsIMInterfCellr17) ProtoMessage() {}

func (x *MaxNrofCrsIMInterfCellr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[368]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCrsIMInterfCellr17.ProtoReflect.Descriptor instead.
func (*MaxNrofCrsIMInterfCellr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{368}
}

func (x *MaxNrofCrsIMInterfCellr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1968
// {-}
type MaxNrofRelayMeasr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofRelayMeasr17) Reset() {
	*x = MaxNrofRelayMeasr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[369]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRelayMeasr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRelayMeasr17) ProtoMessage() {}

func (x *MaxNrofRelayMeasr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[369]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRelayMeasr17.ProtoReflect.Descriptor instead.
func (*MaxNrofRelayMeasr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{369}
}

func (x *MaxNrofRelayMeasr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1970
// {-}
type MaxNrofCgSLr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofCgSLr16) Reset() {
	*x = MaxNrofCgSLr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[370]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCgSLr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCgSLr16) ProtoMessage() {}

func (x *MaxNrofCgSLr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[370]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCgSLr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCgSLr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{370}
}

func (x *MaxNrofCgSLr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1971
// {-}
type MaxNrofCgSL1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofCgSL1R16) Reset() {
	*x = MaxNrofCgSL1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[371]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCgSL1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCgSL1R16) ProtoMessage() {}

func (x *MaxNrofCgSL1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[371]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCgSL1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofCgSL1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{371}
}

func (x *MaxNrofCgSL1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1972
// {-}
type MaxSlGCBCDRxQoSr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxSlGCBCDRxQoSr17) Reset() {
	*x = MaxSlGCBCDRxQoSr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[372]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSlGCBCDRxQoSr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSlGCBCDRxQoSr17) ProtoMessage() {}

func (x *MaxSlGCBCDRxQoSr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[372]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSlGCBCDRxQoSr17.ProtoReflect.Descriptor instead.
func (*MaxSlGCBCDRxQoSr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{372}
}

func (x *MaxSlGCBCDRxQoSr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1974
// {-}
type MaxNrofSlRxInfoSetr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofSlRxInfoSetr17) Reset() {
	*x = MaxNrofSlRxInfoSetr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[373]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlRxInfoSetr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlRxInfoSetr17) ProtoMessage() {}

func (x *MaxNrofSlRxInfoSetr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[373]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlRxInfoSetr17.ProtoReflect.Descriptor instead.
func (*MaxNrofSlRxInfoSetr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{373}
}

func (x *MaxNrofSlRxInfoSetr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1976
// {-}
type MaxNrofSsBlocksToAverage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSsBlocksToAverage) Reset() {
	*x = MaxNrofSsBlocksToAverage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[374]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSsBlocksToAverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSsBlocksToAverage) ProtoMessage() {}

func (x *MaxNrofSsBlocksToAverage) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[374]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSsBlocksToAverage.ProtoReflect.Descriptor instead.
func (*MaxNrofSsBlocksToAverage) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{374}
}

func (x *MaxNrofSsBlocksToAverage) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1977
// {-}
type MaxNrofCondCellsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofCondCellsr16) Reset() {
	*x = MaxNrofCondCellsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[375]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCondCellsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCondCellsr16) ProtoMessage() {}

func (x *MaxNrofCondCellsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[375]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCondCellsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCondCellsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{375}
}

func (x *MaxNrofCondCellsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1978
// {-}
type MaxNrofCondCells1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofCondCells1R17) Reset() {
	*x = MaxNrofCondCells1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[376]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCondCells1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCondCells1R17) ProtoMessage() {}

func (x *MaxNrofCondCells1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[376]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCondCells1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofCondCells1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{376}
}

func (x *MaxNrofCondCells1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1979
// {-}
type MaxNrofCsiRSResourcesToAverage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCsiRSResourcesToAverage) Reset() {
	*x = MaxNrofCsiRSResourcesToAverage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[377]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesToAverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesToAverage) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesToAverage) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[377]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesToAverage.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesToAverage) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{377}
}

func (x *MaxNrofCsiRSResourcesToAverage) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1980
// {-}
type MaxNrofDlAllocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofDlAllocations) Reset() {
	*x = MaxNrofDlAllocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[378]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofDlAllocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofDlAllocations) ProtoMessage() {}

func (x *MaxNrofDlAllocations) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[378]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofDlAllocations.ProtoReflect.Descriptor instead.
func (*MaxNrofDlAllocations) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{378}
}

func (x *MaxNrofDlAllocations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1981
// {-}
type MaxNrofDlAllocationsExtr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofDlAllocationsExtr17) Reset() {
	*x = MaxNrofDlAllocationsExtr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[379]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofDlAllocationsExtr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofDlAllocationsExtr17) ProtoMessage() {}

func (x *MaxNrofDlAllocationsExtr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[379]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofDlAllocationsExtr17.ProtoReflect.Descriptor instead.
func (*MaxNrofDlAllocationsExtr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{379}
}

func (x *MaxNrofDlAllocationsExtr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1983
// {-}
type MaxNrofPduSessionsr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxNrofPduSessionsr17) Reset() {
	*x = MaxNrofPduSessionsr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[380]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPduSessionsr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPduSessionsr17) ProtoMessage() {}

func (x *MaxNrofPduSessionsr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[380]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPduSessionsr17.ProtoReflect.Descriptor instead.
func (*MaxNrofPduSessionsr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{380}
}

func (x *MaxNrofPduSessionsr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1984
// {-}
type MaxNrofSrConfigPerCellGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSrConfigPerCellGroup) Reset() {
	*x = MaxNrofSrConfigPerCellGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[381]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrConfigPerCellGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrConfigPerCellGroup) ProtoMessage() {}

func (x *MaxNrofSrConfigPerCellGroup) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[381]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrConfigPerCellGroup.ProtoReflect.Descriptor instead.
func (*MaxNrofSrConfigPerCellGroup) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{381}
}

func (x *MaxNrofSrConfigPerCellGroup) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1985
// {-}
type MaxLcgID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxLcgID) Reset() {
	*x = MaxLcgID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[382]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxLcgID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxLcgID) ProtoMessage() {}

func (x *MaxLcgID) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[382]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxLcgID.ProtoReflect.Descriptor instead.
func (*MaxLcgID) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{382}
}

func (x *MaxLcgID) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1986
// {-}
type MaxLcgIDIAbr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:255,valueUB:255,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:255,valueUB:255,"`
}

func (x *MaxLcgIDIAbr17) Reset() {
	*x = MaxLcgIDIAbr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[383]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxLcgIDIAbr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxLcgIDIAbr17) ProtoMessage() {}

func (x *MaxLcgIDIAbr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[383]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxLcgIDIAbr17.ProtoReflect.Descriptor instead.
func (*MaxLcgIDIAbr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{383}
}

func (x *MaxLcgIDIAbr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1987
// {-}
type MaxLcID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxLcID) Reset() {
	*x = MaxLcID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[384]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxLcID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxLcID) ProtoMessage() {}

func (x *MaxLcID) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[384]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxLcID.ProtoReflect.Descriptor instead.
func (*MaxLcID) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{384}
}

func (x *MaxLcID) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1988
// {-}
type MaxLcIDIabr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65855,valueUB:65855,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65855,valueUB:65855,"`
}

func (x *MaxLcIDIabr16) Reset() {
	*x = MaxLcIDIabr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[385]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxLcIDIabr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxLcIDIabr16) ProtoMessage() {}

func (x *MaxLcIDIabr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[385]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxLcIDIabr16.ProtoReflect.Descriptor instead.
func (*MaxLcIDIabr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{385}
}

func (x *MaxLcIDIabr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1989
// {-}
type MaxLteCRsPatternsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxLteCRsPatternsr16) Reset() {
	*x = MaxLteCRsPatternsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[386]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxLteCRsPatternsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxLteCRsPatternsr16) ProtoMessage() {}

func (x *MaxLteCRsPatternsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[386]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxLteCRsPatternsr16.ProtoReflect.Descriptor instead.
func (*MaxLteCRsPatternsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{386}
}

func (x *MaxLteCRsPatternsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1990
// {-}
type MaxNrofTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofTags) Reset() {
	*x = MaxNrofTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[387]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTags) ProtoMessage() {}

func (x *MaxNrofTags) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[387]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTags.ProtoReflect.Descriptor instead.
func (*MaxNrofTags) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{387}
}

func (x *MaxNrofTags) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1991
// {-}
type MaxNrofTags1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofTags1) Reset() {
	*x = MaxNrofTags1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[388]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTags1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTags1) ProtoMessage() {}

func (x *MaxNrofTags1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[388]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTags1.ProtoReflect.Descriptor instead.
func (*MaxNrofTags1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{388}
}

func (x *MaxNrofTags1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1992
// {-}
type MaxNrofBwps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofBwps) Reset() {
	*x = MaxNrofBwps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[389]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofBwps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofBwps) ProtoMessage() {}

func (x *MaxNrofBwps) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[389]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofBwps.ProtoReflect.Descriptor instead.
func (*MaxNrofBwps) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{389}
}

func (x *MaxNrofBwps) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1993
// {-}
type MaxNrofCombIdc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrofCombIdc) Reset() {
	*x = MaxNrofCombIdc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[390]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCombIdc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCombIdc) ProtoMessage() {}

func (x *MaxNrofCombIdc) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[390]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCombIdc.ProtoReflect.Descriptor instead.
func (*MaxNrofCombIdc) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{390}
}

func (x *MaxNrofCombIdc) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1994
// {-}
type MaxNrofSymbols1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:13,valueUB:13,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:13,valueUB:13,"`
}

func (x *MaxNrofSymbols1) Reset() {
	*x = MaxNrofSymbols1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[391]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSymbols1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSymbols1) ProtoMessage() {}

func (x *MaxNrofSymbols1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[391]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSymbols1.ProtoReflect.Descriptor instead.
func (*MaxNrofSymbols1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{391}
}

func (x *MaxNrofSymbols1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1995
// {-}
type MaxNrofSlots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:320,valueUB:320,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:320,valueUB:320,"`
}

func (x *MaxNrofSlots) Reset() {
	*x = MaxNrofSlots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[392]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlots) ProtoMessage() {}

func (x *MaxNrofSlots) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[392]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlots.ProtoReflect.Descriptor instead.
func (*MaxNrofSlots) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{392}
}

func (x *MaxNrofSlots) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1996
// {-}
type MaxNrofSlots1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:319,valueUB:319,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:319,valueUB:319,"`
}

func (x *MaxNrofSlots1) Reset() {
	*x = MaxNrofSlots1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[393]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlots1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlots1) ProtoMessage() {}

func (x *MaxNrofSlots1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[393]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlots1.ProtoReflect.Descriptor instead.
func (*MaxNrofSlots1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{393}
}

func (x *MaxNrofSlots1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1997
// {-}
type MaxNrofPhysicalResourceBlocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:275,valueUB:275,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:275,valueUB:275,"`
}

func (x *MaxNrofPhysicalResourceBlocks) Reset() {
	*x = MaxNrofPhysicalResourceBlocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[394]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPhysicalResourceBlocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPhysicalResourceBlocks) ProtoMessage() {}

func (x *MaxNrofPhysicalResourceBlocks) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[394]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPhysicalResourceBlocks.ProtoReflect.Descriptor instead.
func (*MaxNrofPhysicalResourceBlocks) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{394}
}

func (x *MaxNrofPhysicalResourceBlocks) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1998
// {-}
type MaxNrofPhysicalResourceBlocks1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:274,valueUB:274,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:274,valueUB:274,"`
}

func (x *MaxNrofPhysicalResourceBlocks1) Reset() {
	*x = MaxNrofPhysicalResourceBlocks1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[395]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPhysicalResourceBlocks1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPhysicalResourceBlocks1) ProtoMessage() {}

func (x *MaxNrofPhysicalResourceBlocks1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[395]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPhysicalResourceBlocks1.ProtoReflect.Descriptor instead.
func (*MaxNrofPhysicalResourceBlocks1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{395}
}

func (x *MaxNrofPhysicalResourceBlocks1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:1999
// {-}
type MaxNrofPhysicalResourceBlocksPlus1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:276,valueUB:276,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:276,valueUB:276,"`
}

func (x *MaxNrofPhysicalResourceBlocksPlus1) Reset() {
	*x = MaxNrofPhysicalResourceBlocksPlus1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[396]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPhysicalResourceBlocksPlus1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPhysicalResourceBlocksPlus1) ProtoMessage() {}

func (x *MaxNrofPhysicalResourceBlocksPlus1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[396]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPhysicalResourceBlocksPlus1.ProtoReflect.Descriptor instead.
func (*MaxNrofPhysicalResourceBlocksPlus1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{396}
}

func (x *MaxNrofPhysicalResourceBlocksPlus1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2000
// {-}
type MaxNrofControlResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:12,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:12,"`
}

func (x *MaxNrofControlResourceSets) Reset() {
	*x = MaxNrofControlResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[397]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofControlResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofControlResourceSets) ProtoMessage() {}

func (x *MaxNrofControlResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[397]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofControlResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofControlResourceSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{397}
}

func (x *MaxNrofControlResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2001
// {-}
type MaxNrofControlResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:11,valueUB:11,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:11,valueUB:11,"`
}

func (x *MaxNrofControlResourceSets1) Reset() {
	*x = MaxNrofControlResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[398]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofControlResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofControlResourceSets1) ProtoMessage() {}

func (x *MaxNrofControlResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[398]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofControlResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofControlResourceSets1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{398}
}

func (x *MaxNrofControlResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2002
// {-}
type MaxNrofControlResourceSets1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofControlResourceSets1R16) Reset() {
	*x = MaxNrofControlResourceSets1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[399]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofControlResourceSets1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofControlResourceSets1R16) ProtoMessage() {}

func (x *MaxNrofControlResourceSets1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[399]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofControlResourceSets1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofControlResourceSets1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{399}
}

func (x *MaxNrofControlResourceSets1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2003
// {-}
type MaxNrofCoresetPoolsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrofCoresetPoolsr16) Reset() {
	*x = MaxNrofCoresetPoolsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[400]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCoresetPoolsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCoresetPoolsr16) ProtoMessage() {}

func (x *MaxNrofCoresetPoolsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[400]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCoresetPoolsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCoresetPoolsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{400}
}

func (x *MaxNrofCoresetPoolsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2004
// {-}
type MaxCoReSetDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxCoReSetDuration) Reset() {
	*x = MaxCoReSetDuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[401]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCoReSetDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCoReSetDuration) ProtoMessage() {}

func (x *MaxCoReSetDuration) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[401]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCoReSetDuration.ProtoReflect.Descriptor instead.
func (*MaxCoReSetDuration) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{401}
}

func (x *MaxCoReSetDuration) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2005
// {-}
type MaxNrofSearchSpaces1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:39,valueUB:39,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:39,valueUB:39,"`
}

func (x *MaxNrofSearchSpaces1) Reset() {
	*x = MaxNrofSearchSpaces1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[402]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSearchSpaces1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSearchSpaces1) ProtoMessage() {}

func (x *MaxNrofSearchSpaces1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[402]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSearchSpaces1.ProtoReflect.Descriptor instead.
func (*MaxNrofSearchSpaces1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{402}
}

func (x *MaxNrofSearchSpaces1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2006
// {-}
type MaxNrofSearchSpacesLinks1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:39,valueUB:39,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:39,valueUB:39,"`
}

func (x *MaxNrofSearchSpacesLinks1R17) Reset() {
	*x = MaxNrofSearchSpacesLinks1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[403]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSearchSpacesLinks1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSearchSpacesLinks1R17) ProtoMessage() {}

func (x *MaxNrofSearchSpacesLinks1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[403]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSearchSpacesLinks1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofSearchSpacesLinks1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{403}
}

func (x *MaxNrofSearchSpacesLinks1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2007
// {-}
type MaxNrofBfdresourcePerSetr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofBfdresourcePerSetr17) Reset() {
	*x = MaxNrofBfdresourcePerSetr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[404]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofBfdresourcePerSetr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofBfdresourcePerSetr17) ProtoMessage() {}

func (x *MaxNrofBfdresourcePerSetr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[404]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofBfdresourcePerSetr17.ProtoReflect.Descriptor instead.
func (*MaxNrofBfdresourcePerSetr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{404}
}

func (x *MaxNrofBfdresourcePerSetr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2008
// {-}
type MaxSfiDCiPayloadSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxSfiDCiPayloadSize) Reset() {
	*x = MaxSfiDCiPayloadSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[405]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSfiDCiPayloadSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSfiDCiPayloadSize) ProtoMessage() {}

func (x *MaxSfiDCiPayloadSize) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[405]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSfiDCiPayloadSize.ProtoReflect.Descriptor instead.
func (*MaxSfiDCiPayloadSize) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{405}
}

func (x *MaxSfiDCiPayloadSize) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2009
// {-}
type MaxSfiDCiPayloadSize1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:127,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:127,valueUB:127,"`
}

func (x *MaxSfiDCiPayloadSize1) Reset() {
	*x = MaxSfiDCiPayloadSize1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[406]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSfiDCiPayloadSize1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSfiDCiPayloadSize1) ProtoMessage() {}

func (x *MaxSfiDCiPayloadSize1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[406]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSfiDCiPayloadSize1.ProtoReflect.Descriptor instead.
func (*MaxSfiDCiPayloadSize1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{406}
}

func (x *MaxSfiDCiPayloadSize1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2010
// {-}
type MaxIabIPAddressr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxIabIPAddressr16) Reset() {
	*x = MaxIabIPAddressr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[407]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxIabIPAddressr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxIabIPAddressr16) ProtoMessage() {}

func (x *MaxIabIPAddressr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[407]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxIabIPAddressr16.ProtoReflect.Descriptor instead.
func (*MaxIabIPAddressr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{407}
}

func (x *MaxIabIPAddressr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2011
// {-}
type MaxIntDCiPayloadSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:126,valueUB:126,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:126,valueUB:126,"`
}

func (x *MaxIntDCiPayloadSize) Reset() {
	*x = MaxIntDCiPayloadSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[408]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxIntDCiPayloadSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxIntDCiPayloadSize) ProtoMessage() {}

func (x *MaxIntDCiPayloadSize) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[408]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxIntDCiPayloadSize.ProtoReflect.Descriptor instead.
func (*MaxIntDCiPayloadSize) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{408}
}

func (x *MaxIntDCiPayloadSize) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2012
// {-}
type MaxIntDCiPayloadSize1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:125,valueUB:125,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:125,valueUB:125,"`
}

func (x *MaxIntDCiPayloadSize1) Reset() {
	*x = MaxIntDCiPayloadSize1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[409]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxIntDCiPayloadSize1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxIntDCiPayloadSize1) ProtoMessage() {}

func (x *MaxIntDCiPayloadSize1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[409]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxIntDCiPayloadSize1.ProtoReflect.Descriptor instead.
func (*MaxIntDCiPayloadSize1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{409}
}

func (x *MaxIntDCiPayloadSize1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2013
// {-}
type MaxNrofRateMatchPatterns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofRateMatchPatterns) Reset() {
	*x = MaxNrofRateMatchPatterns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[410]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRateMatchPatterns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRateMatchPatterns) ProtoMessage() {}

func (x *MaxNrofRateMatchPatterns) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[410]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRateMatchPatterns.ProtoReflect.Descriptor instead.
func (*MaxNrofRateMatchPatterns) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{410}
}

func (x *MaxNrofRateMatchPatterns) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2014
// {-}
type MaxNrofRateMatchPatterns1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofRateMatchPatterns1) Reset() {
	*x = MaxNrofRateMatchPatterns1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[411]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRateMatchPatterns1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRateMatchPatterns1) ProtoMessage() {}

func (x *MaxNrofRateMatchPatterns1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[411]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRateMatchPatterns1.ProtoReflect.Descriptor instead.
func (*MaxNrofRateMatchPatterns1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{411}
}

func (x *MaxNrofRateMatchPatterns1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2015
// {-}
type MaxNrofRateMatchPatternsPerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofRateMatchPatternsPerGroup) Reset() {
	*x = MaxNrofRateMatchPatternsPerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[412]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRateMatchPatternsPerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRateMatchPatternsPerGroup) ProtoMessage() {}

func (x *MaxNrofRateMatchPatternsPerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[412]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRateMatchPatternsPerGroup.ProtoReflect.Descriptor instead.
func (*MaxNrofRateMatchPatternsPerGroup) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{412}
}

func (x *MaxNrofRateMatchPatternsPerGroup) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2016
// {-}
type MaxNrofCsiReportConfigurations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:48,valueUB:48,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:48,valueUB:48,"`
}

func (x *MaxNrofCsiReportConfigurations) Reset() {
	*x = MaxNrofCsiReportConfigurations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[413]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiReportConfigurations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiReportConfigurations) ProtoMessage() {}

func (x *MaxNrofCsiReportConfigurations) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[413]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiReportConfigurations.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiReportConfigurations) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{413}
}

func (x *MaxNrofCsiReportConfigurations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2017
// {-}
type MaxNrofCsiReportConfigurations1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:47,valueUB:47,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:47,valueUB:47,"`
}

func (x *MaxNrofCsiReportConfigurations1) Reset() {
	*x = MaxNrofCsiReportConfigurations1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[414]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiReportConfigurations1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiReportConfigurations1) ProtoMessage() {}

func (x *MaxNrofCsiReportConfigurations1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[414]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiReportConfigurations1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiReportConfigurations1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{414}
}

func (x *MaxNrofCsiReportConfigurations1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2018
// {-}
type MaxNrofCsiResourceConfigurations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:112,valueUB:112,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:112,valueUB:112,"`
}

func (x *MaxNrofCsiResourceConfigurations) Reset() {
	*x = MaxNrofCsiResourceConfigurations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[415]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiResourceConfigurations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiResourceConfigurations) ProtoMessage() {}

func (x *MaxNrofCsiResourceConfigurations) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[415]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiResourceConfigurations.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiResourceConfigurations) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{415}
}

func (x *MaxNrofCsiResourceConfigurations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2019
// {-}
type MaxNrofCsiResourceConfigurations1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:111,valueUB:111,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:111,valueUB:111,"`
}

func (x *MaxNrofCsiResourceConfigurations1) Reset() {
	*x = MaxNrofCsiResourceConfigurations1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[416]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiResourceConfigurations1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiResourceConfigurations1) ProtoMessage() {}

func (x *MaxNrofCsiResourceConfigurations1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[416]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiResourceConfigurations1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiResourceConfigurations1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{416}
}

func (x *MaxNrofCsiResourceConfigurations1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2020
// {-}
type MaxNrofApCSiRSResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofApCSiRSResourcesPerSet) Reset() {
	*x = MaxNrofApCSiRSResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[417]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofApCSiRSResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofApCSiRSResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofApCSiRSResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[417]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofApCSiRSResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofApCSiRSResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{417}
}

func (x *MaxNrofApCSiRSResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2021
// {-}
type MaxNrOfCsiAperiodicTriggers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrOfCsiAperiodicTriggers) Reset() {
	*x = MaxNrOfCsiAperiodicTriggers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[418]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrOfCsiAperiodicTriggers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrOfCsiAperiodicTriggers) ProtoMessage() {}

func (x *MaxNrOfCsiAperiodicTriggers) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[418]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrOfCsiAperiodicTriggers.ProtoReflect.Descriptor instead.
func (*MaxNrOfCsiAperiodicTriggers) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{418}
}

func (x *MaxNrOfCsiAperiodicTriggers) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2022
// {-}
type MaxNrofReportConfigPerAperiodicTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofReportConfigPerAperiodicTrigger) Reset() {
	*x = MaxNrofReportConfigPerAperiodicTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[419]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofReportConfigPerAperiodicTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofReportConfigPerAperiodicTrigger) ProtoMessage() {}

func (x *MaxNrofReportConfigPerAperiodicTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[419]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofReportConfigPerAperiodicTrigger.ProtoReflect.Descriptor instead.
func (*MaxNrofReportConfigPerAperiodicTrigger) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{419}
}

func (x *MaxNrofReportConfigPerAperiodicTrigger) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2023
// {-}
type MaxNrofNzpCSiRSResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:192,valueUB:192,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:192,valueUB:192,"`
}

func (x *MaxNrofNzpCSiRSResources) Reset() {
	*x = MaxNrofNzpCSiRSResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[420]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResources) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResources) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[420]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResources.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResources) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{420}
}

func (x *MaxNrofNzpCSiRSResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2024
// {-}
type MaxNrofNzpCSiRSResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:191,valueUB:191,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:191,valueUB:191,"`
}

func (x *MaxNrofNzpCSiRSResources1) Reset() {
	*x = MaxNrofNzpCSiRSResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[421]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResources1) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResources1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[421]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResources1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{421}
}

func (x *MaxNrofNzpCSiRSResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2025
// {-}
type MaxNrofNzpCSiRSResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofNzpCSiRSResourcesPerSet) Reset() {
	*x = MaxNrofNzpCSiRSResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[422]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[422]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{422}
}

func (x *MaxNrofNzpCSiRSResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2026
// {-}
type MaxNrofNzpCSiRSResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofNzpCSiRSResourceSets) Reset() {
	*x = MaxNrofNzpCSiRSResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[423]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResourceSets) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[423]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResourceSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{423}
}

func (x *MaxNrofNzpCSiRSResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2027
// {-}
type MaxNrofNzpCSiRSResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofNzpCSiRSResourceSets1) Reset() {
	*x = MaxNrofNzpCSiRSResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[424]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResourceSets1) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[424]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResourceSets1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{424}
}

func (x *MaxNrofNzpCSiRSResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2028
// {-}
type MaxNrofNzpCSiRSResourceSetsPerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofNzpCSiRSResourceSetsPerConfig) Reset() {
	*x = MaxNrofNzpCSiRSResourceSetsPerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[425]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResourceSetsPerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResourceSetsPerConfig) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResourceSetsPerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[425]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResourceSetsPerConfig.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResourceSetsPerConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{425}
}

func (x *MaxNrofNzpCSiRSResourceSetsPerConfig) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2029
// {-}
type MaxNrofNzpCSiRSResourcesPerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrofNzpCSiRSResourcesPerConfig) Reset() {
	*x = MaxNrofNzpCSiRSResourcesPerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[426]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResourcesPerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResourcesPerConfig) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResourcesPerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[426]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResourcesPerConfig.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResourcesPerConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{426}
}

func (x *MaxNrofNzpCSiRSResourcesPerConfig) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2030
// {-}
type MaxNrofZpCSiRSResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofZpCSiRSResources) Reset() {
	*x = MaxNrofZpCSiRSResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[427]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofZpCSiRSResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofZpCSiRSResources) ProtoMessage() {}

func (x *MaxNrofZpCSiRSResources) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[427]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofZpCSiRSResources.ProtoReflect.Descriptor instead.
func (*MaxNrofZpCSiRSResources) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{427}
}

func (x *MaxNrofZpCSiRSResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2031
// {-}
type MaxNrofZpCSiRSResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofZpCSiRSResources1) Reset() {
	*x = MaxNrofZpCSiRSResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[428]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofZpCSiRSResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofZpCSiRSResources1) ProtoMessage() {}

func (x *MaxNrofZpCSiRSResources1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[428]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofZpCSiRSResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofZpCSiRSResources1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{428}
}

func (x *MaxNrofZpCSiRSResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2032
// {-}
type MaxNrofZpCSiRSResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofZpCSiRSResourceSets1) Reset() {
	*x = MaxNrofZpCSiRSResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[429]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofZpCSiRSResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofZpCSiRSResourceSets1) ProtoMessage() {}

func (x *MaxNrofZpCSiRSResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[429]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofZpCSiRSResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofZpCSiRSResourceSets1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{429}
}

func (x *MaxNrofZpCSiRSResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2033
// {-}
type MaxNrofZpCSiRSResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofZpCSiRSResourcesPerSet) Reset() {
	*x = MaxNrofZpCSiRSResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[430]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofZpCSiRSResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofZpCSiRSResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofZpCSiRSResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[430]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofZpCSiRSResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofZpCSiRSResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{430}
}

func (x *MaxNrofZpCSiRSResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2034
// {-}
type MaxNrofZpCSiRSResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofZpCSiRSResourceSets) Reset() {
	*x = MaxNrofZpCSiRSResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[431]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofZpCSiRSResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofZpCSiRSResourceSets) ProtoMessage() {}

func (x *MaxNrofZpCSiRSResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[431]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofZpCSiRSResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofZpCSiRSResourceSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{431}
}

func (x *MaxNrofZpCSiRSResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2035
// {-}
type MaxNrofCsiIMResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofCsiIMResources) Reset() {
	*x = MaxNrofCsiIMResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[432]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResources) ProtoMessage() {}

func (x *MaxNrofCsiIMResources) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[432]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResources.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResources) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{432}
}

func (x *MaxNrofCsiIMResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2036
// {-}
type MaxNrofCsiIMResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofCsiIMResources1) Reset() {
	*x = MaxNrofCsiIMResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[433]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResources1) ProtoMessage() {}

func (x *MaxNrofCsiIMResources1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[433]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResources1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{433}
}

func (x *MaxNrofCsiIMResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2037
// {-}
type MaxNrofCsiIMResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofCsiIMResourcesPerSet) Reset() {
	*x = MaxNrofCsiIMResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[434]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofCsiIMResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[434]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{434}
}

func (x *MaxNrofCsiIMResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2038
// {-}
type MaxNrofCsiIMResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofCsiIMResourceSets) Reset() {
	*x = MaxNrofCsiIMResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[435]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResourceSets) ProtoMessage() {}

func (x *MaxNrofCsiIMResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[435]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResourceSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{435}
}

func (x *MaxNrofCsiIMResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2039
// {-}
type MaxNrofCsiIMResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofCsiIMResourceSets1) Reset() {
	*x = MaxNrofCsiIMResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[436]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResourceSets1) ProtoMessage() {}

func (x *MaxNrofCsiIMResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[436]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResourceSets1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{436}
}

func (x *MaxNrofCsiIMResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2040
// {-}
type MaxNrofCsiIMResourceSetsPerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCsiIMResourceSetsPerConfig) Reset() {
	*x = MaxNrofCsiIMResourceSetsPerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[437]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResourceSetsPerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResourceSetsPerConfig) ProtoMessage() {}

func (x *MaxNrofCsiIMResourceSetsPerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[437]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResourceSetsPerConfig.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResourceSetsPerConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{437}
}

func (x *MaxNrofCsiIMResourceSetsPerConfig) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2041
// {-}
type MaxNrofCsiSSbResourcePerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofCsiSSbResourcePerSet) Reset() {
	*x = MaxNrofCsiSSbResourcePerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[438]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiSSbResourcePerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiSSbResourcePerSet) ProtoMessage() {}

func (x *MaxNrofCsiSSbResourcePerSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[438]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiSSbResourcePerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiSSbResourcePerSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{438}
}

func (x *MaxNrofCsiSSbResourcePerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2042
// {-}
type MaxNrofCsiSSbResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofCsiSSbResourceSets) Reset() {
	*x = MaxNrofCsiSSbResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[439]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiSSbResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiSSbResourceSets) ProtoMessage() {}

func (x *MaxNrofCsiSSbResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[439]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiSSbResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiSSbResourceSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{439}
}

func (x *MaxNrofCsiSSbResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2043
// {-}
type MaxNrofCsiSSbResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofCsiSSbResourceSets1) Reset() {
	*x = MaxNrofCsiSSbResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[440]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiSSbResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiSSbResourceSets1) ProtoMessage() {}

func (x *MaxNrofCsiSSbResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[440]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiSSbResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiSSbResourceSets1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{440}
}

func (x *MaxNrofCsiSSbResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2044
// {-}
type MaxNrofCsiSSbResourceSetsPerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:1,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:1,"`
}

func (x *MaxNrofCsiSSbResourceSetsPerConfig) Reset() {
	*x = MaxNrofCsiSSbResourceSetsPerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[441]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiSSbResourceSetsPerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiSSbResourceSetsPerConfig) ProtoMessage() {}

func (x *MaxNrofCsiSSbResourceSetsPerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[441]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiSSbResourceSetsPerConfig.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiSSbResourceSetsPerConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{441}
}

func (x *MaxNrofCsiSSbResourceSetsPerConfig) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2045
// {-}
type MaxNrofCsiSSbResourceSetsPerConfigExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrofCsiSSbResourceSetsPerConfigExt) Reset() {
	*x = MaxNrofCsiSSbResourceSetsPerConfigExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[442]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiSSbResourceSetsPerConfigExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiSSbResourceSetsPerConfigExt) ProtoMessage() {}

func (x *MaxNrofCsiSSbResourceSetsPerConfigExt) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[442]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiSSbResourceSetsPerConfigExt.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiSSbResourceSetsPerConfigExt) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{442}
}

func (x *MaxNrofCsiSSbResourceSetsPerConfigExt) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2047
// {-}
type MaxNrofFailureDetectionResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:10,valueUB:10,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:10,valueUB:10,"`
}

func (x *MaxNrofFailureDetectionResources) Reset() {
	*x = MaxNrofFailureDetectionResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[443]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofFailureDetectionResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofFailureDetectionResources) ProtoMessage() {}

func (x *MaxNrofFailureDetectionResources) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[443]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofFailureDetectionResources.ProtoReflect.Descriptor instead.
func (*MaxNrofFailureDetectionResources) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{443}
}

func (x *MaxNrofFailureDetectionResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2048
// {-}
type MaxNrofFailureDetectionResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:9,valueUB:9,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:9,valueUB:9,"`
}

func (x *MaxNrofFailureDetectionResources1) Reset() {
	*x = MaxNrofFailureDetectionResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[444]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofFailureDetectionResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofFailureDetectionResources1) ProtoMessage() {}

func (x *MaxNrofFailureDetectionResources1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[444]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofFailureDetectionResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofFailureDetectionResources1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{444}
}

func (x *MaxNrofFailureDetectionResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2049
// {-}
type MaxNrofFailureDetectionResources1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofFailureDetectionResources1R17) Reset() {
	*x = MaxNrofFailureDetectionResources1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[445]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofFailureDetectionResources1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofFailureDetectionResources1R17) ProtoMessage() {}

func (x *MaxNrofFailureDetectionResources1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[445]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofFailureDetectionResources1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofFailureDetectionResources1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{445}
}

func (x *MaxNrofFailureDetectionResources1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2050
// {-}
type MaxNrofFreqSlr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofFreqSlr16) Reset() {
	*x = MaxNrofFreqSlr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[446]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofFreqSlr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofFreqSlr16) ProtoMessage() {}

func (x *MaxNrofFreqSlr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[446]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofFreqSlr16.ProtoReflect.Descriptor instead.
func (*MaxNrofFreqSlr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{446}
}

func (x *MaxNrofFreqSlr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2051
// {-}
type MaxNrofSlBWpsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofSlBWpsr16) Reset() {
	*x = MaxNrofSlBWpsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[447]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlBWpsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlBWpsr16) ProtoMessage() {}

func (x *MaxNrofSlBWpsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[447]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlBWpsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlBWpsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{447}
}

func (x *MaxNrofSlBWpsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2052
// {-}
type MaxFreqSlEUtrar16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxFreqSlEUtrar16) Reset() {
	*x = MaxFreqSlEUtrar16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[448]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqSlEUtrar16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqSlEUtrar16) ProtoMessage() {}

func (x *MaxFreqSlEUtrar16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[448]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqSlEUtrar16.ProtoReflect.Descriptor instead.
func (*MaxFreqSlEUtrar16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{448}
}

func (x *MaxFreqSlEUtrar16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2053
// {-}
type MaxNrofSlMeasIdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSlMeasIdr16) Reset() {
	*x = MaxNrofSlMeasIdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[449]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlMeasIdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlMeasIdr16) ProtoMessage() {}

func (x *MaxNrofSlMeasIdr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[449]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlMeasIdr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlMeasIdr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{449}
}

func (x *MaxNrofSlMeasIdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2054
// {-}
type MaxNrofSlObjectIdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSlObjectIdr16) Reset() {
	*x = MaxNrofSlObjectIdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[450]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlObjectIdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlObjectIdr16) ProtoMessage() {}

func (x *MaxNrofSlObjectIdr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[450]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlObjectIdr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlObjectIdr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{450}
}

func (x *MaxNrofSlObjectIdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2055
// {-}
type MaxNrofSlReportConfigIdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSlReportConfigIdr16) Reset() {
	*x = MaxNrofSlReportConfigIdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[451]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlReportConfigIdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlReportConfigIdr16) ProtoMessage() {}

func (x *MaxNrofSlReportConfigIdr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[451]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlReportConfigIdr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlReportConfigIdr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{451}
}

func (x *MaxNrofSlReportConfigIdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2056
// {-}
type MaxNrofSlPoolToMeasureNrr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSlPoolToMeasureNrr16) Reset() {
	*x = MaxNrofSlPoolToMeasureNrr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[452]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlPoolToMeasureNrr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlPoolToMeasureNrr16) ProtoMessage() {}

func (x *MaxNrofSlPoolToMeasureNrr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[452]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlPoolToMeasureNrr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlPoolToMeasureNrr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{452}
}

func (x *MaxNrofSlPoolToMeasureNrr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2058
// {-}
type MaxFreqSlNRr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxFreqSlNRr16) Reset() {
	*x = MaxFreqSlNRr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[453]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqSlNRr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqSlNRr16) ProtoMessage() {}

func (x *MaxFreqSlNRr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[453]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqSlNRr16.ProtoReflect.Descriptor instead.
func (*MaxFreqSlNRr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{453}
}

func (x *MaxFreqSlNRr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2059
// {-}
type MaxNrofSlQFisr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2048,valueUB:2048,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2048,valueUB:2048,"`
}

func (x *MaxNrofSlQFisr16) Reset() {
	*x = MaxNrofSlQFisr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[454]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlQFisr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlQFisr16) ProtoMessage() {}

func (x *MaxNrofSlQFisr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[454]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlQFisr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlQFisr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{454}
}

func (x *MaxNrofSlQFisr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2060
// {-}
type MaxNrofSlQFisPerDestr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSlQFisPerDestr16) Reset() {
	*x = MaxNrofSlQFisPerDestr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[455]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlQFisPerDestr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlQFisPerDestr16) ProtoMessage() {}

func (x *MaxNrofSlQFisPerDestr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[455]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlQFisPerDestr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlQFisPerDestr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{455}
}

func (x *MaxNrofSlQFisPerDestr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2061
// {-}
type MaxNrofObjectId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofObjectId) Reset() {
	*x = MaxNrofObjectId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[456]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofObjectId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofObjectId) ProtoMessage() {}

func (x *MaxNrofObjectId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[456]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofObjectId.ProtoReflect.Descriptor instead.
func (*MaxNrofObjectId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{456}
}

func (x *MaxNrofObjectId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2062
// {-}
type MaxNrofPageRec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofPageRec) Reset() {
	*x = MaxNrofPageRec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[457]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPageRec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPageRec) ProtoMessage() {}

func (x *MaxNrofPageRec) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[457]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPageRec.ProtoReflect.Descriptor instead.
func (*MaxNrofPageRec) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{457}
}

func (x *MaxNrofPageRec) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2063
// {-}
type MaxNrofPciRanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofPciRanges) Reset() {
	*x = MaxNrofPciRanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[458]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPciRanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPciRanges) ProtoMessage() {}

func (x *MaxNrofPciRanges) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[458]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPciRanges.ProtoReflect.Descriptor instead.
func (*MaxNrofPciRanges) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{458}
}

func (x *MaxNrofPciRanges) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2064
// {-}
type MaxPlmn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:12,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:12,"`
}

func (x *MaxPlmn) Reset() {
	*x = MaxPlmn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[459]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPlmn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPlmn) ProtoMessage() {}

func (x *MaxPlmn) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[459]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPlmn.ProtoReflect.Descriptor instead.
func (*MaxPlmn) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{459}
}

func (x *MaxPlmn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2065
// {-}
type MaxTacr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:12,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:12,"`
}

func (x *MaxTacr17) Reset() {
	*x = MaxTacr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[460]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxTacr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxTacr17) ProtoMessage() {}

func (x *MaxTacr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[460]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxTacr17.ProtoReflect.Descriptor instead.
func (*MaxTacr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{460}
}

func (x *MaxTacr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2066
// {-}
type MaxNrofCsiRSResourcesRrm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:96,valueUB:96,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:96,valueUB:96,"`
}

func (x *MaxNrofCsiRSResourcesRrm) Reset() {
	*x = MaxNrofCsiRSResourcesRrm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[461]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesRrm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesRrm) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesRrm) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[461]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesRrm.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesRrm) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{461}
}

func (x *MaxNrofCsiRSResourcesRrm) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2067
// {-}
type MaxNrofCsiRSResourcesRrm1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:95,valueUB:95,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:95,valueUB:95,"`
}

func (x *MaxNrofCsiRSResourcesRrm1) Reset() {
	*x = MaxNrofCsiRSResourcesRrm1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[462]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesRrm1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesRrm1) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesRrm1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[462]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesRrm1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesRrm1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{462}
}

func (x *MaxNrofCsiRSResourcesRrm1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2069
// {-}
type MaxNrofMeasId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofMeasId) Reset() {
	*x = MaxNrofMeasId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[463]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMeasId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMeasId) ProtoMessage() {}

func (x *MaxNrofMeasId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[463]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMeasId.ProtoReflect.Descriptor instead.
func (*MaxNrofMeasId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{463}
}

func (x *MaxNrofMeasId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2070
// {-}
type MaxNrofQuantityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrofQuantityConfig) Reset() {
	*x = MaxNrofQuantityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[464]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofQuantityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofQuantityConfig) ProtoMessage() {}

func (x *MaxNrofQuantityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[464]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofQuantityConfig.ProtoReflect.Descriptor instead.
func (*MaxNrofQuantityConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{464}
}

func (x *MaxNrofQuantityConfig) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2071
// {-}
type MaxNrofCsiRSCellsRrm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:96,valueUB:96,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:96,valueUB:96,"`
}

func (x *MaxNrofCsiRSCellsRrm) Reset() {
	*x = MaxNrofCsiRSCellsRrm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[465]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSCellsRrm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSCellsRrm) ProtoMessage() {}

func (x *MaxNrofCsiRSCellsRrm) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[465]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSCellsRrm.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSCellsRrm) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{465}
}

func (x *MaxNrofCsiRSCellsRrm) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2072
// {-}
type MaxNrofSlDestr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofSlDestr16) Reset() {
	*x = MaxNrofSlDestr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[466]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlDestr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlDestr16) ProtoMessage() {}

func (x *MaxNrofSlDestr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[466]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlDestr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlDestr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{466}
}

func (x *MaxNrofSlDestr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2073
// {-}
type MaxNrofSlDest1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofSlDest1R16) Reset() {
	*x = MaxNrofSlDest1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[467]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlDest1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlDest1R16) ProtoMessage() {}

func (x *MaxNrofSlDest1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[467]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlDest1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlDest1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{467}
}

func (x *MaxNrofSlDest1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2074
// {-}
type MaxNrofSlrbr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxNrofSlrbr16) Reset() {
	*x = MaxNrofSlrbr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[468]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlrbr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlrbr16) ProtoMessage() {}

func (x *MaxNrofSlrbr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[468]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlrbr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlrbr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{468}
}

func (x *MaxNrofSlrbr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2075
// {-}
type MaxSlLCidr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxSlLCidr16) Reset() {
	*x = MaxSlLCidr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[469]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSlLCidr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSlLCidr16) ProtoMessage() {}

func (x *MaxSlLCidr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[469]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSlLCidr16.ProtoReflect.Descriptor instead.
func (*MaxSlLCidr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{469}
}

func (x *MaxSlLCidr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2076
// {-}
type MaxSlSyncConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxSlSyncConfigr16) Reset() {
	*x = MaxSlSyncConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[470]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSlSyncConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSlSyncConfigr16) ProtoMessage() {}

func (x *MaxSlSyncConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[470]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSlSyncConfigr16.ProtoReflect.Descriptor instead.
func (*MaxSlSyncConfigr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{470}
}

func (x *MaxSlSyncConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2077
// {-}
type MaxNrofRxpoolr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofRxpoolr16) Reset() {
	*x = MaxNrofRxpoolr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[471]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRxpoolr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRxpoolr16) ProtoMessage() {}

func (x *MaxNrofRxpoolr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[471]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRxpoolr16.ProtoReflect.Descriptor instead.
func (*MaxNrofRxpoolr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{471}
}

func (x *MaxNrofRxpoolr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2079
// {-}
type MaxNrofTxpoolr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofTxpoolr16) Reset() {
	*x = MaxNrofTxpoolr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[472]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTxpoolr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTxpoolr16) ProtoMessage() {}

func (x *MaxNrofTxpoolr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[472]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTxpoolr16.ProtoReflect.Descriptor instead.
func (*MaxNrofTxpoolr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{472}
}

func (x *MaxNrofTxpoolr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2081
// {-}
type MaxNrofPoolIdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofPoolIdr16) Reset() {
	*x = MaxNrofPoolIdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[473]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPoolIdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPoolIdr16) ProtoMessage() {}

func (x *MaxNrofPoolIdr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[473]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPoolIdr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPoolIdr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{473}
}

func (x *MaxNrofPoolIdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2083
// {-}
type MaxNrofSrsPathlossReferenceRsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSrsPathlossReferenceRsr16) Reset() {
	*x = MaxNrofSrsPathlossReferenceRsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[474]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPathlossReferenceRsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPathlossReferenceRsr16) ProtoMessage() {}

func (x *MaxNrofSrsPathlossReferenceRsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[474]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPathlossReferenceRsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPathlossReferenceRsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{474}
}

func (x *MaxNrofSrsPathlossReferenceRsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2084
// {-}
type MaxNrofSrsPathlossReferenceRs1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofSrsPathlossReferenceRs1R16) Reset() {
	*x = MaxNrofSrsPathlossReferenceRs1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[475]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPathlossReferenceRs1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPathlossReferenceRs1R16) ProtoMessage() {}

func (x *MaxNrofSrsPathlossReferenceRs1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[475]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPathlossReferenceRs1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPathlossReferenceRs1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{475}
}

func (x *MaxNrofSrsPathlossReferenceRs1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2086
// {-}
type MaxNrofSrsResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSrsResourceSets) Reset() {
	*x = MaxNrofSrsResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[476]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsResourceSets) ProtoMessage() {}

func (x *MaxNrofSrsResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[476]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsResourceSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{476}
}

func (x *MaxNrofSrsResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2087
// {-}
type MaxNrofSrsResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofSrsResourceSets1) Reset() {
	*x = MaxNrofSrsResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[477]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsResourceSets1) ProtoMessage() {}

func (x *MaxNrofSrsResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[477]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsResourceSets1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{477}
}

func (x *MaxNrofSrsResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2088
// {-}
type MaxNrofSrsPosResourceSetsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSrsPosResourceSetsr16) Reset() {
	*x = MaxNrofSrsPosResourceSetsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[478]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPosResourceSetsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPosResourceSetsr16) ProtoMessage() {}

func (x *MaxNrofSrsPosResourceSetsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[478]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPosResourceSetsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPosResourceSetsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{478}
}

func (x *MaxNrofSrsPosResourceSetsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2089
// {-}
type MaxNrofSrsPosResourceSets1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofSrsPosResourceSets1R16) Reset() {
	*x = MaxNrofSrsPosResourceSets1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[479]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPosResourceSets1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPosResourceSets1R16) ProtoMessage() {}

func (x *MaxNrofSrsPosResourceSets1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[479]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPosResourceSets1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPosResourceSets1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{479}
}

func (x *MaxNrofSrsPosResourceSets1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2090
// {-}
type MaxNrofSrsResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSrsResources) Reset() {
	*x = MaxNrofSrsResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[480]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsResources) ProtoMessage() {}

func (x *MaxNrofSrsResources) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[480]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsResources.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsResources) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{480}
}

func (x *MaxNrofSrsResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2091
// {-}
type MaxNrofSrsResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofSrsResources1) Reset() {
	*x = MaxNrofSrsResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[481]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsResources1) ProtoMessage() {}

func (x *MaxNrofSrsResources1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[481]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsResources1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{481}
}

func (x *MaxNrofSrsResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2092
// {-}
type MaxNrofSrsPosResourcesr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSrsPosResourcesr16) Reset() {
	*x = MaxNrofSrsPosResourcesr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[482]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPosResourcesr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPosResourcesr16) ProtoMessage() {}

func (x *MaxNrofSrsPosResourcesr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[482]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPosResourcesr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPosResourcesr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{482}
}

func (x *MaxNrofSrsPosResourcesr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2093
// {-}
type MaxNrofSrsPosResources1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofSrsPosResources1R16) Reset() {
	*x = MaxNrofSrsPosResources1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[483]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPosResources1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPosResources1R16) ProtoMessage() {}

func (x *MaxNrofSrsPosResources1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[483]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPosResources1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPosResources1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{483}
}

func (x *MaxNrofSrsPosResources1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2094
// {-}
type MaxNrofSrsResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSrsResourcesPerSet) Reset() {
	*x = MaxNrofSrsResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[484]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofSrsResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[484]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{484}
}

func (x *MaxNrofSrsResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2095
// {-}
type MaxNrofSrsTriggerStates1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofSrsTriggerStates1) Reset() {
	*x = MaxNrofSrsTriggerStates1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[485]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsTriggerStates1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsTriggerStates1) ProtoMessage() {}

func (x *MaxNrofSrsTriggerStates1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[485]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsTriggerStates1.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsTriggerStates1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{485}
}

func (x *MaxNrofSrsTriggerStates1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2096
// {-}
type MaxNrofSrsTriggerStates2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrofSrsTriggerStates2) Reset() {
	*x = MaxNrofSrsTriggerStates2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[486]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsTriggerStates2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsTriggerStates2) ProtoMessage() {}

func (x *MaxNrofSrsTriggerStates2) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[486]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsTriggerStates2.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsTriggerStates2) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{486}
}

func (x *MaxNrofSrsTriggerStates2) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2097
// {-}
type MaxRatCapabilityContainers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxRatCapabilityContainers) Reset() {
	*x = MaxRatCapabilityContainers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[487]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRatCapabilityContainers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRatCapabilityContainers) ProtoMessage() {}

func (x *MaxRatCapabilityContainers) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[487]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRatCapabilityContainers.ProtoReflect.Descriptor instead.
func (*MaxRatCapabilityContainers) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{487}
}

func (x *MaxRatCapabilityContainers) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2098
// {-}
type MaxSimultaneousBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxSimultaneousBands) Reset() {
	*x = MaxSimultaneousBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[488]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSimultaneousBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSimultaneousBands) ProtoMessage() {}

func (x *MaxSimultaneousBands) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[488]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSimultaneousBands.ProtoReflect.Descriptor instead.
func (*MaxSimultaneousBands) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{488}
}

func (x *MaxSimultaneousBands) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2099
// {-}
type MaxUltxSwitchingBandPairs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxUltxSwitchingBandPairs) Reset() {
	*x = MaxUltxSwitchingBandPairs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[489]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxUltxSwitchingBandPairs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxUltxSwitchingBandPairs) ProtoMessage() {}

func (x *MaxUltxSwitchingBandPairs) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[489]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxUltxSwitchingBandPairs.ProtoReflect.Descriptor instead.
func (*MaxUltxSwitchingBandPairs) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{489}
}

func (x *MaxUltxSwitchingBandPairs) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2101
// {-}
type MaxNrofSlotFormatCombinationsPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxNrofSlotFormatCombinationsPerSet) Reset() {
	*x = MaxNrofSlotFormatCombinationsPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[490]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlotFormatCombinationsPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlotFormatCombinationsPerSet) ProtoMessage() {}

func (x *MaxNrofSlotFormatCombinationsPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[490]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlotFormatCombinationsPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofSlotFormatCombinationsPerSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{490}
}

func (x *MaxNrofSlotFormatCombinationsPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2102
// {-}
type MaxNrofSlotFormatCombinationsPerSet1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:511,valueUB:511,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:511,valueUB:511,"`
}

func (x *MaxNrofSlotFormatCombinationsPerSet1) Reset() {
	*x = MaxNrofSlotFormatCombinationsPerSet1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[491]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlotFormatCombinationsPerSet1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlotFormatCombinationsPerSet1) ProtoMessage() {}

func (x *MaxNrofSlotFormatCombinationsPerSet1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[491]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlotFormatCombinationsPerSet1.ProtoReflect.Descriptor instead.
func (*MaxNrofSlotFormatCombinationsPerSet1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{491}
}

func (x *MaxNrofSlotFormatCombinationsPerSet1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2103
// {-}
type MaxNrofTrafficPatternr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofTrafficPatternr16) Reset() {
	*x = MaxNrofTrafficPatternr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[492]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTrafficPatternr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTrafficPatternr16) ProtoMessage() {}

func (x *MaxNrofTrafficPatternr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[492]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTrafficPatternr16.ProtoReflect.Descriptor instead.
func (*MaxNrofTrafficPatternr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{492}
}

func (x *MaxNrofTrafficPatternr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2104
// {-}
type MaxNrofPucchResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrofPucchResources) Reset() {
	*x = MaxNrofPucchResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[493]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResources) ProtoMessage() {}

func (x *MaxNrofPucchResources) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[493]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResources.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResources) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{493}
}

func (x *MaxNrofPucchResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2105
// {-}
type MaxNrofPucchResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:127,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:127,valueUB:127,"`
}

func (x *MaxNrofPucchResources1) Reset() {
	*x = MaxNrofPucchResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[494]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResources1) ProtoMessage() {}

func (x *MaxNrofPucchResources1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[494]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResources1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{494}
}

func (x *MaxNrofPucchResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2106
// {-}
type MaxNrofPucchResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofPucchResourceSets) Reset() {
	*x = MaxNrofPucchResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[495]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourceSets) ProtoMessage() {}

func (x *MaxNrofPucchResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[495]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourceSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{495}
}

func (x *MaxNrofPucchResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2107
// {-}
type MaxNrofPucchResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofPucchResourceSets1) Reset() {
	*x = MaxNrofPucchResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[496]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourceSets1) ProtoMessage() {}

func (x *MaxNrofPucchResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[496]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourceSets1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{496}
}

func (x *MaxNrofPucchResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2108
// {-}
type MaxNrofPucchResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofPucchResourcesPerSet) Reset() {
	*x = MaxNrofPucchResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[497]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofPucchResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[497]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{497}
}

func (x *MaxNrofPucchResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2109
// {-}
type MaxNrofPucchP0PerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofPucchP0PerSet) Reset() {
	*x = MaxNrofPucchP0PerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[498]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchP0PerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchP0PerSet) ProtoMessage() {}

func (x *MaxNrofPucchP0PerSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[498]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchP0PerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchP0PerSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{498}
}

func (x *MaxNrofPucchP0PerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2110
// {-}
type MaxNrofPucchPathlossReferenceRss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofPucchPathlossReferenceRss) Reset() {
	*x = MaxNrofPucchPathlossReferenceRss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[499]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchPathlossReferenceRss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchPathlossReferenceRss) ProtoMessage() {}

func (x *MaxNrofPucchPathlossReferenceRss) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[499]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchPathlossReferenceRss.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchPathlossReferenceRss) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{499}
}

func (x *MaxNrofPucchPathlossReferenceRss) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2111
// {-}
type MaxNrofPucchPathlossReferenceRss1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofPucchPathlossReferenceRss1) Reset() {
	*x = MaxNrofPucchPathlossReferenceRss1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[500]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchPathlossReferenceRss1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchPathlossReferenceRss1) ProtoMessage() {}

func (x *MaxNrofPucchPathlossReferenceRss1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[500]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchPathlossReferenceRss1.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchPathlossReferenceRss1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{500}
}

func (x *MaxNrofPucchPathlossReferenceRss1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2113
// {-}
type MaxNrofPucchPathlossReferenceRssr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofPucchPathlossReferenceRssr16) Reset() {
	*x = MaxNrofPucchPathlossReferenceRssr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[501]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchPathlossReferenceRssr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchPathlossReferenceRssr16) ProtoMessage() {}

func (x *MaxNrofPucchPathlossReferenceRssr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[501]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchPathlossReferenceRssr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchPathlossReferenceRssr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{501}
}

func (x *MaxNrofPucchPathlossReferenceRssr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2115
// {-}
type MaxNrofPucchPathlossReferenceRss1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofPucchPathlossReferenceRss1R16) Reset() {
	*x = MaxNrofPucchPathlossReferenceRss1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[502]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchPathlossReferenceRss1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchPathlossReferenceRss1R16) ProtoMessage() {}

func (x *MaxNrofPucchPathlossReferenceRss1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[502]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchPathlossReferenceRss1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchPathlossReferenceRss1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{502}
}

func (x *MaxNrofPucchPathlossReferenceRss1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2117
// {-}
type MaxNrofPucchPathlossReferenceRss1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofPucchPathlossReferenceRss1R17) Reset() {
	*x = MaxNrofPucchPathlossReferenceRss1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[503]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchPathlossReferenceRss1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchPathlossReferenceRss1R17) ProtoMessage() {}

func (x *MaxNrofPucchPathlossReferenceRss1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[503]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchPathlossReferenceRss1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchPathlossReferenceRss1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{503}
}

func (x *MaxNrofPucchPathlossReferenceRss1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2119
// {-}
type MaxNrofPucchPathlossReferenceRssDiffr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:60,valueUB:60,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:60,valueUB:60,"`
}

func (x *MaxNrofPucchPathlossReferenceRssDiffr16) Reset() {
	*x = MaxNrofPucchPathlossReferenceRssDiffr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[504]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchPathlossReferenceRssDiffr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchPathlossReferenceRssDiffr16) ProtoMessage() {}

func (x *MaxNrofPucchPathlossReferenceRssDiffr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[504]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchPathlossReferenceRssDiffr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchPathlossReferenceRssDiffr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{504}
}

func (x *MaxNrofPucchPathlossReferenceRssDiffr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2120
// {-}
type MaxNrofPucchResourceGroupsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofPucchResourceGroupsr16) Reset() {
	*x = MaxNrofPucchResourceGroupsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[505]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourceGroupsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourceGroupsr16) ProtoMessage() {}

func (x *MaxNrofPucchResourceGroupsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[505]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourceGroupsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourceGroupsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{505}
}

func (x *MaxNrofPucchResourceGroupsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2121
// {-}
type MaxNrofPucchResourcesPerGroupr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrofPucchResourcesPerGroupr16) Reset() {
	*x = MaxNrofPucchResourcesPerGroupr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[506]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourcesPerGroupr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourcesPerGroupr16) ProtoMessage() {}

func (x *MaxNrofPucchResourcesPerGroupr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[506]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourcesPerGroupr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourcesPerGroupr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{506}
}

func (x *MaxNrofPucchResourcesPerGroupr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2122
// {-}
type MaxNrofPowerControlSetInfosr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofPowerControlSetInfosr17) Reset() {
	*x = MaxNrofPowerControlSetInfosr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[507]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPowerControlSetInfosr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPowerControlSetInfosr17) ProtoMessage() {}

func (x *MaxNrofPowerControlSetInfosr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[507]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPowerControlSetInfosr17.ProtoReflect.Descriptor instead.
func (*MaxNrofPowerControlSetInfosr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{507}
}

func (x *MaxNrofPowerControlSetInfosr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2123
// {-}
type MaxNrofMultiplePuschsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofMultiplePuschsr16) Reset() {
	*x = MaxNrofMultiplePuschsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[508]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMultiplePuschsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMultiplePuschsr16) ProtoMessage() {}

func (x *MaxNrofMultiplePuschsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[508]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMultiplePuschsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofMultiplePuschsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{508}
}

func (x *MaxNrofMultiplePuschsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2124
// {-}
type MaxNrofP0PUschAlphaSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:30,valueUB:30,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:30,valueUB:30,"`
}

func (x *MaxNrofP0PUschAlphaSets) Reset() {
	*x = MaxNrofP0PUschAlphaSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[509]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofP0PUschAlphaSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofP0PUschAlphaSets) ProtoMessage() {}

func (x *MaxNrofP0PUschAlphaSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[509]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofP0PUschAlphaSets.ProtoReflect.Descriptor instead.
func (*MaxNrofP0PUschAlphaSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{509}
}

func (x *MaxNrofP0PUschAlphaSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2125
// {-}
type MaxNrofP0PUschAlphaSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:29,valueUB:29,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:29,valueUB:29,"`
}

func (x *MaxNrofP0PUschAlphaSets1) Reset() {
	*x = MaxNrofP0PUschAlphaSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[510]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofP0PUschAlphaSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofP0PUschAlphaSets1) ProtoMessage() {}

func (x *MaxNrofP0PUschAlphaSets1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[510]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofP0PUschAlphaSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofP0PUschAlphaSets1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{510}
}

func (x *MaxNrofP0PUschAlphaSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2126
// {-}
type MaxNrofPuschPathlossReferenceRss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofPuschPathlossReferenceRss) Reset() {
	*x = MaxNrofPuschPathlossReferenceRss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[511]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPuschPathlossReferenceRss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPuschPathlossReferenceRss) ProtoMessage() {}

func (x *MaxNrofPuschPathlossReferenceRss) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[511]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPuschPathlossReferenceRss.ProtoReflect.Descriptor instead.
func (*MaxNrofPuschPathlossReferenceRss) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{511}
}

func (x *MaxNrofPuschPathlossReferenceRss) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2127
// {-}
type MaxNrofPuschPathlossReferenceRss1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofPuschPathlossReferenceRss1) Reset() {
	*x = MaxNrofPuschPathlossReferenceRss1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[512]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPuschPathlossReferenceRss1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPuschPathlossReferenceRss1) ProtoMessage() {}

func (x *MaxNrofPuschPathlossReferenceRss1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[512]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPuschPathlossReferenceRss1.ProtoReflect.Descriptor instead.
func (*MaxNrofPuschPathlossReferenceRss1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{512}
}

func (x *MaxNrofPuschPathlossReferenceRss1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2129
// {-}
type MaxNrofPuschPathlossReferenceRssr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofPuschPathlossReferenceRssr16) Reset() {
	*x = MaxNrofPuschPathlossReferenceRssr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[513]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPuschPathlossReferenceRssr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPuschPathlossReferenceRssr16) ProtoMessage() {}

func (x *MaxNrofPuschPathlossReferenceRssr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[513]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPuschPathlossReferenceRssr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPuschPathlossReferenceRssr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{513}
}

func (x *MaxNrofPuschPathlossReferenceRssr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2131
// {-}
type MaxNrofPuschPathlossReferenceRss1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofPuschPathlossReferenceRss1R16) Reset() {
	*x = MaxNrofPuschPathlossReferenceRss1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[514]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPuschPathlossReferenceRss1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPuschPathlossReferenceRss1R16) ProtoMessage() {}

func (x *MaxNrofPuschPathlossReferenceRss1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[514]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPuschPathlossReferenceRss1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofPuschPathlossReferenceRss1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{514}
}

func (x *MaxNrofPuschPathlossReferenceRss1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2133
// {-}
type MaxNrofPuschPathlossReferenceRssDiffr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:60,valueUB:60,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:60,valueUB:60,"`
}

func (x *MaxNrofPuschPathlossReferenceRssDiffr16) Reset() {
	*x = MaxNrofPuschPathlossReferenceRssDiffr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[515]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPuschPathlossReferenceRssDiffr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPuschPathlossReferenceRssDiffr16) ProtoMessage() {}

func (x *MaxNrofPuschPathlossReferenceRssDiffr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[515]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPuschPathlossReferenceRssDiffr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPuschPathlossReferenceRssDiffr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{515}
}

func (x *MaxNrofPuschPathlossReferenceRssDiffr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2135
// {-}
type MaxNrofPathlossReferenceRssr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofPathlossReferenceRssr17) Reset() {
	*x = MaxNrofPathlossReferenceRssr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[516]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPathlossReferenceRssr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPathlossReferenceRssr17) ProtoMessage() {}

func (x *MaxNrofPathlossReferenceRssr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[516]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPathlossReferenceRssr17.ProtoReflect.Descriptor instead.
func (*MaxNrofPathlossReferenceRssr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{516}
}

func (x *MaxNrofPathlossReferenceRssr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2137
// {-}
type MaxNrofPathlossReferenceRss1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofPathlossReferenceRss1R17) Reset() {
	*x = MaxNrofPathlossReferenceRss1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[517]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPathlossReferenceRss1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPathlossReferenceRss1R17) ProtoMessage() {}

func (x *MaxNrofPathlossReferenceRss1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[517]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPathlossReferenceRss1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofPathlossReferenceRss1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{517}
}

func (x *MaxNrofPathlossReferenceRss1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2139
// {-}
type MaxNrofNaicsEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofNaicsEntries) Reset() {
	*x = MaxNrofNaicsEntries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[518]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNaicsEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNaicsEntries) ProtoMessage() {}

func (x *MaxNrofNaicsEntries) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[518]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNaicsEntries.ProtoReflect.Descriptor instead.
func (*MaxNrofNaicsEntries) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{518}
}

func (x *MaxNrofNaicsEntries) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2140
// {-}
type MaxBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxBands) Reset() {
	*x = MaxBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[519]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBands) ProtoMessage() {}

func (x *MaxBands) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[519]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBands.ProtoReflect.Descriptor instead.
func (*MaxBands) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{519}
}

func (x *MaxBands) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2141
// {-}
type MaxBandsMrdc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1280,valueUB:1280,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1280,valueUB:1280,"`
}

func (x *MaxBandsMrdc) Reset() {
	*x = MaxBandsMrdc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[520]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBandsMrdc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBandsMrdc) ProtoMessage() {}

func (x *MaxBandsMrdc) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[520]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBandsMrdc.ProtoReflect.Descriptor instead.
func (*MaxBandsMrdc) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{520}
}

func (x *MaxBandsMrdc) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2142
// {-}
type MaxBandsEutra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxBandsEutra) Reset() {
	*x = MaxBandsEutra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[521]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBandsEutra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBandsEutra) ProtoMessage() {}

func (x *MaxBandsEutra) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[521]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBandsEutra.ProtoReflect.Descriptor instead.
func (*MaxBandsEutra) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{521}
}

func (x *MaxBandsEutra) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2143
// {-}
type MaxCellReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxCellReport) Reset() {
	*x = MaxCellReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[522]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellReport) ProtoMessage() {}

func (x *MaxCellReport) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[522]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellReport.ProtoReflect.Descriptor instead.
func (*MaxCellReport) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{522}
}

func (x *MaxCellReport) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2144
// {-}
type MaxDrb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:29,valueUB:29,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:29,valueUB:29,"`
}

func (x *MaxDrb) Reset() {
	*x = MaxDrb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[523]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxDrb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxDrb) ProtoMessage() {}

func (x *MaxDrb) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[523]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxDrb.ProtoReflect.Descriptor instead.
func (*MaxDrb) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{523}
}

func (x *MaxDrb) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2145
// {-}
type MaxFreq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxFreq) Reset() {
	*x = MaxFreq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[524]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreq) ProtoMessage() {}

func (x *MaxFreq) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[524]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreq.ProtoReflect.Descriptor instead.
func (*MaxFreq) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{524}
}

func (x *MaxFreq) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2146
// {-}
type MaxFreqLayers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxFreqLayers) Reset() {
	*x = MaxFreqLayers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[525]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqLayers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqLayers) ProtoMessage() {}

func (x *MaxFreqLayers) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[525]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqLayers.ProtoReflect.Descriptor instead.
func (*MaxFreqLayers) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{525}
}

func (x *MaxFreqLayers) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2147
// {-}
type MaxFreqPlus1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:9,valueUB:9,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:9,valueUB:9,"`
}

func (x *MaxFreqPlus1) Reset() {
	*x = MaxFreqPlus1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[526]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqPlus1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqPlus1) ProtoMessage() {}

func (x *MaxFreqPlus1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[526]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqPlus1.ProtoReflect.Descriptor instead.
func (*MaxFreqPlus1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{526}
}

func (x *MaxFreqPlus1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2148
// {-}
type MaxFreqIdcr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxFreqIdcr16) Reset() {
	*x = MaxFreqIdcr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[527]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqIdcr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqIdcr16) ProtoMessage() {}

func (x *MaxFreqIdcr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[527]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqIdcr16.ProtoReflect.Descriptor instead.
func (*MaxFreqIdcr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{527}
}

func (x *MaxFreqIdcr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2149
// {-}
type MaxCombIdcr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxCombIdcr16) Reset() {
	*x = MaxCombIdcr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[528]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCombIdcr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCombIdcr16) ProtoMessage() {}

func (x *MaxCombIdcr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[528]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCombIdcr16.ProtoReflect.Descriptor instead.
func (*MaxCombIdcr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{528}
}

func (x *MaxCombIdcr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2150
// {-}
type MaxFreqIdcMRdc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxFreqIdcMRdc) Reset() {
	*x = MaxFreqIdcMRdc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[529]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqIdcMRdc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqIdcMRdc) ProtoMessage() {}

func (x *MaxFreqIdcMRdc) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[529]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqIdcMRdc.ProtoReflect.Descriptor instead.
func (*MaxFreqIdcMRdc) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{529}
}

func (x *MaxFreqIdcMRdc) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2151
// {-}
type MaxNrofCandidateBeams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCandidateBeams) Reset() {
	*x = MaxNrofCandidateBeams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[530]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCandidateBeams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCandidateBeams) ProtoMessage() {}

func (x *MaxNrofCandidateBeams) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[530]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCandidateBeams.ProtoReflect.Descriptor instead.
func (*MaxNrofCandidateBeams) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{530}
}

func (x *MaxNrofCandidateBeams) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2152
// {-}
type MaxNrofCandidateBeamsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofCandidateBeamsr16) Reset() {
	*x = MaxNrofCandidateBeamsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[531]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCandidateBeamsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCandidateBeamsr16) ProtoMessage() {}

func (x *MaxNrofCandidateBeamsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[531]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCandidateBeamsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCandidateBeamsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{531}
}

func (x *MaxNrofCandidateBeamsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2153
// {-}
type MaxNrofCandidateBeamsExtr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:48,valueUB:48,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:48,valueUB:48,"`
}

func (x *MaxNrofCandidateBeamsExtr16) Reset() {
	*x = MaxNrofCandidateBeamsExtr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[532]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCandidateBeamsExtr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCandidateBeamsExtr16) ProtoMessage() {}

func (x *MaxNrofCandidateBeamsExtr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[532]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCandidateBeamsExtr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCandidateBeamsExtr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{532}
}

func (x *MaxNrofCandidateBeamsExtr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2154
// {-}
type MaxNrofPcisPerSmtc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofPcisPerSmtc) Reset() {
	*x = MaxNrofPcisPerSmtc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[533]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPcisPerSmtc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPcisPerSmtc) ProtoMessage() {}

func (x *MaxNrofPcisPerSmtc) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[533]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPcisPerSmtc.ProtoReflect.Descriptor instead.
func (*MaxNrofPcisPerSmtc) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{533}
}

func (x *MaxNrofPcisPerSmtc) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2155
// {-}
type MaxNrofQfis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofQfis) Reset() {
	*x = MaxNrofQfis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[534]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofQfis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofQfis) ProtoMessage() {}

func (x *MaxNrofQfis) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[534]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofQfis.ProtoReflect.Descriptor instead.
func (*MaxNrofQfis) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{534}
}

func (x *MaxNrofQfis) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2156
// {-}
type MaxNrofResourceAvailabilityPerCombinationr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxNrofResourceAvailabilityPerCombinationr16) Reset() {
	*x = MaxNrofResourceAvailabilityPerCombinationr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[535]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofResourceAvailabilityPerCombinationr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofResourceAvailabilityPerCombinationr16) ProtoMessage() {}

func (x *MaxNrofResourceAvailabilityPerCombinationr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[535]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofResourceAvailabilityPerCombinationr16.ProtoReflect.Descriptor instead.
func (*MaxNrofResourceAvailabilityPerCombinationr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{535}
}

func (x *MaxNrofResourceAvailabilityPerCombinationr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2157
// {-}
type MaxNrOfSemiPersistentPuschTriggers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrOfSemiPersistentPuschTriggers) Reset() {
	*x = MaxNrOfSemiPersistentPuschTriggers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[536]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrOfSemiPersistentPuschTriggers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrOfSemiPersistentPuschTriggers) ProtoMessage() {}

func (x *MaxNrOfSemiPersistentPuschTriggers) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[536]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrOfSemiPersistentPuschTriggers.ProtoReflect.Descriptor instead.
func (*MaxNrOfSemiPersistentPuschTriggers) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{536}
}

func (x *MaxNrOfSemiPersistentPuschTriggers) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2158
// {-}
type MaxNrofSrResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSrResources) Reset() {
	*x = MaxNrofSrResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[537]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrResources) ProtoMessage() {}

func (x *MaxNrofSrResources) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[537]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrResources.ProtoReflect.Descriptor instead.
func (*MaxNrofSrResources) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{537}
}

func (x *MaxNrofSrResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2159
// {-}
type MaxNrofSlotFormatsPerCombination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxNrofSlotFormatsPerCombination) Reset() {
	*x = MaxNrofSlotFormatsPerCombination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[538]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlotFormatsPerCombination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlotFormatsPerCombination) ProtoMessage() {}

func (x *MaxNrofSlotFormatsPerCombination) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[538]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlotFormatsPerCombination.ProtoReflect.Descriptor instead.
func (*MaxNrofSlotFormatsPerCombination) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{538}
}

func (x *MaxNrofSlotFormatsPerCombination) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2160
// {-}
type MaxNrofSpatialRelationInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSpatialRelationInfos) Reset() {
	*x = MaxNrofSpatialRelationInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[539]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpatialRelationInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpatialRelationInfos) ProtoMessage() {}

func (x *MaxNrofSpatialRelationInfos) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[539]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpatialRelationInfos.ProtoReflect.Descriptor instead.
func (*MaxNrofSpatialRelationInfos) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{539}
}

func (x *MaxNrofSpatialRelationInfos) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2161
// {-}
type MaxNrofSpatialRelationInfosplus1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:9,valueUB:9,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:9,valueUB:9,"`
}

func (x *MaxNrofSpatialRelationInfosplus1) Reset() {
	*x = MaxNrofSpatialRelationInfosplus1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[540]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpatialRelationInfosplus1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpatialRelationInfosplus1) ProtoMessage() {}

func (x *MaxNrofSpatialRelationInfosplus1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[540]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpatialRelationInfosplus1.ProtoReflect.Descriptor instead.
func (*MaxNrofSpatialRelationInfosplus1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{540}
}

func (x *MaxNrofSpatialRelationInfosplus1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2162
// {-}
type MaxNrofSpatialRelationInfosr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSpatialRelationInfosr16) Reset() {
	*x = MaxNrofSpatialRelationInfosr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[541]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpatialRelationInfosr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpatialRelationInfosr16) ProtoMessage() {}

func (x *MaxNrofSpatialRelationInfosr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[541]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpatialRelationInfosr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSpatialRelationInfosr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{541}
}

func (x *MaxNrofSpatialRelationInfosr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2163
// {-}
type MaxNrofSpatialRelationInfosDiffr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:56,valueUB:56,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:56,valueUB:56,"`
}

func (x *MaxNrofSpatialRelationInfosDiffr16) Reset() {
	*x = MaxNrofSpatialRelationInfosDiffr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[542]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpatialRelationInfosDiffr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpatialRelationInfosDiffr16) ProtoMessage() {}

func (x *MaxNrofSpatialRelationInfosDiffr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[542]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpatialRelationInfosDiffr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSpatialRelationInfosDiffr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{542}
}

func (x *MaxNrofSpatialRelationInfosDiffr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2164
// {-}
type MaxNrofIndexesToReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofIndexesToReport) Reset() {
	*x = MaxNrofIndexesToReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[543]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofIndexesToReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofIndexesToReport) ProtoMessage() {}

func (x *MaxNrofIndexesToReport) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[543]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofIndexesToReport.ProtoReflect.Descriptor instead.
func (*MaxNrofIndexesToReport) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{543}
}

func (x *MaxNrofIndexesToReport) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2165
// {-}
type MaxNrofIndexesToReport2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofIndexesToReport2) Reset() {
	*x = MaxNrofIndexesToReport2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[544]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofIndexesToReport2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofIndexesToReport2) ProtoMessage() {}

func (x *MaxNrofIndexesToReport2) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[544]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofIndexesToReport2.ProtoReflect.Descriptor instead.
func (*MaxNrofIndexesToReport2) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{544}
}

func (x *MaxNrofIndexesToReport2) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2166
// {-}
type MaxNrofSsbsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSsbsr16) Reset() {
	*x = MaxNrofSsbsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[545]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSsbsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSsbsr16) ProtoMessage() {}

func (x *MaxNrofSsbsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[545]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSsbsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSsbsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{545}
}

func (x *MaxNrofSsbsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2167
// {-}
type MaxNrofSsbs1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofSsbs1) Reset() {
	*x = MaxNrofSsbs1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[546]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSsbs1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSsbs1) ProtoMessage() {}

func (x *MaxNrofSsbs1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[546]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSsbs1.ProtoReflect.Descriptor instead.
func (*MaxNrofSsbs1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{546}
}

func (x *MaxNrofSsbs1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2168
// {-}
type MaxNrofSNSsai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSNSsai) Reset() {
	*x = MaxNrofSNSsai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[547]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSNSsai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSNSsai) ProtoMessage() {}

func (x *MaxNrofSNSsai) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[547]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSNSsai.ProtoReflect.Descriptor instead.
func (*MaxNrofSNSsai) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{547}
}

func (x *MaxNrofSNSsai) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2169
// {-}
type MaxNrofTciStatesPdcch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofTciStatesPdcch) Reset() {
	*x = MaxNrofTciStatesPdcch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[548]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTciStatesPdcch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTciStatesPdcch) ProtoMessage() {}

func (x *MaxNrofTciStatesPdcch) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[548]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTciStatesPdcch.ProtoReflect.Descriptor instead.
func (*MaxNrofTciStatesPdcch) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{548}
}

func (x *MaxNrofTciStatesPdcch) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2170
// {-}
type MaxNrofTciStates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrofTciStates) Reset() {
	*x = MaxNrofTciStates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[549]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTciStates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTciStates) ProtoMessage() {}

func (x *MaxNrofTciStates) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[549]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTciStates.ProtoReflect.Descriptor instead.
func (*MaxNrofTciStates) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{549}
}

func (x *MaxNrofTciStates) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2171
// {-}
type MaxNrofTciStates1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:127,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:127,valueUB:127,"`
}

func (x *MaxNrofTciStates1) Reset() {
	*x = MaxNrofTciStates1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[550]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTciStates1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTciStates1) ProtoMessage() {}

func (x *MaxNrofTciStates1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[550]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTciStates1.ProtoReflect.Descriptor instead.
func (*MaxNrofTciStates1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{550}
}

func (x *MaxNrofTciStates1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2172
// {-}
type MaxUlTCir17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxUlTCir17) Reset() {
	*x = MaxUlTCir17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[551]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxUlTCir17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxUlTCir17) ProtoMessage() {}

func (x *MaxUlTCir17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[551]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxUlTCir17.ProtoReflect.Descriptor instead.
func (*MaxUlTCir17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{551}
}

func (x *MaxUlTCir17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2173
// {-}
type MaxUlTCi1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxUlTCi1R17) Reset() {
	*x = MaxUlTCi1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[552]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxUlTCi1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxUlTCi1R17) ProtoMessage() {}

func (x *MaxUlTCi1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[552]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxUlTCi1R17.ProtoReflect.Descriptor instead.
func (*MaxUlTCi1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{552}
}

func (x *MaxUlTCi1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2174
// {-}
type MaxNrofAdditionalPcir17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofAdditionalPcir17) Reset() {
	*x = MaxNrofAdditionalPcir17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[553]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofAdditionalPcir17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofAdditionalPcir17) ProtoMessage() {}

func (x *MaxNrofAdditionalPcir17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[553]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofAdditionalPcir17.ProtoReflect.Descriptor instead.
func (*MaxNrofAdditionalPcir17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{553}
}

func (x *MaxNrofAdditionalPcir17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2175
// {-}
type MaxMpeResourcesr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxMpeResourcesr17) Reset() {
	*x = MaxMpeResourcesr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[554]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxMpeResourcesr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxMpeResourcesr17) ProtoMessage() {}

func (x *MaxMpeResourcesr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[554]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxMpeResourcesr17.ProtoReflect.Descriptor instead.
func (*MaxMpeResourcesr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{554}
}

func (x *MaxMpeResourcesr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2176
// {-}
type MaxNrofUlAllocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofUlAllocations) Reset() {
	*x = MaxNrofUlAllocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[555]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofUlAllocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofUlAllocations) ProtoMessage() {}

func (x *MaxNrofUlAllocations) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[555]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofUlAllocations.ProtoReflect.Descriptor instead.
func (*MaxNrofUlAllocations) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{555}
}

func (x *MaxNrofUlAllocations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2177
// {-}
type MaxQfi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxQfi) Reset() {
	*x = MaxQfi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[556]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxQfi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxQfi) ProtoMessage() {}

func (x *MaxQfi) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[556]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxQfi.ProtoReflect.Descriptor instead.
func (*MaxQfi) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{556}
}

func (x *MaxQfi) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2178
// {-}
type MaxRaCSirsResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:96,valueUB:96,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:96,valueUB:96,"`
}

func (x *MaxRaCSirsResources) Reset() {
	*x = MaxRaCSirsResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[557]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRaCSirsResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRaCSirsResources) ProtoMessage() {}

func (x *MaxRaCSirsResources) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[557]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRaCSirsResources.ProtoReflect.Descriptor instead.
func (*MaxRaCSirsResources) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{557}
}

func (x *MaxRaCSirsResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2179
// {-}
type MaxRaOccasionsPerCsirs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxRaOccasionsPerCsirs) Reset() {
	*x = MaxRaOccasionsPerCsirs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[558]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRaOccasionsPerCsirs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRaOccasionsPerCsirs) ProtoMessage() {}

func (x *MaxRaOccasionsPerCsirs) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[558]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRaOccasionsPerCsirs.ProtoReflect.Descriptor instead.
func (*MaxRaOccasionsPerCsirs) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{558}
}

func (x *MaxRaOccasionsPerCsirs) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2180
// {-}
type MaxRaOccasions1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:511,valueUB:511,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:511,valueUB:511,"`
}

func (x *MaxRaOccasions1) Reset() {
	*x = MaxRaOccasions1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[559]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRaOccasions1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRaOccasions1) ProtoMessage() {}

func (x *MaxRaOccasions1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[559]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRaOccasions1.ProtoReflect.Descriptor instead.
func (*MaxRaOccasions1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{559}
}

func (x *MaxRaOccasions1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2181
// {-}
type MaxRaSSbResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxRaSSbResources) Reset() {
	*x = MaxRaSSbResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[560]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRaSSbResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRaSSbResources) ProtoMessage() {}

func (x *MaxRaSSbResources) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[560]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRaSSbResources.ProtoReflect.Descriptor instead.
func (*MaxRaSSbResources) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{560}
}

func (x *MaxRaSSbResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2182
// {-}
type MaxScss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:5,valueUB:5,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:5,valueUB:5,"`
}

func (x *MaxScss) Reset() {
	*x = MaxScss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[561]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxScss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxScss) ProtoMessage() {}

func (x *MaxScss) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[561]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxScss.ProtoReflect.Descriptor instead.
func (*MaxScss) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{561}
}

func (x *MaxScss) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2183
// {-}
type MaxSecondaryCellGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxSecondaryCellGroups) Reset() {
	*x = MaxSecondaryCellGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[562]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSecondaryCellGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSecondaryCellGroups) ProtoMessage() {}

func (x *MaxSecondaryCellGroups) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[562]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSecondaryCellGroups.ProtoReflect.Descriptor instead.
func (*MaxSecondaryCellGroups) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{562}
}

func (x *MaxSecondaryCellGroups) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2184
// {-}
type MaxNrofServingCellsEutra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofServingCellsEutra) Reset() {
	*x = MaxNrofServingCellsEutra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[563]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofServingCellsEutra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofServingCellsEutra) ProtoMessage() {}

func (x *MaxNrofServingCellsEutra) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[563]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofServingCellsEutra.ProtoReflect.Descriptor instead.
func (*MaxNrofServingCellsEutra) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{563}
}

func (x *MaxNrofServingCellsEutra) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2185
// {-}
type MaxMbsfnAllocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxMbsfnAllocations) Reset() {
	*x = MaxMbsfnAllocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[564]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxMbsfnAllocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxMbsfnAllocations) ProtoMessage() {}

func (x *MaxMbsfnAllocations) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[564]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxMbsfnAllocations.ProtoReflect.Descriptor instead.
func (*MaxMbsfnAllocations) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{564}
}

func (x *MaxMbsfnAllocations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2186
// {-}
type MaxNrofMultiBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofMultiBands) Reset() {
	*x = MaxNrofMultiBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[565]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMultiBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMultiBands) ProtoMessage() {}

func (x *MaxNrofMultiBands) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[565]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMultiBands.ProtoReflect.Descriptor instead.
func (*MaxNrofMultiBands) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{565}
}

func (x *MaxNrofMultiBands) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2187
// {-}
type MaxCellSftd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxCellSftd) Reset() {
	*x = MaxCellSftd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[566]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellSftd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellSftd) ProtoMessage() {}

func (x *MaxCellSftd) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[566]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellSftd.ProtoReflect.Descriptor instead.
func (*MaxCellSftd) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{566}
}

func (x *MaxCellSftd) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2188
// {-}
type MaxReportConfigId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxReportConfigId) Reset() {
	*x = MaxReportConfigId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[567]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxReportConfigId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxReportConfigId) ProtoMessage() {}

func (x *MaxReportConfigId) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[567]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxReportConfigId.ProtoReflect.Descriptor instead.
func (*MaxReportConfigId) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{567}
}

func (x *MaxReportConfigId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2189
// {-}
type MaxNrofCodebooks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCodebooks) Reset() {
	*x = MaxNrofCodebooks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[568]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCodebooks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCodebooks) ProtoMessage() {}

func (x *MaxNrofCodebooks) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[568]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCodebooks.ProtoReflect.Descriptor instead.
func (*MaxNrofCodebooks) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{568}
}

func (x *MaxNrofCodebooks) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2190
// {-}
type MaxNrofCsiRSResourcesExtr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCsiRSResourcesExtr16) Reset() {
	*x = MaxNrofCsiRSResourcesExtr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[569]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesExtr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesExtr16) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesExtr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[569]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesExtr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesExtr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{569}
}

func (x *MaxNrofCsiRSResourcesExtr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2191
// {-}
type MaxNrofCsiRSResourcesExtr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofCsiRSResourcesExtr17) Reset() {
	*x = MaxNrofCsiRSResourcesExtr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[570]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesExtr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesExtr17) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesExtr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[570]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesExtr17.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesExtr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{570}
}

func (x *MaxNrofCsiRSResourcesExtr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2192
// {-}
type MaxNrofCsiRSResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofCsiRSResources) Reset() {
	*x = MaxNrofCsiRSResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[571]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResources) ProtoMessage() {}

func (x *MaxNrofCsiRSResources) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[571]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResources.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResources) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{571}
}

func (x *MaxNrofCsiRSResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2193
// {-}
type MaxNrofCsiRSResourcesAltr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxNrofCsiRSResourcesAltr16) Reset() {
	*x = MaxNrofCsiRSResourcesAltr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[572]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesAltr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesAltr16) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesAltr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[572]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesAltr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesAltr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{572}
}

func (x *MaxNrofCsiRSResourcesAltr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2194
// {-}
type MaxNrofCsiRSResourcesAlt1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:511,valueUB:511,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:511,valueUB:511,"`
}

func (x *MaxNrofCsiRSResourcesAlt1R16) Reset() {
	*x = MaxNrofCsiRSResourcesAlt1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[573]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesAlt1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesAlt1R16) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesAlt1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[573]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesAlt1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesAlt1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{573}
}

func (x *MaxNrofCsiRSResourcesAlt1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2195
// {-}
type MaxNrofSriPUschMappings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSriPUschMappings) Reset() {
	*x = MaxNrofSriPUschMappings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[574]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSriPUschMappings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSriPUschMappings) ProtoMessage() {}

func (x *MaxNrofSriPUschMappings) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[574]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSriPUschMappings.ProtoReflect.Descriptor instead.
func (*MaxNrofSriPUschMappings) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{574}
}

func (x *MaxNrofSriPUschMappings) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2196
// {-}
type MaxNrofSriPUschMappings1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofSriPUschMappings1) Reset() {
	*x = MaxNrofSriPUschMappings1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[575]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSriPUschMappings1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSriPUschMappings1) ProtoMessage() {}

func (x *MaxNrofSriPUschMappings1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[575]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSriPUschMappings1.ProtoReflect.Descriptor instead.
func (*MaxNrofSriPUschMappings1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{575}
}

func (x *MaxNrofSriPUschMappings1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2197
// {-}
type MaxSib struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxSib) Reset() {
	*x = MaxSib{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[576]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSib) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSib) ProtoMessage() {}

func (x *MaxSib) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[576]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSib.ProtoReflect.Descriptor instead.
func (*MaxSib) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{576}
}

func (x *MaxSib) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2198
// {-}
type MaxSiMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxSiMessage) Reset() {
	*x = MaxSiMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[577]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSiMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSiMessage) ProtoMessage() {}

func (x *MaxSiMessage) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[577]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSiMessage.ProtoReflect.Descriptor instead.
func (*MaxSiMessage) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{577}
}

func (x *MaxSiMessage) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2199
// {-}
type MaxSibMessagePlus1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:33,valueUB:33,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:33,valueUB:33,"`
}

func (x *MaxSibMessagePlus1R17) Reset() {
	*x = MaxSibMessagePlus1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[578]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSibMessagePlus1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSibMessagePlus1R17) ProtoMessage() {}

func (x *MaxSibMessagePlus1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[578]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSibMessagePlus1R17.ProtoReflect.Descriptor instead.
func (*MaxSibMessagePlus1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{578}
}

func (x *MaxSibMessagePlus1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2200
// {-}
type MaxPoperPf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxPoperPf) Reset() {
	*x = MaxPoperPf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[579]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPoperPf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPoperPf) ProtoMessage() {}

func (x *MaxPoperPf) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[579]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPoperPf.ProtoReflect.Descriptor instead.
func (*MaxPoperPf) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{579}
}

func (x *MaxPoperPf) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2201
// {-}
type MaxPeiperPfr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxPeiperPfr17) Reset() {
	*x = MaxPeiperPfr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[580]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPeiperPfr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPeiperPfr17) ProtoMessage() {}

func (x *MaxPeiperPfr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[580]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPeiperPfr17.ProtoReflect.Descriptor instead.
func (*MaxPeiperPfr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{580}
}

func (x *MaxPeiperPfr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2202
// {-}
type MaxAccessCat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxAccessCat1) Reset() {
	*x = MaxAccessCat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[581]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxAccessCat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxAccessCat1) ProtoMessage() {}

func (x *MaxAccessCat1) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[581]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxAccessCat1.ProtoReflect.Descriptor instead.
func (*MaxAccessCat1) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{581}
}

func (x *MaxAccessCat1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2203
// {-}
type MaxBarringInfoSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxBarringInfoSet) Reset() {
	*x = MaxBarringInfoSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[582]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBarringInfoSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBarringInfoSet) ProtoMessage() {}

func (x *MaxBarringInfoSet) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[582]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBarringInfoSet.ProtoReflect.Descriptor instead.
func (*MaxBarringInfoSet) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{582}
}

func (x *MaxBarringInfoSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2204
// {-}
type MaxCellEutra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxCellEutra) Reset() {
	*x = MaxCellEutra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[583]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellEutra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellEutra) ProtoMessage() {}

func (x *MaxCellEutra) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[583]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellEutra.ProtoReflect.Descriptor instead.
func (*MaxCellEutra) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{583}
}

func (x *MaxCellEutra) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2205
// {-}
type MaxEutraCarrier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxEutraCarrier) Reset() {
	*x = MaxEutraCarrier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[584]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEutraCarrier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEutraCarrier) ProtoMessage() {}

func (x *MaxEutraCarrier) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[584]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEutraCarrier.ProtoReflect.Descriptor instead.
func (*MaxEutraCarrier) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{584}
}

func (x *MaxEutraCarrier) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2206
// {-}
type MaxPlmnidentities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxPlmnidentities) Reset() {
	*x = MaxPlmnidentities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[585]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPlmnidentities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPlmnidentities) ProtoMessage() {}

func (x *MaxPlmnidentities) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[585]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPlmnidentities.ProtoReflect.Descriptor instead.
func (*MaxPlmnidentities) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{585}
}

func (x *MaxPlmnidentities) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2207
// {-}
type MaxDownlinkFeatureSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxDownlinkFeatureSets) Reset() {
	*x = MaxDownlinkFeatureSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[586]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxDownlinkFeatureSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxDownlinkFeatureSets) ProtoMessage() {}

func (x *MaxDownlinkFeatureSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[586]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxDownlinkFeatureSets.ProtoReflect.Descriptor instead.
func (*MaxDownlinkFeatureSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{586}
}

func (x *MaxDownlinkFeatureSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2208
// {-}
type MaxUplinkFeatureSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxUplinkFeatureSets) Reset() {
	*x = MaxUplinkFeatureSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[587]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxUplinkFeatureSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxUplinkFeatureSets) ProtoMessage() {}

func (x *MaxUplinkFeatureSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[587]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxUplinkFeatureSets.ProtoReflect.Descriptor instead.
func (*MaxUplinkFeatureSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{587}
}

func (x *MaxUplinkFeatureSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2209
// {-}
type MaxEutraDLFeatureSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxEutraDLFeatureSets) Reset() {
	*x = MaxEutraDLFeatureSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[588]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEutraDLFeatureSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEutraDLFeatureSets) ProtoMessage() {}

func (x *MaxEutraDLFeatureSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[588]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEutraDLFeatureSets.ProtoReflect.Descriptor instead.
func (*MaxEutraDLFeatureSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{588}
}

func (x *MaxEutraDLFeatureSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2210
// {-}
type MaxEutraULFeatureSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxEutraULFeatureSets) Reset() {
	*x = MaxEutraULFeatureSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[589]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEutraULFeatureSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEutraULFeatureSets) ProtoMessage() {}

func (x *MaxEutraULFeatureSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[589]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEutraULFeatureSets.ProtoReflect.Descriptor instead.
func (*MaxEutraULFeatureSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{589}
}

func (x *MaxEutraULFeatureSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2211
// {-}
type MaxFeatureSetsPerBand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxFeatureSetsPerBand) Reset() {
	*x = MaxFeatureSetsPerBand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[590]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFeatureSetsPerBand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFeatureSetsPerBand) ProtoMessage() {}

func (x *MaxFeatureSetsPerBand) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[590]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFeatureSetsPerBand.ProtoReflect.Descriptor instead.
func (*MaxFeatureSetsPerBand) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{590}
}

func (x *MaxFeatureSetsPerBand) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2212
// {-}
type MaxPerCcFeatureSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxPerCcFeatureSets) Reset() {
	*x = MaxPerCcFeatureSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[591]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPerCcFeatureSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPerCcFeatureSets) ProtoMessage() {}

func (x *MaxPerCcFeatureSets) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[591]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPerCcFeatureSets.ProtoReflect.Descriptor instead.
func (*MaxPerCcFeatureSets) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{591}
}

func (x *MaxPerCcFeatureSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2213
// {-}
type MaxFeatureSetCombinations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxFeatureSetCombinations) Reset() {
	*x = MaxFeatureSetCombinations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[592]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFeatureSetCombinations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFeatureSetCombinations) ProtoMessage() {}

func (x *MaxFeatureSetCombinations) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[592]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFeatureSetCombinations.ProtoReflect.Descriptor instead.
func (*MaxFeatureSetCombinations) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{592}
}

func (x *MaxFeatureSetCombinations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2214
// {-}
type MaxInterRatRStdFreq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxInterRatRStdFreq) Reset() {
	*x = MaxInterRatRStdFreq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[593]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxInterRatRStdFreq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxInterRatRStdFreq) ProtoMessage() {}

func (x *MaxInterRatRStdFreq) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[593]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxInterRatRStdFreq.ProtoReflect.Descriptor instead.
func (*MaxInterRatRStdFreq) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{593}
}

func (x *MaxInterRatRStdFreq) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2215
// {-}
type MaxGinr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:24,valueUB:24,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:24,valueUB:24,"`
}

func (x *MaxGinr17) Reset() {
	*x = MaxGinr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[594]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxGinr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxGinr17) ProtoMessage() {}

func (x *MaxGinr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[594]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxGinr17.ProtoReflect.Descriptor instead.
func (*MaxGinr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{594}
}

func (x *MaxGinr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2216
// {-}
type MaxHrnnLenr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:48,valueUB:48,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:48,valueUB:48,"`
}

func (x *MaxHrnnLenr16) Reset() {
	*x = MaxHrnnLenr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[595]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxHrnnLenr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxHrnnLenr16) ProtoMessage() {}

func (x *MaxHrnnLenr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[595]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxHrnnLenr16.ProtoReflect.Descriptor instead.
func (*MaxHrnnLenr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{595}
}

func (x *MaxHrnnLenr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2217
// {-}
type MaxNpnr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:12,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:12,"`
}

func (x *MaxNpnr16) Reset() {
	*x = MaxNpnr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[596]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNpnr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNpnr16) ProtoMessage() {}

func (x *MaxNpnr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[596]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNpnr16.ProtoReflect.Descriptor instead.
func (*MaxNpnr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{596}
}

func (x *MaxNpnr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2218
// {-}
type MaxNrOfMinSchedulingOffsetValuesr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrOfMinSchedulingOffsetValuesr16) Reset() {
	*x = MaxNrOfMinSchedulingOffsetValuesr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[597]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrOfMinSchedulingOffsetValuesr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrOfMinSchedulingOffsetValuesr16) ProtoMessage() {}

func (x *MaxNrOfMinSchedulingOffsetValuesr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[597]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrOfMinSchedulingOffsetValuesr16.ProtoReflect.Descriptor instead.
func (*MaxNrOfMinSchedulingOffsetValuesr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{597}
}

func (x *MaxNrOfMinSchedulingOffsetValuesr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2219
// {-}
type MaxK0SchedulingOffsetr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxK0SchedulingOffsetr16) Reset() {
	*x = MaxK0SchedulingOffsetr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[598]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxK0SchedulingOffsetr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxK0SchedulingOffsetr16) ProtoMessage() {}

func (x *MaxK0SchedulingOffsetr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[598]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxK0SchedulingOffsetr16.ProtoReflect.Descriptor instead.
func (*MaxK0SchedulingOffsetr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{598}
}

func (x *MaxK0SchedulingOffsetr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2220
// {-}
type MaxK2SchedulingOffsetr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxK2SchedulingOffsetr16) Reset() {
	*x = MaxK2SchedulingOffsetr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[599]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxK2SchedulingOffsetr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxK2SchedulingOffsetr16) ProtoMessage() {}

func (x *MaxK2SchedulingOffsetr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[599]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxK2SchedulingOffsetr16.ProtoReflect.Descriptor instead.
func (*MaxK2SchedulingOffsetr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{599}
}

func (x *MaxK2SchedulingOffsetr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2221
// {-}
type MaxK0SchedulingOffsetr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxK0SchedulingOffsetr17) Reset() {
	*x = MaxK0SchedulingOffsetr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[600]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxK0SchedulingOffsetr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxK0SchedulingOffsetr17) ProtoMessage() {}

func (x *MaxK0SchedulingOffsetr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[600]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxK0SchedulingOffsetr17.ProtoReflect.Descriptor instead.
func (*MaxK0SchedulingOffsetr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{600}
}

func (x *MaxK0SchedulingOffsetr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2222
// {-}
type MaxK2SchedulingOffsetr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxK2SchedulingOffsetr17) Reset() {
	*x = MaxK2SchedulingOffsetr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[601]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxK2SchedulingOffsetr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxK2SchedulingOffsetr17) ProtoMessage() {}

func (x *MaxK2SchedulingOffsetr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[601]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxK2SchedulingOffsetr17.ProtoReflect.Descriptor instead.
func (*MaxK2SchedulingOffsetr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{601}
}

func (x *MaxK2SchedulingOffsetr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2223
// {-}
type MaxDci26Sizer16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:140,valueUB:140,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:140,valueUB:140,"`
}

func (x *MaxDci26Sizer16) Reset() {
	*x = MaxDci26Sizer16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[602]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxDci26Sizer16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxDci26Sizer16) ProtoMessage() {}

func (x *MaxDci26Sizer16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[602]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxDci26Sizer16.ProtoReflect.Descriptor instead.
func (*MaxDci26Sizer16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{602}
}

func (x *MaxDci26Sizer16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2224
// {-}
type MaxDci27Sizer17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:43,valueUB:43,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:43,valueUB:43,"`
}

func (x *MaxDci27Sizer17) Reset() {
	*x = MaxDci27Sizer17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[603]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxDci27Sizer17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxDci27Sizer17) ProtoMessage() {}

func (x *MaxDci27Sizer17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[603]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxDci27Sizer17.ProtoReflect.Descriptor instead.
func (*MaxDci27Sizer17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{603}
}

func (x *MaxDci27Sizer17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2225
// {-}
type MaxDci26Size1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:139,valueUB:139,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:139,valueUB:139,"`
}

func (x *MaxDci26Size1R16) Reset() {
	*x = MaxDci26Size1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[604]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxDci26Size1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxDci26Size1R16) ProtoMessage() {}

func (x *MaxDci26Size1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[604]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxDci26Size1R16.ProtoReflect.Descriptor instead.
func (*MaxDci26Size1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{604}
}

func (x *MaxDci26Size1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2226
// {-}
type MaxNrofUlAllocationsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofUlAllocationsr16) Reset() {
	*x = MaxNrofUlAllocationsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[605]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofUlAllocationsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofUlAllocationsr16) ProtoMessage() {}

func (x *MaxNrofUlAllocationsr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[605]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofUlAllocationsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofUlAllocationsr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{605}
}

func (x *MaxNrofUlAllocationsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2227
// {-}
type MaxNrofP0PUschSetr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrofP0PUschSetr16) Reset() {
	*x = MaxNrofP0PUschSetr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[606]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofP0PUschSetr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofP0PUschSetr16) ProtoMessage() {}

func (x *MaxNrofP0PUschSetr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[606]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofP0PUschSetr16.ProtoReflect.Descriptor instead.
func (*MaxNrofP0PUschSetr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{606}
}

func (x *MaxNrofP0PUschSetr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2228
// {-}
type MaxOnDemandSibr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxOnDemandSibr16) Reset() {
	*x = MaxOnDemandSibr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[607]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxOnDemandSibr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxOnDemandSibr16) ProtoMessage() {}

func (x *MaxOnDemandSibr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[607]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxOnDemandSibr16.ProtoReflect.Descriptor instead.
func (*MaxOnDemandSibr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{607}
}

func (x *MaxOnDemandSibr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2229
// {-}
type MaxOnDemandPosSibr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxOnDemandPosSibr16) Reset() {
	*x = MaxOnDemandPosSibr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[608]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxOnDemandPosSibr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxOnDemandPosSibr16) ProtoMessage() {}

func (x *MaxOnDemandPosSibr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[608]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxOnDemandPosSibr16.ProtoReflect.Descriptor instead.
func (*MaxOnDemandPosSibr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{608}
}

func (x *MaxOnDemandPosSibr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2230
// {-}
type MaxCiDCiPayloadSizer16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:126,valueUB:126,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:126,valueUB:126,"`
}

func (x *MaxCiDCiPayloadSizer16) Reset() {
	*x = MaxCiDCiPayloadSizer16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[609]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCiDCiPayloadSizer16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCiDCiPayloadSizer16) ProtoMessage() {}

func (x *MaxCiDCiPayloadSizer16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[609]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCiDCiPayloadSizer16.ProtoReflect.Descriptor instead.
func (*MaxCiDCiPayloadSizer16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{609}
}

func (x *MaxCiDCiPayloadSizer16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2231
// {-}
type MaxCiDCiPayloadSize1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:125,valueUB:125,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:125,valueUB:125,"`
}

func (x *MaxCiDCiPayloadSize1R16) Reset() {
	*x = MaxCiDCiPayloadSize1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[610]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCiDCiPayloadSize1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCiDCiPayloadSize1R16) ProtoMessage() {}

func (x *MaxCiDCiPayloadSize1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[610]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCiDCiPayloadSize1R16.ProtoReflect.Descriptor instead.
func (*MaxCiDCiPayloadSize1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{610}
}

func (x *MaxCiDCiPayloadSize1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2232
// {-}
type MaxUuRelayRlcChannelIdr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxUuRelayRlcChannelIdr17) Reset() {
	*x = MaxUuRelayRlcChannelIdr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[611]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxUuRelayRlcChannelIdr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxUuRelayRlcChannelIdr17) ProtoMessage() {}

func (x *MaxUuRelayRlcChannelIdr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[611]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxUuRelayRlcChannelIdr17.ProtoReflect.Descriptor instead.
func (*MaxUuRelayRlcChannelIdr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{611}
}

func (x *MaxUuRelayRlcChannelIdr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2233
// {-}
type MaxWlanIdReportr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxWlanIdReportr16) Reset() {
	*x = MaxWlanIdReportr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[612]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxWlanIdReportr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxWlanIdReportr16) ProtoMessage() {}

func (x *MaxWlanIdReportr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[612]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxWlanIdReportr16.ProtoReflect.Descriptor instead.
func (*MaxWlanIdReportr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{612}
}

func (x *MaxWlanIdReportr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2234
// {-}
type MaxWlanNamer16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxWlanNamer16) Reset() {
	*x = MaxWlanNamer16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[613]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxWlanNamer16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxWlanNamer16) ProtoMessage() {}

func (x *MaxWlanNamer16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[613]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxWlanNamer16.ProtoReflect.Descriptor instead.
func (*MaxWlanNamer16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{613}
}

func (x *MaxWlanNamer16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2235
// {-}
type MaxRareportr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxRareportr16) Reset() {
	*x = MaxRareportr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[614]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRareportr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRareportr16) ProtoMessage() {}

func (x *MaxRareportr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[614]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRareportr16.ProtoReflect.Descriptor instead.
func (*MaxRareportr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{614}
}

func (x *MaxRareportr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2236
// {-}
type MaxTxConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxTxConfigr16) Reset() {
	*x = MaxTxConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[615]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxTxConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxTxConfigr16) ProtoMessage() {}

func (x *MaxTxConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[615]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxTxConfigr16.ProtoReflect.Descriptor instead.
func (*MaxTxConfigr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{615}
}

func (x *MaxTxConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2237
// {-}
type MaxTxConfig1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxTxConfig1R16) Reset() {
	*x = MaxTxConfig1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[616]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxTxConfig1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxTxConfig1R16) ProtoMessage() {}

func (x *MaxTxConfig1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[616]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxTxConfig1R16.ProtoReflect.Descriptor instead.
func (*MaxTxConfig1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{616}
}

func (x *MaxTxConfig1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2238
// {-}
type MaxPsschTxConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxPsschTxConfigr16) Reset() {
	*x = MaxPsschTxConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[617]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPsschTxConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPsschTxConfigr16) ProtoMessage() {}

func (x *MaxPsschTxConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[617]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPsschTxConfigr16.ProtoReflect.Descriptor instead.
func (*MaxPsschTxConfigr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{617}
}

func (x *MaxPsschTxConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2239
// {-}
type MaxNrofCliRSsiResourcesr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofCliRSsiResourcesr16) Reset() {
	*x = MaxNrofCliRSsiResourcesr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[618]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCliRSsiResourcesr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCliRSsiResourcesr16) ProtoMessage() {}

func (x *MaxNrofCliRSsiResourcesr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[618]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCliRSsiResourcesr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCliRSsiResourcesr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{618}
}

func (x *MaxNrofCliRSsiResourcesr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2240
// {-}
type MaxNrofCliRSsiResources1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofCliRSsiResources1R16) Reset() {
	*x = MaxNrofCliRSsiResources1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[619]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCliRSsiResources1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCliRSsiResources1R16) ProtoMessage() {}

func (x *MaxNrofCliRSsiResources1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[619]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCliRSsiResources1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofCliRSsiResources1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{619}
}

func (x *MaxNrofCliRSsiResources1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2241
// {-}
type MaxNrofCliSRsResourcesr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofCliSRsResourcesr16) Reset() {
	*x = MaxNrofCliSRsResourcesr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[620]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCliSRsResourcesr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCliSRsResourcesr16) ProtoMessage() {}

func (x *MaxNrofCliSRsResourcesr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[620]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCliSRsResourcesr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCliSRsResourcesr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{620}
}

func (x *MaxNrofCliSRsResourcesr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2242
// {-}
type MaxCliReportr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxCliReportr16) Reset() {
	*x = MaxCliReportr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[621]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCliReportr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCliReportr16) ProtoMessage() {}

func (x *MaxCliReportr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[621]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCliReportr16.ProtoReflect.Descriptor instead.
func (*MaxCliReportr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{621}
}

func (x *MaxCliReportr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2243
// {-}
type MaxNrofCcGroupr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCcGroupr17) Reset() {
	*x = MaxNrofCcGroupr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[622]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCcGroupr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCcGroupr17) ProtoMessage() {}

func (x *MaxNrofCcGroupr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[622]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCcGroupr17.ProtoReflect.Descriptor instead.
func (*MaxNrofCcGroupr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{622}
}

func (x *MaxNrofCcGroupr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2244
// {-}
type MaxNrofConfiguredGrantConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:12,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:12,"`
}

func (x *MaxNrofConfiguredGrantConfigr16) Reset() {
	*x = MaxNrofConfiguredGrantConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[623]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofConfiguredGrantConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofConfiguredGrantConfigr16) ProtoMessage() {}

func (x *MaxNrofConfiguredGrantConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[623]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofConfiguredGrantConfigr16.ProtoReflect.Descriptor instead.
func (*MaxNrofConfiguredGrantConfigr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{623}
}

func (x *MaxNrofConfiguredGrantConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2245
// {-}
type MaxNrofConfiguredGrantConfig1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:11,valueUB:11,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:11,valueUB:11,"`
}

func (x *MaxNrofConfiguredGrantConfig1R16) Reset() {
	*x = MaxNrofConfiguredGrantConfig1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[624]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofConfiguredGrantConfig1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofConfiguredGrantConfig1R16) ProtoMessage() {}

func (x *MaxNrofConfiguredGrantConfig1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[624]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofConfiguredGrantConfig1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofConfiguredGrantConfig1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{624}
}

func (x *MaxNrofConfiguredGrantConfig1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2246
// {-}
type MaxNrofCgType2DeactivationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCgType2DeactivationState) Reset() {
	*x = MaxNrofCgType2DeactivationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[625]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCgType2DeactivationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCgType2DeactivationState) ProtoMessage() {}

func (x *MaxNrofCgType2DeactivationState) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[625]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCgType2DeactivationState.ProtoReflect.Descriptor instead.
func (*MaxNrofCgType2DeactivationState) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{625}
}

func (x *MaxNrofCgType2DeactivationState) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2247
// {-}
type MaxNrofConfiguredGrantConfigMac1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofConfiguredGrantConfigMac1R16) Reset() {
	*x = MaxNrofConfiguredGrantConfigMac1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[626]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofConfiguredGrantConfigMac1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofConfiguredGrantConfigMac1R16) ProtoMessage() {}

func (x *MaxNrofConfiguredGrantConfigMac1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[626]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofConfiguredGrantConfigMac1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofConfiguredGrantConfigMac1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{626}
}

func (x *MaxNrofConfiguredGrantConfigMac1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2248
// {-}
type MaxNrofSpsConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSpsConfigr16) Reset() {
	*x = MaxNrofSpsConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[627]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpsConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpsConfigr16) ProtoMessage() {}

func (x *MaxNrofSpsConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[627]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpsConfigr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSpsConfigr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{627}
}

func (x *MaxNrofSpsConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2249
// {-}
type MaxNrofSpsConfig1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofSpsConfig1R16) Reset() {
	*x = MaxNrofSpsConfig1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[628]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpsConfig1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpsConfig1R16) ProtoMessage() {}

func (x *MaxNrofSpsConfig1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[628]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpsConfig1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofSpsConfig1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{628}
}

func (x *MaxNrofSpsConfig1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2250
// {-}
type MaxNrofSpsDeactivationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSpsDeactivationState) Reset() {
	*x = MaxNrofSpsDeactivationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[629]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpsDeactivationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpsDeactivationState) ProtoMessage() {}

func (x *MaxNrofSpsDeactivationState) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[629]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpsDeactivationState.ProtoReflect.Descriptor instead.
func (*MaxNrofSpsDeactivationState) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{629}
}

func (x *MaxNrofSpsDeactivationState) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2251
// {-}
type MaxNrofPpwConfigr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofPpwConfigr17) Reset() {
	*x = MaxNrofPpwConfigr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[630]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPpwConfigr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPpwConfigr17) ProtoMessage() {}

func (x *MaxNrofPpwConfigr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[630]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPpwConfigr17.ProtoReflect.Descriptor instead.
func (*MaxNrofPpwConfigr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{630}
}

func (x *MaxNrofPpwConfigr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2252
// {-}
type MaxNrofPpwID1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofPpwID1R17) Reset() {
	*x = MaxNrofPpwID1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[631]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPpwID1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPpwID1R17) ProtoMessage() {}

func (x *MaxNrofPpwID1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[631]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPpwID1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofPpwID1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{631}
}

func (x *MaxNrofPpwID1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2253
// {-}
type MaxNrOfTxTegreportr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxNrOfTxTegreportr17) Reset() {
	*x = MaxNrOfTxTegreportr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[632]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrOfTxTegreportr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrOfTxTegreportr17) ProtoMessage() {}

func (x *MaxNrOfTxTegreportr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[632]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrOfTxTegreportr17.ProtoReflect.Descriptor instead.
func (*MaxNrOfTxTegreportr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{632}
}

func (x *MaxNrOfTxTegreportr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2254
// {-}
type MaxNrOfTxTegID1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrOfTxTegID1R17) Reset() {
	*x = MaxNrOfTxTegID1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[633]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrOfTxTegID1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrOfTxTegID1R17) ProtoMessage() {}

func (x *MaxNrOfTxTegID1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[633]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrOfTxTegID1R17.ProtoReflect.Descriptor instead.
func (*MaxNrOfTxTegID1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{633}
}

func (x *MaxNrOfTxTegID1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2255
// {-}
type MaxNrofPagingSubgroupsr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofPagingSubgroupsr17) Reset() {
	*x = MaxNrofPagingSubgroupsr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[634]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPagingSubgroupsr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPagingSubgroupsr17) ProtoMessage() {}

func (x *MaxNrofPagingSubgroupsr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[634]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPagingSubgroupsr17.ProtoReflect.Descriptor instead.
func (*MaxNrofPagingSubgroupsr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{634}
}

func (x *MaxNrofPagingSubgroupsr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2256
// {-}
type MaxNrofPucchResourceGroups1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofPucchResourceGroups1R16) Reset() {
	*x = MaxNrofPucchResourceGroups1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[635]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourceGroups1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourceGroups1R16) ProtoMessage() {}

func (x *MaxNrofPucchResourceGroups1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[635]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourceGroups1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourceGroups1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{635}
}

func (x *MaxNrofPucchResourceGroups1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2257
// {-}
type MaxNrofReqComDcLocationr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrofReqComDcLocationr17) Reset() {
	*x = MaxNrofReqComDcLocationr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[636]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofReqComDcLocationr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofReqComDcLocationr17) ProtoMessage() {}

func (x *MaxNrofReqComDcLocationr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[636]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofReqComDcLocationr17.ProtoReflect.Descriptor instead.
func (*MaxNrofReqComDcLocationr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{636}
}

func (x *MaxNrofReqComDcLocationr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2259
// {-}
type MaxNrofServingCellsTcir16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofServingCellsTcir16) Reset() {
	*x = MaxNrofServingCellsTcir16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[637]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofServingCellsTcir16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofServingCellsTcir16) ProtoMessage() {}

func (x *MaxNrofServingCellsTcir16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[637]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofServingCellsTcir16.ProtoReflect.Descriptor instead.
func (*MaxNrofServingCellsTcir16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{637}
}

func (x *MaxNrofServingCellsTcir16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2260
// {-}
type MaxNrofTxDcTwoCarrierr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofTxDcTwoCarrierr16) Reset() {
	*x = MaxNrofTxDcTwoCarrierr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[638]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTxDcTwoCarrierr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTxDcTwoCarrierr16) ProtoMessage() {}

func (x *MaxNrofTxDcTwoCarrierr16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[638]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTxDcTwoCarrierr16.ProtoReflect.Descriptor instead.
func (*MaxNrofTxDcTwoCarrierr16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{638}
}

func (x *MaxNrofTxDcTwoCarrierr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2261
// {-}
type MaxNrofRbSetGroupsr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofRbSetGroupsr17) Reset() {
	*x = MaxNrofRbSetGroupsr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[639]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRbSetGroupsr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRbSetGroupsr17) ProtoMessage() {}

func (x *MaxNrofRbSetGroupsr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[639]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRbSetGroupsr17.ProtoReflect.Descriptor instead.
func (*MaxNrofRbSetGroupsr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{639}
}

func (x *MaxNrofRbSetGroupsr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2262
// {-}
type MaxNrofRbSetsr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofRbSetsr17) Reset() {
	*x = MaxNrofRbSetsr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[640]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRbSetsr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRbSetsr17) ProtoMessage() {}

func (x *MaxNrofRbSetsr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[640]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRbSetsr17.ProtoReflect.Descriptor instead.
func (*MaxNrofRbSetsr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{640}
}

func (x *MaxNrofRbSetsr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2263
// {-}
type MaxNrofEnhType3HarqACkr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofEnhType3HarqACkr17) Reset() {
	*x = MaxNrofEnhType3HarqACkr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[641]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofEnhType3HarqACkr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofEnhType3HarqACkr17) ProtoMessage() {}

func (x *MaxNrofEnhType3HarqACkr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[641]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofEnhType3HarqACkr17.ProtoReflect.Descriptor instead.
func (*MaxNrofEnhType3HarqACkr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{641}
}

func (x *MaxNrofEnhType3HarqACkr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2264
// {-}
type MaxNrofEnhType3HarqACk1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofEnhType3HarqACk1R17) Reset() {
	*x = MaxNrofEnhType3HarqACk1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[642]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofEnhType3HarqACk1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofEnhType3HarqACk1R17) ProtoMessage() {}

func (x *MaxNrofEnhType3HarqACk1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[642]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofEnhType3HarqACk1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofEnhType3HarqACk1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{642}
}

func (x *MaxNrofEnhType3HarqACk1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2265
// {-}
type MaxNrofPrsResourcesPerSetr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofPrsResourcesPerSetr17) Reset() {
	*x = MaxNrofPrsResourcesPerSetr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[643]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPrsResourcesPerSetr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPrsResourcesPerSetr17) ProtoMessage() {}

func (x *MaxNrofPrsResourcesPerSetr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[643]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPrsResourcesPerSetr17.ProtoReflect.Descriptor instead.
func (*MaxNrofPrsResourcesPerSetr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{643}
}

func (x *MaxNrofPrsResourcesPerSetr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2266
// {-}
type MaxNrofPrsResourcesPerSet1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofPrsResourcesPerSet1R17) Reset() {
	*x = MaxNrofPrsResourcesPerSet1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[644]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPrsResourcesPerSet1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPrsResourcesPerSet1R17) ProtoMessage() {}

func (x *MaxNrofPrsResourcesPerSet1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[644]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPrsResourcesPerSet1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofPrsResourcesPerSet1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{644}
}

func (x *MaxNrofPrsResourcesPerSet1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2267
// {-}
type MaxNrofPrsResourceOffsetValue1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:511,valueUB:511,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:511,valueUB:511,"`
}

func (x *MaxNrofPrsResourceOffsetValue1R17) Reset() {
	*x = MaxNrofPrsResourceOffsetValue1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[645]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPrsResourceOffsetValue1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPrsResourceOffsetValue1R17) ProtoMessage() {}

func (x *MaxNrofPrsResourceOffsetValue1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[645]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPrsResourceOffsetValue1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofPrsResourceOffsetValue1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{645}
}

func (x *MaxNrofPrsResourceOffsetValue1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2268
// {-}
type MaxNrofGapIdr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofGapIdr17) Reset() {
	*x = MaxNrofGapIdr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[646]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofGapIdr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofGapIdr17) ProtoMessage() {}

func (x *MaxNrofGapIdr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[646]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofGapIdr17.ProtoReflect.Descriptor instead.
func (*MaxNrofGapIdr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{646}
}

func (x *MaxNrofGapIdr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2269
// {-}
type MaxNrofPreConfigPosGapIdr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofPreConfigPosGapIdr17) Reset() {
	*x = MaxNrofPreConfigPosGapIdr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[647]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPreConfigPosGapIdr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPreConfigPosGapIdr17) ProtoMessage() {}

func (x *MaxNrofPreConfigPosGapIdr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[647]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPreConfigPosGapIdr17.ProtoReflect.Descriptor instead.
func (*MaxNrofPreConfigPosGapIdr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{647}
}

func (x *MaxNrofPreConfigPosGapIdr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2270
// {-}
type MaxNrOfGapPrir17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrOfGapPrir17) Reset() {
	*x = MaxNrOfGapPrir17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[648]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrOfGapPrir17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrOfGapPrir17) ProtoMessage() {}

func (x *MaxNrOfGapPrir17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[648]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrOfGapPrir17.ProtoReflect.Descriptor instead.
func (*MaxNrOfGapPrir17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{648}
}

func (x *MaxNrOfGapPrir17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2271
// {-}
type MaxCefreportr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxCefreportr17) Reset() {
	*x = MaxCefreportr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[649]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCefreportr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCefreportr17) ProtoMessage() {}

func (x *MaxCefreportr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[649]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCefreportr17.ProtoReflect.Descriptor instead.
func (*MaxCefreportr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{649}
}

func (x *MaxCefreportr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2272
// {-}
type MaxNrofMultiplePdschsr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofMultiplePdschsr17) Reset() {
	*x = MaxNrofMultiplePdschsr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[650]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMultiplePdschsr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMultiplePdschsr17) ProtoMessage() {}

func (x *MaxNrofMultiplePdschsr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[650]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMultiplePdschsr17.ProtoReflect.Descriptor instead.
func (*MaxNrofMultiplePdschsr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{650}
}

func (x *MaxNrofMultiplePdschsr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2273
// {-}
type MaxSliceInfor17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxSliceInfor17) Reset() {
	*x = MaxSliceInfor17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[651]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSliceInfor17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSliceInfor17) ProtoMessage() {}

func (x *MaxSliceInfor17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[651]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSliceInfor17.ProtoReflect.Descriptor instead.
func (*MaxSliceInfor17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{651}
}

func (x *MaxSliceInfor17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2274
// {-}
type MaxCellSlicer17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCellSlicer17) Reset() {
	*x = MaxCellSlicer17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[652]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellSlicer17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellSlicer17) ProtoMessage() {}

func (x *MaxCellSlicer17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[652]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellSlicer17.ProtoReflect.Descriptor instead.
func (*MaxCellSlicer17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{652}
}

func (x *MaxCellSlicer17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2275
// {-}
type MaxNrofTrsResourceSetsr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofTrsResourceSetsr17) Reset() {
	*x = MaxNrofTrsResourceSetsr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[653]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTrsResourceSetsr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTrsResourceSetsr17) ProtoMessage() {}

func (x *MaxNrofTrsResourceSetsr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[653]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTrsResourceSetsr17.ProtoReflect.Descriptor instead.
func (*MaxNrofTrsResourceSetsr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{653}
}

func (x *MaxNrofTrsResourceSetsr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2276
// {-}
type MaxNrofSearchSpaceGroups1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrofSearchSpaceGroups1R17) Reset() {
	*x = MaxNrofSearchSpaceGroups1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[654]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSearchSpaceGroups1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSearchSpaceGroups1R17) ProtoMessage() {}

func (x *MaxNrofSearchSpaceGroups1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[654]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSearchSpaceGroups1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofSearchSpaceGroups1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{654}
}

func (x *MaxNrofSearchSpaceGroups1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2277
// {-}
type MaxNrofRemoteUer17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofRemoteUer17) Reset() {
	*x = MaxNrofRemoteUer17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[655]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRemoteUer17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRemoteUer17) ProtoMessage() {}

func (x *MaxNrofRemoteUer17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[655]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRemoteUer17.ProtoReflect.Descriptor instead.
func (*MaxNrofRemoteUer17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{655}
}

func (x *MaxNrofRemoteUer17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2278
// {-}
type MaxDci42Sizer17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:140,valueUB:140,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:140,valueUB:140,"`
}

func (x *MaxDci42Sizer17) Reset() {
	*x = MaxDci42Sizer17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[656]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxDci42Sizer17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxDci42Sizer17) ProtoMessage() {}

func (x *MaxDci42Sizer17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[656]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxDci42Sizer17.ProtoReflect.Descriptor instead.
func (*MaxDci42Sizer17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{656}
}

func (x *MaxDci42Sizer17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2279
// {-}
type MaxFreqMbsr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxFreqMbsr17) Reset() {
	*x = MaxFreqMbsr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[657]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqMbsr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqMbsr17) ProtoMessage() {}

func (x *MaxFreqMbsr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[657]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqMbsr17.ProtoReflect.Descriptor instead.
func (*MaxFreqMbsr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{657}
}

func (x *MaxFreqMbsr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2280
// {-}
type MaxNrofDrxConfigPtmr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofDrxConfigPtmr17) Reset() {
	*x = MaxNrofDrxConfigPtmr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[658]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofDrxConfigPtmr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofDrxConfigPtmr17) ProtoMessage() {}

func (x *MaxNrofDrxConfigPtmr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[658]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofDrxConfigPtmr17.ProtoReflect.Descriptor instead.
func (*MaxNrofDrxConfigPtmr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{658}
}

func (x *MaxNrofDrxConfigPtmr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2282
// {-}
type MaxNrofDrxConfigPtm1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofDrxConfigPtm1R17) Reset() {
	*x = MaxNrofDrxConfigPtm1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[659]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofDrxConfigPtm1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofDrxConfigPtm1R17) ProtoMessage() {}

func (x *MaxNrofDrxConfigPtm1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[659]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofDrxConfigPtm1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofDrxConfigPtm1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{659}
}

func (x *MaxNrofDrxConfigPtm1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2284
// {-}
type MaxNrofMbsServiceListPerUer17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofMbsServiceListPerUer17) Reset() {
	*x = MaxNrofMbsServiceListPerUer17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[660]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMbsServiceListPerUer17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMbsServiceListPerUer17) ProtoMessage() {}

func (x *MaxNrofMbsServiceListPerUer17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[660]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMbsServiceListPerUer17.ProtoReflect.Descriptor instead.
func (*MaxNrofMbsServiceListPerUer17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{660}
}

func (x *MaxNrofMbsServiceListPerUer17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2286
// {-}
type MaxNrofMbsSessionr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxNrofMbsSessionr17) Reset() {
	*x = MaxNrofMbsSessionr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[661]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMbsSessionr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMbsSessionr17) ProtoMessage() {}

func (x *MaxNrofMbsSessionr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[661]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMbsSessionr17.ProtoReflect.Descriptor instead.
func (*MaxNrofMbsSessionr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{661}
}

func (x *MaxNrofMbsSessionr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2287
// {-}
type MaxNrofMtchSSbMappingWindowr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofMtchSSbMappingWindowr17) Reset() {
	*x = MaxNrofMtchSSbMappingWindowr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[662]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMtchSSbMappingWindowr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMtchSSbMappingWindowr17) ProtoMessage() {}

func (x *MaxNrofMtchSSbMappingWindowr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[662]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMtchSSbMappingWindowr17.ProtoReflect.Descriptor instead.
func (*MaxNrofMtchSSbMappingWindowr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{662}
}

func (x *MaxNrofMtchSSbMappingWindowr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2288
// {-}
type MaxNrofMtchSSbMappingWindow1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofMtchSSbMappingWindow1R17) Reset() {
	*x = MaxNrofMtchSSbMappingWindow1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[663]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMtchSSbMappingWindow1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMtchSSbMappingWindow1R17) ProtoMessage() {}

func (x *MaxNrofMtchSSbMappingWindow1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[663]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMtchSSbMappingWindow1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofMtchSSbMappingWindow1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{663}
}

func (x *MaxNrofMtchSSbMappingWindow1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2289
// {-}
type MaxNrofMrbBroadcastr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofMrbBroadcastr17) Reset() {
	*x = MaxNrofMrbBroadcastr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[664]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMrbBroadcastr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMrbBroadcastr17) ProtoMessage() {}

func (x *MaxNrofMrbBroadcastr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[664]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMrbBroadcastr17.ProtoReflect.Descriptor instead.
func (*MaxNrofMrbBroadcastr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{664}
}

func (x *MaxNrofMrbBroadcastr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2290
// {-}
type MaxNrofPageGroupr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofPageGroupr17) Reset() {
	*x = MaxNrofPageGroupr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[665]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPageGroupr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPageGroupr17) ProtoMessage() {}

func (x *MaxNrofPageGroupr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[665]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPageGroupr17.ProtoReflect.Descriptor instead.
func (*MaxNrofPageGroupr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{665}
}

func (x *MaxNrofPageGroupr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2291
// {-}
type MaxNrofPdschConfigPtmr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofPdschConfigPtmr17) Reset() {
	*x = MaxNrofPdschConfigPtmr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[666]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPdschConfigPtmr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPdschConfigPtmr17) ProtoMessage() {}

func (x *MaxNrofPdschConfigPtmr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[666]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPdschConfigPtmr17.ProtoReflect.Descriptor instead.
func (*MaxNrofPdschConfigPtmr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{666}
}

func (x *MaxNrofPdschConfigPtmr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2292
// {-}
type MaxNrofPdschConfigPtm1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofPdschConfigPtm1R17) Reset() {
	*x = MaxNrofPdschConfigPtm1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[667]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPdschConfigPtm1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPdschConfigPtm1R17) ProtoMessage() {}

func (x *MaxNrofPdschConfigPtm1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[667]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPdschConfigPtm1R17.ProtoReflect.Descriptor instead.
func (*MaxNrofPdschConfigPtm1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{667}
}

func (x *MaxNrofPdschConfigPtm1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2293
// {-}
type MaxGRNtir17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxGRNtir17) Reset() {
	*x = MaxGRNtir17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[668]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxGRNtir17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxGRNtir17) ProtoMessage() {}

func (x *MaxGRNtir17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[668]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxGRNtir17.ProtoReflect.Descriptor instead.
func (*MaxGRNtir17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{668}
}

func (x *MaxGRNtir17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2294
// {-}
type MaxGRNti1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxGRNti1R17) Reset() {
	*x = MaxGRNti1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[669]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxGRNti1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxGRNti1R17) ProtoMessage() {}

func (x *MaxGRNti1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[669]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxGRNti1R17.ProtoReflect.Descriptor instead.
func (*MaxGRNti1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{669}
}

func (x *MaxGRNti1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2295
// {-}
type MaxGCSRNtir17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxGCSRNtir17) Reset() {
	*x = MaxGCSRNtir17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[670]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxGCSRNtir17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxGCSRNtir17) ProtoMessage() {}

func (x *MaxGCSRNtir17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[670]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxGCSRNtir17.ProtoReflect.Descriptor instead.
func (*MaxGCSRNtir17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{670}
}

func (x *MaxGCSRNtir17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2296
// {-}
type MaxGCSRNti1R17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxGCSRNti1R17) Reset() {
	*x = MaxGCSRNti1R17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[671]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxGCSRNti1R17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxGCSRNti1R17) ProtoMessage() {}

func (x *MaxGCSRNti1R17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[671]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxGCSRNti1R17.ProtoReflect.Descriptor instead.
func (*MaxGCSRNti1R17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{671}
}

func (x *MaxGCSRNti1R17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2297
// {-}
type MaxMrbr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxMrbr17) Reset() {
	*x = MaxMrbr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[672]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxMrbr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxMrbr17) ProtoMessage() {}

func (x *MaxMrbr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[672]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxMrbr17.ProtoReflect.Descriptor instead.
func (*MaxMrbr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{672}
}

func (x *MaxMrbr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2298
// {-}
type MaxFsaiMBsr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxFsaiMBsr17) Reset() {
	*x = MaxFsaiMBsr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[673]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFsaiMBsr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFsaiMBsr17) ProtoMessage() {}

func (x *MaxFsaiMBsr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[673]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFsaiMBsr17.ProtoReflect.Descriptor instead.
func (*MaxFsaiMBsr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{673}
}

func (x *MaxFsaiMBsr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2299
// {-}
type MaxNeighCellMbsr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNeighCellMbsr17) Reset() {
	*x = MaxNeighCellMbsr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[674]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNeighCellMbsr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNeighCellMbsr17) ProtoMessage() {}

func (x *MaxNeighCellMbsr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[674]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNeighCellMbsr17.ProtoReflect.Descriptor instead.
func (*MaxNeighCellMbsr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{674}
}

func (x *MaxNeighCellMbsr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2300
// {-}
type MaxNrofPdcchBlindDetectionMixed1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofPdcchBlindDetectionMixed1R16) Reset() {
	*x = MaxNrofPdcchBlindDetectionMixed1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[675]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPdcchBlindDetectionMixed1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPdcchBlindDetectionMixed1R16) ProtoMessage() {}

func (x *MaxNrofPdcchBlindDetectionMixed1R16) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[675]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPdcchBlindDetectionMixed1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofPdcchBlindDetectionMixed1R16) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{675}
}

func (x *MaxNrofPdcchBlindDetectionMixed1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from nr-rrc-definitions.asn1:2302
// {-}
type MaxNrofPdcchBlindDetectionr17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofPdcchBlindDetectionr17) Reset() {
	*x = MaxNrofPdcchBlindDetectionr17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[676]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPdcchBlindDetectionr17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPdcchBlindDetectionr17) ProtoMessage() {}

func (x *MaxNrofPdcchBlindDetectionr17) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[676]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPdcchBlindDetectionr17.ProtoReflect.Descriptor instead.
func (*MaxNrofPdcchBlindDetectionr17) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{676}
}

func (x *MaxNrofPdcchBlindDetectionr17) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// choice from nr-rrc-definitions.asn1:2319
// {s-MeasureConfigVarMeasConfig}
type SMeasureConfigVarMeasConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from nr-rrc-definitions.asn1:2319
	//
	// Types that are assignable to SMeasureConfigVarMeasConfig:
	//	*SMeasureConfigVarMeasConfig_SsbRsrp
	//	*SMeasureConfigVarMeasConfig_CsiRsrp
	SMeasureConfigVarMeasConfig isSMeasureConfigVarMeasConfig_SMeasureConfigVarMeasConfig `protobuf_oneof:"s_measure_config_var_meas_config"`
}

func (x *SMeasureConfigVarMeasConfig) Reset() {
	*x = SMeasureConfigVarMeasConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[677]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMeasureConfigVarMeasConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMeasureConfigVarMeasConfig) ProtoMessage() {}

func (x *SMeasureConfigVarMeasConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[677]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMeasureConfigVarMeasConfig.ProtoReflect.Descriptor instead.
func (*SMeasureConfigVarMeasConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{677}
}

func (m *SMeasureConfigVarMeasConfig) GetSMeasureConfigVarMeasConfig() isSMeasureConfigVarMeasConfig_SMeasureConfigVarMeasConfig {
	if m != nil {
		return m.SMeasureConfigVarMeasConfig
	}
	return nil
}

func (x *SMeasureConfigVarMeasConfig) GetSsbRsrp() *RsrpRange {
	if x, ok := x.GetSMeasureConfigVarMeasConfig().(*SMeasureConfigVarMeasConfig_SsbRsrp); ok {
		return x.SsbRsrp
	}
	return nil
}

func (x *SMeasureConfigVarMeasConfig) GetCsiRsrp() *RsrpRange {
	if x, ok := x.GetSMeasureConfigVarMeasConfig().(*SMeasureConfigVarMeasConfig_CsiRsrp); ok {
		return x.CsiRsrp
	}
	return nil
}

type isSMeasureConfigVarMeasConfig_SMeasureConfigVarMeasConfig interface {
	isSMeasureConfigVarMeasConfig_SMeasureConfigVarMeasConfig()
}

type SMeasureConfigVarMeasConfig_SsbRsrp struct {
	// @inject_tag: aper:"choiceIdx:1,"
	SsbRsrp *RsrpRange `protobuf:"bytes,1,opt,name=ssb_rsrp,json=ssb-RSRP,proto3,oneof" aper:"choiceIdx:1,"`
}

type SMeasureConfigVarMeasConfig_CsiRsrp struct {
	// @inject_tag: aper:"choiceIdx:2,"
	CsiRsrp *RsrpRange `protobuf:"bytes,2,opt,name=csi_rsrp,json=csi-RSRP,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*SMeasureConfigVarMeasConfig_SsbRsrp) isSMeasureConfigVarMeasConfig_SMeasureConfigVarMeasConfig() {
}

func (*SMeasureConfigVarMeasConfig_CsiRsrp) isSMeasureConfigVarMeasConfig_SMeasureConfigVarMeasConfig() {
}

// sequence from nr-rrc-definitions.asn1:2311
// {VarMeasConfig}
type VarMeasConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	MeasIdList *MeasIdToAddModList `protobuf:"bytes,1,opt,name=meas_id_list,json=measIdList,proto3,oneof" json:"meas_id_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	MeasObjectList *MeasObjectToAddModList `protobuf:"bytes,2,opt,name=meas_object_list,json=measObjectList,proto3,oneof" json:"meas_object_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	ReportConfigList *ReportConfigToAddModList `protobuf:"bytes,3,opt,name=report_config_list,json=reportConfigList,proto3,oneof" json:"report_config_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueExt,"
	QuantityConfig *QuantityConfig `protobuf:"bytes,4,opt,name=quantity_config,json=quantityConfig,proto3,oneof" json:"quantity_config,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,"
	SMeasureConfig *SMeasureConfigVarMeasConfig `protobuf:"bytes,5,opt,name=s_measure_config,json=s-MeasureConfig,proto3,oneof" json:"s_measure_config,omitempty" aper:"optional,"`
}

func (x *VarMeasConfig) Reset() {
	*x = VarMeasConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nr_rrc_definitions_proto_msgTypes[678]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VarMeasConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VarMeasConfig) ProtoMessage() {}

func (x *VarMeasConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nr_rrc_definitions_proto_msgTypes[678]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VarMeasConfig.ProtoReflect.Descriptor instead.
func (*VarMeasConfig) Descriptor() ([]byte, []int) {
	return file_nr_rrc_definitions_proto_rawDescGZIP(), []int{678}
}

func (x *VarMeasConfig) GetMeasIdList() *MeasIdToAddModList {
	if x != nil {
		return x.MeasIdList
	}
	return nil
}

func (x *VarMeasConfig) GetMeasObjectList() *MeasObjectToAddModList {
	if x != nil {
		return x.MeasObjectList
	}
	return nil
}

func (x *VarMeasConfig) GetReportConfigList() *ReportConfigToAddModList {
	if x != nil {
		return x.ReportConfigList
	}
	return nil
}

func (x *VarMeasConfig) GetQuantityConfig() *QuantityConfig {
	if x != nil {
		return x.QuantityConfig
	}
	return nil
}

func (x *VarMeasConfig) GetSMeasureConfig() *SMeasureConfigVarMeasConfig {
	if x != nil {
		return x.SMeasureConfig
	}
	return nil
}

var File_nr_rrc_definitions_proto protoreflect.FileDescriptor

var file_nr_rrc_definitions_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6e, 0x72, 0x2d, 0x72, 0x72, 0x63, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x1a, 0x1a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61,
	0x73, 0x6e, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55,
	0x0a, 0x0e, 0x42, 0x63, 0x63, 0x68, 0x42, 0x43, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x43, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x63, 0x63, 0x68, 0x42, 0x43,
	0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x29, 0x0a, 0x27, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x63,
	0x63, 0x68, 0x42, 0x43, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xd7, 0x01, 0x0a, 0x12, 0x42, 0x63, 0x63, 0x68, 0x42, 0x43, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x6d, 0x69, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x62,
	0x48, 0x00, 0x52, 0x03, 0x6d, 0x69, 0x62, 0x12, 0x78, 0x0a, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x63, 0x63, 0x68, 0x42, 0x43, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x17, 0x0a, 0x15, 0x62, 0x63, 0x63, 0x68, 0x5f, 0x62, 0x63, 0x68, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x59, 0x0a, 0x10, 0x42, 0x63,
	0x63, 0x68, 0x44, 0x4c, 0x53, 0x43, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x63, 0x63, 0x68, 0x44, 0x4c, 0x53, 0x43,
	0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf6, 0x01, 0x0a, 0x16, 0x43, 0x31, 0x42, 0x63, 0x63, 0x68,
	0x44, 0x4c, 0x53, 0x43, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x59, 0x0a, 0x12, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x1e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x62, 0x31,
	0x48, 0x00, 0x52, 0x1b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x31, 0x42,
	0x1d, 0x0a, 0x1b, 0x63, 0x31, 0x5f, 0x62, 0x63, 0x63, 0x68, 0x5f, 0x64, 0x6c, 0x5f, 0x73, 0x63,
	0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2b,
	0x0a, 0x29, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x63, 0x63, 0x68, 0x44, 0x4c, 0x53, 0x43, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x14,
	0x42, 0x63, 0x63, 0x68, 0x44, 0x4c, 0x53, 0x43, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x02, 0x63, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x31, 0x42, 0x63, 0x63, 0x68, 0x44,
	0x4c, 0x53, 0x43, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x02, 0x63, 0x31, 0x12, 0x7a, 0x0a, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x63, 0x63, 0x68, 0x44, 0x4c, 0x53, 0x43, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x1a, 0x0a, 0x18, 0x62, 0x63, 0x63, 0x68, 0x5f, 0x64, 0x6c, 0x5f, 0x73, 0x63, 0x68,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a,
	0x0d, 0x44, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x43, 0x31, 0x44, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x72, 0x72,
	0x63, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x09, 0x72, 0x72, 0x63, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3e, 0x0a,
	0x09, 0x72, 0x72, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x73, 0x65, 0x74, 0x75,
	0x70, 0x48, 0x00, 0x52, 0x08, 0x72, 0x72, 0x63, 0x53, 0x65, 0x74, 0x75, 0x70, 0x12, 0x18, 0x0a,
	0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x32, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65,
	0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65,
	0x31, 0x42, 0x19, 0x0a, 0x17, 0x63, 0x31, 0x5f, 0x64, 0x6c, 0x5f, 0x63, 0x63, 0x63, 0x68, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x26,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x11, 0x44, 0x6c, 0x43, 0x43, 0x63,
	0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x02,
	0x63, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x31, 0x44, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x02, 0x63, 0x31, 0x12, 0x77, 0x0a, 0x17, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x64, 0x6c, 0x5f, 0x63, 0x63, 0x63, 0x68, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x0d, 0x44,
	0x6c, 0x44, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6c, 0x44, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xa2, 0x0b, 0x0a, 0x13, 0x43, 0x31, 0x44, 0x6c, 0x44, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x72, 0x72, 0x63, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72,
	0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x12, 0x72, 0x72, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0a, 0x72, 0x72, 0x63, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09,
	0x72, 0x72, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x72, 0x72, 0x63,
	0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x72, 0x63, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x13, 0x72, 0x72, 0x63, 0x5f, 0x72, 0x65, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x72, 0x65, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12, 0x72, 0x72, 0x63, 0x52, 0x65,
	0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x60, 0x0a,
	0x15, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x66, 0x0a, 0x17, 0x64, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x15, 0x64, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x15, 0x75, 0x65, 0x5f, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x13, 0x75, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x12, 0x4a, 0x0a, 0x0d, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x66, 0x0a, 0x17, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x4e, 0x72, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x46, 0x72, 0x6f, 0x6d, 0x4e, 0x52, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x7e, 0x0a,
	0x20, 0x64, 0x6c, 0x5f, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x31,
	0x36, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6c, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x72, 0x31, 0x36, 0x48, 0x00, 0x52, 0x1d,
	0x64, 0x6c, 0x44, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x6e, 0x0a,
	0x1a, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x31,
	0x36, 0x48, 0x00, 0x52, 0x18, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x7e, 0x0a,
	0x20, 0x64, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x72, 0x64, 0x63, 0x5f, 0x72, 0x31,
	0x36, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x72, 0x64, 0x63, 0x72, 0x31, 0x36, 0x48, 0x00, 0x52, 0x1d,
	0x64, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x52, 0x44, 0x43, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x8c, 0x01,
	0x0a, 0x24, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x48, 0x00, 0x52, 0x22, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x18, 0x0a, 0x06,
	0x73, 0x70, 0x61, 0x72, 0x65, 0x33, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x70, 0x61, 0x72, 0x65, 0x33, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x32,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x32,
	0x12, 0x18, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x31, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x31, 0x42, 0x19, 0x0a, 0x17, 0x63, 0x31,
	0x5f, 0x64, 0x6c, 0x5f, 0x64, 0x63, 0x63, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x26, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6c,
	0x44, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xe2, 0x01, 0x0a, 0x11, 0x44, 0x6c, 0x44, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x02, 0x63, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x31, 0x44, 0x6c, 0x44, 0x43,
	0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x02, 0x63, 0x31, 0x12, 0x77, 0x0a, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x6c, 0x44, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14,
	0x64, 0x6c, 0x5f, 0x64, 0x63, 0x63, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x0d, 0x55, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x6c, 0x43, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb9, 0x03, 0x0a, 0x13, 0x43, 0x31,
	0x55, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x54, 0x0a, 0x11, 0x72, 0x72, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x72, 0x63, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x72, 0x72, 0x63, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x72,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10,
	0x72, 0x72, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x72, 0x0a, 0x1b, 0x72, 0x72, 0x63, 0x5f, 0x72, 0x65, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72,
	0x63, 0x72, 0x65, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x72, 0x72, 0x63, 0x52, 0x65,
	0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x17, 0x72, 0x72, 0x63, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72,
	0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x72, 0x72, 0x63, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x19, 0x0a, 0x17, 0x63, 0x31,
	0x5f, 0x75, 0x6c, 0x5f, 0x63, 0x63, 0x63, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x26, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6c,
	0x43, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xe2, 0x01, 0x0a, 0x11, 0x55, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x02, 0x63, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x31, 0x55, 0x6c, 0x43, 0x43,
	0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x02, 0x63, 0x31, 0x12, 0x77, 0x0a, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14,
	0x75, 0x6c, 0x5f, 0x63, 0x63, 0x63, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a, 0x0e, 0x55, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x31, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x31, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x14,
	0x43, 0x31, 0x55, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x31, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x72, 0x72, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x72, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x31, 0x48, 0x00, 0x52, 0x11, 0x72,
	0x72, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x31,
	0x12, 0x18, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x33, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x33, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x70,
	0x61, 0x72, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70,
	0x61, 0x72, 0x65, 0x32, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x31, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x31, 0x42, 0x1a,
	0x0a, 0x18, 0x63, 0x31, 0x5f, 0x75, 0x6c, 0x5f, 0x63, 0x63, 0x63, 0x68, 0x31, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x29, 0x0a, 0x27, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x31, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x12, 0x55, 0x6c, 0x43, 0x43, 0x63, 0x68,
	0x31, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x02,
	0x63, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x31, 0x55, 0x6c, 0x43, 0x43, 0x63, 0x68, 0x31, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x02, 0x63, 0x31, 0x12, 0x78, 0x0a, 0x17, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6c, 0x43, 0x43, 0x63, 0x68,
	0x31, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x17, 0x0a, 0x15, 0x75, 0x6c, 0x5f, 0x63, 0x63, 0x63, 0x68,
	0x31, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x53,
	0x0a, 0x0d, 0x55, 0x6c, 0x44, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x42, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6c, 0x44, 0x43, 0x63, 0x68, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xd1, 0x0d, 0x0a, 0x13, 0x43, 0x31, 0x55, 0x6c, 0x44, 0x43, 0x63, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x75, 0x0a, 0x1c, 0x72, 0x72, 0x63, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x1a, 0x72, 0x72, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x57, 0x0a,
	0x12, 0x72, 0x72, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x72, 0x63, 0x73, 0x65, 0x74, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x10, 0x72, 0x72, 0x63, 0x53, 0x65, 0x74, 0x75, 0x70, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x75, 0x0a, 0x1c, 0x72, 0x72, 0x63, 0x5f, 0x72, 0x65,
	0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x72, 0x65, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x1a, 0x72, 0x72, 0x63, 0x52, 0x65, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x5a, 0x0a,
	0x13, 0x72, 0x72, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x11, 0x72, 0x72, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6d,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x60,
	0x0a, 0x15, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x12, 0x66, 0x0a, 0x17, 0x75, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6c, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x15, 0x75, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x7e, 0x0a, 0x1f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1d, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x19, 0x75, 0x65, 0x5f, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x75,
	0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x63, 0x0a, 0x16, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x19, 0x75,
	0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x17, 0x75, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x13, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x12, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x1c, 0x75, 0x6c, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x5f, 0x6d, 0x72, 0x64, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x72, 0x64, 0x63, 0x48,
	0x00, 0x52, 0x19, 0x75, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x52, 0x44, 0x43, 0x12, 0x66, 0x0a, 0x17,
	0x73, 0x63, 0x67, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x67, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x15, 0x73,
	0x63, 0x67, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x1d, 0x73, 0x63, 0x67, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x75, 0x74, 0x72, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x67, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x75, 0x74, 0x72, 0x61, 0x48, 0x00,
	0x52, 0x1a, 0x73, 0x63, 0x67, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x55, 0x54, 0x52, 0x41, 0x42, 0x19, 0x0a, 0x17,
	0x63, 0x31, 0x5f, 0x75, 0x6c, 0x5f, 0x64, 0x63, 0x63, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x84, 0x0b, 0x0a, 0x17, 0x43, 0x32, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x7e, 0x0a, 0x20, 0x75, 0x6c, 0x5f, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6c, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x72,
	0x31, 0x36, 0x48, 0x00, 0x52, 0x1d, 0x75, 0x6c, 0x44, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2d,
	0x72, 0x31, 0x36, 0x12, 0x6a, 0x0a, 0x18, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x69, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x72, 0x31, 0x36, 0x48, 0x00, 0x52, 0x17, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x49, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x72, 0x31, 0x36, 0x12,
	0x71, 0x0a, 0x1b, 0x6d, 0x63, 0x67, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x63, 0x67,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x72, 0x31, 0x36, 0x48, 0x00, 0x52, 0x19, 0x6d, 0x63, 0x67, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72,
	0x31, 0x36, 0x12, 0x71, 0x0a, 0x1b, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x72, 0x31,
	0x36, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x72, 0x31, 0x36, 0x48, 0x00, 0x52, 0x19, 0x75, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x77, 0x0a, 0x1d, 0x73, 0x69, 0x64, 0x65, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x75, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x72, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x65, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x72, 0x72, 0x31, 0x36, 0x48,
	0x00, 0x52, 0x1b, 0x73, 0x69, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x45, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x52, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x7e,
	0x0a, 0x20, 0x75, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x72, 0x61, 0x74, 0x5f, 0x72,
	0x31, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x72, 0x61, 0x74, 0x72, 0x31, 0x36, 0x48, 0x00, 0x52,
	0x1d, 0x75, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x52, 0x41, 0x54, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x6b,
	0x0a, 0x19, 0x69, 0x61, 0x62, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x61, 0x62, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36,
	0x48, 0x00, 0x52, 0x17, 0x69, 0x61, 0x62, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x71, 0x0a, 0x1b, 0x6d,
	0x62, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31,
	0x37, 0x48, 0x00, 0x52, 0x19, 0x6d, 0x62, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x84,
	0x01, 0x0a, 0x22, 0x75, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e,
	0x67, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x31, 0x37, 0x48, 0x00, 0x52, 0x1f, 0x75, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x7e, 0x0a, 0x20, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x72, 0x31, 0x37, 0x48, 0x00, 0x52, 0x1d, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x36, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x36, 0x12,
	0x18, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x35, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x35, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x70, 0x61,
	0x72, 0x65, 0x34, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x61,
	0x72, 0x65, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x33, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x33, 0x12, 0x18, 0x0a,
	0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x70, 0x61, 0x72, 0x65, 0x32, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65,
	0x31, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72, 0x65,
	0x31, 0x42, 0x1b, 0x0a, 0x19, 0x63, 0x32, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x35,
	0x0a, 0x33, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x72, 0x31, 0x36,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x02, 0x0a, 0x26, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x6c, 0x44, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x40, 0x0a, 0x02, 0x63, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x32, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x02,
	0x63, 0x32, 0x12, 0x99, 0x01, 0x0a, 0x22, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x75, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x31, 0x36, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x2d, 0x72, 0x31, 0x36, 0x42, 0x2e,
	0x0a, 0x2c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6c, 0x5f, 0x64, 0x63, 0x63,
	0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xe2,
	0x01, 0x0a, 0x11, 0x55, 0x6c, 0x44, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x02, 0x63, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x31, 0x55, 0x6c, 0x44, 0x43, 0x63,
	0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x02,
	0x63, 0x31, 0x12, 0x77, 0x0a, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x6c, 0x44, 0x43, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x75,
	0x6c, 0x5f, 0x64, 0x63, 0x63, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x44,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x72, 0x31, 0x36, 0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x6c, 0x64, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x72, 0x31, 0x36, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0x1e,
	0x0a, 0x1c, 0x44, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x72, 0x64, 0x63, 0x72, 0x31, 0x36, 0x22, 0x14,
	0x0a, 0x12, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x18, 0x0a, 0x16, 0x49, 0x61, 0x62, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x22, 0x1f,
	0x0a, 0x1d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x23, 0x0a, 0x21, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x72, 0x31, 0x36, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x37,
	0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x63, 0x67, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x22, 0x2c, 0x0a, 0x2a,
	0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb1, 0x02, 0x0a, 0x23, 0x43,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x5c, 0x0a, 0x12, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x45, 0x73, 0x48, 0x00, 0x52, 0x11, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x81, 0x01, 0x0a, 0x1a, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x18, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x75,
	0x74, 0x75, 0x72, 0x65, 0x42, 0x28, 0x0a, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x80,
	0x01, 0x0a, 0x11, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x6b, 0x0a, 0x13, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x12, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x2a, 0x0a, 0x28, 0x4e, 0x6f, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x45, 0x73, 0x22, 0xd8, 0x02,
	0x0a, 0x14, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x45, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x52, 0x0b, 0x6d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x42, 0x0a,
	0x1b, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x18, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x6e, 0x43, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x7a, 0x0a, 0x16, 0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x6e, 0x43, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x45, 0x73, 0x48, 0x01, 0x52, 0x14, 0x6e, 0x6f, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x1e, 0x0a,
	0x1c, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x19, 0x0a,
	0x17, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x70, 0x70,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x72, 0x31, 0x37, 0x22, 0xfa, 0x04, 0x0a, 0x03, 0x4d, 0x69, 0x62,
	0x12, 0x42, 0x0a, 0x13, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x11, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x1a, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x62, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x69, 0x62, 0x52, 0x17, 0x73, 0x75, 0x62,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x15, 0x73, 0x73, 0x62, 0x5f, 0x73, 0x75, 0x62, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x73, 0x73, 0x62, 0x2d, 0x53, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x5e, 0x0a, 0x14, 0x64, 0x6d, 0x72,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6d, 0x72, 0x73, 0x54, 0x79, 0x70, 0x65, 0x41, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x69, 0x62, 0x52, 0x13, 0x64, 0x6d, 0x72, 0x73, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x41,
	0x2d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x11, 0x70, 0x64, 0x63,
	0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x69, 0x62, 0x31, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x64, 0x63,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x69, 0x62, 0x31, 0x52, 0x10, 0x70, 0x64,
	0x63, 0x63, 0x68, 0x2d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x49, 0x42, 0x31, 0x12, 0x45,
	0x0a, 0x0b, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x62, 0x61, 0x72, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c,
	0x42, 0x61, 0x72, 0x72, 0x65, 0x64, 0x4d, 0x69, 0x62, 0x52, 0x0a, 0x63, 0x65, 0x6c, 0x6c, 0x42,
	0x61, 0x72, 0x72, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x5f, 0x66,
	0x72, 0x65, 0x71, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x74, 0x72, 0x61, 0x46, 0x72, 0x65, 0x71, 0x52, 0x65, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x69, 0x62, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x46, 0x72, 0x65, 0x71,
	0x52, 0x65, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x73,
	0x70, 0x61, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05,
	0x73, 0x70, 0x61, 0x72, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x46, 0x72, 0x6f, 0x6d, 0x4e, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x14,
	0x0a, 0x12, 0x52, 0x72, 0x63, 0x72, 0x65, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x52, 0x72, 0x63, 0x72, 0x65, 0x65, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x72, 0x63, 0x72, 0x65, 0x65, 0x73, 0x74, 0x61, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xb5, 0x02, 0x0a, 0x24, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x72, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x13, 0x72, 0x72, 0x63, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72,
	0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x45, 0x73, 0x48, 0x00, 0x52, 0x12, 0x72, 0x72, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x81, 0x01, 0x0a, 0x1a, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x00, 0x52, 0x18, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x42, 0x28, 0x0a,
	0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x72, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf2, 0x01, 0x0a, 0x12, 0x52, 0x72, 0x63, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e,
	0x0a, 0x1a, 0x72, 0x72, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x19, 0x72, 0x72, 0x63, 0x2d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x6c,
	0x0a, 0x13, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x72, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xad, 0x03, 0x0a,
	0x15, 0x52, 0x72, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x45, 0x73, 0x12, 0x35, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a,
	0x0b, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x01, 0x52, 0x0a, 0x6d, 0x65, 0x61, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x1b, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e,
	0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x18, 0x6c,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x6c, 0x0a, 0x16, 0x6e, 0x6f,
	0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x35, 0x33, 0x30, 0x49, 0x45, 0x73, 0x48, 0x03, 0x52,
	0x14, 0x6e, 0x6f, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xfd, 0x06, 0x0a,
	0x1a, 0x52, 0x72, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x76, 0x31, 0x35, 0x33, 0x30, 0x49, 0x45, 0x73, 0x12, 0x2f, 0x0a, 0x11, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x65, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x61, 0x0a, 0x0b,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x72, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x35, 0x33, 0x30, 0x49, 0x65, 0x73, 0x48, 0x01,
	0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12,
	0x74, 0x0a, 0x1a, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x73,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x1d, 0x52, 0x18, 0x64, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x41, 0x53, 0x2d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x02, 0x52, 0x0f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c,
	0x0a, 0x17, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x62, 0x31,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x03, 0x52, 0x16, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x53, 0x49, 0x42, 0x31,
	0x2d, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x25,
	0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x04, 0x52, 0x22, 0x64,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x05,
	0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01,
	0x12, 0x6c, 0x0a, 0x16, 0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x72, 0x65, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x35, 0x34, 0x30,
	0x49, 0x45, 0x73, 0x48, 0x06, 0x52, 0x14, 0x6e, 0x6f, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x14,
	0x0a, 0x12, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x64,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x62, 0x31, 0x5f, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x28, 0x0a, 0x26, 0x5f, 0x64, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1c, 0x0a, 0x1a,
	0x52, 0x72, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x76, 0x31, 0x35, 0x34, 0x30, 0x49, 0x45, 0x73, 0x22, 0xeb, 0x01, 0x0a, 0x0f, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x37,
	0x0a, 0x18, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x6b, 0x65, 0x79, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x62, 0x0a, 0x17, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x68, 0x6f, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x14, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0d, 0x6e,
	0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x61, 0x73, 0x2d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6e, 0x61, 0x73, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x1c, 0x0a, 0x1a, 0x52, 0x72, 0x63, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x52, 0x72, 0x63, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x22, 0x0c, 0x0a, 0x0a, 0x52, 0x72, 0x63, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x22, 0x0b, 0x0a, 0x09, 0x52, 0x72, 0x63, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x22, 0x13,
	0x0a, 0x11, 0x52, 0x72, 0x63, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x72, 0x63, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x72, 0x63, 0x72, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x31, 0x22, 0x0a, 0x0a, 0x08,
	0x52, 0x72, 0x63, 0x73, 0x65, 0x74, 0x75, 0x70, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x72, 0x63, 0x73,
	0x65, 0x74, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x11, 0x0a, 0x0f,
	0x52, 0x72, 0x63, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x16, 0x0a, 0x14, 0x52, 0x72, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x63, 0x67, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x63, 0x67, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x75, 0x74, 0x72, 0x61, 0x22, 0x15,
	0x0a, 0x13, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x15, 0x0a,
	0x13, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x22, 0x06, 0x0a, 0x04, 0x53, 0x69, 0x62, 0x31, 0x22, 0x1c, 0x0a, 0x1a,
	0x53, 0x69, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x72, 0x72, 0x31, 0x36, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x19, 0x0a, 0x17, 0x55, 0x65, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x65,
	0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x19, 0x0a, 0x17,
	0x55, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x72, 0x31, 0x36, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x65, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x72, 0x31, 0x36, 0x22, 0x20, 0x0a, 0x1e, 0x55, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x31, 0x37, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x6c, 0x64, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x72, 0x31, 0x36, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0x1e,
	0x0a, 0x1c, 0x55, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x72, 0x61, 0x74, 0x72, 0x31, 0x36, 0x22, 0x1b,
	0x0a, 0x19, 0x55, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x72, 0x64, 0x63, 0x22, 0x32, 0x0a, 0x0c, 0x41,
	0x72, 0x66, 0x63, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x72, 0x12, 0x22, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x1a,
	0x07, 0x18, 0xbd, 0x92, 0xc8, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xf8, 0x01, 0x0a, 0x03, 0x42, 0x77, 0x70, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x57, 0x0a,
	0x12, 0x73, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x52, 0x11, 0x73, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x53,
	0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x50, 0x0a, 0x0d, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x63,
	0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x79, 0x63, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x42, 0x77, 0x70, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x63, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x79, 0x63,
	0x6c, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x8b, 0x02, 0x0a, 0x0b, 0x42,
	0x77, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x34, 0x0a, 0x06, 0x62, 0x77,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x77, 0x70, 0x49, 0x64, 0x52, 0x06, 0x62, 0x77, 0x70, 0x2d, 0x49, 0x64,
	0x12, 0x4d, 0x0a, 0x0a, 0x62, 0x77, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x77, 0x70,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0a, 0x62, 0x77, 0x70, 0x2d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x56, 0x0a, 0x0d, 0x62, 0x77, 0x70, 0x5f, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x77, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x48, 0x01, 0x52, 0x0d, 0x62, 0x77, 0x70, 0x2d, 0x44, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x77, 0x70, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x77, 0x70, 0x5f, 0x64,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x22, 0x50, 0x64, 0x63,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x77,
	0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x73,
	0x65, 0x74, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x64, 0x63, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x42, 0x29, 0x0a,
	0x27, 0x70, 0x64, 0x63, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x77, 0x70, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xad, 0x01, 0x0a, 0x22, 0x50, 0x64, 0x73,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x77,
	0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x73,
	0x65, 0x74, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x64, 0x73, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x42, 0x29, 0x0a,
	0x27, 0x70, 0x64, 0x73, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x77, 0x70, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xf0, 0x02, 0x0a, 0x11, 0x42, 0x77, 0x70,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x49,
	0x0a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x77, 0x70, 0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x6f, 0x0a, 0x13, 0x70, 0x64, 0x63,
	0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x64, 0x63, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x42, 0x77, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x12, 0x70, 0x64, 0x63, 0x63, 0x68, 0x2d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x6f, 0x0a, 0x13, 0x70, 0x64,
	0x73, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x64, 0x73, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x42, 0x77, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x48, 0x01, 0x52, 0x12, 0x70, 0x64, 0x73, 0x63, 0x68, 0x2d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f,
	0x70, 0x64, 0x63, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x70, 0x64, 0x73, 0x63, 0x68, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x1f,
	0x50, 0x64, 0x73, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x77, 0x70, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x73,
	0x65, 0x74, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x64, 0x73, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00,
	0x52, 0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x42, 0x25, 0x0a, 0x23, 0x70, 0x64, 0x73, 0x63, 0x68,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x62, 0x77, 0x70, 0x5f, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x72,
	0x0a, 0x14, 0x42, 0x77, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x0c, 0x70, 0x64, 0x73, 0x63, 0x68, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x64, 0x73, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x42, 0x77, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x0c, 0x70, 0x64, 0x73, 0x63, 0x68, 0x2d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x28, 0x0a, 0x05, 0x42, 0x77, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a,
	0x04, 0x18, 0x04, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x74, 0x0a, 0x0f,
	0x43, 0x65, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x4e, 0x0a, 0x0e, 0x73, 0x70, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x70, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0c,
	0x73, 0x70, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x70, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0xa2, 0x02, 0x0a, 0x0c, 0x53, 0x70, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x6f, 0x0a, 0x19, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x53, 0x79, 0x6e,
	0x63, 0x88, 0x01, 0x01, 0x12, 0x66, 0x0a, 0x18, 0x73, 0x70, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x01, 0x52, 0x15, 0x73, 0x70, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x44, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x1c, 0x0a, 0x1a,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x73,
	0x70, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x66, 0x0a, 0x15, 0x73, 0x70, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x73, 0x70, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f,
	0x73, 0x70, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x13, 0x54, 0x77, 0x6f, 0x6e, 0x72, 0x4f, 0x66,
	0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x5f, 0x0a, 0x22,
	0x74, 0x77, 0x6f, 0x5f, 0x74, 0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x1f, 0x74, 0x77,
	0x6f, 0x54, 0x58, 0x2d, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe5, 0x0b,
	0x0a, 0x0f, 0x4e, 0x31, 0x6e, 0x32, 0x6d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x54, 0x77,
	0x6f, 0x12, 0x6c, 0x0a, 0x27, 0x74, 0x77, 0x6f, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x25, 0x74, 0x77, 0x6f, 0x2d, 0x6f, 0x6e,
	0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x6c, 0x0a, 0x27, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x25, 0x74, 0x77, 0x6f, 0x2d, 0x74, 0x77, 0x6f, 0x2d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a,
	0x28, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x26, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x6f, 0x6e, 0x65, 0x2d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a,
	0x29, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x27, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2d, 0x74, 0x77,
	0x6f, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x6c, 0x0a, 0x27, 0x73, 0x69, 0x78, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x25, 0x73, 0x69, 0x78, 0x2d, 0x6f, 0x6e, 0x65, 0x2d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a,
	0x28, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x26, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x77, 0x6f, 0x2d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a,
	0x29, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x27, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x6f, 0x6e,
	0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x72, 0x0a, 0x2a, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x28, 0x66, 0x6f, 0x75, 0x72, 0x2d,
	0x74, 0x68, 0x72, 0x65, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x27, 0x73, 0x69, 0x78, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e,
	0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x25, 0x73, 0x69, 0x78, 0x2d,
	0x74, 0x77, 0x6f, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x72, 0x0a, 0x2a, 0x74, 0x77, 0x65, 0x6c, 0x76, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x28, 0x74, 0x77, 0x65,
	0x6c, 0x76, 0x65, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x29, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x66, 0x6f,
	0x75, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x27,
	0x66, 0x6f, 0x75, 0x72, 0x2d, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x29, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x27, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x2b, 0x73, 0x69, 0x78,
	0x74, 0x65, 0x65, 0x6e, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f,
	0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x29, 0x73, 0x69, 0x78, 0x74, 0x65, 0x65, 0x6e, 0x2d, 0x6f, 0x6e,
	0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x14, 0x0a, 0x12, 0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61,
	0x6e, 0x5f, 0x74, 0x77, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x1b, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68,
	0x61, 0x6e, 0x54, 0x77, 0x6f, 0x6e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61,
	0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x05, 0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x31, 0x6e,
	0x32, 0x6d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x54, 0x77, 0x6f, 0x52, 0x05, 0x6e, 0x31,
	0x2d, 0x6e, 0x32, 0x12, 0x83, 0x01, 0x0a, 0x32, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2d, 0x69, 0x32, 0x88, 0x01, 0x01, 0x42, 0x35, 0x0a, 0x33, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x32,
	0x22, 0xe6, 0x01, 0x0a, 0x20, 0x4e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61,
	0x50, 0x6f, 0x72, 0x74, 0x73, 0x74, 0x79, 0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x3e, 0x0a, 0x03, 0x74, 0x77, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x77, 0x6f, 0x6e, 0x72,
	0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x48, 0x00,
	0x52, 0x03, 0x74, 0x77, 0x6f, 0x12, 0x58, 0x0a, 0x0d, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68,
	0x61, 0x6e, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x54, 0x77, 0x6f,
	0x6e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73,
	0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x54, 0x77, 0x6f, 0x42,
	0x28, 0x0a, 0x26, 0x6e, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x22, 0xe3, 0x01, 0x0a, 0x17, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x6e, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61,
	0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x4f, 0x66, 0x41,
	0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x10, 0x6e, 0x72, 0x4f,
	0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x60, 0x0a,
	0x22, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x20, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c,
	0x2d, 0x72, 0x69, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xe5, 0x07, 0x0a, 0x15, 0x4e, 0x67, 0x6e, 0x31, 0x6e, 0x32, 0x74, 0x79, 0x70, 0x65, 0x49, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x72, 0x0a, 0x2a, 0x74, 0x77, 0x6f,
	0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x28, 0x74, 0x77, 0x6f, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x6f, 0x6e, 0x65,
	0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a,
	0x2b, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x29, 0x74, 0x77, 0x6f, 0x2d, 0x66, 0x6f,
	0x75, 0x72, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x2b, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x77, 0x6f, 0x5f,
	0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x29,
	0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x72, 0x0a, 0x2a, 0x74, 0x77, 0x6f,
	0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x28, 0x74, 0x77, 0x6f, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x74, 0x77, 0x6f,
	0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a,
	0x2c, 0x74, 0x77, 0x6f, 0x5f, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x2a, 0x74, 0x77, 0x6f, 0x2d, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x2c, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x66, 0x6f,
	0x75, 0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x2a, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x6f, 0x6e, 0x65,
	0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a,
	0x2b, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x29, 0x74, 0x77, 0x6f, 0x2d, 0x66, 0x6f,
	0x75, 0x72, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x2b, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x77, 0x6f, 0x5f,
	0x74, 0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x29,
	0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x1c, 0x0a, 0x1a, 0x6e, 0x67, 0x5f,
	0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x48, 0x0a, 0x08, 0x6e, 0x67, 0x5f, 0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x67, 0x6e,
	0x31, 0x6e, 0x32, 0x74, 0x79, 0x70, 0x65, 0x49, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x52, 0x08, 0x6e, 0x67, 0x2d, 0x6e, 0x31, 0x2d, 0x6e, 0x32, 0x12, 0x3a, 0x0a, 0x0e,
	0x72, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x72, 0x69, 0x2d, 0x52, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe0, 0x01, 0x0a, 0x0c, 0x53, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x31, 0x12, 0x60, 0x0a, 0x13, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x11, 0x74, 0x79, 0x70, 0x65, 0x49, 0x2d,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x5d, 0x0a, 0x12, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x10, 0x74, 0x79, 0x70, 0x65, 0x49, 0x2d,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x73, 0x75,
	0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x31, 0x22, 0x78, 0x0a, 0x11, 0x54,
	0x79, 0x70, 0x65, 0x31, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3e, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x31, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xe9, 0x05, 0x0a, 0x23, 0x4e, 0x31, 0x6e, 0x32, 0x63, 0x6f,
	0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x49, 0x69, 0x12, 0x2e, 0x0a,
	0x07, 0x74, 0x77, 0x6f, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x74, 0x77, 0x6f, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x74, 0x77, 0x6f, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x30, 0x0a,
	0x08, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x6f, 0x6e, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2d,
	0x74, 0x77, 0x6f, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x69, 0x78, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x73, 0x69, 0x78, 0x2d,
	0x6f, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x77, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6f, 0x75,
	0x72, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6f,
	0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x6f, 0x75,
	0x72, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x68, 0x72, 0x65, 0x65, 0x12,
	0x2e, 0x0a, 0x07, 0x73, 0x69, 0x78, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x73, 0x69, 0x78, 0x2d, 0x74, 0x77, 0x6f, 0x12,
	0x34, 0x0a, 0x0a, 0x74, 0x77, 0x65, 0x6c, 0x76, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x77, 0x65, 0x6c, 0x76,
	0x65, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x66, 0x6f,
	0x75, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09,
	0x66, 0x6f, 0x75, 0x72, 0x2d, 0x66, 0x6f, 0x75, 0x72, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x09, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x36, 0x0a,
	0x0b, 0x73, 0x69, 0x78, 0x74, 0x65, 0x65, 0x6e, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x69, 0x78, 0x74, 0x65, 0x65,
	0x6e, 0x2d, 0x6f, 0x6e, 0x65, 0x42, 0x2a, 0x0a, 0x28, 0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x69, 0x22, 0xe3, 0x01, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69, 0x73, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x21, 0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x31, 0x6e, 0x32, 0x63, 0x6f, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x49, 0x69, 0x52, 0x1f, 0x6e, 0x31, 0x2d,
	0x6e, 0x32, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x16,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x72, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x15, 0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x2d, 0x52, 0x49, 0x2d, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb0, 0x02, 0x0a, 0x1a, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x69, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x1c, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x19, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x65, 0x0a, 0x25, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x69, 0x5f,
	0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x22, 0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x2d, 0x50, 0x6f,
	0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x49, 0x2d, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0c, 0x53,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x32, 0x12, 0x3f, 0x0a, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x12, 0x69, 0x0a, 0x16,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69, 0x50, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x14, 0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x2d, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x32, 0x22, 0xb2, 0x02, 0x0a, 0x11, 0x54, 0x79, 0x70,
	0x65, 0x32, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x32, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5d,
	0x0a, 0x13, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x74, 0x79, 0x70, 0x65, 0x32, 0x52, 0x11, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e,
	0x64, 0x41, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x51, 0x0a, 0x0f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x42, 0x65, 0x61, 0x6d, 0x73, 0x74, 0x79, 0x70, 0x65, 0x32, 0x52, 0x0d,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x42, 0x65, 0x61, 0x6d, 0x73, 0x22, 0xc1, 0x01,
	0x0a, 0x1a, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x40, 0x0a, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x31, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x31, 0x12, 0x40,
	0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x32, 0x63, 0x6f, 0x64, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x32,
	0x42, 0x1f, 0x0a, 0x1d, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x68, 0x0a, 0x0e, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x56, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x63,
	0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf7, 0x05, 0x0a, 0x29,
	0x4e, 0x31, 0x6e, 0x32, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x69, 0x72, 0x31, 0x36, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x77, 0x6f,
	0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x07, 0x74, 0x77, 0x6f, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x77, 0x6f,
	0x5f, 0x74, 0x77, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x07, 0x74, 0x77, 0x6f, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x30, 0x0a, 0x08, 0x66, 0x6f, 0x75,
	0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x08, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x74,
	0x68, 0x72, 0x65, 0x65, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2d, 0x74, 0x77, 0x6f, 0x12,
	0x2e, 0x0a, 0x07, 0x73, 0x69, 0x78, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x73, 0x69, 0x78, 0x2d, 0x6f, 0x6e, 0x65, 0x12,
	0x30, 0x0a, 0x08, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x77,
	0x6f, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x0a, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x68, 0x72, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73,
	0x69, 0x78, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x07, 0x73, 0x69, 0x78, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x34, 0x0a, 0x0a, 0x74,
	0x77, 0x65, 0x6c, 0x76, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x77, 0x65, 0x6c, 0x76, 0x65, 0x2d, 0x6f, 0x6e,
	0x65, 0x12, 0x32, 0x0a, 0x09, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x66, 0x6f, 0x75, 0x72,
	0x2d, 0x66, 0x6f, 0x75, 0x72, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74,
	0x77, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x69, 0x78,
	0x74, 0x65, 0x65, 0x6e, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x69, 0x78, 0x74, 0x65, 0x65, 0x6e, 0x2d, 0x6f, 0x6e,
	0x65, 0x42, 0x32, 0x0a, 0x30, 0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x69, 0x5f, 0x72, 0x31, 0x36, 0x22, 0xfc, 0x01, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69,
	0x72, 0x31, 0x36, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x25, 0x6e,
	0x31, 0x5f, 0x6e, 0x32, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x75,
	0x62, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x31, 0x6e, 0x32, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53,
	0x75, 0x62, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x72, 0x31, 0x36, 0x74, 0x79, 0x70, 0x65, 0x49, 0x69, 0x72, 0x31, 0x36, 0x52, 0x23, 0x6e, 0x31,
	0x2d, 0x6e, 0x32, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31,
	0x36, 0x12, 0x51, 0x0a, 0x1a, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x72, 0x69, 0x5f,
	0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x19, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x49, 0x2d, 0x52, 0x49, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x72, 0x31, 0x36, 0x22, 0xa3, 0x02, 0x0a, 0x1d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69, 0x50,
	0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x73,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x49, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x53,
	0x69, 0x7a, 0x65, 0x72, 0x31, 0x36, 0x74, 0x79, 0x70, 0x65, 0x49, 0x69, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x52, 0x1d, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x6d, 0x0a, 0x29, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x26, 0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x2d, 0x50, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x49, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31, 0x36, 0x22, 0xe8, 0x01, 0x0a, 0x0f, 0x53,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x32, 0x72, 0x31, 0x36, 0x12, 0x4a,
	0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x69, 0x72, 0x31, 0x36, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x74, 0x0a, 0x1a, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69, 0x50, 0x6f, 0x72,
	0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x73, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x18, 0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x2d, 0x50,
	0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31, 0x36,
	0x42, 0x13, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x32, 0x5f, 0x72, 0x31, 0x36, 0x22, 0xed, 0x01, 0x0a, 0x17, 0x54, 0x79, 0x70, 0x65, 0x32, 0x72,
	0x31, 0x36, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x72, 0x31,
	0x36, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x32, 0x72, 0x31, 0x36, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x2a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f,
	0x66, 0x5f, 0x70, 0x6d, 0x69, 0x5f, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x63, 0x71, 0x69, 0x5f, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x72,
	0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x26, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x50, 0x4d, 0x49, 0x2d, 0x53, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x50, 0x65,
	0x72, 0x43, 0x51, 0x49, 0x2d, 0x53, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x2d, 0x72, 0x31, 0x36,
	0x12, 0x33, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2d, 0x72, 0x31, 0x36, 0x22, 0x9b, 0x01, 0x0a, 0x20, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x72, 0x31, 0x36, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x36, 0x12, 0x4e, 0x0a, 0x09, 0x74, 0x79,
	0x70, 0x65, 0x32, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x32, 0x72, 0x31, 0x36, 0x63, 0x6f,
	0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x72, 0x31, 0x36, 0x48, 0x00, 0x52,
	0x09, 0x74, 0x79, 0x70, 0x65, 0x32, 0x2d, 0x72, 0x31, 0x36, 0x42, 0x27, 0x0a, 0x25, 0x63, 0x6f,
	0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x31, 0x36, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x72, 0x31, 0x36, 0x22, 0x79, 0x0a, 0x11, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x36, 0x12, 0x64, 0x0a, 0x11, 0x63, 0x6f, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x72, 0x31, 0x36, 0x43, 0x6f, 0x64, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x36, 0x52, 0x10, 0x63, 0x6f,
	0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x2d, 0x72, 0x31, 0x36, 0x22, 0xfa,
	0x01, 0x0a, 0x29, 0x4e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f,
	0x72, 0x74, 0x73, 0x74, 0x79, 0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x72, 0x31, 0x37, 0x12, 0x3e, 0x0a, 0x03,
	0x74, 0x77, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x77, 0x6f, 0x6e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61,
	0x50, 0x6f, 0x72, 0x74, 0x73, 0x48, 0x00, 0x52, 0x03, 0x74, 0x77, 0x6f, 0x12, 0x58, 0x0a, 0x0d,
	0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x72, 0x65,
	0x54, 0x68, 0x61, 0x6e, 0x54, 0x77, 0x6f, 0x6e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e,
	0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x72, 0x65, 0x54,
	0x68, 0x61, 0x6e, 0x54, 0x77, 0x6f, 0x42, 0x33, 0x0a, 0x31, 0x6e, 0x72, 0x5f, 0x6f, 0x66, 0x5f,
	0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x5f, 0x72, 0x31, 0x37, 0x22, 0x94, 0x01, 0x0a, 0x21,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x72, 0x31, 0x37, 0x74, 0x79, 0x70, 0x65, 0x31, 0x72, 0x31,
	0x37, 0x12, 0x6f, 0x0a, 0x13, 0x6e, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x6e, 0x74, 0x65, 0x6e,
	0x6e, 0x61, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e,
	0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x74, 0x79, 0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x72, 0x31, 0x37,
	0x52, 0x10, 0x6e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x29, 0x4e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e,
	0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x74, 0x79, 0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x72, 0x31, 0x37,
	0x12, 0x3e, 0x0a, 0x03, 0x74, 0x77, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x77, 0x6f, 0x6e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74,
	0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x48, 0x00, 0x52, 0x03, 0x74, 0x77, 0x6f,
	0x12, 0x58, 0x0a, 0x0d, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x74, 0x77,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x54, 0x77, 0x6f, 0x6e, 0x72, 0x4f, 0x66, 0x41,
	0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6d,
	0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x54, 0x77, 0x6f, 0x42, 0x33, 0x0a, 0x31, 0x6e, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x5f, 0x72, 0x31, 0x37, 0x22,
	0x94, 0x01, 0x0a, 0x21, 0x54, 0x79, 0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50,
	0x61, 0x6e, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x72, 0x31, 0x37, 0x74, 0x79, 0x70,
	0x65, 0x31, 0x72, 0x31, 0x37, 0x12, 0x6f, 0x0a, 0x13, 0x6e, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61,
	0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x4f, 0x66, 0x41,
	0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x32, 0x72, 0x31, 0x37, 0x52, 0x10, 0x6e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e,
	0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x22, 0xb8, 0x05, 0x0a, 0x17, 0x54, 0x79, 0x70, 0x65, 0x31,
	0x72, 0x31, 0x37, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x72,
	0x31, 0x37, 0x12, 0x83, 0x01, 0x0a, 0x1e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x31, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50,
	0x61, 0x6e, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x72, 0x31, 0x37, 0x74, 0x79, 0x70,
	0x65, 0x31, 0x72, 0x31, 0x37, 0x48, 0x00, 0x52, 0x1c, 0x74, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x31, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x83, 0x01, 0x0a, 0x1e, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x32,
	0x72, 0x31, 0x37, 0x74, 0x79, 0x70, 0x65, 0x31, 0x72, 0x31, 0x37, 0x48, 0x01, 0x52, 0x1c, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c,
	0x2d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x76,
	0x0a, 0x2b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x70, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x02, 0x52, 0x28, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x72, 0x69, 0x2d,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x54, 0x52, 0x50, 0x2d,
	0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x74, 0x0a, 0x2a, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x69,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x64, 0x6d,
	0x5f, 0x72, 0x31, 0x37, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x03,
	0x52, 0x27, 0x74, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x2d, 0x72, 0x69, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x44, 0x4d, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x42, 0x21, 0x0a, 0x1f,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x5f, 0x72, 0x31, 0x37, 0x42,
	0x21, 0x0a, 0x1f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x5f, 0x72,
	0x31, 0x37, 0x42, 0x2e, 0x0a, 0x2c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x69, 0x5f, 0x72, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x70, 0x5f, 0x72,
	0x31, 0x37, 0x42, 0x2d, 0x0a, 0x2b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x69, 0x5f, 0x72, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x64, 0x6d, 0x5f, 0x72, 0x31,
	0x37, 0x22, 0xcc, 0x03, 0x0a, 0x1e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69, 0x50, 0x6f, 0x72, 0x74,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x37, 0x74, 0x79, 0x70, 0x65,
	0x32, 0x72, 0x31, 0x37, 0x12, 0x33, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x63, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x63, 0x0a, 0x0e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x6e, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x38, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f,
	0x66, 0x4e, 0x72, 0x31, 0x37, 0x74, 0x79, 0x70, 0x65, 0x49, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x37, 0x48, 0x00, 0x52, 0x0c, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x4f, 0x66, 0x4e, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x5f,
	0x0a, 0x2a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x6d, 0x69, 0x5f,
	0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x71, 0x69,
	0x5f, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x01, 0x52, 0x26, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x4d,
	0x49, 0x2d, 0x53, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x50, 0x65, 0x72, 0x43, 0x51, 0x49,
	0x2d, 0x53, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12,
	0x6d, 0x0a, 0x29, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x69, 0x5f, 0x72, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x26, 0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x2d, 0x50,
	0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x49, 0x2d, 0x52,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31, 0x37, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x6e, 0x5f, 0x72, 0x31,
	0x37, 0x42, 0x2d, 0x0a, 0x2b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f,
	0x70, 0x6d, 0x69, 0x5f, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x63, 0x71, 0x69, 0x5f, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x31, 0x37,
	0x22, 0x8e, 0x01, 0x0a, 0x17, 0x54, 0x79, 0x70, 0x65, 0x32, 0x72, 0x31, 0x37, 0x63, 0x6f, 0x64,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x72, 0x31, 0x37, 0x12, 0x73, 0x0a, 0x1a,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69, 0x50,
	0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x37, 0x74,
	0x79, 0x70, 0x65, 0x32, 0x72, 0x31, 0x37, 0x52, 0x18, 0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x2d,
	0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31,
	0x37, 0x22, 0xeb, 0x01, 0x0a, 0x20, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x72, 0x31, 0x37, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x72, 0x31, 0x37, 0x12, 0x4e, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x31, 0x5f,
	0x72, 0x31, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x31, 0x72, 0x31, 0x37, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x72, 0x31, 0x37, 0x48, 0x00, 0x52, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x31, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x4e, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x32, 0x5f,
	0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x32, 0x72, 0x31, 0x37, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x72, 0x31, 0x37, 0x48, 0x00, 0x52, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x32, 0x2d, 0x72, 0x31, 0x37, 0x42, 0x27, 0x0a, 0x25, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x31, 0x37, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x31, 0x37, 0x22,
	0x79, 0x0a, 0x11, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x72, 0x31, 0x37, 0x12, 0x64, 0x0a, 0x11, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x72, 0x31, 0x37, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x37, 0x52, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x2d, 0x72, 0x31, 0x37, 0x22, 0x59, 0x0a, 0x1b, 0x54, 0x79,
	0x70, 0x65, 0x31, 0x76, 0x31, 0x37, 0x33, 0x30, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x76, 0x31, 0x37, 0x33, 0x30, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6f, 0x64,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x4d, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x24, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x76, 0x31, 0x37, 0x33, 0x30, 0x43, 0x6f, 0x64, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76, 0x31, 0x37, 0x33, 0x30, 0x12, 0x56,
	0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x31, 0x5f, 0x76, 0x31, 0x37, 0x33, 0x30, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x31, 0x76, 0x31, 0x37, 0x33, 0x30, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x76, 0x31, 0x37, 0x33, 0x30, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x31,
	0x2d, 0x76, 0x31, 0x37, 0x33, 0x30, 0x42, 0x2b, 0x0a, 0x29, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x31, 0x37, 0x33, 0x30, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x31,
	0x37, 0x33, 0x30, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76, 0x31, 0x37, 0x33, 0x30, 0x12, 0x6c, 0x0a, 0x13, 0x63,
	0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x31, 0x37,
	0x33, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x76, 0x31, 0x37,
	0x33, 0x30, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x76, 0x31, 0x37, 0x33, 0x30, 0x52, 0x12, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x2d, 0x76, 0x31, 0x37, 0x33, 0x30, 0x22, 0x8c, 0x02, 0x0a, 0x1c, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x63, 0x63, 0x65, 0x52, 0x45, 0x67, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x72, 0x65,
	0x67, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x65,
	0x61, 0x76, 0x65, 0x64, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x2d, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x5c, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x65, 0x61,
	0x76, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x65, 0x61, 0x76,
	0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x65, 0x61, 0x76, 0x65,
	0x64, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x72, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x66, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x68, 0x69,
	0x66, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xd6, 0x01, 0x0a, 0x23, 0x43, 0x63, 0x65,
	0x52, 0x45, 0x67, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x12, 0x57, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x63, 0x63, 0x65, 0x52, 0x45, 0x67, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6e, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x0e, 0x6e, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x65,
	0x61, 0x76, 0x65, 0x64, 0x42, 0x2b, 0x0a, 0x29, 0x63, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x5f,
	0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65,
	0x74, 0x22, 0xc4, 0x0b, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x62, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x1a,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x18, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x14, 0x63, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x63, 0x65, 0x52, 0x45, 0x67, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x52, 0x13, 0x63, 0x63, 0x65, 0x2d, 0x52, 0x45, 0x47, 0x2d, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6f, 0x0a, 0x14, 0x70, 0x72, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x52, 0x13, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x47,
	0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x6e, 0x0a, 0x1c, 0x74, 0x63,
	0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x64, 0x63, 0x63, 0x68, 0x5f, 0x74,
	0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52,
	0x19, 0x74, 0x63, 0x69, 0x2d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x50, 0x44, 0x43, 0x43, 0x48,
	0x2d, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x76, 0x0a, 0x20, 0x74, 0x63,
	0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x64, 0x63, 0x63, 0x68, 0x5f, 0x74,
	0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x69,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08,
	0x01, 0x10, 0x40, 0x52, 0x1d, 0x74, 0x63, 0x69, 0x2d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x50,
	0x44, 0x43, 0x43, 0x48, 0x2d, 0x54, 0x6f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x6b, 0x0a, 0x12, 0x74, 0x63, 0x69, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x63, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x69, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x44, 0x63, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x10, 0x74, 0x63, 0x69, 0x2d,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x44, 0x43, 0x49, 0x88, 0x01, 0x01, 0x12,
	0x3e, 0x0a, 0x18, 0x70, 0x64, 0x63, 0x63, 0x68, 0x5f, 0x64, 0x6d, 0x72, 0x73, 0x5f, 0x73, 0x63,
	0x72, 0x61, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x01, 0x52, 0x17, 0x70, 0x64, 0x63, 0x63, 0x68, 0x2d, 0x44, 0x4d, 0x52, 0x53, 0x2d,
	0x53, 0x63, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x29, 0x0a, 0x0d, 0x72, 0x62, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x31, 0x36,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0d, 0x72, 0x62, 0x2d, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x2d, 0x72, 0x31, 0x36, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x17, 0x74, 0x63,
	0x69, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x63, 0x69, 0x5f, 0x31, 0x5f,
	0x32, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x16, 0x74,
	0x63, 0x69, 0x2d, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x44, 0x43, 0x49, 0x2d, 0x31, 0x2d,
	0x32, 0x2d, 0x72, 0x31, 0x36, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x16, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72,
	0x31, 0x36, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x14, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x72, 0x31, 0x36,
	0x88, 0x01, 0x01, 0x12, 0x78, 0x0a, 0x1d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x76,
	0x31, 0x36, 0x31, 0x30, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x76, 0x31, 0x36, 0x31, 0x30, 0x48, 0x05, 0x52, 0x1a,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x49, 0x64, 0x2d, 0x76, 0x31, 0x36, 0x31, 0x30, 0x88, 0x01, 0x01, 0x12, 0x88, 0x01,
	0x0a, 0x1c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x5f, 0x74, 0x63, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x63, 0x69, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x72, 0x31, 0x37, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x48, 0x06, 0x52, 0x1a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x43, 0x49, 0x2d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x74, 0x63, 0x69,
	0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x63, 0x69, 0x42,
	0x1b, 0x0a, 0x19, 0x5f, 0x70, 0x64, 0x63, 0x63, 0x68, 0x5f, 0x64, 0x6d, 0x72, 0x73, 0x5f, 0x73,
	0x63, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x72, 0x62, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x42, 0x1a,
	0x0a, 0x18, 0x5f, 0x74, 0x63, 0x69, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x63, 0x69, 0x5f, 0x31, 0x5f, 0x32, 0x5f, 0x72, 0x31, 0x36, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x72, 0x31, 0x36, 0x42, 0x20, 0x0a, 0x1e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x5f, 0x76, 0x31, 0x36, 0x31, 0x30, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x63, 0x69, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x31, 0x37, 0x22, 0x37, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x0b, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3a, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x1a, 0x04, 0x18, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a,
	0x19, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x49, 0x64, 0x76, 0x31, 0x36, 0x31, 0x30, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04,
	0x18, 0x0f, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x16, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x5a, 0x65, 0x72, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x0f, 0x28, 0x00, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x72, 0x0a, 0x1c, 0x43, 0x73, 0x69, 0x41, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73,
	0x69, 0x41, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01,
	0x10, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xdc, 0x02, 0x0a, 0x18, 0x43,
	0x73, 0x69, 0x41, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x22, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69,
	0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92,
	0x01, 0x04, 0x08, 0x01, 0x10, 0x10, 0x52, 0x1e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x8f, 0x01, 0x0a, 0x1c, 0x61, 0x70, 0x5f, 0x63, 0x73,
	0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x43, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x31, 0x37, 0x43, 0x73,
	0x69, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x61, 0x70, 0x2d, 0x43, 0x53, 0x49,
	0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64,
	0x65, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x61, 0x70, 0x5f,
	0x63, 0x73, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x31, 0x37, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x4e, 0x7a,
	0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46,
	0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x49, 0x0a, 0x08,
	0x71, 0x63, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x10, 0x52, 0x08, 0x71,
	0x63, 0x6c, 0x2d, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xf8, 0x01, 0x0a, 0x30, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x73, 0x69, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x54, 0x0a, 0x0a,
	0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52,
	0x53, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49, 0x2d,
	0x52, 0x53, 0x12, 0x33, 0x0a, 0x14, 0x63, 0x73, 0x69, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x13, 0x63, 0x73, 0x69, 0x2d, 0x53, 0x53, 0x42, 0x2d, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x42, 0x39, 0x0a, 0x37, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x63, 0x73, 0x69, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x23, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x32,
	0x72, 0x31, 0x37, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x32, 0x72, 0x31, 0x37, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x32, 0x5f, 0x72, 0x31, 0x37, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x32, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x53, 0x0a, 0x0d, 0x71, 0x63, 0x6c, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x32, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x10, 0x52, 0x0d, 0x71,
	0x63, 0x6c, 0x2d, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0x2d, 0x72, 0x31, 0x37, 0x22, 0x9d, 0x02, 0x0a,
	0x34, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x32, 0x72, 0x31, 0x37, 0x43, 0x73, 0x69, 0x41, 0x73, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x66, 0x0a, 0x0f, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69,
	0x5f, 0x72, 0x73, 0x32, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x32,
	0x72, 0x31, 0x37, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x32, 0x72, 0x31, 0x37, 0x48, 0x00, 0x52, 0x0f, 0x6e, 0x7a,
	0x70, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x32, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x3d, 0x0a,
	0x19, 0x63, 0x73, 0x69, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x73, 0x65, 0x74, 0x32, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x18, 0x63, 0x73, 0x69, 0x2d, 0x53, 0x53, 0x42, 0x2d, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x32, 0x2d, 0x72, 0x31, 0x37, 0x42, 0x3e, 0x0a, 0x3c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x32, 0x5f, 0x72, 0x31, 0x37, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x61,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xf6, 0x05, 0x0a,
	0x1d, 0x43, 0x73, 0x69, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52,
	0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x64, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x64, 0x12, 0x7b, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f,
	0x66, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x47, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x73, 0x69,
	0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x4f, 0x0a, 0x21, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x1f, 0x63, 0x73,
	0x69, 0x2d, 0x49, 0x4d, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x6f,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x57, 0x0a, 0x25, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x23, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x8e, 0x01, 0x0a, 0x1a, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x32, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x32, 0x72, 0x31, 0x37, 0x43, 0x73,
	0x69, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x02, 0x52, 0x18, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x32, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x18, 0x63, 0x73,
	0x69, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x16,
	0x63, 0x73, 0x69, 0x2d, 0x53, 0x53, 0x42, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x45, 0x78, 0x74, 0x88, 0x01, 0x01, 0x42, 0x24, 0x0a, 0x22, 0x5f, 0x63, 0x73,
	0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x28, 0x0a, 0x26, 0x5f, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x32, 0x5f, 0x72, 0x31, 0x37, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x63, 0x73, 0x69,
	0x5f, 0x73, 0x73, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65,
	0x74, 0x5f, 0x65, 0x78, 0x74, 0x22, 0x54, 0x0a, 0x16, 0x43, 0x73, 0x69, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x42,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x72, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6e, 0x72, 0x6f, 0x66, 0x52, 0x42, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x23,
	0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x30, 0x63, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x12, 0x6a, 0x0a, 0x16, 0x73, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x30, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x30,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x30, 0x52, 0x15, 0x73, 0x75, 0x62, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70, 0x30, 0x12,
	0x2d, 0x0a, 0x12, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70, 0x30, 0x22, 0xc0,
	0x01, 0x0a, 0x23, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x31, 0x63, 0x73, 0x69, 0x49, 0x4d,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x6a, 0x0a, 0x16, 0x73, 0x75, 0x62, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x62, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x70, 0x31, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x31, 0x52, 0x15, 0x73, 0x75, 0x62,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x70, 0x31, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70,
	0x31, 0x22, 0x91, 0x02, 0x0a, 0x28, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x58,
	0x0a, 0x08, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x30, 0x63, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x08,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x30, 0x12, 0x58, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x31, 0x63, 0x73, 0x69, 0x49, 0x4d,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x31, 0x42, 0x31, 0x0a, 0x2f, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x86, 0x04, 0x0a, 0x0d, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x63, 0x73, 0x69, 0x5f, 0x69,
	0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x49,
	0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x11, 0x63, 0x73, 0x69,
	0x2d, 0x49, 0x4d, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x8c,
	0x01, 0x0a, 0x1f, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x43, 0x73, 0x69, 0x49,
	0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x1d, 0x63, 0x73, 0x69,
	0x2d, 0x49, 0x4d, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a,
	0x09, 0x66, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x01, 0x52, 0x08, 0x66, 0x72, 0x65, 0x71, 0x42, 0x61, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x71,
	0x0a, 0x16, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x6e,
	0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x41, 0x6e, 0x64,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x48, 0x02, 0x52, 0x14, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x22, 0x0a, 0x20, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x5f, 0x62,
	0x61, 0x6e, 0x64, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x32,
	0x0a, 0x0f, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x1f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x10, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x5f, 0x0a, 0x16, 0x63, 0x73, 0x69, 0x5f, 0x69,
	0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x49, 0x64, 0x52, 0x14, 0x63, 0x73, 0x69, 0x2d, 0x49, 0x4d, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x10, 0x63, 0x73, 0x69, 0x5f,
	0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x49, 0x4d,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92,
	0x01, 0x04, 0x08, 0x01, 0x10, 0x08, 0x52, 0x10, 0x63, 0x73, 0x69, 0x2d, 0x49, 0x4d, 0x2d, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x12, 0x43, 0x73, 0x69, 0x49,
	0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x1a, 0x04, 0x18, 0x3f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xc1, 0x01, 0x0a, 0x26, 0x41, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x73, 0x69,
	0x4d, 0x65, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x07, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73,
	0x69, 0x41, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x65,
	0x74, 0x75, 0x70, 0x42, 0x2e, 0x0a, 0x2c, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63,
	0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0xe8, 0x01, 0x0a, 0x32, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x73, 0x69,
	0x4d, 0x65, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x07, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73,
	0x69, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x42,
	0x3d, 0x0a, 0x3b, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x5f, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x8e,
	0x15, 0x0a, 0x0d, 0x43, 0x73, 0x69, 0x4d, 0x65, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x82, 0x01, 0x0a, 0x23, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f,
	0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08,
	0x01, 0x10, 0xc0, 0x01, 0x52, 0x1f, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53,
	0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x23, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73,
	0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x6f,
	0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x7a, 0x70, 0x43,
	0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x42, 0x0b,
	0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0xc0, 0x01, 0x52, 0x20, 0x6e, 0x7a, 0x70,
	0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x6f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x8b, 0x01,
	0x0a, 0x27, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64,
	0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x22, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49,
	0x2d, 0x52, 0x53, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x54,
	0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x8e, 0x01, 0x0a, 0x27,
	0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x23, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49,
	0x2d, 0x52, 0x53, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x54,
	0x6f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x76, 0x0a, 0x1f,
	0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73,
	0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x20, 0x52, 0x1b, 0x63, 0x73, 0x69, 0x2d, 0x49, 0x4d, 0x2d,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x79, 0x0a, 0x1f, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10,
	0x20, 0x52, 0x1c, 0x63, 0x73, 0x69, 0x2d, 0x49, 0x4d, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x6f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x80, 0x01, 0x0a, 0x23, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d,
	0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01,
	0x10, 0x40, 0x52, 0x1e, 0x63, 0x73, 0x69, 0x2d, 0x49, 0x4d, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x23, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x1f, 0x63, 0x73, 0x69, 0x2d, 0x49, 0x4d, 0x2d,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x24, 0x63, 0x73, 0x69,
	0x5f, 0x73, 0x73, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65,
	0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x1f, 0x63,
	0x73, 0x69, 0x2d, 0x53, 0x53, 0x42, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x86,
	0x01, 0x0a, 0x24, 0x63, 0x73, 0x69, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01,
	0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x20, 0x63, 0x73, 0x69, 0x2d, 0x53, 0x53, 0x42, 0x2d, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x23, 0x63, 0x73, 0x69, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73,
	0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x70, 0x52, 0x1e, 0x63, 0x73, 0x69,
	0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54,
	0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x23,
	0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10,
	0x70, 0x52, 0x1f, 0x63, 0x73, 0x69, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x7b, 0x0a, 0x21, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d,
	0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10,
	0x30, 0x52, 0x1c, 0x63, 0x73, 0x69, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x7e, 0x0a, 0x21, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x30,
	0x52, 0x1d, 0x63, 0x73, 0x69, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x54, 0x6f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x83, 0x01, 0x0a, 0x1c, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x73, 0x69, 0x4d, 0x65, 0x61, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x19, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x69, 0x63, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0xab, 0x01, 0x0a, 0x2b, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73,
	0x63, 0x68, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x73, 0x69, 0x4d, 0x65, 0x61, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x01, 0x52, 0x26, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x55, 0x53, 0x43, 0x48, 0x2d,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x1f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x64, 0x63, 0x69, 0x5f, 0x30,
	0x5f, 0x32, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x1c,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x69, 0x7a,
	0x65, 0x44, 0x43, 0x49, 0x2d, 0x30, 0x2d, 0x32, 0x2d, 0x72, 0x31, 0x36, 0x88, 0x01, 0x01, 0x12,
	0xa1, 0x01, 0x0a, 0x2f, 0x73, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x72, 0x31, 0x37, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x65, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x37, 0x42, 0x0b, 0xfa, 0x42,
	0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0xff, 0x01, 0x52, 0x28, 0x73, 0x43, 0x65, 0x6c, 0x6c,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x53, 0x2d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x2d,
	0x72, 0x31, 0x37, 0x12, 0xa4, 0x01, 0x0a, 0x2f, 0x73, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x72,
	0x31, 0x37, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0xff, 0x01, 0x52,
	0x29, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x53, 0x2d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x2d, 0x72, 0x31, 0x37, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x61,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x2e, 0x0a, 0x2c, 0x5f,
	0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x22, 0x0a, 0x20, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x5f, 0x64, 0x63, 0x69, 0x5f, 0x30, 0x5f, 0x32, 0x5f, 0x72, 0x31, 0x36, 0x22,
	0xec, 0x01, 0x0a, 0x18, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x12,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x10,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x6c, 0x0a, 0x17, 0x70, 0x75, 0x63, 0x63, 0x68, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x63, 0x63, 0x68, 0x43,
	0x53, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92,
	0x01, 0x04, 0x08, 0x01, 0x10, 0x04, 0x52, 0x16, 0x70, 0x75, 0x63, 0x63, 0x68, 0x2d, 0x43, 0x53,
	0x49, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf9,
	0x01, 0x0a, 0x25, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x4f, 0x6e, 0x50, 0x75, 0x63, 0x63, 0x68, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74,
	0x79, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6c, 0x0a, 0x17,
	0x70, 0x75, 0x63, 0x63, 0x68, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x63, 0x63, 0x68, 0x43, 0x53, 0x69, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01,
	0x10, 0x04, 0x52, 0x16, 0x70, 0x75, 0x63, 0x63, 0x68, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9a, 0x02, 0x0a, 0x25, 0x53,
	0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50,
	0x75, 0x73, 0x63, 0x68, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x6a, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x52, 0x10,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x41, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x10, 0x52, 0x14, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x30, 0x50,
	0x55, 0x73, 0x63, 0x68, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x74, 0x49, 0x64, 0x52, 0x07,
	0x70, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0x5e, 0x0a, 0x19, 0x41, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x69, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10,
	0x10, 0x52, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xdc, 0x03, 0x0a, 0x1f, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x43, 0x73, 0x69, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4d, 0x0a, 0x08, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x12, 0x77, 0x0a, 0x18, 0x73, 0x65,
	0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e,
	0x5f, 0x70, 0x75, 0x63, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x63, 0x63, 0x68, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65,
	0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x55,
	0x43, 0x43, 0x48, 0x12, 0x77, 0x0a, 0x18, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75,
	0x73, 0x63, 0x68, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x55, 0x53, 0x43, 0x48, 0x12, 0x50, 0x0a, 0x09,
	0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69,
	0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x42, 0x26,
	0x0a, 0x24, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xb0, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x69, 0x52, 0x49,
	0x69, 0x31, 0x43, 0x51, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x76, 0x0a, 0x19, 0x70, 0x64, 0x73, 0x63, 0x68, 0x5f, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x73, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x64, 0x73, 0x63, 0x68, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x46, 0x6f,
	0x72, 0x43, 0x73, 0x69, 0x63, 0x72, 0x69, 0x52, 0x69, 0x69, 0x31, 0x43, 0x71, 0x69, 0x48, 0x00,
	0x52, 0x16, 0x70, 0x64, 0x73, 0x63, 0x68, 0x2d, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x53, 0x49, 0x88, 0x01, 0x01, 0x42, 0x1c, 0x0a, 0x1a, 0x5f,
	0x70, 0x64, 0x73, 0x63, 0x68, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x73, 0x69, 0x22, 0x97, 0x03, 0x0a, 0x1d, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x73, 0x69, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x04, 0x6e,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e,
	0x65, 0x12, 0x28, 0x0a, 0x0e, 0x63, 0x72, 0x69, 0x5f, 0x72, 0x69, 0x5f, 0x70, 0x6d, 0x69, 0x5f,
	0x63, 0x71, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x72, 0x69,
	0x2d, 0x52, 0x49, 0x2d, 0x50, 0x4d, 0x49, 0x2d, 0x43, 0x51, 0x49, 0x12, 0x1e, 0x0a, 0x09, 0x63,
	0x72, 0x69, 0x5f, 0x72, 0x69, 0x5f, 0x69, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x72, 0x69, 0x2d, 0x52, 0x49, 0x2d, 0x69, 0x31, 0x12, 0x57, 0x0a, 0x0d, 0x63,
	0x72, 0x69, 0x5f, 0x72, 0x69, 0x5f, 0x69, 0x31, 0x5f, 0x63, 0x71, 0x69, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x69, 0x52, 0x49,
	0x69, 0x31, 0x43, 0x51, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x72, 0x69, 0x2d, 0x52, 0x49, 0x2d, 0x69, 0x31,
	0x2d, 0x43, 0x51, 0x49, 0x12, 0x20, 0x0a, 0x0a, 0x63, 0x72, 0x69, 0x5f, 0x72, 0x69, 0x5f, 0x63,
	0x71, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x69, 0x2d,
	0x52, 0x49, 0x2d, 0x43, 0x51, 0x49, 0x12, 0x1c, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x5f, 0x72, 0x73,
	0x72, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x63, 0x72, 0x69, 0x2d,
	0x52, 0x53, 0x52, 0x50, 0x12, 0x28, 0x0a, 0x0e, 0x73, 0x73, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x72, 0x73, 0x72, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0e,
	0x73, 0x73, 0x62, 0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x52, 0x53, 0x52, 0x50, 0x12, 0x2e,
	0x0a, 0x11, 0x63, 0x72, 0x69, 0x5f, 0x72, 0x69, 0x5f, 0x6c, 0x69, 0x5f, 0x70, 0x6d, 0x69, 0x5f,
	0x63, 0x71, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x11, 0x63, 0x72, 0x69,
	0x2d, 0x52, 0x49, 0x2d, 0x4c, 0x49, 0x2d, 0x50, 0x4d, 0x49, 0x2d, 0x43, 0x51, 0x49, 0x42, 0x23,
	0x0a, 0x21, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0xec, 0x07, 0x0a, 0x27, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72,
	0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x33, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e,
	0x64, 0x73, 0x33, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x34,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x34, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61,
	0x6e, 0x64, 0x73, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x35, 0x12, 0x32, 0x0a, 0x09, 0x73,
	0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x36, 0x12,
	0x32, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x37, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e,
	0x64, 0x73, 0x37, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x38,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x38, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61,
	0x6e, 0x64, 0x73, 0x39, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x39, 0x12, 0x34, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x30, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31,
	0x30, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x31, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62,
	0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x31, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61,
	0x6e, 0x64, 0x73, 0x31, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x32, 0x12, 0x34, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x33, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64,
	0x73, 0x31, 0x33, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31,
	0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73,
	0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x34, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x35, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x35, 0x12,
	0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x36, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61,
	0x6e, 0x64, 0x73, 0x31, 0x36, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64,
	0x73, 0x31, 0x37, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x37, 0x12, 0x34, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x38, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31,
	0x38, 0x12, 0x40, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x39, 0x5f,
	0x76, 0x31, 0x35, 0x33, 0x30, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x10, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x39, 0x2d, 0x76, 0x31,
	0x35, 0x33, 0x30, 0x42, 0x2d, 0x0a, 0x2b, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x66, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xd9, 0x03, 0x0a, 0x26, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65,
	0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x73,
	0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x78, 0x0a,
	0x14, 0x63, 0x71, 0x69, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x71, 0x69, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x13, 0x63, 0x71, 0x69, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x78, 0x0a, 0x14, 0x70, 0x6d, 0x69, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6d,
	0x69, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x13, 0x70, 0x6d, 0x69, 0x2d, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x72, 0x0a, 0x12, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x02, 0x52,
	0x11, 0x63, 0x73, 0x69, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x61,
	0x6e, 0x64, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x63, 0x71, 0x69, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x70, 0x6d, 0x69, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x73, 0x69, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x22, 0x94,
	0x01, 0x0a, 0x1f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x61, 0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x5c, 0x0a, 0x10, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x5f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x52, 0x73, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x6e,
	0x72, 0x6f, 0x66, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x53, 0x88, 0x01, 0x01,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x72, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x26, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42,
	0x61, 0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1a, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x42, 0x2e, 0x0a, 0x2c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x64, 0x5f, 0x62, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0xae, 0x01, 0x0a, 0x29, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x76, 0x31, 0x35, 0x33,
	0x30, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x80, 0x01, 0x0a, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x31, 0x35, 0x33, 0x30, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76, 0x31, 0x35, 0x33,
	0x30, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x76, 0x31, 0x35, 0x33, 0x30, 0x52, 0x16, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2d, 0x76, 0x31,
	0x35, 0x33, 0x30, 0x22, 0xdf, 0x01, 0x0a, 0x29, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x76, 0x31, 0x36,
	0x31, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x58, 0x0a, 0x23, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x63, 0x69,
	0x5f, 0x30, 0x5f, 0x32, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x1f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x43, 0x49, 0x2d, 0x30, 0x2d, 0x32, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x58, 0x0a, 0x23, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x63, 0x69, 0x5f, 0x30, 0x5f, 0x31, 0x5f, 0x72,
	0x31, 0x36, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04,
	0x08, 0x01, 0x10, 0x40, 0x52, 0x1f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x43, 0x49, 0x2d, 0x30, 0x2d,
	0x31, 0x2d, 0x72, 0x31, 0x36, 0x22, 0xd3, 0x01, 0x0a, 0x1d, 0x41, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x69, 0x63, 0x76, 0x31, 0x36, 0x31, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x58, 0x0a, 0x23, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x64, 0x63, 0x69, 0x5f, 0x30, 0x5f, 0x32, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40,
	0x52, 0x1f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x43, 0x49, 0x2d, 0x30, 0x2d, 0x32, 0x2d, 0x72, 0x31,
	0x36, 0x12, 0x58, 0x0a, 0x23, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x63, 0x69,
	0x5f, 0x30, 0x5f, 0x31, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x1f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x43, 0x49, 0x2d, 0x30, 0x2d, 0x31, 0x2d, 0x72, 0x31, 0x36, 0x22, 0xa3, 0x01, 0x0a, 0x20,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x72, 0x31,
	0x36, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x24, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x72, 0x5f, 0x72, 0x31, 0x36,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x72, 0x69, 0x2d, 0x53, 0x49,
	0x4e, 0x52, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x30, 0x0a, 0x12, 0x73, 0x73, 0x62, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x73, 0x69, 0x6e, 0x72, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x12, 0x73, 0x73, 0x62, 0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2d,
	0x53, 0x49, 0x4e, 0x52, 0x2d, 0x72, 0x31, 0x36, 0x42, 0x27, 0x0a, 0x25, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x31, 0x36, 0x5f,
	0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0xb2, 0x01, 0x0a, 0x2b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x64,
	0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x31, 0x37,
	0x31, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x82, 0x01, 0x0a, 0x18, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x6f,
	0x66, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x72,
	0x31, 0x37, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x31, 0x37, 0x31, 0x30, 0x52, 0x16,
	0x6e, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2d, 0x72, 0x31, 0x37, 0x22, 0xab, 0x02, 0x0a, 0x20, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x72, 0x31, 0x37, 0x43, 0x73, 0x69, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x0a, 0x12, 0x63,
	0x72, 0x69, 0x5f, 0x72, 0x73, 0x72, 0x70, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x31,
	0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12, 0x63, 0x72, 0x69, 0x2d, 0x52,
	0x53, 0x52, 0x50, 0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x3c, 0x0a,
	0x18, 0x73, 0x73, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x73, 0x72, 0x70, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x18, 0x73, 0x73, 0x62, 0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x52, 0x53, 0x52,
	0x50, 0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x30, 0x0a, 0x12, 0x63,
	0x72, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x31,
	0x37, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12, 0x63, 0x72, 0x69, 0x2d, 0x53,
	0x49, 0x4e, 0x52, 0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x3c, 0x0a,
	0x18, 0x73, 0x73, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x69, 0x6e, 0x72, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x18, 0x73, 0x73, 0x62, 0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x53, 0x49, 0x4e,
	0x52, 0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x72, 0x31, 0x37, 0x42, 0x27, 0x0a, 0x25, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72,
	0x31, 0x37, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0xaa, 0x02, 0x0a, 0x29, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x76, 0x31,
	0x37, 0x32, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x49, 0x0a, 0x1b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x31,
	0x37, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08,
	0x01, 0x10, 0x40, 0x52, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x58, 0x0a,
	0x23, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x63, 0x69, 0x5f, 0x30, 0x5f, 0x32,
	0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92,
	0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x1f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c,
	0x6f, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x43, 0x49, 0x2d,
	0x30, 0x2d, 0x32, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x58, 0x0a, 0x23, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x64, 0x63, 0x69, 0x5f, 0x30, 0x5f, 0x31, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40,
	0x52, 0x1f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x43, 0x49, 0x2d, 0x30, 0x2d, 0x31, 0x2d, 0x72, 0x31,
	0x37, 0x22, 0x9e, 0x02, 0x0a, 0x1d, 0x41, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x76,
	0x31, 0x37, 0x32, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x49, 0x0a, 0x1b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72,
	0x31, 0x37, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04,
	0x08, 0x01, 0x10, 0x40, 0x52, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x58,
	0x0a, 0x23, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x63, 0x69, 0x5f, 0x30, 0x5f,
	0x32, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x1f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x43, 0x49,
	0x2d, 0x30, 0x2d, 0x32, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x58, 0x0a, 0x23, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x64, 0x63, 0x69, 0x5f, 0x30, 0x5f, 0x31, 0x5f, 0x72, 0x31, 0x37, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10,
	0x40, 0x52, 0x1f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x43, 0x49, 0x2d, 0x30, 0x2d, 0x31, 0x2d, 0x72,
	0x31, 0x37, 0x22, 0xa8, 0x20, 0x0a, 0x0f, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x52, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x63, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x48, 0x00, 0x52, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x75, 0x0a, 0x21, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x52, 0x1e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x7b, 0x0a, 0x21, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x48, 0x01, 0x52,
	0x1f, 0x63, 0x73, 0x69, 0x2d, 0x49, 0x4d, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x83, 0x01, 0x0a, 0x25, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f,
	0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x48,
	0x02, 0x52, 0x23, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x64, 0x0a, 0x12, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x43, 0x73,
	0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x5d, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43,
	0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x7e,
	0x0a, 0x19, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x46, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x03, 0x52, 0x17, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0xa5,
	0x01, 0x0a, 0x29, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x25, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xb4, 0x01, 0x0a, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x50, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x2a, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x53, 0x0a,
	0x0f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x04, 0x52,
	0x0e, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88,
	0x01, 0x01, 0x12, 0x46, 0x0a, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x43,
	0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x05,
	0x52, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x88, 0x01, 0x01, 0x12, 0x7a, 0x0a, 0x1a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x61, 0x6d, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65,
	0x64, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x73,
	0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x17, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x51, 0x0a, 0x09, 0x63, 0x71, 0x69, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x71, 0x69, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x06, 0x52, 0x09, 0x63, 0x71, 0x69,
	0x2d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x54, 0x0a, 0x0c, 0x73, 0x75, 0x62,
	0x62, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x53,
	0x69, 0x7a, 0x65, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x6f, 0x0a, 0x17, 0x6e, 0x6f, 0x6e, 0x5f, 0x70, 0x6d, 0x69, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x46, 0x6f, 0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x01, 0x52, 0x16, 0x6e, 0x6f, 0x6e, 0x2d, 0x50, 0x4d,
	0x49, 0x2d, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x8a, 0x01, 0x0a, 0x1e, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x5f, 0x76, 0x31,
	0x35, 0x33, 0x30, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x76, 0x31, 0x35, 0x33, 0x30, 0x43, 0x73, 0x69, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x07, 0x52, 0x1b, 0x73,
	0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50,
	0x55, 0x53, 0x43, 0x48, 0x2d, 0x76, 0x31, 0x35, 0x33, 0x30, 0x88, 0x01, 0x01, 0x12, 0x8a, 0x01,
	0x0a, 0x1e, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x5f, 0x76, 0x31, 0x36, 0x31, 0x30,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50,
	0x75, 0x73, 0x63, 0x68, 0x76, 0x31, 0x36, 0x31, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x08, 0x52, 0x1b, 0x73, 0x65, 0x6d, 0x69,
	0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x55, 0x53, 0x43,
	0x48, 0x2d, 0x76, 0x31, 0x36, 0x31, 0x30, 0x88, 0x01, 0x01, 0x12, 0x63, 0x0a, 0x0f, 0x61, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x76, 0x31, 0x36, 0x31, 0x30, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x69, 0x63, 0x76, 0x31, 0x36, 0x31, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x2d, 0x76, 0x31, 0x36, 0x31, 0x30, 0x88, 0x01, 0x01, 0x12,
	0x6d, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x72, 0x31, 0x36, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x0a, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2d, 0x72, 0x31, 0x36, 0x88, 0x01, 0x01, 0x12, 0x5e,
	0x0a, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x72, 0x31, 0x36, 0x48, 0x0b, 0x52, 0x12, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2d, 0x72, 0x31, 0x36, 0x88, 0x01, 0x01, 0x12, 0x79,
	0x0a, 0x18, 0x63, 0x71, 0x69, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73,
	0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x71, 0x69, 0x42, 0x69, 0x74, 0x73,
	0x50, 0x65, 0x72, 0x53, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x72, 0x31, 0x37, 0x43, 0x73, 0x69,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x0c, 0x52, 0x16,
	0x63, 0x71, 0x69, 0x2d, 0x42, 0x69, 0x74, 0x73, 0x50, 0x65, 0x72, 0x53, 0x75, 0x62, 0x62, 0x61,
	0x6e, 0x64, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x90, 0x01, 0x0a, 0x20, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x61, 0x6d, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x31, 0x37, 0x31, 0x30, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x76, 0x31, 0x37, 0x31, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x0d, 0x52, 0x1d, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x42, 0x61, 0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x2d, 0x76, 0x31, 0x37, 0x31, 0x30, 0x88, 0x01, 0x01, 0x12, 0x5e, 0x0a, 0x13,
	0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x72, 0x31, 0x37, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x72, 0x31, 0x37, 0x48, 0x0e, 0x52, 0x12, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x5e, 0x0a, 0x0e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6d, 0x72, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x43, 0x6d, 0x72, 0x72, 0x31, 0x37, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x0f, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x43, 0x4d, 0x52, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x6c, 0x0a, 0x13,
	0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f,
	0x72, 0x31, 0x37, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x72,
	0x31, 0x37, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x10, 0x52, 0x12, 0x63, 0x73, 0x69, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x94, 0x01, 0x0a, 0x22, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f,
	0x74, 0x72, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x31, 0x5f, 0x72, 0x31,
	0x37, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x72,
	0x70, 0x63, 0x73, 0x69, 0x6d, 0x6f, 0x64, 0x65, 0x31, 0x72, 0x31, 0x37, 0x43, 0x73, 0x69, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x11, 0x52, 0x1f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x52, 0x50,
	0x2d, 0x43, 0x53, 0x49, 0x2d, 0x4d, 0x6f, 0x64, 0x65, 0x31, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01,
	0x01, 0x12, 0x6d, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x72, 0x31, 0x37, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x12, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01,
	0x12, 0x8a, 0x01, 0x0a, 0x1e, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x5f, 0x76, 0x31,
	0x37, 0x32, 0x30, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x76, 0x31, 0x37, 0x32, 0x30, 0x43, 0x73, 0x69, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x13, 0x52, 0x1b, 0x73,
	0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50,
	0x55, 0x53, 0x43, 0x48, 0x2d, 0x76, 0x31, 0x37, 0x32, 0x30, 0x88, 0x01, 0x01, 0x12, 0x63, 0x0a,
	0x0f, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x76, 0x31, 0x37, 0x32, 0x30,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x76, 0x31, 0x37, 0x32, 0x30, 0x43, 0x73, 0x69,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x14, 0x52, 0x0f,
	0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x2d, 0x76, 0x31, 0x37, 0x32, 0x30, 0x88,
	0x01, 0x01, 0x12, 0x64, 0x0a, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x31, 0x37, 0x33, 0x30, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76, 0x31, 0x37, 0x33, 0x30, 0x48, 0x15, 0x52,
	0x14, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2d,
	0x76, 0x31, 0x37, 0x33, 0x30, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x42, 0x24, 0x0a, 0x22, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x28, 0x0a, 0x26, 0x5f, 0x6e,
	0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x66, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x64, 0x75, 0x6d, 0x6d, 0x79,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x71, 0x69, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x21,
	0x0a, 0x1f, 0x5f, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x5f, 0x76, 0x31, 0x35, 0x33,
	0x30, 0x42, 0x21, 0x0a, 0x1f, 0x5f, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x5f, 0x76,
	0x31, 0x36, 0x31, 0x30, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x69, 0x63, 0x5f, 0x76, 0x31, 0x36, 0x31, 0x30, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x31, 0x36,
	0x42, 0x16, 0x0a, 0x14, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x31, 0x36, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x63, 0x71, 0x69,
	0x5f, 0x62, 0x69, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e,
	0x64, 0x5f, 0x72, 0x31, 0x37, 0x42, 0x23, 0x0a, 0x21, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x31, 0x37, 0x31, 0x30, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72,
	0x31, 0x37, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6d,
	0x72, 0x5f, 0x72, 0x31, 0x37, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x31, 0x37, 0x42, 0x25, 0x0a,
	0x23, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x74, 0x72, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x31,
	0x5f, 0x72, 0x31, 0x37, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x31, 0x37, 0x42, 0x21, 0x0a, 0x1f,
	0x5f, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x5f, 0x76, 0x31, 0x37, 0x32, 0x30, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x76, 0x31,
	0x37, 0x32, 0x30, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x31, 0x37, 0x33, 0x30, 0x22, 0xda, 0x02,
	0x0a, 0x1d, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x18, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x35, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38, 0x12, 0x1a, 0x0a,
	0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x30, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x30, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x31, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c,
	0x6f, 0x74, 0x73, 0x31, 0x36, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x32, 0x30,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x32,
	0x30, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x30, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x30, 0x12, 0x1a, 0x0a,
	0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38, 0x30, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38, 0x30, 0x12, 0x1c, 0x0a, 0x08, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x31, 0x36, 0x30, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x73,
	0x6c, 0x6f, 0x74, 0x73, 0x31, 0x36, 0x30, 0x12, 0x1c, 0x0a, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x73,
	0x33, 0x32, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x33, 0x32, 0x30, 0x42, 0x23, 0x0a, 0x21, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x10, 0x50,
	0x75, 0x63, 0x63, 0x68, 0x43, 0x53, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x55, 0x0a, 0x18, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x77, 0x70, 0x49, 0x64, 0x52,
	0x15, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x50, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0e, 0x70, 0x75, 0x63, 0x63, 0x68, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0e, 0x70, 0x75, 0x63, 0x63, 0x68, 0x2d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xeb, 0x04, 0x0a, 0x1c, 0x50, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x38, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f,
	0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x31,
	0x5f, 0x38, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x48, 0x00, 0x52, 0x07, 0x72,
	0x61, 0x6e, 0x6b, 0x31, 0x2d, 0x38, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x07, 0x72, 0x61, 0x6e,
	0x6b, 0x32, 0x5f, 0x38, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x02, 0x10, 0x02, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x32,
	0x2d, 0x38, 0x12, 0x47, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x33, 0x5f, 0x38, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x03,
	0x10, 0x03, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x33, 0x2d, 0x38, 0x12, 0x47, 0x0a, 0x07, 0x72,
	0x61, 0x6e, 0x6b, 0x34, 0x5f, 0x38, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x04, 0x10, 0x04, 0x52, 0x07, 0x72, 0x61, 0x6e,
	0x6b, 0x34, 0x2d, 0x38, 0x12, 0x47, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x35, 0x5f, 0x38, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04,
	0x08, 0x05, 0x10, 0x05, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x35, 0x2d, 0x38, 0x12, 0x47, 0x0a,
	0x07, 0x72, 0x61, 0x6e, 0x6b, 0x36, 0x5f, 0x38, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x38, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x06, 0x10, 0x06, 0x52, 0x07, 0x72,
	0x61, 0x6e, 0x6b, 0x36, 0x2d, 0x38, 0x12, 0x47, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x37, 0x5f,
	0x38, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92,
	0x01, 0x04, 0x08, 0x07, 0x10, 0x07, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x37, 0x2d, 0x38, 0x12,
	0x47, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x38, 0x5f, 0x38, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x38, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x08, 0x10, 0x08, 0x52,
	0x07, 0x72, 0x61, 0x6e, 0x6b, 0x38, 0x2d, 0x38, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x61, 0x6e,
	0x6b, 0x31, 0x5f, 0x38, 0x22, 0xc7, 0x02, 0x0a, 0x1c, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x34, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f, 0x72, 0x38,
	0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x31, 0x5f, 0x34,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x48, 0x00, 0x52, 0x07, 0x72, 0x61, 0x6e,
	0x6b, 0x31, 0x2d, 0x34, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x32,
	0x5f, 0x34, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x92, 0x01, 0x04, 0x08, 0x02, 0x10, 0x02, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x32, 0x2d, 0x34,
	0x12, 0x47, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x33, 0x5f, 0x34, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x34, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x03, 0x10, 0x03,
	0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x33, 0x2d, 0x34, 0x12, 0x47, 0x0a, 0x07, 0x72, 0x61, 0x6e,
	0x6b, 0x34, 0x5f, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x04, 0x10, 0x04, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x34,
	0x2d, 0x34, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x31, 0x5f, 0x34, 0x22, 0xb5,
	0x01, 0x0a, 0x1c, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x32, 0x50, 0x6f, 0x72,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f, 0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12,
	0x40, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x31, 0x5f, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x32, 0x48, 0x00, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x31, 0x2d, 0x32, 0x88, 0x01,
	0x01, 0x12, 0x47, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x32, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x32, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x02, 0x10,
	0x02, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x32, 0x2d, 0x32, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72,
	0x61, 0x6e, 0x6b, 0x31, 0x5f, 0x32, 0x22, 0xd8, 0x02, 0x0a, 0x12, 0x50, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f, 0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x56, 0x0a,
	0x0b, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x38, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f,
	0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x38, 0x12, 0x56, 0x0a, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x50, 0x6f, 0x72,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f, 0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x48,
	0x00, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x12, 0x56, 0x0a,
	0x0b, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x32, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x32, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f,
	0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x32, 0x12, 0x21, 0x0a, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x31, 0x42, 0x17, 0x0a, 0x15, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x66, 0x6f, 0x72, 0x38, 0x5f, 0x72, 0x61, 0x6e, 0x6b,
	0x73, 0x22, 0x2d, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x12,
	0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x07, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2d, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x12, 0x1f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x1a, 0x04, 0x18, 0x03, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2d, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x32, 0x12, 0x1f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x1a, 0x04, 0x18, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34,
	0x0a, 0x11, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x2f, 0x28, 0x00, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x1f, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52,
	0x53, 0x53, 0x53, 0x62, 0x63, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x7a, 0x0a, 0x1c, 0x6e, 0x7a, 0x70, 0x5f,
	0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x10, 0x52, 0x1a, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53,
	0x49, 0x2d, 0x52, 0x53, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x19, 0x63, 0x73, 0x69, 0x5f, 0x73, 0x73, 0x62, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x01, 0x52,
	0x17, 0x63, 0x73, 0x69, 0x2d, 0x53, 0x53, 0x42, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x28, 0x43, 0x73, 0x69,
	0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x63, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x18, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x10, 0x52, 0x16,
	0x63, 0x73, 0x69, 0x2d, 0x49, 0x4d, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb6, 0x02, 0x0a, 0x25, 0x43, 0x73, 0x69, 0x52, 0x53,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x60, 0x0a, 0x0e, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x73,
	0x73, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x53, 0x53, 0x62, 0x63, 0x73, 0x69, 0x52,
	0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0e, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d, 0x53,
	0x53, 0x42, 0x12, 0x7b, 0x0a, 0x18, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69,
	0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x63, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x63, 0x73, 0x69, 0x2d, 0x49, 0x4d, 0x2d,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x2e, 0x0a, 0x2c, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x73, 0x69, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0xa0, 0x04, 0x0a, 0x11, 0x43, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x60, 0x0a, 0x16, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73,
	0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x52, 0x14, 0x63, 0x73, 0x69, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x76, 0x0a, 0x18, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x16, 0x63, 0x73, 0x69, 0x2d, 0x52, 0x53, 0x2d,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x06, 0x62, 0x77, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x77, 0x70, 0x49, 0x64, 0x52, 0x06, 0x62,
	0x77, 0x70, 0x2d, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x43, 0x73, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x7a, 0x0a, 0x21, 0x63, 0x73, 0x69, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x78,
	0x74, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x1e, 0x63, 0x73, 0x69, 0x2d, 0x53,
	0x53, 0x42, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x78, 0x74, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x42, 0x24, 0x0a, 0x22,
	0x5f, 0x63, 0x73, 0x69, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x72,
	0x31, 0x37, 0x22, 0x36, 0x0a, 0x13, 0x43, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18,
	0x6f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb4, 0x03, 0x0a, 0x1f, 0x43,
	0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x18,
	0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x35, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38, 0x12, 0x1a, 0x0a, 0x07,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x30, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x30, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x31, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x31, 0x36, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x32, 0x30, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x32, 0x30,
	0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x07,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x30, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x30, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x36, 0x34, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38, 0x30, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38, 0x30,
	0x12, 0x1c, 0x0a, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x36, 0x30, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x36, 0x30, 0x12, 0x1c,
	0x0a, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x33, 0x32, 0x30, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x33, 0x32, 0x30, 0x12, 0x1c, 0x0a, 0x08,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x36, 0x34, 0x30, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x36, 0x34, 0x30, 0x42, 0x25, 0x0a, 0x23, 0x63, 0x73,
	0x69, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x22, 0x2d, 0x0a, 0x0a, 0x43, 0x73, 0x69, 0x52, 0x53, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x5f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x90, 0x02, 0x0a, 0x2d, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x73,
	0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x31, 0x12, 0x28, 0x0a, 0x04,
	0x72, 0x6f, 0x77, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x32, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x34, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x34,
	0x12, 0x2a, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x35, 0x0a, 0x33,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x73, 0x69, 0x5f,
	0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x22, 0xbe, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x43,
	0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x6f, 0x74, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x74, 0x35, 0x64, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x64, 0x6f, 0x74, 0x35, 0x12, 0x12, 0x0a,
	0x03, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x6e,
	0x65, 0x12, 0x16, 0x0a, 0x05, 0x74, 0x68, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x05, 0x74, 0x68, 0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x73, 0x70, 0x61,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x73, 0x70, 0x61, 0x72,
	0x65, 0x42, 0x21, 0x0a, 0x1f, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x73, 0x69,
	0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x22, 0x94, 0x05, 0x0a, 0x14, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x84, 0x01,
	0x0a, 0x1b, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x19, 0x66, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x0a, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x43, 0x73, 0x69, 0x72, 0x73, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x09,
	0x6e, 0x72, 0x6f, 0x66, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1f, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6f, 0x66, 0x64, 0x6d, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x1b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4f, 0x46, 0x44, 0x4d, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x4b, 0x0a, 0x20, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x64, 0x6d, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x1c, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4f, 0x46, 0x44, 0x4d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x32, 0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a, 0x08,
	0x63, 0x64, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x64, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x43, 0x73,
	0x69, 0x72, 0x73, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x52, 0x08, 0x63, 0x64, 0x6d, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x07,
	0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x43, 0x73, 0x69,
	0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x09, 0x66, 0x72,
	0x65, 0x71, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x72,
	0x65, 0x71, 0x42, 0x61, 0x6e, 0x64, 0x42, 0x23, 0x0a, 0x21, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6f, 0x66, 0x64, 0x6d, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x32, 0x22, 0x89, 0x01, 0x0a, 0x28,
	0x43, 0x73, 0x69, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x73, 0x69, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd2, 0x02, 0x0a, 0x24, 0x43, 0x73, 0x69, 0x53,
	0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50,
	0x75, 0x73, 0x63, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x6b, 0x0a, 0x1d, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x52, 0x1a, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x9b, 0x01,
	0x0a, 0x1c, 0x73, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x53, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x43,
	0x73, 0x69, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x31, 0x37, 0x43, 0x73, 0x69, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x73, 0x70, 0x2d,
	0x43, 0x53, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x42, 0x1f, 0x0a, 0x1d, 0x5f,
	0x73, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x31, 0x37, 0x22, 0xe1, 0x02, 0x0a,
	0x11, 0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x12, 0x62, 0x0a, 0x17, 0x63, 0x73, 0x69, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x53,
	0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x52,
	0x15, 0x63, 0x73, 0x69, 0x2d, 0x53, 0x53, 0x42, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x15, 0x63, 0x73, 0x69, 0x5f, 0x73, 0x73,
	0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x73,
	0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01,
	0x10, 0x40, 0x52, 0x14, 0x63, 0x73, 0x69, 0x2d, 0x53, 0x53, 0x42, 0x2d, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x1e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x70, 0x63, 0x69, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x63, 0x69, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x72, 0x31, 0x37, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01,
	0x10, 0x40, 0x52, 0x1c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x43, 0x49, 0x4c, 0x69, 0x73, 0x74, 0x2d, 0x72, 0x31, 0x37,
	0x22, 0x3f, 0x0a, 0x1c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x63, 0x69, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x72, 0x31, 0x37,
	0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x07, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x36, 0x0a, 0x13, 0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x3f,
	0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2b, 0x0a, 0x13, 0x44, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9c, 0x03, 0x0a, 0x14, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x57, 0x0a, 0x11, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x64, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x6c, 0x48, 0x00, 0x52, 0x0f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x44, 0x4c, 0x88, 0x01, 0x01, 0x12, 0x5f, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x77, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x77, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x48, 0x01, 0x52, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x42, 0x57, 0x50, 0x88, 0x01, 0x01, 0x12, 0x76, 0x0a, 0x20, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x77,
	0x70, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x70, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x77, 0x70, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x48, 0x02, 0x52,
	0x1d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x42, 0x57, 0x50, 0x2d, 0x52, 0x65, 0x64, 0x43, 0x61, 0x70, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01,
	0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x64, 0x6c, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x77, 0x70,
	0x42, 0x23, 0x0a, 0x21, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x77, 0x70, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x61,
	0x70, 0x5f, 0x72, 0x31, 0x37, 0x22, 0x37, 0x0a, 0x13, 0x46, 0x72, 0x65, 0x71, 0x42, 0x61, 0x6e,
	0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x72, 0x12, 0x20, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x1a, 0x05, 0x18, 0x80, 0x08, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc2,
	0x03, 0x0a, 0x0f, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x6c, 0x12, 0x5e, 0x0a, 0x16, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x5f, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x73, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x66, 0x63, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x72, 0x48, 0x00, 0x52, 0x14, 0x61, 0x62, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x65, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x53, 0x42, 0x88,
	0x01, 0x01, 0x12, 0x5f, 0x0a, 0x13, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x62, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x72,
	0x52, 0x11, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x1a, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x5f,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x66, 0x63, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x72, 0x52, 0x17, 0x61, 0x62,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x41, 0x12, 0x71, 0x0a, 0x19, 0x73, 0x63, 0x73, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x05, 0x52,
	0x17, 0x73, 0x63, 0x73, 0x2d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x61, 0x62, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x73, 0x73, 0x62, 0x22, 0xba, 0x01, 0x0a, 0x18, 0x53, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x3e, 0x0a, 0x08, 0x73, 0x73, 0x62, 0x5f, 0x72, 0x73, 0x72, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x72, 0x70, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x73, 0x73, 0x62, 0x2d, 0x52, 0x53, 0x52, 0x50,
	0x12, 0x3e, 0x0a, 0x08, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x72, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x72, 0x70, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x73, 0x69, 0x2d, 0x52, 0x53, 0x52, 0x50,
	0x42, 0x1e, 0x0a, 0x1c, 0x73, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0xbb, 0x08, 0x0a, 0x0a, 0x4d, 0x65, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x6e, 0x0a, 0x1a, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x6f, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x6d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x6f, 0x0a, 0x1b, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61,
	0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x01, 0x52, 0x16, 0x6d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x74, 0x0a, 0x1c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x02, 0x52, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x75, 0x0a, 0x1d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d,
	0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x03,
	0x52, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f,
	0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x62, 0x0a,
	0x16, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x49, 0x64, 0x54, 0x6f, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x04, 0x52, 0x12, 0x6d, 0x65, 0x61, 0x73,
	0x49, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x63, 0x0a, 0x17, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x5f,
	0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x49,
	0x64, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x05, 0x52,
	0x12, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x64, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x5f, 0x0a, 0x10, 0x73, 0x5f, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x06, 0x52, 0x0f, 0x73, 0x2d, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x07, 0x52, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x1d, 0x0a, 0x1b,
	0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x5f,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x1e, 0x0a, 0x1c, 0x5f,
	0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x61,
	0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x1f, 0x0a, 0x1d, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x6f,
	0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x20, 0x0a, 0x1e,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74,
	0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x19,
	0x0a, 0x17, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x6d, 0x65,
	0x61, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x5f, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5f,
	0x0a, 0x16, 0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x55, 0x0a, 0x12, 0x4d, 0x65, 0x61, 0x73, 0x49, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61,
	0x73, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x63, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x47, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04,
	0x08, 0x01, 0x10, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x06, 0x4d,
	0x65, 0x61, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x40, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5d, 0x0a, 0x12, 0x4d, 0x65, 0x61, 0x73, 0x49, 0x64,
	0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x49, 0x64, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d,
	0x6f, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x61, 0x73, 0x49, 0x64,
	0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x49, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x64,
	0x12, 0x49, 0x0a, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x0c, 0x6d,
	0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x10, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x52, 0x0e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x0c,
	0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x1a, 0x04, 0x18, 0x40, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x89, 0x03,
	0x0a, 0x0c, 0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x72, 0x12, 0x4d,
	0x0a, 0x0d, 0x73, 0x73, 0x62, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x66, 0x63, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x73,
	0x62, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x63, 0x0a,
	0x16, 0x73, 0x73, 0x62, 0x5f, 0x73, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f,
	0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x14, 0x73, 0x73, 0x62, 0x53, 0x75,
	0x62, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x88,
	0x01, 0x01, 0x12, 0x64, 0x0a, 0x17, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x15, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x15, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x73, 0x73, 0x62, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x19,
	0x0a, 0x17, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x73, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x5e, 0x0a, 0x13, 0x73, 0x73, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x73, 0x62, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x12, 0x73, 0x73,
	0x62, 0x2d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x9e, 0x01, 0x0a, 0x1d,
	0x53, 0x73, 0x62, 0x54, 0x6f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x73, 0x62, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a,
	0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x73, 0x65, 0x74,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x73, 0x62, 0x54, 0x6f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x42, 0x24, 0x0a, 0x22, 0x73, 0x73, 0x62, 0x5f, 0x74, 0x6f,
	0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x70, 0x0a, 0x11,
	0x53, 0x73, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x5b, 0x0a, 0x0e, 0x73, 0x73, 0x62, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x73, 0x62, 0x54, 0x6f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x73,
	0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x0d, 0x73, 0x73, 0x62, 0x2d, 0x54, 0x6f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x22, 0x65,
	0x0a, 0x16, 0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x41, 0x64,
	0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d,
	0x6f, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x1c, 0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f,
	0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x12, 0x4b, 0x0a, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x52, 0x42, 0x24, 0x0a, 0x22, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x12, 0x4d, 0x65,
	0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64,
	0x12, 0x49, 0x0a, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x0c, 0x6d,
	0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x0b, 0x6d,
	0x65, 0x61, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x41,
	0x64, 0x64, 0x4d, 0x6f, 0x64, 0x52, 0x0a, 0x6d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x22, 0xaf, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x49,
	0x64, 0x52, 0x06, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x64, 0x12, 0x68, 0x0a, 0x1a, 0x6d, 0x65, 0x61,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x6f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x4d, 0x6f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x17, 0x6d, 0x65, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x4f, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x14, 0x4d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x4d, 0x6f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x4d, 0x6f, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x20, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x4d, 0x6f, 0x12, 0x46, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x43, 0x65,
	0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x43, 0x65, 0x6c,
	0x6c, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x18, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x72, 0x52, 0x15, 0x6d, 0x65, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c,
	0x6c, 0x22, 0x82, 0x02, 0x0a, 0x15, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x6d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5a, 0x0a, 0x10, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x61, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x53, 0x53, 0x42, 0x2d,
	0x43, 0x65, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x60, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61,
	0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x48, 0x01, 0x52, 0x12, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x43, 0x53, 0x49, 0x2d, 0x52,
	0x53, 0x2d, 0x43, 0x65, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x42, 0x16,
	0x0a, 0x14, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x73, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x22, 0x9f, 0x02, 0x0a, 0x18, 0x52, 0x73, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x6d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x63, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x73,
	0x73, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x50, 0x65, 0x72, 0x53, 0x73, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x12, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x53, 0x53, 0x42, 0x2d, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x6b, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x73, 0x69, 0x52, 0x53,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x01, 0x52, 0x15, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x5f, 0x73, 0x73, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x42, 0x19, 0x0a,
	0x17, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x16, 0x4d, 0x65, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4e, 0x72, 0x12, 0x4f, 0x0a, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x6d, 0x65, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x63, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x5e, 0x0a, 0x10, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x6d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48,
	0x00, 0x52, 0x0e, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x0c, 0x4d, 0x65,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x72, 0x12, 0x48, 0x0a, 0x0c, 0x70, 0x68,
	0x79, 0x73, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x43, 0x65, 0x6c,
	0x6c, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x68, 0x79, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a, 0x0b, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x72, 0x52, 0x0a, 0x6d, 0x65, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x68, 0x79, 0x73, 0x5f, 0x63, 0x65,
	0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x13, 0x4d, 0x65, 0x61, 0x73, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x39, 0x0a,
	0x04, 0x72, 0x73, 0x72, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x72, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x72, 0x73, 0x72, 0x70, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x04, 0x72, 0x73, 0x72, 0x71,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x73, 0x72, 0x71, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x01, 0x52, 0x04, 0x72, 0x73, 0x72, 0x71,
	0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x04, 0x73, 0x69, 0x6e, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x72, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x48, 0x02, 0x52, 0x04, 0x73, 0x69, 0x6e, 0x72, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x72, 0x73, 0x72, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x73, 0x72, 0x71,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x6e, 0x72, 0x22, 0x65, 0x0a, 0x16, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x50, 0x65, 0x72, 0x53, 0x73, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x50, 0x65, 0x72, 0x53, 0x73, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xb6, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x50, 0x65, 0x72, 0x53,
	0x73, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3d, 0x0a, 0x09, 0x73, 0x73, 0x62, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x73, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x09, 0x73, 0x73, 0x62,
	0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x51, 0x0a, 0x0b, 0x73, 0x73, 0x62, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x73, 0x62, 0x2d, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x73,
	0x62, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x69, 0x0a, 0x18, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x73, 0x69, 0x52, 0x53, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x73, 0x69, 0x52, 0x53, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x50, 0x65, 0x72, 0x43, 0x73, 0x69, 0x52, 0x53, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x45, 0x0a,
	0x0c, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x52,
	0x53, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0c, 0x63, 0x73, 0x69, 0x2d, 0x52, 0x53, 0x2d, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x57, 0x0a, 0x0e, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x73, 0x69, 0x2d,
	0x52, 0x53, 0x2d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0x68, 0x0a, 0x18, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x72, 0x12, 0x4c, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x65, 0x71, 0x42, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x72, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08,
	0x01, 0x10, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x14, 0x4e, 0x65,
	0x78, 0x74, 0x48, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x07, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xea, 0x05, 0x0a, 0x10, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x60, 0x0a, 0x16, 0x6e, 0x7a, 0x70, 0x5f,
	0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x52, 0x15, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69,
	0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x77, 0x0a, 0x17, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x53, 0x73, 0x6e, 0x7a, 0x70, 0x63, 0x73, 0x69, 0x72, 0x73, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x48, 0x00, 0x52, 0x14, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x53, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a,
	0x0d, 0x73, 0x63, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72,
	0x61, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x61, 0x6d,
	0x62, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x71, 0x0a, 0x16, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x48,
	0x01, 0x52, 0x14, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x41, 0x6e,
	0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x60, 0x0a, 0x18, 0x71, 0x63,
	0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f,
	0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x48,
	0x02, 0x52, 0x16, 0x71, 0x63, 0x6c, 0x2d, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x69, 0x63, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x88, 0x01, 0x01, 0x42, 0x1a, 0x0a, 0x18,
	0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x73, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x71, 0x63, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73,
	0x22, 0x36, 0x0a, 0x12, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xbf, 0x01, 0x28,
	0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf9, 0x08, 0x0a, 0x13, 0x4e, 0x7a, 0x70,
	0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x12, 0x64, 0x0a, 0x17, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69,
	0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x52,
	0x15, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x69, 0x0a, 0x14, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73,
	0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x7a, 0x70,
	0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x14, 0x6e, 0x7a, 0x70,
	0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x59, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x7a, 0x70, 0x63, 0x73, 0x69, 0x72, 0x73,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x72,
	0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x1b,
	0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x01, 0x52, 0x19, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x52, 0x0a, 0x08, 0x74, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x4e, 0x7a, 0x70, 0x63, 0x73, 0x69, 0x72, 0x73, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x48, 0x02, 0x52, 0x08, 0x74, 0x72, 0x73, 0x2d, 0x49, 0x6e,
	0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x1f, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x69, 0x63, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03,
	0x52, 0x1d, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x2d, 0x72, 0x31, 0x36, 0x88,
	0x01, 0x01, 0x12, 0x5d, 0x0a, 0x0c, 0x70, 0x64, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72,
	0x31, 0x37, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x64, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x31, 0x37, 0x4e, 0x7a, 0x70, 0x63, 0x73,
	0x69, 0x72, 0x73, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x48, 0x04,
	0x52, 0x0c, 0x70, 0x64, 0x63, 0x2d, 0x49, 0x6e, 0x66, 0x6f, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01,
	0x01, 0x12, 0x75, 0x0a, 0x1c, 0x63, 0x6d, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x31,
	0x37, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6d, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x50, 0x61,
	0x69, 0x72, 0x69, 0x6e, 0x67, 0x72, 0x31, 0x37, 0x48, 0x05, 0x52, 0x19, 0x63, 0x6d, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x69, 0x72, 0x69, 0x6e,
	0x67, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x1f, 0x61, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x06, 0x52, 0x1d, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x2d, 0x72,
	0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x22, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x69, 0x63, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x32, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x07, 0x52, 0x1f, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c, 0x32,
	0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x61, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x69, 0x63, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x72, 0x73, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x42, 0x22, 0x0a, 0x20, 0x5f, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69,
	0x63, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x64, 0x63, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x31, 0x37, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x63, 0x6d, 0x72,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x61,
	0x69, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x31, 0x37, 0x42, 0x22, 0x0a, 0x20, 0x5f, 0x61, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x31, 0x37, 0x42, 0x25, 0x0a,
	0x23, 0x5f, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x32,
	0x5f, 0x72, 0x31, 0x37, 0x22, 0xde, 0x02, 0x0a, 0x18, 0x43, 0x6d, 0x72, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x72, 0x31,
	0x37, 0x12, 0x3a, 0x0a, 0x19, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x6e, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x31, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x66, 0x0a,
	0x17, 0x70, 0x61, 0x69, 0x72, 0x31, 0x5f, 0x6f, 0x66, 0x5f, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73,
	0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x50,
	0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x72, 0x31, 0x37, 0x48, 0x00, 0x52, 0x15, 0x70, 0x61, 0x69,
	0x72, 0x31, 0x4f, 0x66, 0x4e, 0x5a, 0x50, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d, 0x72,
	0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x66, 0x0a, 0x17, 0x70, 0x61, 0x69, 0x72, 0x32, 0x5f, 0x6f,
	0x66, 0x5f, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x31, 0x37,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x72, 0x31,
	0x37, 0x48, 0x01, 0x52, 0x15, 0x70, 0x61, 0x69, 0x72, 0x32, 0x4f, 0x66, 0x4e, 0x5a, 0x50, 0x2d,
	0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x42, 0x1a, 0x0a,
	0x18, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x31, 0x5f, 0x6f, 0x66, 0x5f, 0x6e, 0x7a, 0x70, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x31, 0x37, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x70, 0x61,
	0x69, 0x72, 0x32, 0x5f, 0x6f, 0x66, 0x5f, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x73, 0x5f, 0x72, 0x31, 0x37, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69,
	0x52, 0x53, 0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x72, 0x31, 0x37, 0x12, 0x3f, 0x0a, 0x1b,
	0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x31, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x1a, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x31, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x3f, 0x0a,
	0x1b, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x32, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x1a, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x32, 0x2d, 0x72, 0x31, 0x37, 0x22, 0x38,
	0x0a, 0x15, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x3f, 0x28,
	0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x04, 0x50, 0x4d, 0x61, 0x78,
	0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x12, 0xfa, 0x42, 0x0f, 0x1a, 0x0d, 0x18, 0x21, 0x28, 0xe2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x18, 0x50, 0x61,
	0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x73, 0x49, 0x64, 0x72, 0x31, 0x37, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x3f, 0x28, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x0d, 0x50, 0x63, 0x69, 0x41,
	0x52, 0x66, 0x63, 0x6e, 0x4e, 0x52, 0x72, 0x31, 0x36, 0x12, 0x4b, 0x0a, 0x10, 0x70, 0x68, 0x79,
	0x73, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x79, 0x73,
	0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x52, 0x0e, 0x70, 0x68, 0x79, 0x73, 0x43, 0x65, 0x6c, 0x6c,
	0x49, 0x64, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x4e, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x66, 0x63, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4e, 0x72, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x46, 0x72,
	0x65, 0x71, 0x2d, 0x72, 0x31, 0x36, 0x22, 0x4e, 0x0a, 0x07, 0x50, 0x63, 0x69, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x43, 0x65, 0x6c,
	0x6c, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x20, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x08, 0x50, 0x63, 0x69, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x43,
	0x65, 0x6c, 0x6c, 0x49, 0x64, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x3f, 0x0a, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x63, 0x69, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0f, 0x50, 0x63, 0x69, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0f, 0x70,
	0x63, 0x69, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x63, 0x69,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0e, 0x70, 0x63, 0x69, 0x2d,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3d, 0x0a, 0x09, 0x70, 0x63,
	0x69, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x63, 0x69, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09,
	0x70, 0x63, 0x69, 0x2d, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x0d, 0x50, 0x63, 0x69,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04,
	0x18, 0x08, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5b, 0x0a, 0x11, 0x50,
	0x63, 0x69, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x63, 0x69, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x50, 0x64, 0x63, 0x63,
	0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xcf, 0x01,
	0x0a, 0x0f, 0x50, 0x64, 0x63, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x69, 0x62,
	0x31, 0x12, 0x68, 0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x5a,
	0x65, 0x72, 0x6f, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x12, 0x52, 0x0a, 0x11, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x7a, 0x65, 0x72, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x52, 0x0f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x22,
	0xb7, 0x02, 0x0a, 0x24, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x64, 0x6c, 0x4f, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x72, 0x31, 0x37, 0x12, 0x84, 0x01, 0x0a, 0x29, 0x64, 0x6c, 0x5f,
	0x6f, 0x72, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x63, 0x69, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0b, 0xfa,
	0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x01, 0x52, 0x23, 0x64, 0x6c, 0x2d, 0x4f,
	0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x43, 0x49, 0x2d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x2d, 0x72, 0x31, 0x37, 0x12,
	0x87, 0x01, 0x0a, 0x29, 0x64, 0x6c, 0x5f, 0x6f, 0x72, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x74, 0x63, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x69, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01,
	0x10, 0x80, 0x01, 0x52, 0x24, 0x64, 0x6c, 0x2d, 0x4f, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x54,
	0x43, 0x49, 0x2d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x2d, 0x72, 0x31, 0x37, 0x22, 0xa4, 0x02, 0x0a, 0x23, 0x44, 0x6c,
	0x4f, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x72, 0x31, 0x37, 0x50, 0x64, 0x73, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x61, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x64, 0x6c, 0x4f, 0x72,
	0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x72, 0x31, 0x37, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x19, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f,
	0x74, 0x63, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x72, 0x31,
	0x37, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x41, 0x6e, 0x64, 0x42, 0x77,
	0x70, 0x49, 0x64, 0x72, 0x31, 0x37, 0x48, 0x00, 0x52, 0x17, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x54, 0x43, 0x49, 0x2d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x2d, 0x72, 0x31,
	0x37, 0x42, 0x2d, 0x0a, 0x2b, 0x64, 0x6c, 0x5f, 0x6f, 0x72, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x74, 0x63, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x72, 0x31, 0x37, 0x5f, 0x70, 0x64, 0x73, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x87, 0x04, 0x0a, 0x0b, 0x50, 0x64, 0x73, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x68, 0x0a, 0x1a, 0x74, 0x63, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x69,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10,
	0x80, 0x01, 0x52, 0x16, 0x74, 0x63, 0x69, 0x2d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x54, 0x6f,
	0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x1a, 0x74, 0x63,
	0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x01, 0x52, 0x17,
	0x74, 0x63, 0x69, 0x2d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x1e, 0x64, 0x6c, 0x5f, 0x6f,
	0x72, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x63, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6c, 0x4f, 0x72, 0x4a, 0x6f, 0x69,
	0x6e, 0x74, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x72, 0x31,
	0x37, 0x50, 0x64, 0x73, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x1b,
	0x64, 0x6c, 0x2d, 0x4f, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x43, 0x49, 0x2d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x61,
	0x0a, 0x11, 0x62, 0x65, 0x61, 0x6d, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x31, 0x37, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x65, 0x61, 0x6d, 0x41, 0x70, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x31, 0x37,
	0x50, 0x64, 0x73, 0x63, 0x68, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x01, 0x52, 0x0f, 0x62,
	0x65, 0x61, 0x6d, 0x41, 0x70, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01,
	0x01, 0x42, 0x21, 0x0a, 0x1f, 0x5f, 0x64, 0x6c, 0x5f, 0x6f, 0x72, 0x5f, 0x6a, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x74, 0x63, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x72, 0x31, 0x37, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x62, 0x65, 0x61, 0x6d, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x31, 0x37, 0x22, 0xc8, 0x01, 0x0a, 0x11, 0x50,
	0x64, 0x73, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x8c, 0x01, 0x0a, 0x21, 0x70, 0x64, 0x73, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x64, 0x73, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1e, 0x70, 0x64,
	0x73, 0x63, 0x68, 0x2d, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x24, 0x0a, 0x22, 0x5f, 0x70, 0x64, 0x73, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x25, 0x50, 0x64, 0x73, 0x63, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x5a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x64, 0x73, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04,
	0x08, 0x01, 0x10, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x21,
	0x50, 0x64, 0x73, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x13, 0x0a, 0x02, 0x6b, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x02, 0x6b, 0x30, 0x88, 0x01, 0x01, 0x12, 0x66, 0x0a, 0x0c, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x64, 0x73, 0x63, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35,
	0x0a, 0x17, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x61,
	0x6e, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x41, 0x6e, 0x64, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x6b, 0x30, 0x22, 0x89, 0x01, 0x0a,
	0x28, 0x50, 0x64, 0x73, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x72, 0x31, 0x36, 0x12, 0x5d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x64, 0x73, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x72, 0x31, 0x36, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10,
	0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x83, 0x05, 0x0a, 0x24, 0x50, 0x64, 0x73,
	0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31,
	0x36, 0x12, 0x1b, 0x0a, 0x06, 0x6b, 0x30, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x06, 0x6b, 0x30, 0x2d, 0x72, 0x31, 0x36, 0x88, 0x01, 0x01, 0x12, 0x74,
	0x0a, 0x10, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72,
	0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x72, 0x31, 0x36, 0x50,
	0x64, 0x73, 0x63, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x72, 0x31, 0x36, 0x52, 0x0f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x2d, 0x72, 0x31, 0x36, 0x12, 0x3d, 0x0a, 0x1b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f,
	0x72, 0x31, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x41, 0x6e, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x2d,
	0x72, 0x31, 0x36, 0x12, 0x88, 0x01, 0x0a, 0x15, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x72, 0x31, 0x36, 0x50,
	0x64, 0x73, 0x63, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x72, 0x31, 0x36, 0x48, 0x01, 0x52, 0x14, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2d, 0x72, 0x31, 0x36, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x6b, 0x30, 0x5f, 0x76, 0x31, 0x37, 0x31, 0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x02, 0x52, 0x08, 0x6b, 0x30, 0x2d, 0x76, 0x31, 0x37, 0x31, 0x30, 0x88, 0x01, 0x01, 0x12,
	0x8e, 0x01, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x37, 0x33, 0x30, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x50, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x76, 0x31, 0x37, 0x33, 0x30, 0x50,
	0x64, 0x73, 0x63, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x72, 0x31, 0x36, 0x48, 0x03, 0x52, 0x16, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2d, 0x76, 0x31, 0x37, 0x33, 0x30, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6b, 0x30, 0x5f, 0x72, 0x31, 0x36, 0x42, 0x18, 0x0a, 0x16, 0x5f,
	0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x72, 0x31, 0x36, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6b, 0x30, 0x5f, 0x76, 0x31, 0x37,
	0x31, 0x30, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x37, 0x33, 0x30, 0x22, 0x5b,
	0x0a, 0x0d, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x54, 0x44, 0x72, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x64, 0x73, 0x63,
	0x68, 0x54, 0x44, 0x72, 0x61, 0x72, 0x31, 0x37, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04,
	0x08, 0x01, 0x10, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x63, 0x0a, 0x15, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x50, 0x64, 0x73, 0x63, 0x68, 0x54, 0x44, 0x72, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x72, 0x31, 0x37, 0x12, 0x4a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x50, 0x64, 0x73, 0x63, 0x68, 0x54, 0x44, 0x72, 0x61, 0x72, 0x31, 0x37, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x8e, 0x01, 0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x64, 0x73, 0x63, 0x68, 0x54,
	0x44, 0x72, 0x61, 0x72, 0x31, 0x37, 0x12, 0x79, 0x0a, 0x13, 0x70, 0x64, 0x73, 0x63, 0x68, 0x5f,
	0x74, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x64, 0x73, 0x63,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x08, 0x52, 0x13, 0x70, 0x64,
	0x73, 0x63, 0x68, 0x2d, 0x54, 0x44, 0x52, 0x41, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x2d, 0x72, 0x31,
	0x37, 0x22, 0x2e, 0x0a, 0x0a, 0x50, 0x68, 0x79, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xef, 0x07, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x32, 0x0a, 0x0f, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x7f, 0x28, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x11, 0x50, 0x30, 0x50, 0x55, 0x73, 0x63, 0x68,
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04,
	0x18, 0x1d, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7d, 0x0a, 0x0e, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6b, 0x0a,
	0x17, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x6e, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x72, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08,
	0x01, 0x10, 0x02, 0x52, 0x15, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4e, 0x52, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf2, 0x01, 0x0a, 0x10, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x72, 0x12,
	0x59, 0x0a, 0x14, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x52, 0x12, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x66, 0x0a, 0x18, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x73,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x73, 0x48, 0x00, 0x52, 0x16, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x53, 0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88,
	0x01, 0x01, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0xbc, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x73, 0x12, 0x50, 0x0a, 0x11, 0x73, 0x73, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x73, 0x73, 0x62, 0x2d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x56, 0x0a, 0x14, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x73,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x63, 0x73, 0x69, 0x2d, 0x52,
	0x53, 0x2d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xba,
	0x02, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x60, 0x0a, 0x17, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x73, 0x72, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x15, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x53, 0x52,
	0x50, 0x12, 0x60, 0x0a, 0x17, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x65, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x73, 0x72, 0x71, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x15, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x53, 0x52, 0x51, 0x12, 0x66, 0x0a, 0x1a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x73, 0x5f, 0x73, 0x69, 0x6e,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x18, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x53, 0x2d, 0x53, 0x49, 0x4e, 0x52, 0x22, 0x31, 0x0a, 0x0e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x1a, 0x04, 0x18, 0x40, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8b,
	0x01, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x72, 0x12, 0x4f, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x42, 0x1e, 0x0a, 0x1c,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x72, 0x22, 0x62, 0x0a, 0x0e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x72, 0x12, 0x50,
	0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4e, 0x72, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x9f, 0x04, 0x0a, 0x16, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x38, 0x0a, 0x07, 0x72,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x52, 0x53, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x5b, 0x0a, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x12,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x65,
	0x6c, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61,
	0x78, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x6c, 0x0a, 0x1a,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x18, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x53, 0x2d,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x1d, 0x6d, 0x61,
	0x78, 0x5f, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x01, 0x52, 0x19, 0x6d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x53, 0x2d, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x42, 0x20, 0x0a, 0x1e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x72, 0x73,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x50, 0x0a, 0x12, 0x4d, 0x65, 0x61, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x73, 0x72, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x73, 0x72, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x73, 0x72, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x73, 0x72, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x6e, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x73, 0x69, 0x6e, 0x72, 0x22, 0x69, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x4d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x9f, 0x01, 0x0a, 0x20, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x41, 0x64,
	0x64, 0x4d, 0x6f, 0x64, 0x12, 0x51, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4e, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x52, 0x42, 0x28, 0x0a, 0x26, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f,
	0x64, 0x22, 0xc5, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x12, 0x4f, 0x0a, 0x10, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x52, 0x0e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x0d, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x2c, 0x0a, 0x09, 0x52, 0x73, 0x72,
	0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x7f, 0x28, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x09, 0x52, 0x73, 0x72, 0x71, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x7f, 0x28, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x85, 0x03, 0x0a, 0x1a, 0x53, 0x63, 0x65, 0x6c, 0x6c, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x72, 0x31, 0x37, 0x12, 0x71, 0x0a, 0x1a, 0x73, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x72,
	0x31, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x65, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x72, 0x31, 0x37, 0x52, 0x18, 0x73,
	0x63, 0x65, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x53,
	0x2d, 0x49, 0x64, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x57, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69,
	0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x2d, 0x72, 0x31, 0x37,
	0x12, 0x39, 0x0a, 0x16, 0x67, 0x61, 0x70, 0x5f, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x5f,
	0x62, 0x75, 0x72, 0x73, 0x74, 0x73, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x14, 0x67, 0x61, 0x70, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x42, 0x75,
	0x72, 0x73, 0x74, 0x73, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0c, 0x71,
	0x63, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x52, 0x0c, 0x71, 0x63, 0x6c, 0x2d, 0x49, 0x6e, 0x66, 0x6f, 0x2d, 0x72,
	0x31, 0x37, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x67, 0x61, 0x70, 0x5f, 0x62, 0x65, 0x74, 0x77, 0x65,
	0x65, 0x6e, 0x5f, 0x62, 0x75, 0x72, 0x73, 0x74, 0x73, 0x5f, 0x72, 0x31, 0x37, 0x22, 0x40, 0x0a,
	0x1c, 0x53, 0x63, 0x65, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x72, 0x31, 0x37, 0x12, 0x20, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x30, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x07, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xa7, 0x02, 0x0a, 0x12, 0x53, 0x63, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x73, 0x75, 0x62, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x40, 0x0a, 0x1a, 0x74, 0x78,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x17, 0x74, 0x78, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x1d, 0x0a, 0x1b,
	0x5f, 0x74, 0x78, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x0f, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x12, 0x1f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x1a, 0x04, 0x18, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xa0, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x41,
	0x6e, 0x64, 0x42, 0x77, 0x70, 0x49, 0x64, 0x72, 0x31, 0x37, 0x12, 0x4e, 0x0a, 0x0f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x6e, 0x67, 0x63, 0x65, 0x6c, 0x6c, 0x2d, 0x72, 0x31, 0x37, 0x12, 0x36, 0x0a, 0x07, 0x62, 0x77,
	0x70, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x77, 0x70, 0x49, 0x64, 0x52, 0x07, 0x62, 0x77, 0x70, 0x2d, 0x72,
	0x31, 0x37, 0x22, 0x30, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x1f, 0x28, 0x00, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x1e, 0x43, 0x73, 0x69, 0x4d, 0x65, 0x61, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x4d, 0x65,
	0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x05, 0x73, 0x65, 0x74, 0x75,
	0x70, 0x42, 0x25, 0x0a, 0x23, 0x63, 0x73, 0x69, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x65, 0x6c,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x89, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x62,
	0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x62, 0x77, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x77, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x44, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x57, 0x50, 0x88,
	0x01, 0x01, 0x12, 0x63, 0x0a, 0x0f, 0x63, 0x73, 0x69, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x69, 0x4d, 0x65, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x01, 0x52, 0x0e, 0x63, 0x73, 0x69, 0x2d, 0x4d, 0x65, 0x61, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x77, 0x70,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0xf7, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x48, 0x0a, 0x0c, 0x70, 0x68, 0x79, 0x73, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x68, 0x79, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x68, 0x79,
	0x73, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x66, 0x0a, 0x16, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x14, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x68, 0x79, 0x73, 0x5f, 0x63, 0x65, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xb8,
	0x01, 0x0a, 0x2d, 0x53, 0x73, 0x62, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x42, 0x75, 0x72, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x69, 0x62,
	0x12, 0x34, 0x0a, 0x0c, 0x69, 0x6e, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x69, 0x6e, 0x4f, 0x6e,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3e, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xd8, 0x02, 0x0a, 0x1a, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x69, 0x62, 0x12, 0x7a, 0x0a, 0x16, 0x73, 0x73, 0x62, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x75, 0x72,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x73, 0x62, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x42,
	0x75, 0x72, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x69, 0x62, 0x52, 0x14,
	0x73, 0x73, 0x62, 0x2d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x42,
	0x75, 0x72, 0x73, 0x74, 0x12, 0x8c, 0x01, 0x0a, 0x1c, 0x73, 0x73, 0x62, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x73, 0x62, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69,
	0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x69, 0x62, 0x52, 0x1a, 0x73, 0x73, 0x62, 0x2d, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43,
	0x65, 0x6c, 0x6c, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x73, 0x5f, 0x70, 0x62, 0x63, 0x68, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x73, 0x73, 0x2d, 0x50, 0x42, 0x43, 0x48, 0x2d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x09, 0x53, 0x69, 0x6e, 0x72, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x7f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2b, 0x0a, 0x08, 0x53, 0x73, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x1a, 0x04, 0x18, 0x3f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x38, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x63, 0x69,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x72, 0x31, 0x37, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x07,
	0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0c, 0x53, 0x73,
	0x62, 0x54, 0x6f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x74,
	0x6d, 0x61, 0x70, 0x12, 0x39, 0x0a, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x5f, 0x62, 0x69,
	0x74, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x12, 0x35,
	0x0a, 0x0b, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x6f, 0x6e, 0x67, 0x42,
	0x69, 0x74, 0x6d, 0x61, 0x70, 0x42, 0x10, 0x0a, 0x0e, 0x73, 0x73, 0x62, 0x5f, 0x74, 0x6f, 0x5f,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x22, 0xf2, 0x04, 0x0a, 0x08, 0x54, 0x63, 0x69, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x74, 0x63, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52, 0x0b, 0x74,
	0x63, 0x69, 0x2d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x71, 0x63,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x71,
	0x63, 0x6c, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x31, 0x12, 0x41, 0x0a, 0x09, 0x71, 0x63, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x71,
	0x63, 0x6c, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x32, 0x88, 0x01, 0x01, 0x12, 0x60, 0x0a, 0x12, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x63, 0x69, 0x5f, 0x72, 0x31,
	0x37, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x63, 0x69, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x72, 0x31, 0x37, 0x48, 0x01, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x50, 0x43, 0x49, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x76, 0x0a,
	0x1c, 0x70, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x72, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68,
	0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x49,
	0x64, 0x72, 0x31, 0x37, 0x48, 0x02, 0x52, 0x1a, 0x70, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x53, 0x2d, 0x49, 0x64, 0x2d, 0x72,
	0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x66, 0x0a, 0x14, 0x75, 0x6c, 0x5f, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x31, 0x37, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x69,
	0x6e, 0x6b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x64,
	0x72, 0x31, 0x37, 0x48, 0x03, 0x52, 0x13, 0x75, 0x6c, 0x2d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x72, 0x31, 0x37, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x71, 0x63, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x32, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x63, 0x69, 0x5f, 0x72,
	0x31, 0x37, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x73, 0x5f, 0x69, 0x64, 0x5f,
	0x72, 0x31, 0x37, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x75, 0x6c, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x31, 0x37, 0x22, 0xaf, 0x01, 0x0a,
	0x16, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x51, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x63, 0x73, 0x69, 0x2d, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x03,
	0x73, 0x73, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x73, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00, 0x52, 0x03, 0x73, 0x73,
	0x62, 0x42, 0x1b, 0x0a, 0x19, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x71, 0x63, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xb4,
	0x02, 0x0a, 0x07, 0x51, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x04, 0x63, 0x65,
	0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00,
	0x52, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x62, 0x77, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x72, 0x5f, 0x72,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x77, 0x70, 0x49, 0x64, 0x48, 0x01, 0x52, 0x06, 0x62, 0x77, 0x70, 0x2d, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x58, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x51, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x41,
	0x0a, 0x08, 0x71, 0x63, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x51, 0x63, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x71, 0x63, 0x6c, 0x2d, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x62,
	0x77, 0x70, 0x5f, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x0a, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x7f, 0x28, 0x00, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xc4, 0x02, 0x0a, 0x16, 0x54, 0x64, 0x64, 0x55, 0x4c, 0x44, 0x4c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x93, 0x01, 0x0a, 0x2c, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x64, 0x64, 0x55, 0x4c, 0x44, 0x4c, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0xc0, 0x02, 0x52, 0x26, 0x73,
	0x6c, 0x6f, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x93, 0x01, 0x0a, 0x2c, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x64, 0x64, 0x55, 0x4c, 0x44, 0x4c, 0x53, 0x6c, 0x6f, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10,
	0xc0, 0x02, 0x52, 0x27, 0x73, 0x6c, 0x6f, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x80, 0x03, 0x0a, 0x1e,
	0x54, 0x64, 0x64, 0x55, 0x4c, 0x44, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x49, 0x41, 0x62, 0x4d, 0x54, 0x72, 0x31, 0x36, 0x12, 0xb1,
	0x01, 0x0a, 0x37, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x69, 0x61, 0x62, 0x5f, 0x6d, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x64, 0x64, 0x55, 0x4c, 0x44, 0x4c,
	0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x41, 0x62, 0x4d, 0x54, 0x72,
	0x31, 0x36, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0xc0, 0x02, 0x52,
	0x31, 0x73, 0x6c, 0x6f, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f, 0x41, 0x64, 0x64,
	0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x2d, 0x49, 0x41, 0x42, 0x2d, 0x4d, 0x54, 0x2d, 0x72,
	0x31, 0x36, 0x12, 0xa9, 0x01, 0x0a, 0x37, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x69, 0x61, 0x62, 0x5f, 0x6d, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x64, 0x64,
	0x55, 0x4c, 0x44, 0x4c, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0b, 0xfa,
	0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0xc0, 0x02, 0x52, 0x32, 0x73, 0x6c, 0x6f, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x2d, 0x49, 0x41, 0x42, 0x2d, 0x4d, 0x54, 0x2d, 0x72, 0x31, 0x36, 0x22, 0xb1,
	0x01, 0x0a, 0x0f, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x12, 0x37, 0x0a, 0x15, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x13, 0x6e, 0x72, 0x6f, 0x66, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x6e,
	0x72, 0x6f, 0x66, 0x5f, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x11, 0x6e, 0x72, 0x6f, 0x66,
	0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x18, 0x0a, 0x16, 0x5f, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6e,
	0x72, 0x6f, 0x66, 0x5f, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x18, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x54, 0x64,
	0x64, 0x55, 0x4c, 0x44, 0x4c, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x23, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x5f, 0x75, 0x70, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x55,
	0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x44, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x48,
	0x00, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x42, 0x1f, 0x0a, 0x1d, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x5f, 0x74, 0x64, 0x64, 0x5f, 0x75, 0x6c, 0x5f, 0x64, 0x6c,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xa6, 0x01, 0x0a,
	0x11, 0x54, 0x64, 0x64, 0x55, 0x4c, 0x44, 0x4c, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x46, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x64, 0x64, 0x55, 0x4c, 0x44, 0x4c, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x49, 0x0a, 0x07, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x54, 0x64, 0x64, 0x55, 0x4c,
	0x44, 0x4c, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x1a, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63,
	0x69, 0x74, 0x72, 0x31, 0x36, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x49, 0x41, 0x62, 0x4d,
	0x54, 0x72, 0x31, 0x36, 0x12, 0x3f, 0x0a, 0x19, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x5f, 0x72, 0x31,
	0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x17, 0x6e, 0x72, 0x6f, 0x66, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x2d, 0x72,
	0x31, 0x36, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x17, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x75, 0x70,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x5f, 0x72, 0x31, 0x36,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x15, 0x6e, 0x72, 0x6f, 0x66, 0x55, 0x70,
	0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x2d, 0x72, 0x31, 0x36, 0x88,
	0x01, 0x01, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x5f, 0x72, 0x31, 0x36,
	0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x5f, 0x72, 0x31, 0x36, 0x22, 0xd9, 0x01, 0x0a,
	0x1f, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x49, 0x41, 0x62, 0x4d, 0x54, 0x72, 0x31,
	0x36, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x49, 0x41, 0x62, 0x4d, 0x54, 0x72, 0x31, 0x36,
	0x12, 0x3f, 0x0a, 0x19, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x17, 0x6e, 0x72, 0x6f, 0x66, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x2d, 0x72, 0x31, 0x36, 0x88, 0x01,
	0x01, 0x12, 0x3b, 0x0a, 0x17, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x01, 0x52, 0x15, 0x6e, 0x72, 0x6f, 0x66, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x2d, 0x72, 0x31, 0x36, 0x88, 0x01, 0x01, 0x42, 0x1c,
	0x0a, 0x1a, 0x5f, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x5f, 0x72, 0x31, 0x36, 0x42, 0x1a, 0x0a, 0x18,
	0x5f, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x5f, 0x72, 0x31, 0x36, 0x22, 0xfc, 0x02, 0x0a, 0x28, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x49, 0x41, 0x62, 0x4d, 0x54, 0x72, 0x31, 0x36, 0x54, 0x64, 0x64, 0x55,
	0x4c, 0x44, 0x4c, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x41, 0x62,
	0x4d, 0x54, 0x72, 0x31, 0x36, 0x12, 0x2b, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2d, 0x72,
	0x31, 0x36, 0x12, 0x27, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x5f, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x6c,
	0x6c, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x57, 0x0a, 0x0c, 0x65,
	0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63,
	0x69, 0x74, 0x72, 0x31, 0x36, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x49, 0x41, 0x62, 0x4d,
	0x54, 0x72, 0x31, 0x36, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x2d, 0x72, 0x31, 0x36, 0x12, 0x6a, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x5f, 0x69, 0x61, 0x62, 0x5f, 0x6d, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63,
	0x69, 0x74, 0x49, 0x41, 0x62, 0x4d, 0x54, 0x72, 0x31, 0x36, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x49, 0x41, 0x62, 0x4d, 0x54, 0x72, 0x31, 0x36, 0x48, 0x00, 0x52, 0x13, 0x65, 0x78, 0x70,
	0x6c, 0x69, 0x63, 0x69, 0x74, 0x2d, 0x49, 0x41, 0x42, 0x2d, 0x4d, 0x54, 0x2d, 0x72, 0x31, 0x36,
	0x42, 0x35, 0x0a, 0x33, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x5f, 0x69, 0x61, 0x62, 0x5f,
	0x6d, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x5f, 0x74, 0x64, 0x64, 0x5f, 0x75, 0x6c, 0x5f, 0x64, 0x6c,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x61, 0x62,
	0x5f, 0x6d, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x22, 0xdc, 0x01, 0x0a, 0x19, 0x54, 0x64, 0x64, 0x55,
	0x4c, 0x44, 0x4c, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x41, 0x62,
	0x4d, 0x54, 0x72, 0x31, 0x36, 0x12, 0x4e, 0x0a, 0x0e, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x64, 0x64, 0x55, 0x4c, 0x44, 0x4c, 0x53, 0x6c, 0x6f,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0d, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x6f, 0x0a, 0x12, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73,
	0x5f, 0x69, 0x61, 0x62, 0x5f, 0x6d, 0x74, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x49, 0x41, 0x62, 0x4d, 0x54, 0x72, 0x31, 0x36, 0x54, 0x64, 0x64, 0x55, 0x4c, 0x44, 0x4c,
	0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x41, 0x62, 0x4d, 0x54, 0x72,
	0x31, 0x36, 0x52, 0x12, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x2d, 0x49, 0x41, 0x42, 0x2d,
	0x4d, 0x54, 0x2d, 0x72, 0x31, 0x36, 0x22, 0x34, 0x0a, 0x10, 0x54, 0x64, 0x64, 0x55, 0x4c, 0x44,
	0x4c, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05,
	0x18, 0xbf, 0x02, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x17,
	0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x49, 0x64, 0x72, 0x31, 0x37, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x40, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x8f, 0x01, 0x0a,
	0x25, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x68, 0x69, 0x62, 0x69, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x68, 0x69, 0x62, 0x69,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x21, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x68, 0x69, 0x62, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x22, 0xc1,
	0x01, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x05, 0x73,
	0x65, 0x74, 0x75, 0x70, 0x42, 0x2c, 0x0a, 0x2a, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x75,
	0x64, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0xb6, 0x01, 0x0a, 0x0b, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x84, 0x01, 0x0a, 0x1d, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6e, 0x72, 0x5f,
	0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x1a, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x20, 0x0a, 0x1e, 0x5f, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x38, 0x0a, 0x14, 0x50,
	0x68, 0x79, 0x73, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x55, 0x74, 0x72, 0x61, 0x46, 0x44, 0x64,
	0x72, 0x31, 0x36, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x03, 0x28, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x18, 0x52, 0x72, 0x63, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x03, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x52, 0x61, 0x63, 0x68, 0x72, 0x31, 0x37, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03,
	0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x16, 0x4d, 0x61,
	0x78, 0x41, 0x69, 0x44, 0x43, 0x69, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a,
	0x65, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x41, 0x69, 0x44, 0x43, 0x69,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x31, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x7f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e,
	0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x62, 0x12, 0x1f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x1a, 0x04, 0x08, 0x80, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33,
	0x0a, 0x12, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x55, 0x74, 0x72, 0x61, 0x46, 0x44,
	0x64, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x42, 0x68, 0x52, 0x4c, 0x63, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1f, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a,
	0x04, 0x08, 0x80, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10,
	0x4d, 0x61, 0x78, 0x42, 0x74, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x36,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x42, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e,
	0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c,
	0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x54, 0x77, 0x6f, 0x50, 0x75, 0x63, 0x63, 0x68, 0x47, 0x72, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b,
	0x4d, 0x61, 0x78, 0x54, 0x77, 0x6f, 0x50, 0x75, 0x63, 0x63, 0x68, 0x47, 0x72, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61,
	0x78, 0x43, 0x62, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10,
	0x4d, 0x61, 0x78, 0x43, 0x62, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x31, 0x72, 0x31, 0x36,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x43, 0x62, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x43, 0x62, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31,
	0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x45, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61,
	0x78, 0x43, 0x65, 0x6c, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34,
	0x0a, 0x13, 0x4d, 0x61, 0x78, 0x50, 0x73, 0x63, 0x65, 0x6c, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e,
	0x74, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x4d, 0x65, 0x61,
	0x73, 0x45, 0x75, 0x74, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c,
	0x4d, 0x65, 0x61, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61,
	0x78, 0x43, 0x65, 0x6c, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x55, 0x74, 0x72, 0x61, 0x46, 0x44, 0x64,
	0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x4e, 0x74, 0x6e,
	0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x69, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f,
	0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x45, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x12, 0x1f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x1a, 0x04, 0x08, 0xff, 0xff, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a,
	0x14, 0x4d, 0x61, 0x78, 0x45, 0x75, 0x74, 0x72, 0x61, 0x43, 0x65, 0x6c, 0x6c, 0x45, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x45, 0x75, 0x74, 0x72, 0x61,
	0x4e, 0x53, 0x50, 0x6d, 0x61, 0x78, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x29, 0x4d, 0x61, 0x78, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x50, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x73,
	0x50, 0x65, 0x72, 0x52, 0x61, 0x63, 0x68, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x72,
	0x31, 0x37, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x61, 0x73,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08,
	0x88, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x09, 0x4d, 0x61, 0x78,
	0x4e, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x08, 0xbd, 0x92, 0xc8,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x4e, 0x53, 0x50, 0x6d, 0x61, 0x78, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x65,
	0x71, 0x49, 0x64, 0x6c, 0x65, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a,
	0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43,
	0x65, 0x6c, 0x6c, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a, 0x22, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x50, 0x65,
	0x72, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4c, 0x0a, 0x2b, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x65,
	0x6c, 0x6c, 0x73, 0x50, 0x65, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x69, 0x6e, 0x75, 0x73, 0x34, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x44, 0x75, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x1a, 0x03, 0x08, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x16,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4d,
	0x65, 0x61, 0x73, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x41, 0x70, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x61, 0x73, 0x31, 0x72, 0x31, 0x37,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x4a, 0x0a, 0x28, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a,
	0x03, 0x08, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x29, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xff,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x49, 0x61, 0x62, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x37, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0x80, 0x80,
	0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1c, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x49, 0x61, 0x62, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x31, 0x72, 0x31, 0x37, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0xff,
	0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x53, 0x63, 0x65, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x52, 0x73, 0x72, 0x31,
	0x37, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xff, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x63, 0x65, 0x6c,
	0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x65, 0x6c, 0x6c,
	0x4d, 0x65, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x72,
	0x73, 0x49, 0x4d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x72, 0x31, 0x37,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x4d,
	0x65, 0x61, 0x73, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x43, 0x67, 0x53, 0x4c, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x43, 0x67, 0x53, 0x4c, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x53,
	0x6c, 0x47, 0x43, 0x42, 0x43, 0x44, 0x52, 0x78, 0x51, 0x6f, 0x53, 0x72, 0x31, 0x37, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a,
	0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x52, 0x78, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x65, 0x74, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x53, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x54, 0x6f, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x64, 0x43,
	0x65, 0x6c, 0x6c, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x43, 0x6f, 0x6e, 0x64, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x31, 0x72, 0x31, 0x37, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a,
	0x1e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35,
	0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x44, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x44, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x78, 0x74,
	0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x64, 0x75,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x72, 0x31, 0x37, 0x12, 0x1e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a,
	0x03, 0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x65,
	0x72, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x08, 0x4d, 0x61, 0x78,
	0x4c, 0x63, 0x67, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x4c, 0x63, 0x67, 0x49, 0x44,
	0x49, 0x41, 0x62, 0x72, 0x31, 0x37, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xff, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x4c, 0x63, 0x49,
	0x44, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x30, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4c, 0x63, 0x49, 0x44, 0x49, 0x61, 0x62, 0x72, 0x31,
	0x36, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0xbf, 0x82, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4c, 0x74, 0x65, 0x43, 0x52, 0x73, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x54, 0x61, 0x67, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x42, 0x77, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43,
	0x6f, 0x6d, 0x62, 0x49, 0x64, 0x63, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xc0,
	0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08,
	0xbf, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1d, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03,
	0x08, 0x93, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x1e, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x31, 0x12, 0x1e, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x1a, 0x03, 0x08, 0x92, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x22,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x50, 0x6c, 0x75,
	0x73, 0x31, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x94, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x31, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x0b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a,
	0x1e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x31, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37,
	0x0a, 0x16, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x43, 0x6f,
	0x52, 0x65, 0x53, 0x65, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x27, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x31,
	0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x27, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x42, 0x66, 0x64,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x72, 0x31,
	0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x36, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x53, 0x66, 0x69, 0x44, 0x43, 0x69, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x53,
	0x66, 0x69, 0x44, 0x43, 0x69, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65,
	0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x7f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x49, 0x61, 0x62, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x49, 0x6e, 0x74, 0x44,
	0x43, 0x69, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x7e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x15,
	0x4d, 0x61, 0x78, 0x49, 0x6e, 0x74, 0x44, 0x43, 0x69, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x69, 0x7a, 0x65, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x7d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f,
	0x0a, 0x1e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x30, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x40, 0x0a, 0x1f, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x2f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x70, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43,
	0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x41, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x4f, 0x66, 0x43, 0x73, 0x69, 0x41, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x26, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x65,
	0x72, 0x41, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3a, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4e, 0x7a, 0x70, 0x43, 0x53,
	0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x1a, 0x03, 0x08, 0xc0, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x19,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x31, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08,
	0xbf, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1e, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1c, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a, 0x24, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x43,
	0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52,
	0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x5a, 0x70,
	0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a,
	0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x5a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x1f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x5a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x5a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x5a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73,
	0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43,
	0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69,
	0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a,
	0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x21, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a,
	0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a, 0x22, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43,
	0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x46, 0x0a, 0x25, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45,
	0x78, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0a, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a, 0x24, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x31, 0x72, 0x31, 0x37,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x46, 0x72, 0x65, 0x71, 0x53, 0x6c,
	0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x42,
	0x57, 0x70, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71,
	0x53, 0x6c, 0x45, 0x55, 0x74, 0x72, 0x61, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x49, 0x64, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35,
	0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x53, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64,
	0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x50,
	0x6f, 0x6f, 0x6c, 0x54, 0x6f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4e, 0x72, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x53, 0x6c, 0x4e, 0x52, 0x72,
	0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x32, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x51, 0x46,
	0x69, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x10, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x53, 0x6c, 0x51, 0x46, 0x69, 0x73, 0x50, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x31, 0x36,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x63, 0x69,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x50, 0x6c, 0x6d, 0x6e,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2a, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x54, 0x61, 0x63, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x60, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52,
	0x72, 0x6d, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x5f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4d, 0x65, 0x61,
	0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x52,
	0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x60, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53,
	0x6c, 0x44, 0x65, 0x73, 0x74, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x1f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x53, 0x6c, 0x72, 0x62, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03,
	0x08, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0c, 0x4d, 0x61,
	0x78, 0x53, 0x6c, 0x4c, 0x43, 0x69, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03,
	0x08, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61,
	0x78, 0x53, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x36,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x78, 0x70, 0x6f, 0x6f, 0x6c,
	0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x54, 0x78, 0x70,
	0x6f, 0x6f, 0x6c, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x21, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73,
	0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x31, 0x72, 0x31, 0x36,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x37, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73,
	0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x72,
	0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3e, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x50,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x31, 0x72,
	0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x53, 0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x31, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a,
	0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x50, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x53, 0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72,
	0x73, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x31, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39,
	0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x32, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78,
	0x52, 0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a,
	0x19, 0x4d, 0x61, 0x78, 0x55, 0x6c, 0x74, 0x78, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a, 0x23, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x46, 0x0a, 0x24, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x6f, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x31, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xff,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75,
	0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x16,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x7f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x31, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x50, 0x30, 0x50, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63,
	0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50,
	0x75, 0x63, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x23, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45,
	0x0a, 0x24, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x50, 0x61,
	0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x73, 0x73, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a, 0x24, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x50, 0x75, 0x63, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x31, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x27,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68,
	0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73,
	0x44, 0x69, 0x66, 0x66, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03,
	0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1e, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x75,
	0x73, 0x63, 0x68, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x50, 0x30, 0x50, 0x55, 0x73, 0x63, 0x68, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x74,
	0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x30, 0x50, 0x55, 0x73,
	0x63, 0x68, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x74, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x1d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x73, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c,
	0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42,
	0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x73, 0x63, 0x68, 0x50, 0x61,
	0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x73, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x44, 0x0a, 0x23, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x73,
	0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a, 0x24, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x50, 0x75, 0x73, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x31, 0x72, 0x31, 0x36,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x48, 0x0a, 0x27, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x73, 0x63, 0x68, 0x50,
	0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x73, 0x73, 0x44, 0x69, 0x66, 0x66, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x3c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1e, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x1f, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x31, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x13,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4e, 0x61, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e,
	0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x4d, 0x72, 0x64, 0x63, 0x12, 0x1e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x0a, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f,
	0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x45, 0x75, 0x74, 0x72, 0x61, 0x12,
	0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x27, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x44, 0x72, 0x62, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x1d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x46,
	0x72, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x50, 0x6c, 0x75,
	0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x49, 0x64, 0x63, 0x72,
	0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x62, 0x49, 0x64, 0x63,
	0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x49, 0x64,
	0x63, 0x4d, 0x52, 0x64, 0x63, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x65, 0x61, 0x6d, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x73,
	0x45, 0x78, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x30, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x50, 0x63, 0x69, 0x73, 0x50, 0x65, 0x72, 0x53, 0x6d, 0x74, 0x63, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x51, 0x66, 0x69, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4e, 0x0a, 0x2c, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80,
	0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a, 0x22, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x4f, 0x66, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x50, 0x75, 0x73, 0x63, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a,
	0x12, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x42, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x6f,
	0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x02, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53,
	0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x70, 0x6c, 0x75, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1e, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a, 0x22, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x44, 0x69, 0x66, 0x66, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x38, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a,
	0x16, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x54,
	0x6f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x32, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x73, 0x62, 0x73, 0x72,
	0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x73, 0x62, 0x73,
	0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x4e, 0x53, 0x73, 0x61,
	0x69, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x54, 0x63, 0x69, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x50, 0x64, 0x63, 0x63, 0x68, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x7f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2c, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x55, 0x6c, 0x54, 0x43, 0x69, 0x72, 0x31, 0x37, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d,
	0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x55, 0x6c, 0x54, 0x43, 0x69, 0x31, 0x72, 0x31, 0x37, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a,
	0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x50, 0x63, 0x69, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x07,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x4d, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x55, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x51, 0x66, 0x69, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x13,
	0x4d, 0x61, 0x78, 0x52, 0x61, 0x43, 0x53, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x60, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x52, 0x61, 0x4f, 0x63, 0x63, 0x61, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x43, 0x73, 0x69, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x0f, 0x4d,
	0x61, 0x78, 0x52, 0x61, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x31, 0x12, 0x1e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x1a, 0x03, 0x08, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32,
	0x0a, 0x11, 0x4d, 0x61, 0x78, 0x52, 0x61, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x28, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x53, 0x63, 0x73, 0x73, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x16,
	0x4d, 0x61, 0x78, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x65, 0x6c, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x45, 0x75, 0x74, 0x72,
	0x61, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4d, 0x62, 0x73, 0x66, 0x6e, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x4d, 0x61,
	0x78, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x66, 0x74, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x78, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a,
	0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x78, 0x74, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73,
	0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x6c, 0x74, 0x72,
	0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3e, 0x0a, 0x1c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69,
	0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x6c, 0x74, 0x31, 0x72,
	0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x69,
	0x50, 0x55, 0x73, 0x63, 0x68, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x69, 0x50, 0x55, 0x73, 0x63, 0x68, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x53, 0x69,
	0x62, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x6c, 0x75, 0x73, 0x31, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x21,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2b, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x50, 0x6f,
	0x70, 0x65, 0x72, 0x50, 0x66, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x69, 0x70, 0x65,
	0x72, 0x50, 0x66, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x43, 0x61, 0x74, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x72, 0x72,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78,
	0x43, 0x65, 0x6c, 0x6c, 0x45, 0x75, 0x74, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x45,
	0x75, 0x74, 0x72, 0x61, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61,
	0x78, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38,
	0x0a, 0x16, 0x4d, 0x61, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x55,
	0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x73,
	0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x45, 0x75, 0x74, 0x72, 0x61, 0x44, 0x4c, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08,
	0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61, 0x78,
	0x45, 0x75, 0x74, 0x72, 0x61, 0x55, 0x4c, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x74, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a,
	0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x4d,
	0x61, 0x78, 0x50, 0x65, 0x72, 0x43, 0x63, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x74, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3b, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x61, 0x74, 0x52, 0x53,
	0x74, 0x64, 0x46, 0x72, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x47, 0x69, 0x6e, 0x72,
	0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x18, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x48, 0x72, 0x6e, 0x6e, 0x4c, 0x65, 0x6e, 0x72,
	0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x30, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2a, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x4e, 0x70, 0x6e, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a,
	0x23, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x4f, 0x66, 0x4d, 0x69, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4b, 0x30, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39,
	0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4b, 0x32, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e,
	0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78,
	0x4b, 0x30, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4b, 0x32, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x72, 0x31, 0x37,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x31, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x44, 0x63, 0x69, 0x32, 0x36, 0x53, 0x69, 0x7a, 0x65, 0x72,
	0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x8c, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x44, 0x63, 0x69, 0x32, 0x37, 0x53, 0x69,
	0x7a, 0x65, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x2b, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x44, 0x63, 0x69, 0x32, 0x36,
	0x53, 0x69, 0x7a, 0x65, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x8b,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x55, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x30, 0x50,
	0x55, 0x73, 0x63, 0x68, 0x53, 0x65, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78,
	0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x69, 0x62, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a,
	0x14, 0x4d, 0x61, 0x78, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x53,
	0x69, 0x62, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x43, 0x69, 0x44, 0x43, 0x69,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x7e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a,
	0x17, 0x4d, 0x61, 0x78, 0x43, 0x69, 0x44, 0x43, 0x69, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x69, 0x7a, 0x65, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x7d,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x55, 0x75,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x6c, 0x63, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x57, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x57,
	0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78,
	0x52, 0x61, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61,
	0x78, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d,
	0x61, 0x78, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a,
	0x13, 0x4d, 0x61, 0x78, 0x50, 0x73, 0x73, 0x63, 0x68, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6c,
	0x69, 0x52, 0x53, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6c, 0x69, 0x52, 0x53,
	0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x31, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a,
	0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6c, 0x69, 0x53, 0x52, 0x73, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61,
	0x78, 0x43, 0x6c, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x72, 0x31,
	0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x40, 0x0a, 0x1f, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0b, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x1f, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x43, 0x67, 0x54, 0x79, 0x70, 0x65, 0x32, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x23, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x63, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x1f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a,
	0x13, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x70, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x70,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x70, 0x73, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x50, 0x70, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x37, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31,
	0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x70, 0x77, 0x49, 0x44, 0x31, 0x72,
	0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x4f, 0x66, 0x54, 0x78, 0x54, 0x65,
	0x67, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x37, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03,
	0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x4f, 0x66, 0x54, 0x78, 0x54, 0x65, 0x67, 0x49, 0x44, 0x31, 0x72, 0x31, 0x37,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x53, 0x75, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1e, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1a,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x44, 0x63, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x37, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03,
	0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c,
	0x73, 0x54, 0x63, 0x69, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x54, 0x78, 0x44, 0x63, 0x54, 0x77, 0x6f, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x72,
	0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x62, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x52, 0x62, 0x53, 0x65, 0x74, 0x73, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x45, 0x6e, 0x68, 0x54, 0x79, 0x70, 0x65, 0x33, 0x48,
	0x61, 0x72, 0x71, 0x41, 0x43, 0x6b, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x45, 0x6e, 0x68, 0x54, 0x79, 0x70, 0x65, 0x33, 0x48, 0x61, 0x72, 0x71, 0x41,
	0x43, 0x6b, 0x31, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x07, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x50, 0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x31, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x72, 0x31, 0x37, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08,
	0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x47, 0x61, 0x70, 0x49, 0x64, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x6f, 0x73, 0x47, 0x61, 0x70, 0x49, 0x64, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x4f, 0x66, 0x47, 0x61, 0x70, 0x50, 0x72, 0x69, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f,
	0x4d, 0x61, 0x78, 0x43, 0x65, 0x66, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x37, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39,
	0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x50, 0x64, 0x73, 0x63, 0x68, 0x73, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d,
	0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x72, 0x31, 0x37, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a,
	0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x54, 0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1c, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x31, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x55, 0x65, 0x72, 0x31, 0x37, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a,
	0x0f, 0x4d, 0x61, 0x78, 0x44, 0x63, 0x69, 0x34, 0x32, 0x53, 0x69, 0x7a, 0x65, 0x72, 0x31, 0x37,
	0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x8c, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x4d, 0x62, 0x73, 0x72, 0x31,
	0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x37, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x44, 0x72, 0x78, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x50, 0x74, 0x6d, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x44, 0x72, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x74, 0x6d,
	0x31, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4d, 0x62,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x55,
	0x65, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4d, 0x62,
	0x73, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x37, 0x12, 0x1e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a,
	0x03, 0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1e, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4d, 0x74, 0x63, 0x68, 0x53, 0x53, 0x62, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x1f,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4d, 0x74, 0x63, 0x68, 0x53, 0x53, 0x62, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x31, 0x72, 0x31, 0x37, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37,
	0x0a, 0x16, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4d, 0x72, 0x62, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x50, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x72, 0x31, 0x37, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a,
	0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x64, 0x73, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x50, 0x74, 0x6d, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x50, 0x64, 0x73, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x74,
	0x6d, 0x31, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x47, 0x52, 0x4e, 0x74, 0x69,
	0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x47, 0x52, 0x4e, 0x74, 0x69, 0x31, 0x72,
	0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x47, 0x43, 0x53, 0x52, 0x4e, 0x74, 0x69, 0x72,
	0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x47, 0x43, 0x53, 0x52, 0x4e, 0x74, 0x69, 0x31,
	0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2a, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x4d, 0x72, 0x62, 0x72, 0x31, 0x37, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e,
	0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x73, 0x61, 0x69, 0x4d, 0x42, 0x73, 0x72, 0x31, 0x37, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33,
	0x0a, 0x12, 0x4d, 0x61, 0x78, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x43, 0x65, 0x6c, 0x6c, 0x4d, 0x62,
	0x73, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x23, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x64,
	0x63, 0x63, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x1d, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x50, 0x64, 0x63, 0x63, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x37, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x1b, 0x53, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x72, 0x4d,
	0x65, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x73, 0x62,
	0x5f, 0x72, 0x73, 0x72, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x72, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x73, 0x73, 0x62, 0x2d, 0x52, 0x53, 0x52, 0x50, 0x12, 0x3e, 0x0a, 0x08, 0x63, 0x73, 0x69,
	0x5f, 0x72, 0x73, 0x72, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x72, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x63, 0x73, 0x69, 0x2d, 0x52, 0x53, 0x52, 0x50, 0x42, 0x22, 0x0a, 0x20, 0x73, 0x5f, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x61,
	0x72, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xc2, 0x04,
	0x0a, 0x0d, 0x56, 0x61, 0x72, 0x4d, 0x65, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x50, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x61, 0x73, 0x49, 0x64, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x5c, 0x0a, 0x10, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f,
	0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x01, 0x52, 0x0e, 0x6d, 0x65,
	0x61, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x62, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x72,
	0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x54, 0x6f, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x02, 0x52, 0x10,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e,
	0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x03, 0x52, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x62, 0x0a, 0x10, 0x73, 0x5f, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x72, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x72, 0x4d, 0x65, 0x61, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x04, 0x52, 0x0f, 0x73, 0x2d, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x73, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2a, 0x79, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x69, 0x62,
	0x12, 0x2c, 0x0a, 0x28, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f,
	0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x4d,
	0x49, 0x42, 0x5f, 0x53, 0x43, 0x53, 0x31, 0x35, 0x4f, 0x52, 0x36, 0x30, 0x10, 0x00, 0x12, 0x2d,
	0x0a, 0x29, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x50,
	0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x42,
	0x5f, 0x53, 0x43, 0x53, 0x33, 0x30, 0x4f, 0x52, 0x31, 0x32, 0x30, 0x10, 0x01, 0x2a, 0x5a, 0x0a,
	0x14, 0x44, 0x6d, 0x72, 0x73, 0x54, 0x79, 0x70, 0x65, 0x41, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x69, 0x62, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x4d, 0x52, 0x53, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x42,
	0x5f, 0x50, 0x4f, 0x53, 0x32, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x4d, 0x52, 0x53, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d,
	0x49, 0x42, 0x5f, 0x50, 0x4f, 0x53, 0x33, 0x10, 0x01, 0x2a, 0x4b, 0x0a, 0x0d, 0x43, 0x65, 0x6c,
	0x6c, 0x42, 0x61, 0x72, 0x72, 0x65, 0x64, 0x4d, 0x69, 0x62, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x45,
	0x4c, 0x4c, 0x5f, 0x42, 0x41, 0x52, 0x52, 0x45, 0x44, 0x5f, 0x4d, 0x49, 0x42, 0x5f, 0x42, 0x41,
	0x52, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x42,
	0x41, 0x52, 0x52, 0x45, 0x44, 0x5f, 0x4d, 0x49, 0x42, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x42, 0x41,
	0x52, 0x52, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x6d, 0x0a, 0x17, 0x49, 0x6e, 0x74, 0x72, 0x61, 0x46,
	0x72, 0x65, 0x71, 0x52, 0x65, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
	0x62, 0x12, 0x26, 0x0a, 0x22, 0x49, 0x4e, 0x54, 0x52, 0x41, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x5f,
	0x52, 0x45, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x42, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2a, 0x0a, 0x26, 0x49, 0x4e, 0x54,
	0x52, 0x41, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x42, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x58, 0x0a, 0x24, 0x46, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x72, 0x63, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x35, 0x33, 0x30, 0x49, 0x65, 0x73, 0x12, 0x30, 0x0a,
	0x2c, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x52, 0x52, 0x43,
	0x52, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x56,
	0x31, 0x35, 0x33, 0x30, 0x5f, 0x49, 0x45, 0x53, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x00, 0x2a,
	0x31, 0x0a, 0x0f, 0x43, 0x79, 0x63, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42,
	0x77, 0x70, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x59, 0x43, 0x4c, 0x49, 0x43, 0x5f, 0x50, 0x52, 0x45,
	0x46, 0x49, 0x58, 0x5f, 0x42, 0x57, 0x50, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x44, 0x45, 0x44,
	0x10, 0x00, 0x2a, 0x96, 0x02, 0x0a, 0x2c, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x7a, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x34, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53,
	0x49, 0x5a, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53,
	0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x31, 0x10, 0x00, 0x12, 0x38, 0x0a,
	0x34, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4e, 0x32, 0x10, 0x01, 0x12, 0x38, 0x0a, 0x34, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49,
	0x4e, 0x47, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x33, 0x10,
	0x02, 0x12, 0x38, 0x0a, 0x34, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x34, 0x10, 0x03, 0x2a, 0x5a, 0x0a, 0x16, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x32, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x41,
	0x4c, 0x50, 0x48, 0x41, 0x42, 0x45, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x54, 0x59, 0x50, 0x45,
	0x32, 0x5f, 0x4e, 0x34, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f,
	0x41, 0x4c, 0x50, 0x48, 0x41, 0x42, 0x45, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x54, 0x59, 0x50,
	0x45, 0x32, 0x5f, 0x4e, 0x38, 0x10, 0x01, 0x2a, 0x71, 0x0a, 0x12, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x42, 0x65, 0x61, 0x6d, 0x73, 0x74, 0x79, 0x70, 0x65, 0x32, 0x12, 0x1c, 0x0a,
	0x18, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x5f, 0x42, 0x45, 0x41, 0x4d, 0x53,
	0x54, 0x59, 0x50, 0x45, 0x32, 0x5f, 0x54, 0x57, 0x4f, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x4e,
	0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x5f, 0x42, 0x45, 0x41, 0x4d, 0x53, 0x54, 0x59,
	0x50, 0x45, 0x32, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x4e,
	0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x5f, 0x42, 0x45, 0x41, 0x4d, 0x53, 0x54, 0x59,
	0x50, 0x45, 0x32, 0x5f, 0x46, 0x4f, 0x55, 0x52, 0x10, 0x02, 0x2a, 0xb4, 0x02, 0x0a, 0x32, 0x50,
	0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x72, 0x31, 0x36, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x69, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31,
	0x36, 0x12, 0x3e, 0x0a, 0x3a, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x52, 0x31, 0x36, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x31, 0x10,
	0x00, 0x12, 0x3e, 0x0a, 0x3a, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x52, 0x31, 0x36, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x32, 0x10,
	0x01, 0x12, 0x3e, 0x0a, 0x3a, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x52, 0x31, 0x36, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x33, 0x10,
	0x02, 0x12, 0x3e, 0x0a, 0x3a, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x52, 0x31, 0x36, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x34, 0x10,
	0x03, 0x2a, 0x7f, 0x0a, 0x21, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x66, 0x4e, 0x72, 0x31, 0x37,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x72, 0x31, 0x37, 0x12, 0x2c, 0x0a, 0x28, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f,
	0x4f, 0x46, 0x5f, 0x4e, 0x52, 0x31, 0x37, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x37, 0x5f,
	0x4e, 0x32, 0x10, 0x00, 0x12, 0x2c, 0x0a, 0x28, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x4f, 0x46,
	0x5f, 0x4e, 0x52, 0x31, 0x37, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x37, 0x5f, 0x4e, 0x34,
	0x10, 0x01, 0x2a, 0x83, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x67, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x1d, 0x52, 0x45, 0x47, 0x5f, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x53, 0x49,
	0x5a, 0x45, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x44, 0x5f, 0x4e, 0x32,
	0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x45, 0x47, 0x5f, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x44,
	0x5f, 0x4e, 0x33, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x45, 0x47, 0x5f, 0x42, 0x55, 0x4e,
	0x44, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4c, 0x45, 0x41,
	0x56, 0x45, 0x44, 0x5f, 0x4e, 0x36, 0x10, 0x02, 0x2a, 0x88, 0x01, 0x0a, 0x1a, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x1e, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4c, 0x45, 0x41, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4c, 0x45, 0x41, 0x56, 0x45, 0x44, 0x5f, 0x4e, 0x32, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x44, 0x5f, 0x4e, 0x33, 0x10, 0x01, 0x12,
	0x22, 0x0a, 0x1e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x52, 0x5f, 0x53,
	0x49, 0x5a, 0x45, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x44, 0x5f, 0x4e,
	0x36, 0x10, 0x02, 0x2a, 0xab, 0x01, 0x0a, 0x25, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x40, 0x0a,
	0x3c, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x55, 0x4c,
	0x41, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x41, 0x4d, 0x45, 0x5f,
	0x41, 0x53, 0x5f, 0x52, 0x45, 0x47, 0x5f, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0x00, 0x12,
	0x40, 0x0a, 0x3c, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x41, 0x4e,
	0x55, 0x4c, 0x41, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x41, 0x4c, 0x4c,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x47, 0x55, 0x4f, 0x55, 0x53, 0x5f, 0x52, 0x42, 0x53, 0x10,
	0x01, 0x2a, 0x57, 0x0a, 0x21, 0x54, 0x63, 0x69, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x44, 0x63, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x2e, 0x54, 0x43, 0x49, 0x5f, 0x50, 0x52,
	0x45, 0x53, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x44, 0x43, 0x49, 0x43, 0x4f, 0x4e, 0x54,
	0x52, 0x4f, 0x4c, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x54,
	0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x2a, 0x69, 0x0a, 0x2a, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x63, 0x69, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x72, 0x31, 0x37, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x37, 0x46, 0x4f, 0x4c, 0x4c,
	0x4f, 0x57, 0x5f, 0x55, 0x4e, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x54, 0x43, 0x49, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x45, 0x4e, 0x41, 0x42,
	0x4c, 0x45, 0x44, 0x10, 0x00, 0x2a, 0x75, 0x0a, 0x30, 0x41, 0x70, 0x43, 0x73, 0x69, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x31,
	0x37, 0x43, 0x73, 0x69, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x3d, 0x41, 0x50, 0x5f,
	0x43, 0x53, 0x49, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c, 0x45, 0x58, 0x49, 0x4e, 0x47, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x43, 0x53, 0x49, 0x41, 0x50, 0x45, 0x52, 0x49,
	0x4f, 0x44, 0x49, 0x43, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x2a, 0x83, 0x02, 0x0a,
	0x1c, 0x53, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x70, 0x30, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x30, 0x12, 0x24, 0x0a,
	0x20, 0x53, 0x55, 0x42, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x50, 0x30, 0x50, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4e, 0x30, 0x5f, 0x53,
	0x30, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x55, 0x42, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45,
	0x52, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x50, 0x30, 0x50, 0x41, 0x54, 0x54,
	0x45, 0x52, 0x4e, 0x30, 0x5f, 0x53, 0x32, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x55, 0x42,
	0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x50, 0x30, 0x50, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4e, 0x30, 0x5f, 0x53, 0x34, 0x10, 0x02, 0x12,
	0x24, 0x0a, 0x20, 0x53, 0x55, 0x42, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x4c, 0x4f,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x50, 0x30, 0x50, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4e, 0x30,
	0x5f, 0x53, 0x36, 0x10, 0x03, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x55, 0x42, 0x43, 0x41, 0x52, 0x52,
	0x49, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x50, 0x30, 0x50, 0x41,
	0x54, 0x54, 0x45, 0x52, 0x4e, 0x30, 0x5f, 0x53, 0x38, 0x10, 0x04, 0x12, 0x25, 0x0a, 0x21, 0x53,
	0x55, 0x42, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x50, 0x30, 0x50, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4e, 0x30, 0x5f, 0x53, 0x31, 0x30,
	0x10, 0x05, 0x2a, 0x90, 0x01, 0x0a, 0x1c, 0x53, 0x75, 0x62, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x31, 0x70, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x31, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x55, 0x42, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45,
	0x52, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x50, 0x31, 0x50, 0x41, 0x54, 0x54,
	0x45, 0x52, 0x4e, 0x31, 0x5f, 0x53, 0x30, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x55, 0x42,
	0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x50, 0x31, 0x50, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4e, 0x31, 0x5f, 0x53, 0x34, 0x10, 0x01, 0x12,
	0x24, 0x0a, 0x20, 0x53, 0x55, 0x42, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x4c, 0x4f,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x50, 0x31, 0x50, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4e, 0x31,
	0x5f, 0x53, 0x38, 0x10, 0x02, 0x2a, 0x9b, 0x03, 0x0a, 0x25, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x12,
	0x32, 0x0a, 0x2e, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53,
	0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x5f, 0x53, 0x4c,
	0x35, 0x10, 0x00, 0x12, 0x33, 0x0a, 0x2f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x4c,
	0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45,
	0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43,
	0x48, 0x5f, 0x53, 0x4c, 0x31, 0x30, 0x10, 0x01, 0x12, 0x33, 0x0a, 0x2f, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x53, 0x45,
	0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e,
	0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x5f, 0x53, 0x4c, 0x32, 0x30, 0x10, 0x02, 0x12, 0x33, 0x0a,
	0x2f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45,
	0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x5f, 0x53, 0x4c, 0x34, 0x30,
	0x10, 0x03, 0x12, 0x33, 0x0a, 0x2f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52,
	0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48,
	0x5f, 0x53, 0x4c, 0x38, 0x30, 0x10, 0x04, 0x12, 0x34, 0x0a, 0x30, 0x52, 0x45, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x53, 0x45, 0x4d,
	0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f,
	0x50, 0x55, 0x53, 0x43, 0x48, 0x5f, 0x53, 0x4c, 0x31, 0x36, 0x30, 0x10, 0x05, 0x12, 0x34, 0x0a,
	0x30, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45,
	0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x5f, 0x53, 0x4c, 0x33, 0x32,
	0x30, 0x10, 0x06, 0x2a, 0x7d, 0x0a, 0x1f, 0x50, 0x64, 0x73, 0x63, 0x68, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x73, 0x69, 0x63, 0x72, 0x69, 0x52,
	0x69, 0x69, 0x31, 0x43, 0x71, 0x69, 0x12, 0x2c, 0x0a, 0x28, 0x50, 0x44, 0x53, 0x43, 0x48, 0x5f,
	0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x5f,
	0x43, 0x53, 0x49, 0x43, 0x52, 0x49, 0x5f, 0x52, 0x49, 0x49, 0x31, 0x5f, 0x43, 0x51, 0x49, 0x5f,
	0x4e, 0x32, 0x10, 0x00, 0x12, 0x2c, 0x0a, 0x28, 0x50, 0x44, 0x53, 0x43, 0x48, 0x5f, 0x42, 0x55,
	0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x53,
	0x49, 0x43, 0x52, 0x49, 0x5f, 0x52, 0x49, 0x49, 0x31, 0x5f, 0x43, 0x51, 0x49, 0x5f, 0x4e, 0x34,
	0x10, 0x01, 0x2a, 0xaa, 0x01, 0x0a, 0x29, 0x43, 0x71, 0x69, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46,
	0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3e, 0x0a, 0x3a, 0x43, 0x51, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x49,
	0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x4f, 0x52, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46,
	0x52, 0x45, 0x51, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x57, 0x49, 0x44, 0x45, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x43, 0x51, 0x49, 0x10, 0x00,
	0x12, 0x3d, 0x0a, 0x39, 0x43, 0x51, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x49,
	0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x4f, 0x52, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46,
	0x52, 0x45, 0x51, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x55, 0x42, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x43, 0x51, 0x49, 0x10, 0x01, 0x2a,
	0xaa, 0x01, 0x0a, 0x29, 0x50, 0x6d, 0x69, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a,
	0x3a, 0x50, 0x4d, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x44, 0x49,
	0x43, 0x41, 0x54, 0x4f, 0x52, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46, 0x52, 0x45, 0x51,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57,
	0x49, 0x44, 0x45, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x4d, 0x49, 0x10, 0x00, 0x12, 0x3d, 0x0a,
	0x39, 0x50, 0x4d, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x44, 0x49,
	0x43, 0x41, 0x54, 0x4f, 0x52, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46, 0x52, 0x45, 0x51,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x55, 0x42, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x4d, 0x49, 0x10, 0x01, 0x2a, 0xd0, 0x01, 0x0a,
	0x34, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x49, 0x0a, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x52, 0x45,
	0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x4d, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x53, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x4d, 0x0a, 0x49, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x4d, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x43, 0x53,
	0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x44, 0x10, 0x01, 0x2a,
	0xdf, 0x01, 0x0a, 0x39, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x73,
	0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4e, 0x0a,
	0x4a, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x45, 0x52, 0x45, 0x4e,
	0x43, 0x45, 0x5f, 0x4d, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x5f,
	0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x52, 0x0a,
	0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x45, 0x52, 0x45, 0x4e,
	0x43, 0x45, 0x5f, 0x4d, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x5f,
	0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x44, 0x10,
	0x01, 0x2a, 0x54, 0x0a, 0x14, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x55, 0x4d,
	0x4d, 0x59, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x5f, 0x4e, 0x31, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x55, 0x4d, 0x4d,
	0x59, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x5f, 0x4e, 0x32, 0x10, 0x01, 0x2a, 0x9c, 0x01, 0x0a, 0x16, 0x4e, 0x72, 0x6f, 0x66,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x73, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52,
	0x54, 0x45, 0x44, 0x5f, 0x52, 0x53, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x4e,
	0x31, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x53, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f,
	0x4e, 0x32, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x53, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44,
	0x5f, 0x4e, 0x33, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x52, 0x45,
	0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x53, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45,
	0x44, 0x5f, 0x4e, 0x34, 0x10, 0x03, 0x2a, 0xb9, 0x01, 0x0a, 0x17, 0x43, 0x71, 0x69, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x51, 0x49, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f,
	0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x31, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x51, 0x49,
	0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x32, 0x10, 0x01,
	0x12, 0x25, 0x0a, 0x21, 0x43, 0x51, 0x49, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x53,
	0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54,
	0x41, 0x42, 0x4c, 0x45, 0x33, 0x10, 0x02, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x51, 0x49, 0x5f, 0x54,
	0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x34, 0x5f, 0x52, 0x31, 0x37,
	0x10, 0x03, 0x2a, 0x70, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x53, 0x69, 0x7a,
	0x65, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x28, 0x0a, 0x24, 0x53, 0x55, 0x42, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x49, 0x5a, 0x45,
	0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x31, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x53, 0x55,
	0x42, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x56, 0x41, 0x4c, 0x55,
	0x45, 0x32, 0x10, 0x01, 0x2a, 0xec, 0x01, 0x0a, 0x2f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76, 0x31, 0x35, 0x33, 0x30, 0x73, 0x65,
	0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75,
	0x73, 0x63, 0x68, 0x76, 0x31, 0x35, 0x33, 0x30, 0x12, 0x3c, 0x0a, 0x38, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x56, 0x31,
	0x35, 0x33, 0x30, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45,
	0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x56, 0x31, 0x35, 0x33, 0x30,
	0x5f, 0x53, 0x4c, 0x34, 0x10, 0x00, 0x12, 0x3c, 0x0a, 0x38, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x56, 0x31, 0x35, 0x33,
	0x30, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54,
	0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x56, 0x31, 0x35, 0x33, 0x30, 0x5f, 0x53,
	0x4c, 0x38, 0x10, 0x01, 0x12, 0x3d, 0x0a, 0x39, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53,
	0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x56, 0x31, 0x35, 0x33, 0x30, 0x53,
	0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f,
	0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x56, 0x31, 0x35, 0x33, 0x30, 0x5f, 0x53, 0x4c, 0x31,
	0x36, 0x10, 0x02, 0x2a, 0x59, 0x0a, 0x23, 0x43, 0x71, 0x69, 0x42, 0x69, 0x74, 0x73, 0x50, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x72, 0x31, 0x37, 0x43, 0x73, 0x69, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x2e, 0x43, 0x51,
	0x49, 0x5f, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x55, 0x42, 0x42, 0x41,
	0x4e, 0x44, 0x52, 0x31, 0x37, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x42, 0x49, 0x54, 0x53, 0x34, 0x10, 0x00, 0x2a, 0xaf,
	0x02, 0x0a, 0x31, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x72, 0x31, 0x37, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73,
	0x65, 0x64, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x76,
	0x31, 0x37, 0x31, 0x30, 0x12, 0x3d, 0x0a, 0x39, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x53, 0x52, 0x31, 0x37, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x44, 0x5f, 0x42, 0x45, 0x41, 0x4d, 0x5f,
	0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x56, 0x31, 0x37, 0x31, 0x30, 0x5f, 0x4e,
	0x31, 0x10, 0x00, 0x12, 0x3d, 0x0a, 0x39, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x45, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x53, 0x52, 0x31, 0x37, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x44, 0x5f, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x56, 0x31, 0x37, 0x31, 0x30, 0x5f, 0x4e, 0x32,
	0x10, 0x01, 0x12, 0x3d, 0x0a, 0x39, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52,
	0x54, 0x45, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x53, 0x52, 0x31, 0x37, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x44, 0x5f, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x52, 0x45,
	0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x56, 0x31, 0x37, 0x31, 0x30, 0x5f, 0x4e, 0x33, 0x10,
	0x02, 0x12, 0x3d, 0x0a, 0x39, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x45, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x53, 0x52, 0x31, 0x37, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x44, 0x5f, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x56, 0x31, 0x37, 0x31, 0x30, 0x5f, 0x4e, 0x34, 0x10, 0x03,
	0x2a, 0x48, 0x0a, 0x1b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x43, 0x6d, 0x72, 0x72, 0x31, 0x37,
	0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x29, 0x0a, 0x25, 0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x4d, 0x52, 0x52, 0x31, 0x37,
	0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x2a, 0x7f, 0x0a, 0x1f, 0x43, 0x73,
	0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x31, 0x37, 0x43, 0x73,
	0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x0a,
	0x29, 0x43, 0x53, 0x49, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x52, 0x31, 0x37, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x31, 0x10, 0x00, 0x12, 0x2d, 0x0a, 0x29,
	0x43, 0x53, 0x49, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x52,
	0x31, 0x37, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x32, 0x10, 0x01, 0x2a, 0xd8, 0x01, 0x0a, 0x2b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x72,
	0x70, 0x63, 0x73, 0x69, 0x6d, 0x6f, 0x64, 0x65, 0x31, 0x72, 0x31, 0x37, 0x43, 0x73, 0x69, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x33, 0x4e,
	0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f,
	0x54, 0x52, 0x50, 0x43, 0x53, 0x49, 0x4d, 0x4f, 0x44, 0x45, 0x31, 0x52, 0x31, 0x37, 0x5f, 0x43,
	0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f,
	0x4e, 0x30, 0x10, 0x00, 0x12, 0x37, 0x0a, 0x33, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4f,
	0x46, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x54, 0x52, 0x50, 0x43, 0x53, 0x49, 0x4d,
	0x4f, 0x44, 0x45, 0x31, 0x52, 0x31, 0x37, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x31, 0x10, 0x01, 0x12, 0x37, 0x0a,
	0x33, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c,
	0x45, 0x5f, 0x54, 0x52, 0x50, 0x43, 0x53, 0x49, 0x4d, 0x4f, 0x44, 0x45, 0x31, 0x52, 0x31, 0x37,
	0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x5f, 0x4e, 0x32, 0x10, 0x02, 0x2a, 0xb4, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x73, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x2a, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x41, 0x50, 0x45,
	0x52, 0x49, 0x4f, 0x44, 0x49, 0x43, 0x10, 0x00, 0x12, 0x34, 0x0a, 0x30, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x53, 0x45, 0x4d,
	0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x2d,
	0x0a, 0x29, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x43, 0x53, 0x49, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x5f, 0x50, 0x45, 0x52, 0x49, 0x4f, 0x44, 0x49, 0x43, 0x10, 0x02, 0x2a, 0xeb, 0x02,
	0x0a, 0x1d, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x43, 0x73, 0x69, 0x72, 0x73,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x27, 0x0a, 0x23, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x5f, 0x43, 0x53,
	0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x50, 0x50,
	0x49, 0x4e, 0x47, 0x5f, 0x50, 0x31, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x4e, 0x52, 0x4f, 0x46,
	0x5f, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x32, 0x10,
	0x01, 0x12, 0x27, 0x0a, 0x23, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x5f,
	0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41,
	0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x34, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x4e, 0x52,
	0x4f, 0x46, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x50,
	0x38, 0x10, 0x03, 0x12, 0x28, 0x0a, 0x24, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x50, 0x4f, 0x52, 0x54,
	0x53, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x4d, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x31, 0x32, 0x10, 0x04, 0x12, 0x28, 0x0a,
	0x24, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x5f, 0x43, 0x53, 0x49, 0x52,
	0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x50, 0x50, 0x49, 0x4e,
	0x47, 0x5f, 0x50, 0x31, 0x36, 0x10, 0x05, 0x12, 0x28, 0x0a, 0x24, 0x4e, 0x52, 0x4f, 0x46, 0x5f,
	0x50, 0x4f, 0x52, 0x54, 0x53, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x32, 0x34, 0x10,
	0x06, 0x12, 0x28, 0x0a, 0x24, 0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x5f,
	0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41,
	0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x33, 0x32, 0x10, 0x07, 0x2a, 0xd6, 0x01, 0x0a, 0x1b,
	0x43, 0x64, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x43, 0x73, 0x69, 0x72, 0x73, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x25, 0x43,
	0x44, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x4f,
	0x5f, 0x43, 0x44, 0x4d, 0x10, 0x00, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x44, 0x4d, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x4d, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x44, 0x5f, 0x43, 0x44, 0x4d, 0x32,
	0x10, 0x01, 0x12, 0x2f, 0x0a, 0x2b, 0x43, 0x44, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x50,
	0x50, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x44, 0x4d, 0x34, 0x5f, 0x46, 0x44, 0x32, 0x5f, 0x54, 0x44,
	0x32, 0x10, 0x02, 0x12, 0x2f, 0x0a, 0x2b, 0x43, 0x44, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41,
	0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x44, 0x4d, 0x38, 0x5f, 0x46, 0x44, 0x32, 0x5f, 0x54,
	0x44, 0x34, 0x10, 0x03, 0x2a, 0x42, 0x0a, 0x0b, 0x44, 0x6f, 0x74, 0x35, 0x64, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x4f, 0x54, 0x35, 0x44, 0x45, 0x4e, 0x53, 0x49,
	0x54, 0x59, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x5f, 0x50, 0x52, 0x42, 0x53, 0x10, 0x00, 0x12, 0x18,
	0x0a, 0x14, 0x44, 0x4f, 0x54, 0x35, 0x44, 0x45, 0x4e, 0x53, 0x49, 0x54, 0x59, 0x5f, 0x4f, 0x44,
	0x44, 0x5f, 0x50, 0x52, 0x42, 0x53, 0x10, 0x01, 0x2a, 0x8f, 0x01, 0x0a, 0x3c, 0x53, 0x70, 0x43,
	0x73, 0x69, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x31, 0x37, 0x43, 0x73, 0x69, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x4b, 0x53, 0x50, 0x5f,
	0x43, 0x53, 0x49, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c, 0x45, 0x58, 0x49, 0x4e, 0x47, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x43, 0x53, 0x49, 0x53, 0x45, 0x4d, 0x49, 0x5f,
	0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55,
	0x53, 0x43, 0x48, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x2a, 0xdb, 0x03, 0x0a, 0x11, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x16, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46,
	0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x43, 0x30, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16,
	0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45,
	0x4e, 0x54, 0x5f, 0x46, 0x43, 0x31, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x49, 0x4c, 0x54,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x43, 0x32, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x43, 0x33, 0x10, 0x03,
	0x12, 0x1a, 0x0a, 0x16, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46,
	0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x43, 0x34, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16,
	0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45,
	0x4e, 0x54, 0x5f, 0x46, 0x43, 0x35, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x49, 0x4c, 0x54,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x43, 0x36, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x43, 0x37, 0x10, 0x07,
	0x12, 0x1a, 0x0a, 0x16, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46,
	0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x43, 0x38, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16,
	0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45,
	0x4e, 0x54, 0x5f, 0x46, 0x43, 0x39, 0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x49, 0x4c, 0x54,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x43, 0x31, 0x31, 0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x43, 0x31, 0x33,
	0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45,
	0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x43, 0x31, 0x35, 0x10, 0x0c, 0x12,
	0x1b, 0x0a, 0x17, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46, 0x49,
	0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x43, 0x31, 0x37, 0x10, 0x0d, 0x12, 0x1b, 0x0a, 0x17,
	0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45,
	0x4e, 0x54, 0x5f, 0x46, 0x43, 0x31, 0x39, 0x10, 0x0e, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x49, 0x4c,
	0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x45, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f,
	0x53, 0x50, 0x41, 0x52, 0x45, 0x31, 0x10, 0x0f, 0x2a, 0xeb, 0x01, 0x0a, 0x24, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53,
	0x73, 0x6e, 0x7a, 0x70, 0x63, 0x73, 0x69, 0x72, 0x73, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x30, 0x0a, 0x2c, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52,
	0x4f, 0x4c, 0x5f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x53, 0x4e, 0x5a, 0x50, 0x43,
	0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x44, 0x42, 0x4d,
	0x33, 0x10, 0x00, 0x12, 0x2f, 0x0a, 0x2b, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e,
	0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x53, 0x4e, 0x5a,
	0x50, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x44,
	0x42, 0x30, 0x10, 0x01, 0x12, 0x2f, 0x0a, 0x2b, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x53, 0x4e,
	0x5a, 0x50, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x44, 0x42, 0x33, 0x10, 0x02, 0x12, 0x2f, 0x0a, 0x2b, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x53,
	0x4e, 0x5a, 0x50, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x44, 0x42, 0x36, 0x10, 0x03, 0x2a, 0x70, 0x0a, 0x1d, 0x52, 0x65, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x7a, 0x70, 0x63, 0x73, 0x69, 0x72, 0x73, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x22, 0x52, 0x45, 0x50, 0x45, 0x54,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x5a, 0x50, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x4f, 0x4e, 0x10, 0x00, 0x12,
	0x27, 0x0a, 0x23, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x5a,
	0x50, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53,
	0x45, 0x54, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x01, 0x2a, 0x44, 0x0a, 0x1a, 0x54, 0x72, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x4e, 0x7a, 0x70, 0x63, 0x73, 0x69, 0x72, 0x73, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x22, 0x54, 0x52, 0x53, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x4e, 0x5a, 0x50, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x00, 0x2a, 0x4a,
	0x0a, 0x1d, 0x50, 0x64, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x31, 0x37, 0x4e, 0x7a, 0x70, 0x63,
	0x73, 0x69, 0x72, 0x73, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12,
	0x29, 0x0a, 0x25, 0x50, 0x44, 0x43, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x31, 0x37, 0x5f, 0x4e,
	0x5a, 0x50, 0x43, 0x53, 0x49, 0x52, 0x53, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x53, 0x45, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x00, 0x2a, 0x96, 0x03, 0x0a, 0x0d, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x63, 0x69, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x11,
	0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e,
	0x34, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49,
	0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x38, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x31, 0x32,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x31, 0x36, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x32, 0x34,
	0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x33, 0x32, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x34, 0x38,
	0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x36, 0x34, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x38, 0x34,
	0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x39, 0x36, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x31, 0x32,
	0x38, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49,
	0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x31, 0x36, 0x38, 0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13,
	0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e,
	0x32, 0x35, 0x32, 0x10, 0x0c, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50,
	0x43, 0x49, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x35, 0x30, 0x34, 0x10, 0x0d, 0x12, 0x18,
	0x0a, 0x14, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x43, 0x49, 0x52, 0x41, 0x4e, 0x47, 0x45,
	0x5f, 0x4e, 0x31, 0x30, 0x30, 0x38, 0x10, 0x0e, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x41, 0x4e, 0x47,
	0x45, 0x5f, 0x50, 0x43, 0x49, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x50, 0x41, 0x52, 0x45,
	0x31, 0x10, 0x0f, 0x2a, 0x80, 0x05, 0x0a, 0x19, 0x42, 0x65, 0x61, 0x6d, 0x41, 0x70, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x31, 0x37, 0x50, 0x64, 0x73, 0x63, 0x68, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x23, 0x0a, 0x1f, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x5f, 0x4e, 0x31, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41,
	0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x32, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x42,
	0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x31, 0x37, 0x5f,
	0x50, 0x44, 0x53, 0x43, 0x48, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x34, 0x10, 0x02,
	0x12, 0x23, 0x0a, 0x1f, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x52, 0x31, 0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x5f, 0x4e, 0x37, 0x10, 0x03, 0x12, 0x24, 0x0a, 0x20, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50,
	0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x31, 0x34, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x42,
	0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x31, 0x37, 0x5f,
	0x50, 0x44, 0x53, 0x43, 0x48, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x32, 0x38, 0x10,
	0x05, 0x12, 0x24, 0x0a, 0x20, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x5f, 0x4e, 0x34, 0x32, 0x10, 0x06, 0x12, 0x24, 0x0a, 0x20, 0x42, 0x45, 0x41, 0x4d, 0x5f,
	0x41, 0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x50, 0x44, 0x53, 0x43,
	0x48, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x35, 0x36, 0x10, 0x07, 0x12, 0x24, 0x0a,
	0x20, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x31,
	0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x37,
	0x30, 0x10, 0x08, 0x12, 0x24, 0x0a, 0x20, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x5f,
	0x54, 0x49, 0x4d, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x5f, 0x4e, 0x38, 0x34, 0x10, 0x09, 0x12, 0x24, 0x0a, 0x20, 0x42, 0x45, 0x41,
	0x4d, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x50, 0x44,
	0x53, 0x43, 0x48, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x39, 0x38, 0x10, 0x0a, 0x12,
	0x25, 0x0a, 0x21, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x52, 0x31, 0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f,
	0x4e, 0x31, 0x31, 0x32, 0x10, 0x0b, 0x12, 0x25, 0x0a, 0x21, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41,
	0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x32, 0x32, 0x34, 0x10, 0x0c, 0x12, 0x25, 0x0a,
	0x21, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x31,
	0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x33,
	0x33, 0x36, 0x10, 0x0d, 0x12, 0x27, 0x0a, 0x23, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50, 0x50,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x31, 0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x5f, 0x53, 0x50, 0x41, 0x52, 0x45, 0x32, 0x10, 0x0e, 0x12, 0x27, 0x0a,
	0x23, 0x42, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x31,
	0x37, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x53, 0x50,
	0x41, 0x52, 0x45, 0x31, 0x10, 0x0f, 0x2a, 0xaa, 0x01, 0x0a, 0x2c, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x50, 0x64, 0x73, 0x63, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x38, 0x4d, 0x41, 0x50, 0x50, 0x49,
	0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x10, 0x00, 0x12, 0x3c, 0x0a, 0x38, 0x4d, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x42, 0x10, 0x01, 0x2a, 0xbc, 0x01, 0x0a, 0x32, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x72, 0x31, 0x36, 0x50, 0x64, 0x73, 0x63, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x12, 0x42, 0x0a, 0x3e, 0x4d, 0x41,
	0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x31, 0x36, 0x5f, 0x50, 0x44,
	0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x10, 0x00, 0x12, 0x42,
	0x0a, 0x3e, 0x4d, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x31,
	0x36, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41,
	0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42,
	0x10, 0x01, 0x2a, 0xe2, 0x04, 0x0a, 0x37, 0x52, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x72, 0x31, 0x36, 0x50, 0x64, 0x73, 0x63, 0x68, 0x74,
	0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x12, 0x43,
	0x0a, 0x3f, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x55, 0x4d,
	0x42, 0x45, 0x52, 0x52, 0x31, 0x36, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45,
	0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e,
	0x32, 0x10, 0x00, 0x12, 0x43, 0x0a, 0x3f, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x52, 0x31, 0x36, 0x5f, 0x50, 0x44, 0x53, 0x43,
	0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x52, 0x31, 0x36, 0x5f, 0x4e, 0x33, 0x10, 0x01, 0x12, 0x43, 0x0a, 0x3f, 0x52, 0x45, 0x50, 0x45,
	0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x52, 0x31, 0x36,
	0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49,
	0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x34, 0x10, 0x02, 0x12, 0x43, 0x0a,
	0x3f, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x42,
	0x45, 0x52, 0x52, 0x31, 0x36, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x35,
	0x10, 0x03, 0x12, 0x43, 0x0a, 0x3f, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x52, 0x31, 0x36, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52,
	0x31, 0x36, 0x5f, 0x4e, 0x36, 0x10, 0x04, 0x12, 0x43, 0x0a, 0x3f, 0x52, 0x45, 0x50, 0x45, 0x54,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x52, 0x31, 0x36, 0x5f,
	0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e,
	0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x37, 0x10, 0x05, 0x12, 0x43, 0x0a, 0x3f,
	0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45,
	0x52, 0x52, 0x31, 0x36, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44,
	0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x38, 0x10,
	0x06, 0x12, 0x44, 0x0a, 0x40, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x52, 0x31, 0x36, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54,
	0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31,
	0x36, 0x5f, 0x4e, 0x31, 0x36, 0x10, 0x07, 0x2a, 0xf4, 0x04, 0x0a, 0x39, 0x52, 0x65, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x76, 0x31, 0x37, 0x33,
	0x30, 0x50, 0x64, 0x73, 0x63, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x72, 0x31, 0x36, 0x12, 0x45, 0x0a, 0x41, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x56, 0x31, 0x37, 0x33, 0x30, 0x5f,
	0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e,
	0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x32, 0x10, 0x00, 0x12, 0x45, 0x0a, 0x41,
	0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45,
	0x52, 0x56, 0x31, 0x37, 0x33, 0x30, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45,
	0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e,
	0x33, 0x10, 0x01, 0x12, 0x45, 0x0a, 0x41, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x56, 0x31, 0x37, 0x33, 0x30, 0x5f, 0x50, 0x44,
	0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x34, 0x10, 0x02, 0x12, 0x45, 0x0a, 0x41, 0x52, 0x45,
	0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x56,
	0x31, 0x37, 0x33, 0x30, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44,
	0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x35, 0x10,
	0x03, 0x12, 0x45, 0x0a, 0x41, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x56, 0x31, 0x37, 0x33, 0x30, 0x5f, 0x50, 0x44, 0x53, 0x43,
	0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x52, 0x31, 0x36, 0x5f, 0x4e, 0x36, 0x10, 0x04, 0x12, 0x45, 0x0a, 0x41, 0x52, 0x45, 0x50, 0x45,
	0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x56, 0x31, 0x37,
	0x33, 0x30, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d,
	0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c,
	0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x37, 0x10, 0x05, 0x12,
	0x45, 0x0a, 0x41, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x56, 0x31, 0x37, 0x33, 0x30, 0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54,
	0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31,
	0x36, 0x5f, 0x4e, 0x38, 0x10, 0x06, 0x12, 0x46, 0x0a, 0x42, 0x52, 0x45, 0x50, 0x45, 0x54, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x56, 0x31, 0x37, 0x33, 0x30,
	0x5f, 0x50, 0x44, 0x53, 0x43, 0x48, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49,
	0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36, 0x5f, 0x4e, 0x31, 0x36, 0x10, 0x07, 0x2a, 0x35,
	0x0a, 0x08, 0x4e, 0x72, 0x52, 0x53, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x52,
	0x5f, 0x52, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x53, 0x42, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x4e, 0x52, 0x5f, 0x52, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x53, 0x49,
	0x5f, 0x52, 0x53, 0x10, 0x01, 0x2a, 0x91, 0x03, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x4d, 0x53, 0x31, 0x32,
	0x30, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x4d, 0x53, 0x32, 0x34, 0x30, 0x10, 0x01, 0x12, 0x19,
	0x0a, 0x15, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41,
	0x4c, 0x5f, 0x4d, 0x53, 0x34, 0x38, 0x30, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x4d, 0x53, 0x36,
	0x34, 0x30, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x4d, 0x53, 0x31, 0x30, 0x32, 0x34, 0x10, 0x04,
	0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x56, 0x41, 0x4c, 0x5f, 0x4d, 0x53, 0x32, 0x30, 0x34, 0x38, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16,
	0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f,
	0x4d, 0x53, 0x35, 0x31, 0x32, 0x30, 0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x4d, 0x53, 0x31, 0x30,
	0x32, 0x34, 0x30, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x4d, 0x53, 0x32, 0x30, 0x34, 0x38, 0x30,
	0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x4d, 0x53, 0x34, 0x30, 0x39, 0x36, 0x30, 0x10, 0x09, 0x12,
	0x18, 0x0a, 0x14, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56,
	0x41, 0x4c, 0x5f, 0x4d, 0x49, 0x4e, 0x31, 0x10, 0x0a, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x4d, 0x49, 0x4e,
	0x36, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x4d, 0x49, 0x4e, 0x31, 0x32, 0x10, 0x0c, 0x12, 0x19,
	0x0a, 0x15, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41,
	0x4c, 0x5f, 0x4d, 0x49, 0x4e, 0x33, 0x30, 0x10, 0x0d, 0x2a, 0xd9, 0x03, 0x0a, 0x33, 0x53, 0x73,
	0x62, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x69,
	0x62, 0x12, 0x43, 0x0a, 0x3f, 0x53, 0x53, 0x42, 0x5f, 0x50, 0x45, 0x52, 0x49, 0x4f, 0x44, 0x49,
	0x43, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x45, 0x4c,
	0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x53, 0x49, 0x42,
	0x5f, 0x4d, 0x53, 0x35, 0x10, 0x00, 0x12, 0x44, 0x0a, 0x40, 0x53, 0x53, 0x42, 0x5f, 0x50, 0x45,
	0x52, 0x49, 0x4f, 0x44, 0x49, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e,
	0x47, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x43,
	0x45, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f,
	0x4e, 0x5f, 0x53, 0x49, 0x42, 0x5f, 0x4d, 0x53, 0x31, 0x30, 0x10, 0x01, 0x12, 0x44, 0x0a, 0x40,
	0x53, 0x53, 0x42, 0x5f, 0x50, 0x45, 0x52, 0x49, 0x4f, 0x44, 0x49, 0x43, 0x49, 0x54, 0x59, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x53, 0x49, 0x42, 0x5f, 0x4d, 0x53, 0x32, 0x30,
	0x10, 0x02, 0x12, 0x44, 0x0a, 0x40, 0x53, 0x53, 0x42, 0x5f, 0x50, 0x45, 0x52, 0x49, 0x4f, 0x44,
	0x49, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x45,
	0x4c, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x53, 0x49,
	0x42, 0x5f, 0x4d, 0x53, 0x34, 0x30, 0x10, 0x03, 0x12, 0x44, 0x0a, 0x40, 0x53, 0x53, 0x42, 0x5f,
	0x50, 0x45, 0x52, 0x49, 0x4f, 0x44, 0x49, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x4e, 0x47, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47,
	0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x4f, 0x4e, 0x5f, 0x53, 0x49, 0x42, 0x5f, 0x4d, 0x53, 0x38, 0x30, 0x10, 0x04, 0x12, 0x45,
	0x0a, 0x41, 0x53, 0x53, 0x42, 0x5f, 0x50, 0x45, 0x52, 0x49, 0x4f, 0x44, 0x49, 0x43, 0x49, 0x54,
	0x59, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x53, 0x49, 0x42, 0x5f, 0x4d, 0x53,
	0x31, 0x36, 0x30, 0x10, 0x05, 0x2a, 0x9b, 0x02, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x19, 0x53,
	0x55, 0x42, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x49, 0x4e,
	0x47, 0x5f, 0x4b, 0x5f, 0x48, 0x5a, 0x31, 0x35, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x55,
	0x42, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47,
	0x5f, 0x4b, 0x5f, 0x48, 0x5a, 0x33, 0x30, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x55, 0x42,
	0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f,
	0x4b, 0x5f, 0x48, 0x5a, 0x36, 0x30, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x55, 0x42, 0x43,
	0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4b,
	0x5f, 0x48, 0x5a, 0x31, 0x32, 0x30, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x55, 0x42, 0x43,
	0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4b,
	0x5f, 0x48, 0x5a, 0x32, 0x34, 0x30, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x55, 0x42, 0x43,
	0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4b,
	0x5f, 0x48, 0x5a, 0x34, 0x38, 0x30, 0x5f, 0x56, 0x31, 0x37, 0x30, 0x30, 0x10, 0x05, 0x12, 0x24,
	0x0a, 0x20, 0x53, 0x55, 0x42, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x41,
	0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4b, 0x5f, 0x48, 0x5a, 0x39, 0x36, 0x30, 0x5f, 0x56, 0x31, 0x37,
	0x30, 0x30, 0x10, 0x06, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x55, 0x42, 0x43, 0x41, 0x52, 0x52, 0x49,
	0x45, 0x52, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x50, 0x41, 0x52, 0x45,
	0x31, 0x10, 0x07, 0x2a, 0x84, 0x01, 0x0a, 0x0e, 0x51, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x51,
	0x63, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x17, 0x51, 0x43, 0x4c, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x51, 0x43, 0x4c, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x51, 0x43, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x51, 0x43, 0x4c, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x10, 0x01,
	0x12, 0x1b, 0x0a, 0x17, 0x51, 0x43, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x51, 0x43, 0x4c,
	0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x10, 0x02, 0x12, 0x1b, 0x0a,
	0x17, 0x51, 0x43, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x51, 0x43, 0x4c, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x10, 0x03, 0x2a, 0xce, 0x03, 0x0a, 0x26, 0x44,
	0x65, 0x6c, 0x61, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x68, 0x69, 0x62, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x73, 0x65, 0x74, 0x75, 0x70, 0x12, 0x31, 0x0a, 0x2d, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x5f, 0x42,
	0x55, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x5f,
	0x50, 0x52, 0x4f, 0x48, 0x49, 0x42, 0x49, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x53, 0x45,
	0x54, 0x55, 0x50, 0x5f, 0x53, 0x30, 0x10, 0x00, 0x12, 0x35, 0x0a, 0x31, 0x44, 0x45, 0x4c, 0x41,
	0x59, 0x5f, 0x42, 0x55, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x49,
	0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x48, 0x49, 0x42, 0x49, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x52, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x53, 0x30, 0x44, 0x4f, 0x54, 0x34, 0x10, 0x01, 0x12,
	0x35, 0x0a, 0x31, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x5f, 0x42, 0x55, 0x44, 0x47, 0x45, 0x54, 0x5f,
	0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x48, 0x49, 0x42,
	0x49, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x53, 0x30,
	0x44, 0x4f, 0x54, 0x38, 0x10, 0x02, 0x12, 0x35, 0x0a, 0x31, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x5f,
	0x42, 0x55, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x50, 0x52, 0x4f, 0x48, 0x49, 0x42, 0x49, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x53,
	0x45, 0x54, 0x55, 0x50, 0x5f, 0x53, 0x31, 0x44, 0x4f, 0x54, 0x36, 0x10, 0x03, 0x12, 0x31, 0x0a,
	0x2d, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x5f, 0x42, 0x55, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45,
	0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x48, 0x49, 0x42, 0x49, 0x54,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x53, 0x33, 0x10, 0x04,
	0x12, 0x31, 0x0a, 0x2d, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x5f, 0x42, 0x55, 0x44, 0x47, 0x45, 0x54,
	0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x48, 0x49,
	0x42, 0x49, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x53,
	0x36, 0x10, 0x05, 0x12, 0x32, 0x0a, 0x2e, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x5f, 0x42, 0x55, 0x44,
	0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52,
	0x4f, 0x48, 0x49, 0x42, 0x49, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x53, 0x45, 0x54, 0x55,
	0x50, 0x5f, 0x53, 0x31, 0x32, 0x10, 0x06, 0x12, 0x32, 0x0a, 0x2e, 0x44, 0x45, 0x4c, 0x41, 0x59,
	0x5f, 0x42, 0x55, 0x44, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x50, 0x52, 0x4f, 0x48, 0x49, 0x42, 0x49, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52,
	0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x53, 0x33, 0x30, 0x10, 0x07, 0x42, 0x27, 0x5a, 0x25, 0x2e,
	0x2f, 0x6e, 0x72, 0x2d, 0x72, 0x72, 0x63, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x3b, 0x6e, 0x72, 0x72, 0x72, 0x63, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nr_rrc_definitions_proto_rawDescOnce sync.Once
	file_nr_rrc_definitions_proto_rawDescData = file_nr_rrc_definitions_proto_rawDesc
)

func file_nr_rrc_definitions_proto_rawDescGZIP() []byte {
	file_nr_rrc_definitions_proto_rawDescOnce.Do(func() {
		file_nr_rrc_definitions_proto_rawDescData = protoimpl.X.CompressGZIP(file_nr_rrc_definitions_proto_rawDescData)
	})
	return file_nr_rrc_definitions_proto_rawDescData
}

var file_nr_rrc_definitions_proto_enumTypes = make([]protoimpl.EnumInfo, 57)
var file_nr_rrc_definitions_proto_msgTypes = make([]protoimpl.MessageInfo, 679)
var file_nr_rrc_definitions_proto_goTypes = []interface{}{
	(SubCarrierSpacingCommonMib)(0),                                   // 0: nr_rrc_definitions.v1.SubCarrierSpacingCommonMib
	(DmrsTypeApositionMib)(0),                                         // 1: nr_rrc_definitions.v1.DmrsTypeApositionMib
	(CellBarredMib)(0),                                                // 2: nr_rrc_definitions.v1.CellBarredMib
	(IntraFreqReselectionMib)(0),                                      // 3: nr_rrc_definitions.v1.IntraFreqReselectionMib
	(FullConfigRrcreconfigurationv1530Ies)(0),                         // 4: nr_rrc_definitions.v1.FullConfigRrcreconfigurationv1530Ies
	(CyclicPrefixBwp)(0),                                              // 5: nr_rrc_definitions.v1.CyclicPrefixBwp
	(PortSelectionSamplingSizetypeIiportSelection)(0),                 // 6: nr_rrc_definitions.v1.PortSelectionSamplingSizetypeIiportSelection
	(PhaseAlphabetSizetype2)(0),                                       // 7: nr_rrc_definitions.v1.PhaseAlphabetSizetype2
	(NumberOfBeamstype2)(0),                                           // 8: nr_rrc_definitions.v1.NumberOfBeamstype2
	(PortSelectionSamplingSizer16TypeIiportSelectionr16)(0),           // 9: nr_rrc_definitions.v1.PortSelectionSamplingSizer16typeIiportSelectionr16
	(ValueOfNr17TypeIiportSelectionr17)(0),                            // 10: nr_rrc_definitions.v1.ValueOfNr17typeIiportSelectionr17
	(RegBundleSizeinterleaved)(0),                                     // 11: nr_rrc_definitions.v1.RegBundleSizeinterleaved
	(InterleaverSizeinterleaved)(0),                                   // 12: nr_rrc_definitions.v1.InterleaverSizeinterleaved
	(PrecoderGranularityControlResourceSet)(0),                        // 13: nr_rrc_definitions.v1.PrecoderGranularityControlResourceSet
	(TciPresentInDcicontrolResourceSet)(0),                            // 14: nr_rrc_definitions.v1.TciPresentInDcicontrolResourceSet
	(FollowUnifiedTcistater17ControlResourceSet)(0),                   // 15: nr_rrc_definitions.v1.FollowUnifiedTcistater17ControlResourceSet
	(ApCsimultiplexingModer17CsiaperiodicTriggerState)(0),             // 16: nr_rrc_definitions.v1.ApCsimultiplexingModer17CsiaperiodicTriggerState
	(SubcarrierLocationp0Pattern0)(0),                                 // 17: nr_rrc_definitions.v1.SubcarrierLocationp0pattern0
	(SubcarrierLocationp1Pattern1)(0),                                 // 18: nr_rrc_definitions.v1.SubcarrierLocationp1pattern1
	(ReportSlotConfigsemiPersistentOnPusch)(0),                        // 19: nr_rrc_definitions.v1.ReportSlotConfigsemiPersistentOnPusch
	(PdschBundleSizeForCsicriRii1Cqi)(0),                              // 20: nr_rrc_definitions.v1.PdschBundleSizeForCsicriRii1Cqi
	(CqiFormatIndicatorreportFreqConfiguration)(0),                    // 21: nr_rrc_definitions.v1.CqiFormatIndicatorreportFreqConfiguration
	(PmiFormatIndicatorreportFreqConfiguration)(0),                    // 22: nr_rrc_definitions.v1.PmiFormatIndicatorreportFreqConfiguration
	(TimeRestrictionForChannelMeasurementsCsireportConfig)(0),         // 23: nr_rrc_definitions.v1.TimeRestrictionForChannelMeasurementsCsireportConfig
	(TimeRestrictionForInterferenceMeasurementsCsireportConfig)(0),    // 24: nr_rrc_definitions.v1.TimeRestrictionForInterferenceMeasurementsCsireportConfig
	(DummyCsireportConfig)(0),                                         // 25: nr_rrc_definitions.v1.DummyCsireportConfig
	(NrofReportedRsdisabled)(0),                                       // 26: nr_rrc_definitions.v1.NrofReportedRsdisabled
	(CqiTableCsireportConfig)(0),                                      // 27: nr_rrc_definitions.v1.CqiTableCsireportConfig
	(SubbandSizeCsireportConfig)(0),                                   // 28: nr_rrc_definitions.v1.SubbandSizeCsireportConfig
	(ReportSlotConfigv1530SemiPersistentOnPuschv1530)(0),              // 29: nr_rrc_definitions.v1.ReportSlotConfigv1530semiPersistentOnPuschv1530
	(CqiBitsPerSubbandr17CsireportConfig)(0),                          // 30: nr_rrc_definitions.v1.CqiBitsPerSubbandr17CsireportConfig
	(NrofReportedGroupsr17GroupBasedBeamReportingv1710)(0),            // 31: nr_rrc_definitions.v1.NrofReportedGroupsr17groupBasedBeamReportingv1710
	(SharedCmrr17CsireportConfig)(0),                                  // 32: nr_rrc_definitions.v1.SharedCmrr17CsireportConfig
	(CsiReportModer17CsireportConfig)(0),                              // 33: nr_rrc_definitions.v1.CsiReportModer17CsireportConfig
	(NumberOfSingleTrpcsimode1R17CsireportConfig)(0),                  // 34: nr_rrc_definitions.v1.NumberOfSingleTrpcsimode1r17CsireportConfig
	(ResourceTypeCsiresourceConfig)(0),                                // 35: nr_rrc_definitions.v1.ResourceTypeCsiresourceConfig
	(NrofPortsCsirsresourceMapping)(0),                                // 36: nr_rrc_definitions.v1.NrofPortsCsirsresourceMapping
	(CdmTypeCsirsresourceMapping)(0),                                  // 37: nr_rrc_definitions.v1.CdmTypeCsirsresourceMapping
	(Dot5Density)(0),                                                  // 38: nr_rrc_definitions.v1.Dot5density
	(SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState)(0), // 39: nr_rrc_definitions.v1.SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState
	(FilterCoefficient)(0),                                            // 40: nr_rrc_definitions.v1.FilterCoefficient
	(PowerControlOffsetSsnzpcsirsresource)(0),                         // 41: nr_rrc_definitions.v1.PowerControlOffsetSsnzpcsirsresource
	(RepetitionNzpcsirsresourceSet)(0),                                // 42: nr_rrc_definitions.v1.RepetitionNzpcsirsresourceSet
	(TrsInfoNzpcsirsresourceSet)(0),                                   // 43: nr_rrc_definitions.v1.TrsInfoNzpcsirsresourceSet
	(PdcInfor17NzpcsirsresourceSet)(0),                                // 44: nr_rrc_definitions.v1.PdcInfor17NzpcsirsresourceSet
	(RangePcirange)(0),                                                // 45: nr_rrc_definitions.v1.RangePcirange
	(BeamAppTimer17Pdschconfig)(0),                                    // 46: nr_rrc_definitions.v1.BeamAppTimer17Pdschconfig
	(MappingTypePdschtimeDomainResourceAllocation)(0),                 // 47: nr_rrc_definitions.v1.MappingTypePdschtimeDomainResourceAllocation
	(MappingTyper16PdschtimeDomainResourceAllocationr16)(0),           // 48: nr_rrc_definitions.v1.MappingTyper16PdschtimeDomainResourceAllocationr16
	(RepetitionNumberr16PdschtimeDomainResourceAllocationr16)(0),      // 49: nr_rrc_definitions.v1.RepetitionNumberr16PdschtimeDomainResourceAllocationr16
	(RepetitionNumberv1730PdschtimeDomainResourceAllocationr16)(0),    // 50: nr_rrc_definitions.v1.RepetitionNumberv1730PdschtimeDomainResourceAllocationr16
	(NrRSType)(0),       // 51: nr_rrc_definitions.v1.NrRSType
	(ReportInterval)(0), // 52: nr_rrc_definitions.v1.ReportInterval
	(SsbPeriodicityServingCellServingCellConfigCommonSib)(0), // 53: nr_rrc_definitions.v1.SsbPeriodicityServingCellServingCellConfigCommonSib
	(SubcarrierSpacing)(0),                                       // 54: nr_rrc_definitions.v1.SubcarrierSpacing
	(QclTypeQclinfo)(0),                                          // 55: nr_rrc_definitions.v1.QclTypeQclinfo
	(DelayBudgetReportingProhibitTimersetup)(0),                  // 56: nr_rrc_definitions.v1.DelayBudgetReportingProhibitTimersetup
	(*BcchBChMessage)(nil),                                       // 57: nr_rrc_definitions.v1.BcchBChMessage
	(*MessageClassExtensionBcchBChMessageType)(nil),              // 58: nr_rrc_definitions.v1.MessageClassExtensionBcchBChMessageType
	(*BcchBChMessageType)(nil),                                   // 59: nr_rrc_definitions.v1.BcchBChMessageType
	(*BcchDLSChMessage)(nil),                                     // 60: nr_rrc_definitions.v1.BcchDLSChMessage
	(*C1BcchDLSChMessageType)(nil),                               // 61: nr_rrc_definitions.v1.C1BcchDLSChMessageType
	(*MessageClassExtensionBcchDLSChMessageType)(nil),            // 62: nr_rrc_definitions.v1.MessageClassExtensionBcchDLSChMessageType
	(*BcchDLSChMessageType)(nil),                                 // 63: nr_rrc_definitions.v1.BcchDLSChMessageType
	(*DlCCchMessage)(nil),                                        // 64: nr_rrc_definitions.v1.DlCCchMessage
	(*C1DlCCchMessageType)(nil),                                  // 65: nr_rrc_definitions.v1.C1DlCCchMessageType
	(*MessageClassExtensionDlCCchMessageType)(nil),               // 66: nr_rrc_definitions.v1.MessageClassExtensionDlCCchMessageType
	(*DlCCchMessageType)(nil),                                    // 67: nr_rrc_definitions.v1.DlCCchMessageType
	(*DlDCchMessage)(nil),                                        // 68: nr_rrc_definitions.v1.DlDCchMessage
	(*C1DlDCchMessageType)(nil),                                  // 69: nr_rrc_definitions.v1.C1DlDCchMessageType
	(*MessageClassExtensionDlDCchMessageType)(nil),               // 70: nr_rrc_definitions.v1.MessageClassExtensionDlDCchMessageType
	(*DlDCchMessageType)(nil),                                    // 71: nr_rrc_definitions.v1.DlDCchMessageType
	(*UlCCchMessage)(nil),                                        // 72: nr_rrc_definitions.v1.UlCCchMessage
	(*C1UlCCchMessageType)(nil),                                  // 73: nr_rrc_definitions.v1.C1UlCCchMessageType
	(*MessageClassExtensionUlCCchMessageType)(nil),               // 74: nr_rrc_definitions.v1.MessageClassExtensionUlCCchMessageType
	(*UlCCchMessageType)(nil),                                    // 75: nr_rrc_definitions.v1.UlCCchMessageType
	(*UlCCch1Message)(nil),                                       // 76: nr_rrc_definitions.v1.UlCCch1Message
	(*C1UlCCch1MessageType)(nil),                                 // 77: nr_rrc_definitions.v1.C1UlCCch1MessageType
	(*MessageClassExtensionUlCCch1MessageType)(nil),              // 78: nr_rrc_definitions.v1.MessageClassExtensionUlCCch1MessageType
	(*UlCCch1MessageType)(nil),                                   // 79: nr_rrc_definitions.v1.UlCCch1MessageType
	(*UlDCchMessage)(nil),                                        // 80: nr_rrc_definitions.v1.UlDCchMessage
	(*C1UlDCchMessageType)(nil),                                  // 81: nr_rrc_definitions.v1.C1UlDCchMessageType
	(*C2MessageClassExtension)(nil),                              // 82: nr_rrc_definitions.v1.C2messageClassExtension
	(*MessageClassExtensionFuturer16MessageClassExtension)(nil),  // 83: nr_rrc_definitions.v1.MessageClassExtensionFuturer16messageClassExtension
	(*MessageClassExtensionUlDCchMessageType)(nil),               // 84: nr_rrc_definitions.v1.MessageClassExtensionUlDCchMessageType
	(*UlDCchMessageType)(nil),                                    // 85: nr_rrc_definitions.v1.UlDCchMessageType
	(*CounterCheck)(nil),                                         // 86: nr_rrc_definitions.v1.CounterCheck
	(*CounterCheckResponse)(nil),                                 // 87: nr_rrc_definitions.v1.CounterCheckResponse
	(*DedicatedSibrequestr16)(nil),                               // 88: nr_rrc_definitions.v1.DedicatedSibrequestr16
	(*DldedicatedMessageSegmentr16)(nil),                         // 89: nr_rrc_definitions.v1.DldedicatedMessageSegmentr16
	(*DlinformationTransfer)(nil),                                // 90: nr_rrc_definitions.v1.DlinformationTransfer
	(*DlinformationTransferMrdcr16)(nil),                         // 91: nr_rrc_definitions.v1.DlinformationTransferMrdcr16
	(*FailureInformation)(nil),                                   // 92: nr_rrc_definitions.v1.FailureInformation
	(*IabotherInformationr16)(nil),                               // 93: nr_rrc_definitions.v1.IabotherInformationr16
	(*LocationMeasurementIndication)(nil),                        // 94: nr_rrc_definitions.v1.LocationMeasurementIndication
	(*LoggedMeasurementConfigurationr16)(nil),                    // 95: nr_rrc_definitions.v1.LoggedMeasurementConfigurationr16
	(*MbsinterestIndicationr17)(nil),                             // 96: nr_rrc_definitions.v1.MbsinterestIndicationr17
	(*McgfailureInformationr16)(nil),                             // 97: nr_rrc_definitions.v1.McgfailureInformationr16
	(*CriticalExtensionsFuturecriticalExtensions)(nil),           // 98: nr_rrc_definitions.v1.CriticalExtensionsFuturecriticalExtensions
	(*CriticalExtensionsMeasurementReport)(nil),                  // 99: nr_rrc_definitions.v1.CriticalExtensionsMeasurementReport
	(*MeasurementReport)(nil),                                    // 100: nr_rrc_definitions.v1.MeasurementReport
	(*NonCriticalExtensionMeasurementReportIEs)(nil),             // 101: nr_rrc_definitions.v1.NonCriticalExtensionMeasurementReportIEs
	(*MeasurementReportIEs)(nil),                                 // 102: nr_rrc_definitions.v1.MeasurementReportIEs
	(*MeasurementReportAppLayerr17)(nil),                         // 103: nr_rrc_definitions.v1.MeasurementReportAppLayerr17
	(*Mib)(nil),                                                  // 104: nr_rrc_definitions.v1.Mib
	(*MobilityFromNrcommand)(nil),                                // 105: nr_rrc_definitions.v1.MobilityFromNrcommand
	(*Rrcreestablishment)(nil),                                   // 106: nr_rrc_definitions.v1.Rrcreestablishment
	(*RrcreestablishmentComplete)(nil),                           // 107: nr_rrc_definitions.v1.RrcreestablishmentComplete
	(*RrcreestablishmentRequest)(nil),                            // 108: nr_rrc_definitions.v1.RrcreestablishmentRequest
	(*CriticalExtensionsRrcreconfiguration)(nil),                 // 109: nr_rrc_definitions.v1.CriticalExtensionsRrcreconfiguration
	(*Rrcreconfiguration)(nil),                                   // 110: nr_rrc_definitions.v1.Rrcreconfiguration
	(*RrcreconfigurationIEs)(nil),                                // 111: nr_rrc_definitions.v1.RrcreconfigurationIEs
	(*Rrcreconfigurationv1530IEs)(nil),                           // 112: nr_rrc_definitions.v1.Rrcreconfigurationv1530IEs
	(*Rrcreconfigurationv1540IEs)(nil),                           // 113: nr_rrc_definitions.v1.Rrcreconfigurationv1540IEs
	(*MasterKeyUpdate)(nil),                                      // 114: nr_rrc_definitions.v1.MasterKeyUpdate
	(*RrcreconfigurationComplete)(nil),                           // 115: nr_rrc_definitions.v1.RrcreconfigurationComplete
	(*Rrcreject)(nil),                                            // 116: nr_rrc_definitions.v1.Rrcreject
	(*Rrcrelease)(nil),                                           // 117: nr_rrc_definitions.v1.Rrcrelease
	(*Rrcresume)(nil),                                            // 118: nr_rrc_definitions.v1.Rrcresume
	(*RrcresumeComplete)(nil),                                    // 119: nr_rrc_definitions.v1.RrcresumeComplete
	(*RrcresumeRequest)(nil),                                     // 120: nr_rrc_definitions.v1.RrcresumeRequest
	(*RrcresumeRequest1)(nil),                                    // 121: nr_rrc_definitions.v1.RrcresumeRequest1
	(*Rrcsetup)(nil),                                             // 122: nr_rrc_definitions.v1.Rrcsetup
	(*RrcsetupComplete)(nil),                                     // 123: nr_rrc_definitions.v1.RrcsetupComplete
	(*RrcsetupRequest)(nil),                                      // 124: nr_rrc_definitions.v1.RrcsetupRequest
	(*RrcsystemInfoRequest)(nil),                                 // 125: nr_rrc_definitions.v1.RrcsystemInfoRequest
	(*ScgfailureInformation)(nil),                                // 126: nr_rrc_definitions.v1.ScgfailureInformation
	(*ScgfailureInformationEutra)(nil),                           // 127: nr_rrc_definitions.v1.ScgfailureInformationEutra
	(*SecurityModeCommand)(nil),                                  // 128: nr_rrc_definitions.v1.SecurityModeCommand
	(*SecurityModeComplete)(nil),                                 // 129: nr_rrc_definitions.v1.SecurityModeComplete
	(*SecurityModeFailure)(nil),                                  // 130: nr_rrc_definitions.v1.SecurityModeFailure
	(*Sib1)(nil),                                                 // 131: nr_rrc_definitions.v1.Sib1
	(*SidelinkUeinformationNrr16)(nil),                           // 132: nr_rrc_definitions.v1.SidelinkUeinformationNrr16
	(*SystemInformation)(nil),                                    // 133: nr_rrc_definitions.v1.SystemInformation
	(*UeassistanceInformation)(nil),                              // 134: nr_rrc_definitions.v1.UeassistanceInformation
	(*UecapabilityEnquiry)(nil),                                  // 135: nr_rrc_definitions.v1.UecapabilityEnquiry
	(*UecapabilityInformation)(nil),                              // 136: nr_rrc_definitions.v1.UecapabilityInformation
	(*UeinformationRequestr16)(nil),                              // 137: nr_rrc_definitions.v1.UeinformationRequestr16
	(*UeinformationResponser16)(nil),                             // 138: nr_rrc_definitions.v1.UeinformationResponser16
	(*UepositioningAssistanceInfor17)(nil),                       // 139: nr_rrc_definitions.v1.UepositioningAssistanceInfor17
	(*UldedicatedMessageSegmentr16)(nil),                         // 140: nr_rrc_definitions.v1.UldedicatedMessageSegmentr16
	(*UlinformationTransfer)(nil),                                // 141: nr_rrc_definitions.v1.UlinformationTransfer
	(*UlinformationTransferIratr16)(nil),                         // 142: nr_rrc_definitions.v1.UlinformationTransferIratr16
	(*UlinformationTransferMrdc)(nil),                            // 143: nr_rrc_definitions.v1.UlinformationTransferMrdc
	(*ArfcnValueNr)(nil),                                         // 144: nr_rrc_definitions.v1.ArfcnValueNr
	(*Bwp)(nil),                                                  // 145: nr_rrc_definitions.v1.Bwp
	(*BwpDownlink)(nil),                                          // 146: nr_rrc_definitions.v1.BwpDownlink
	(*PdcchConfigCommonBwpDownlinkCommon)(nil),                   // 147: nr_rrc_definitions.v1.PdcchConfigCommonBwpDownlinkCommon
	(*PdschConfigCommonBwpDownlinkCommon)(nil),                   // 148: nr_rrc_definitions.v1.PdschConfigCommonBwpDownlinkCommon
	(*BwpDownlinkCommon)(nil),                                    // 149: nr_rrc_definitions.v1.BwpDownlinkCommon
	(*PdschConfigBwpDownlinkDedicated)(nil),                      // 150: nr_rrc_definitions.v1.PdschConfigBwpDownlinkDedicated
	(*BwpDownlinkDedicated)(nil),                                 // 151: nr_rrc_definitions.v1.BwpDownlinkDedicated
	(*BwpId)(nil),                                                // 152: nr_rrc_definitions.v1.BwpId
	(*CellGroupConfig)(nil),                                      // 153: nr_rrc_definitions.v1.CellGroupConfig
	(*SpCellConfig)(nil),                                         // 154: nr_rrc_definitions.v1.SpCellConfig
	(*ReconfigurationWithSync)(nil),                              // 155: nr_rrc_definitions.v1.ReconfigurationWithSync
	(*TwonrOfAntennaPorts)(nil),                                  // 156: nr_rrc_definitions.v1.TwonrOfAntennaPorts
	(*N1N2MoreThanTwo)(nil),                                      // 157: nr_rrc_definitions.v1.N1n2moreThanTwo
	(*MoreThanTwonrOfAntennaPorts)(nil),                          // 158: nr_rrc_definitions.v1.MoreThanTwonrOfAntennaPorts
	(*NrOfAntennaPortstypeISinglePanel)(nil),                     // 159: nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanel
	(*TypeISinglePanelsubType)(nil),                              // 160: nr_rrc_definitions.v1.TypeISinglePanelsubType
	(*Ngn1N2TypeIMultiPanel)(nil),                                // 161: nr_rrc_definitions.v1.Ngn1n2typeIMultiPanel
	(*TypeIMultiPanelsubType)(nil),                               // 162: nr_rrc_definitions.v1.TypeIMultiPanelsubType
	(*SubTypetype1)(nil),                                         // 163: nr_rrc_definitions.v1.SubTypetype1
	(*Type1CodebookType)(nil),                                    // 164: nr_rrc_definitions.v1.Type1codebookType
	(*N1N2CodebookSubsetRestrictiontypeIi)(nil),                  // 165: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi
	(*TypeIisubType)(nil),                                        // 166: nr_rrc_definitions.v1.TypeIisubType
	(*TypeIiPortSelectionsubType)(nil),                           // 167: nr_rrc_definitions.v1.TypeIiPortSelectionsubType
	(*SubTypetype2)(nil),                                         // 168: nr_rrc_definitions.v1.SubTypetype2
	(*Type2CodebookType)(nil),                                    // 169: nr_rrc_definitions.v1.Type2codebookType
	(*CodebookTypeCodebookConfig)(nil),                           // 170: nr_rrc_definitions.v1.CodebookTypeCodebookConfig
	(*CodebookConfig)(nil),                                       // 171: nr_rrc_definitions.v1.CodebookConfig
	(*N1N2CodebookSubsetRestrictionr16TypeIir16)(nil),            // 172: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16
	(*TypeIir16SubType)(nil),                                     // 173: nr_rrc_definitions.v1.TypeIir16subType
	(*TypeIiPortSelectionr16SubType)(nil),                        // 174: nr_rrc_definitions.v1.TypeIiPortSelectionr16subType
	(*SubTypetype2R16)(nil),                                      // 175: nr_rrc_definitions.v1.SubTypetype2r16
	(*Type2R16CodebookTyper16)(nil),                              // 176: nr_rrc_definitions.v1.Type2r16codebookTyper16
	(*CodebookTyper16CodebookConfigr16)(nil),                     // 177: nr_rrc_definitions.v1.CodebookTyper16CodebookConfigr16
	(*CodebookConfigr16)(nil),                                    // 178: nr_rrc_definitions.v1.CodebookConfigr16
	(*NrOfAntennaPortstypeISinglePanelGroup1R17)(nil),            // 179: nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanelGroup1r17
	(*TypeISinglePanelGroup1R17Type1R17)(nil),                    // 180: nr_rrc_definitions.v1.TypeISinglePanelGroup1r17type1r17
	(*NrOfAntennaPortstypeISinglePanelGroup2R17)(nil),            // 181: nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanelGroup2r17
	(*TypeISinglePanelGroup2R17Type1R17)(nil),                    // 182: nr_rrc_definitions.v1.TypeISinglePanelGroup2r17type1r17
	(*Type1R17CodebookTyper17)(nil),                              // 183: nr_rrc_definitions.v1.Type1r17codebookTyper17
	(*TypeIiPortSelectionr17Type2R17)(nil),                       // 184: nr_rrc_definitions.v1.TypeIiPortSelectionr17type2r17
	(*Type2R17CodebookTyper17)(nil),                              // 185: nr_rrc_definitions.v1.Type2r17codebookTyper17
	(*CodebookTyper17CodebookConfigr17)(nil),                     // 186: nr_rrc_definitions.v1.CodebookTyper17CodebookConfigr17
	(*CodebookConfigr17)(nil),                                    // 187: nr_rrc_definitions.v1.CodebookConfigr17
	(*Type1V1730CodebookTypev1730)(nil),                          // 188: nr_rrc_definitions.v1.Type1v1730codebookTypev1730
	(*CodebookTypev1730CodebookConfigv1730)(nil),                 // 189: nr_rrc_definitions.v1.CodebookTypev1730CodebookConfigv1730
	(*CodebookConfigv1730)(nil),                                  // 190: nr_rrc_definitions.v1.CodebookConfigv1730
	(*InterleavedcceREgMappingType)(nil),                         // 191: nr_rrc_definitions.v1.InterleavedcceREgMappingType
	(*CceREgMappingTypeControlResourceSet)(nil),                  // 192: nr_rrc_definitions.v1.CceREgMappingTypeControlResourceSet
	(*ControlResourceSet)(nil),                                   // 193: nr_rrc_definitions.v1.ControlResourceSet
	(*ControlResourceSetId)(nil),                                 // 194: nr_rrc_definitions.v1.ControlResourceSetId
	(*ControlResourceSetIdr16)(nil),                              // 195: nr_rrc_definitions.v1.ControlResourceSetIdr16
	(*ControlResourceSetIdv1610)(nil),                            // 196: nr_rrc_definitions.v1.ControlResourceSetIdv1610
	(*ControlResourceSetZero)(nil),                               // 197: nr_rrc_definitions.v1.ControlResourceSetZero
	(*CsiAperiodicTriggerStateList)(nil),                         // 198: nr_rrc_definitions.v1.CsiAperiodicTriggerStateList
	(*CsiAperiodicTriggerState)(nil),                             // 199: nr_rrc_definitions.v1.CsiAperiodicTriggerState
	(*NzpCSiRSresourcesForChannel)(nil),                          // 200: nr_rrc_definitions.v1.NzpCSiRSresourcesForChannel
	(*ResourcesForChannelCsiAssociatedReportConfigInfo)(nil),     // 201: nr_rrc_definitions.v1.ResourcesForChannelCsiAssociatedReportConfigInfo
	(*NzpCSiRS2R17ResourcesForChannel2R17)(nil),                  // 202: nr_rrc_definitions.v1.NzpCSiRS2r17resourcesForChannel2r17
	(*ResourcesForChannel2R17CsiAssociatedReportConfigInfo)(nil), // 203: nr_rrc_definitions.v1.ResourcesForChannel2r17CsiAssociatedReportConfigInfo
	(*CsiAssociatedReportConfigInfo)(nil),                        // 204: nr_rrc_definitions.v1.CsiAssociatedReportConfigInfo
	(*CsiFrequencyOccupation)(nil),                               // 205: nr_rrc_definitions.v1.CsiFrequencyOccupation
	(*Pattern0CsiIMResourceElementPattern)(nil),                  // 206: nr_rrc_definitions.v1.Pattern0csiIMResourceElementPattern
	(*Pattern1CsiIMResourceElementPattern)(nil),                  // 207: nr_rrc_definitions.v1.Pattern1csiIMResourceElementPattern
	(*CsiIMResourceElementPatternCsiIMResource)(nil),             // 208: nr_rrc_definitions.v1.CsiIMResourceElementPatternCsiIMResource
	(*CsiIMResource)(nil),                                        // 209: nr_rrc_definitions.v1.CsiIMResource
	(*CsiIMResourceId)(nil),                                      // 210: nr_rrc_definitions.v1.CsiIMResourceId
	(*CsiIMResourceSet)(nil),                                     // 211: nr_rrc_definitions.v1.CsiIMResourceSet
	(*CsiIMResourceSetId)(nil),                                   // 212: nr_rrc_definitions.v1.CsiIMResourceSetId
	(*AperiodicTriggerStateListCsiMeasConfig)(nil),               // 213: nr_rrc_definitions.v1.AperiodicTriggerStateListCsiMeasConfig
	(*SemiPersistentOnPuschTriggerStateListCsiMeasConfig)(nil),   // 214: nr_rrc_definitions.v1.SemiPersistentOnPuschTriggerStateListCsiMeasConfig
	(*CsiMeasConfig)(nil),                                        // 215: nr_rrc_definitions.v1.CsiMeasConfig
	(*PeriodicreportConfigType)(nil),                             // 216: nr_rrc_definitions.v1.PeriodicreportConfigType
	(*SemiPersistentOnPucchreportConfigType)(nil),                // 217: nr_rrc_definitions.v1.SemiPersistentOnPucchreportConfigType
	(*SemiPersistentOnPuschreportConfigType)(nil),                // 218: nr_rrc_definitions.v1.SemiPersistentOnPuschreportConfigType
	(*AperiodicreportConfigType)(nil),                            // 219: nr_rrc_definitions.v1.AperiodicreportConfigType
	(*ReportConfigTypeCsiReportConfig)(nil),                      // 220: nr_rrc_definitions.v1.ReportConfigTypeCsiReportConfig
	(*CriRIi1CQireportQuantity)(nil),                             // 221: nr_rrc_definitions.v1.CriRIi1CQireportQuantity
	(*ReportQuantityCsiReportConfig)(nil),                        // 222: nr_rrc_definitions.v1.ReportQuantityCsiReportConfig
	(*CsiReportingBandreportFreqConfiguration)(nil),              // 223: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration
	(*ReportFreqConfigurationCsiReportConfig)(nil),               // 224: nr_rrc_definitions.v1.ReportFreqConfigurationCsiReportConfig
	(*DisabledgroupBasedBeamReporting)(nil),                      // 225: nr_rrc_definitions.v1.DisabledgroupBasedBeamReporting
	(*GroupBasedBeamReportingCsiReportConfig)(nil),               // 226: nr_rrc_definitions.v1.GroupBasedBeamReportingCsiReportConfig
	(*SemiPersistentOnPuschv1530CsiReportConfig)(nil),            // 227: nr_rrc_definitions.v1.SemiPersistentOnPuschv1530CsiReportConfig
	(*SemiPersistentOnPuschv1610CsiReportConfig)(nil),            // 228: nr_rrc_definitions.v1.SemiPersistentOnPuschv1610CsiReportConfig
	(*Aperiodicv1610CsiReportConfig)(nil),                        // 229: nr_rrc_definitions.v1.Aperiodicv1610CsiReportConfig
	(*ReportQuantityr16CsiReportConfig)(nil),                     // 230: nr_rrc_definitions.v1.ReportQuantityr16CsiReportConfig
	(*GroupBasedBeamReportingv1710CsiReportConfig)(nil),          // 231: nr_rrc_definitions.v1.GroupBasedBeamReportingv1710CsiReportConfig
	(*ReportQuantityr17CsiReportConfig)(nil),                     // 232: nr_rrc_definitions.v1.ReportQuantityr17CsiReportConfig
	(*SemiPersistentOnPuschv1720CsiReportConfig)(nil),            // 233: nr_rrc_definitions.v1.SemiPersistentOnPuschv1720CsiReportConfig
	(*Aperiodicv1720CsiReportConfig)(nil),                        // 234: nr_rrc_definitions.v1.Aperiodicv1720CsiReportConfig
	(*CsiReportConfig)(nil),                                      // 235: nr_rrc_definitions.v1.CsiReportConfig
	(*CsiReportPeriodicityAndOffset)(nil),                        // 236: nr_rrc_definitions.v1.CsiReportPeriodicityAndOffset
	(*PucchCSiResource)(nil),                                     // 237: nr_rrc_definitions.v1.PucchCSiResource
	(*PortIndex8PortIndexFor8Ranks)(nil),                         // 238: nr_rrc_definitions.v1.PortIndex8PortIndexFor8Ranks
	(*PortIndex4PortIndexFor8Ranks)(nil),                         // 239: nr_rrc_definitions.v1.PortIndex4PortIndexFor8Ranks
	(*PortIndex2PortIndexFor8Ranks)(nil),                         // 240: nr_rrc_definitions.v1.PortIndex2PortIndexFor8Ranks
	(*PortIndexFor8Ranks)(nil),                                   // 241: nr_rrc_definitions.v1.PortIndexFor8Ranks
	(*PortIndex8)(nil),                                           // 242: nr_rrc_definitions.v1.PortIndex8
	(*PortIndex4)(nil),                                           // 243: nr_rrc_definitions.v1.PortIndex4
	(*PortIndex2)(nil),                                           // 244: nr_rrc_definitions.v1.PortIndex2
	(*CsiReportConfigId)(nil),                                    // 245: nr_rrc_definitions.v1.CsiReportConfigId
	(*NzpCSiRSSSbcsiRSResourceSetList)(nil),                      // 246: nr_rrc_definitions.v1.NzpCSiRSSSbcsiRSResourceSetList
	(*CsiIMResourceSetListcsiRSResourceSetList)(nil),             // 247: nr_rrc_definitions.v1.CsiIMResourceSetListcsiRSResourceSetList
	(*CsiRSResourceSetListCsiResourceConfig)(nil),                // 248: nr_rrc_definitions.v1.CsiRSResourceSetListCsiResourceConfig
	(*CsiResourceConfig)(nil),                                    // 249: nr_rrc_definitions.v1.CsiResourceConfig
	(*CsiResourceConfigId)(nil),                                  // 250: nr_rrc_definitions.v1.CsiResourceConfigId
	(*CsiResourcePeriodicityAndOffset)(nil),                      // 251: nr_rrc_definitions.v1.CsiResourcePeriodicityAndOffset
	(*CsiRSIndex)(nil),                                           // 252: nr_rrc_definitions.v1.CsiRSIndex
	(*FrequencyDomainAllocationCsiRSResourceMapping)(nil),        // 253: nr_rrc_definitions.v1.FrequencyDomainAllocationCsiRSResourceMapping
	(*DensityCsiRSResourceMapping)(nil),                          // 254: nr_rrc_definitions.v1.DensityCsiRSResourceMapping
	(*CsiRSResourceMapping)(nil),                                 // 255: nr_rrc_definitions.v1.CsiRSResourceMapping
	(*CsiSemiPersistentOnPuschTriggerStateList)(nil),             // 256: nr_rrc_definitions.v1.CsiSemiPersistentOnPuschTriggerStateList
	(*CsiSemiPersistentOnPuschTriggerState)(nil),                 // 257: nr_rrc_definitions.v1.CsiSemiPersistentOnPuschTriggerState
	(*CsiSSbResourceSet)(nil),                                    // 258: nr_rrc_definitions.v1.CsiSSbResourceSet
	(*ServingAdditionalPciindexr17)(nil),                         // 259: nr_rrc_definitions.v1.ServingAdditionalPciindexr17
	(*CsiSSbResourceSetId)(nil),                                  // 260: nr_rrc_definitions.v1.CsiSSbResourceSetId
	(*DedicatedNasMessage)(nil),                                  // 261: nr_rrc_definitions.v1.DedicatedNasMessage
	(*DownlinkConfigCommon)(nil),                                 // 262: nr_rrc_definitions.v1.DownlinkConfigCommon
	(*FreqBandIndicatorNr)(nil),                                  // 263: nr_rrc_definitions.v1.FreqBandIndicatorNr
	(*FrequencyInfoDl)(nil),                                      // 264: nr_rrc_definitions.v1.FrequencyInfoDl
	(*SMeasureConfigMeasConfig)(nil),                             // 265: nr_rrc_definitions.v1.SMeasureConfigMeasConfig
	(*MeasConfig)(nil),                                           // 266: nr_rrc_definitions.v1.MeasConfig
	(*MeasObjectToRemoveList)(nil),                               // 267: nr_rrc_definitions.v1.MeasObjectToRemoveList
	(*MeasIdToRemoveList)(nil),                                   // 268: nr_rrc_definitions.v1.MeasIdToRemoveList
	(*ReportConfigToRemoveList)(nil),                             // 269: nr_rrc_definitions.v1.ReportConfigToRemoveList
	(*MeasId)(nil),                                               // 270: nr_rrc_definitions.v1.MeasId
	(*MeasIdToAddModList)(nil),                                   // 271: nr_rrc_definitions.v1.MeasIdToAddModList
	(*MeasIdToAddMod)(nil),                                       // 272: nr_rrc_definitions.v1.MeasIdToAddMod
	(*MeasObjectId)(nil),                                         // 273: nr_rrc_definitions.v1.MeasObjectId
	(*MeasObjectNr)(nil),                                         // 274: nr_rrc_definitions.v1.MeasObjectNr
	(*ReferenceSignalConfig)(nil),                                // 275: nr_rrc_definitions.v1.ReferenceSignalConfig
	(*SsbToMeasureSsbConfigMobility)(nil),                        // 276: nr_rrc_definitions.v1.SsbToMeasureSsbConfigMobility
	(*SsbConfigMobility)(nil),                                    // 277: nr_rrc_definitions.v1.SsbConfigMobility
	(*MeasObjectToAddModList)(nil),                               // 278: nr_rrc_definitions.v1.MeasObjectToAddModList
	(*MeasObjectMeasObjectToAddMod)(nil),                         // 279: nr_rrc_definitions.v1.MeasObjectMeasObjectToAddMod
	(*MeasObjectToAddMod)(nil),                                   // 280: nr_rrc_definitions.v1.MeasObjectToAddMod
	(*MeasResults)(nil),                                          // 281: nr_rrc_definitions.v1.MeasResults
	(*MeasResultServMolist)(nil),                                 // 282: nr_rrc_definitions.v1.MeasResultServMolist
	(*MeasResultServMo)(nil),                                     // 283: nr_rrc_definitions.v1.MeasResultServMo
	(*CellResultsmeasResult)(nil),                                // 284: nr_rrc_definitions.v1.CellResultsmeasResult
	(*RsIndexResultsmeasResult)(nil),                             // 285: nr_rrc_definitions.v1.RsIndexResultsmeasResult
	(*MeasResultMeasResultNr)(nil),                               // 286: nr_rrc_definitions.v1.MeasResultMeasResultNr
	(*MeasResultNr)(nil),                                         // 287: nr_rrc_definitions.v1.MeasResultNr
	(*MeasQuantityResults)(nil),                                  // 288: nr_rrc_definitions.v1.MeasQuantityResults
	(*ResultsPerSsbIndexList)(nil),                               // 289: nr_rrc_definitions.v1.ResultsPerSsbIndexList
	(*ResultsPerSsbIndex)(nil),                                   // 290: nr_rrc_definitions.v1.ResultsPerSsbIndex
	(*ResultsPerCsiRSIndexList)(nil),                             // 291: nr_rrc_definitions.v1.ResultsPerCsiRSIndexList
	(*ResultsPerCsiRSIndex)(nil),                                 // 292: nr_rrc_definitions.v1.ResultsPerCsiRSIndex
	(*MultiFrequencyBandListNr)(nil),                             // 293: nr_rrc_definitions.v1.MultiFrequencyBandListNr
	(*NextHopChainingCount)(nil),                                 // 294: nr_rrc_definitions.v1.NextHopChainingCount
	(*NzpCSiRSResource)(nil),                                     // 295: nr_rrc_definitions.v1.NzpCSiRSResource
	(*NzpCSiRSResourceId)(nil),                                   // 296: nr_rrc_definitions.v1.NzpCSiRSResourceId
	(*NzpCSiRSResourceSet)(nil),                                  // 297: nr_rrc_definitions.v1.NzpCSiRSResourceSet
	(*CmrgroupingAndPairingr17)(nil),                             // 298: nr_rrc_definitions.v1.CmrgroupingAndPairingr17
	(*NzpCSiRSPairingr17)(nil),                                   // 299: nr_rrc_definitions.v1.NzpCSiRSPairingr17
	(*NzpCSiRSResourceSetId)(nil),                                // 300: nr_rrc_definitions.v1.NzpCSiRSResourceSetId
	(*PMax)(nil),                                                 // 301: nr_rrc_definitions.v1.PMax
	(*PathlossReferenceRsIdr17)(nil),                             // 302: nr_rrc_definitions.v1.PathlossReferenceRsIdr17
	(*PciARfcnNRr16)(nil),                                        // 303: nr_rrc_definitions.v1.PciARfcnNRr16
	(*PciList)(nil),                                              // 304: nr_rrc_definitions.v1.PciList
	(*PciRange)(nil),                                             // 305: nr_rrc_definitions.v1.PciRange
	(*PciRangeElement)(nil),                                      // 306: nr_rrc_definitions.v1.PciRangeElement
	(*PciRangeIndex)(nil),                                        // 307: nr_rrc_definitions.v1.PciRangeIndex
	(*PciRangeIndexList)(nil),                                    // 308: nr_rrc_definitions.v1.PciRangeIndexList
	(*PdcchConfigCommon)(nil),                                    // 309: nr_rrc_definitions.v1.PdcchConfigCommon
	(*PdcchConfigSib1)(nil),                                      // 310: nr_rrc_definitions.v1.PdcchConfigSib1
	(*ExplicitlistdlOrJointTciStateListr17)(nil),                 // 311: nr_rrc_definitions.v1.ExplicitlistdlOrJointTciStateListr17
	(*DlOrJointTciStateListr17PdschConfig)(nil),                  // 312: nr_rrc_definitions.v1.DlOrJointTciStateListr17PdschConfig
	(*PdschConfig)(nil),                                          // 313: nr_rrc_definitions.v1.PdschConfig
	(*PdschConfigCommon)(nil),                                    // 314: nr_rrc_definitions.v1.PdschConfigCommon
	(*PdschTimeDomainResourceAllocationList)(nil),                // 315: nr_rrc_definitions.v1.PdschTimeDomainResourceAllocationList
	(*PdschTimeDomainResourceAllocation)(nil),                    // 316: nr_rrc_definitions.v1.PdschTimeDomainResourceAllocation
	(*PdschTimeDomainResourceAllocationListr16)(nil),             // 317: nr_rrc_definitions.v1.PdschTimeDomainResourceAllocationListr16
	(*PdschTimeDomainResourceAllocationr16)(nil),                 // 318: nr_rrc_definitions.v1.PdschTimeDomainResourceAllocationr16
	(*DummyTDraList)(nil),                                        // 319: nr_rrc_definitions.v1.DummyTDraList
	(*MultiPdschTDraListr17)(nil),                                // 320: nr_rrc_definitions.v1.MultiPdschTDraListr17
	(*MultiPdschTDrar17)(nil),                                    // 321: nr_rrc_definitions.v1.MultiPdschTDrar17
	(*PhysCellId)(nil),                                           // 322: nr_rrc_definitions.v1.PhysCellId
	(*PucchResourceId)(nil),                                      // 323: nr_rrc_definitions.v1.PucchResourceId
	(*P0PUschAlphaSetId)(nil),                                    // 324: nr_rrc_definitions.v1.P0PUschAlphaSetId
	(*QuantityConfig)(nil),                                       // 325: nr_rrc_definitions.v1.QuantityConfig
	(*QuantityConfigNr)(nil),                                     // 326: nr_rrc_definitions.v1.QuantityConfigNr
	(*QuantityConfigRs)(nil),                                     // 327: nr_rrc_definitions.v1.QuantityConfigRs
	(*FilterConfig)(nil),                                         // 328: nr_rrc_definitions.v1.FilterConfig
	(*ReportConfigId)(nil),                                       // 329: nr_rrc_definitions.v1.ReportConfigId
	(*ReportTypeReportConfigNr)(nil),                             // 330: nr_rrc_definitions.v1.ReportTypeReportConfigNr
	(*ReportConfigNr)(nil),                                       // 331: nr_rrc_definitions.v1.ReportConfigNr
	(*PeriodicalReportConfig)(nil),                               // 332: nr_rrc_definitions.v1.PeriodicalReportConfig
	(*MeasReportQuantity)(nil),                                   // 333: nr_rrc_definitions.v1.MeasReportQuantity
	(*ReportConfigToAddModList)(nil),                             // 334: nr_rrc_definitions.v1.ReportConfigToAddModList
	(*ReportConfigReportConfigToAddMod)(nil),                     // 335: nr_rrc_definitions.v1.ReportConfigReportConfigToAddMod
	(*ReportConfigToAddMod)(nil),                                 // 336: nr_rrc_definitions.v1.ReportConfigToAddMod
	(*RsrpRange)(nil),                                            // 337: nr_rrc_definitions.v1.RsrpRange
	(*RsrqRange)(nil),                                            // 338: nr_rrc_definitions.v1.RsrqRange
	(*ScellActivationRsConfigr17)(nil),                           // 339: nr_rrc_definitions.v1.ScellActivationRsConfigr17
	(*ScellActivationRsConfigIdr17)(nil),                         // 340: nr_rrc_definitions.v1.ScellActivationRsConfigIdr17
	(*ScramblingId)(nil),                                         // 341: nr_rrc_definitions.v1.ScramblingId
	(*ScsSpecificCarrier)(nil),                                   // 342: nr_rrc_definitions.v1.ScsSpecificCarrier
	(*SearchSpaceZero)(nil),                                      // 343: nr_rrc_definitions.v1.SearchSpaceZero
	(*ServingCellAndBwpIdr17)(nil),                               // 344: nr_rrc_definitions.v1.ServingCellAndBwpIdr17
	(*ServCellIndex)(nil),                                        // 345: nr_rrc_definitions.v1.ServCellIndex
	(*CsiMeasConfigServingCellConfig)(nil),                       // 346: nr_rrc_definitions.v1.CsiMeasConfigServingCellConfig
	(*ServingCellConfig)(nil),                                    // 347: nr_rrc_definitions.v1.ServingCellConfig
	(*ServingCellConfigCommon)(nil),                              // 348: nr_rrc_definitions.v1.ServingCellConfigCommon
	(*SsbPositionsInBurstServingCellConfigCommonSib)(nil),        // 349: nr_rrc_definitions.v1.SsbPositionsInBurstServingCellConfigCommonSib
	(*ServingCellConfigCommonSib)(nil),                           // 350: nr_rrc_definitions.v1.ServingCellConfigCommonSib
	(*SinrRange)(nil),                                            // 351: nr_rrc_definitions.v1.SinrRange
	(*SsbIndex)(nil),                                             // 352: nr_rrc_definitions.v1.SsbIndex
	(*AdditionalPciindexr17)(nil),                                // 353: nr_rrc_definitions.v1.AdditionalPciindexr17
	(*SsbToMeasure)(nil),                                         // 354: nr_rrc_definitions.v1.SsbToMeasure
	(*TciState)(nil),                                             // 355: nr_rrc_definitions.v1.TciState
	(*ReferenceSignalQclInfo)(nil),                               // 356: nr_rrc_definitions.v1.ReferenceSignalQclInfo
	(*QclInfo)(nil),                                              // 357: nr_rrc_definitions.v1.QclInfo
	(*TciStateId)(nil),                                           // 358: nr_rrc_definitions.v1.TciStateId
	(*TddULDLConfigDedicated)(nil),                               // 359: nr_rrc_definitions.v1.TddULDLConfigDedicated
	(*TddULDLConfigDedicatedIAbMTr16)(nil),                       // 360: nr_rrc_definitions.v1.TddULDLConfigDedicatedIAbMTr16
	(*Explicitsymbols)(nil),                                      // 361: nr_rrc_definitions.v1.Explicitsymbols
	(*SymbolsTddULDLSlotConfig)(nil),                             // 362: nr_rrc_definitions.v1.SymbolsTddULDLSlotConfig
	(*TddULDLSlotConfig)(nil),                                    // 363: nr_rrc_definitions.v1.TddULDLSlotConfig
	(*Explicitr16SymbolsIAbMTr16)(nil),                           // 364: nr_rrc_definitions.v1.Explicitr16symbolsIAbMTr16
	(*ExplicitIAbMTr16SymbolsIAbMTr16)(nil),                      // 365: nr_rrc_definitions.v1.ExplicitIAbMTr16symbolsIAbMTr16
	(*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16)(nil),             // 366: nr_rrc_definitions.v1.SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16
	(*TddULDLSlotConfigIAbMTr16)(nil),                            // 367: nr_rrc_definitions.v1.TddULDLSlotConfigIAbMTr16
	(*TddULDLSlotIndex)(nil),                                     // 368: nr_rrc_definitions.v1.TddULDLSlotIndex
	(*UplinkpowerControlIdr17)(nil),                              // 369: nr_rrc_definitions.v1.UplinkpowerControlIdr17
	(*SetupdelayBudgetReportingConfig)(nil),                      // 370: nr_rrc_definitions.v1.SetupdelayBudgetReportingConfig
	(*DelayBudgetReportingConfigOtherConfig)(nil),                // 371: nr_rrc_definitions.v1.DelayBudgetReportingConfigOtherConfig
	(*OtherConfig)(nil),                                          // 372: nr_rrc_definitions.v1.OtherConfig
	(*PhysCellIdUtraFDdr16)(nil),                                 // 373: nr_rrc_definitions.v1.PhysCellIdUtraFDdr16
	(*RrcTransactionIdentifier)(nil),                             // 374: nr_rrc_definitions.v1.RrcTransactionIdentifier
	(*MaxAdditionalRachr17)(nil),                                 // 375: nr_rrc_definitions.v1.MaxAdditionalRachr17
	(*MaxAiDCiPayloadSizer16)(nil),                               // 376: nr_rrc_definitions.v1.MaxAiDCiPayloadSizer16
	(*MaxAiDCiPayloadSize1R16)(nil),                              // 377: nr_rrc_definitions.v1.MaxAiDCiPayloadSize1r16
	(*MaxBandComb)(nil),                                          // 378: nr_rrc_definitions.v1.MaxBandComb
	(*MaxBandsUtraFDdr16)(nil),                                   // 379: nr_rrc_definitions.v1.MaxBandsUtraFDdr16
	(*MaxBhRLcChannelIdr16)(nil),                                 // 380: nr_rrc_definitions.v1.MaxBhRLcChannelIdr16
	(*MaxBtIdReportr16)(nil),                                     // 381: nr_rrc_definitions.v1.MaxBtIdReportr16
	(*MaxBtNamer16)(nil),                                         // 382: nr_rrc_definitions.v1.MaxBtNamer16
	(*MaxCagCellr16)(nil),                                        // 383: nr_rrc_definitions.v1.MaxCagCellr16
	(*MaxTwoPucchGrpConfigListr16)(nil),                          // 384: nr_rrc_definitions.v1.MaxTwoPucchGrpConfigListr16
	(*MaxTwoPucchGrpConfigListr17)(nil),                          // 385: nr_rrc_definitions.v1.MaxTwoPucchGrpConfigListr17
	(*MaxCbrConfigr16)(nil),                                      // 386: nr_rrc_definitions.v1.MaxCbrConfigr16
	(*MaxCbrConfig1R16)(nil),                                     // 387: nr_rrc_definitions.v1.MaxCbrConfig1r16
	(*MaxCbrLevelr16)(nil),                                       // 388: nr_rrc_definitions.v1.MaxCbrLevelr16
	(*MaxCbrLevel1R16)(nil),                                      // 389: nr_rrc_definitions.v1.MaxCbrLevel1r16
	(*MaxCellExcluded)(nil),                                      // 390: nr_rrc_definitions.v1.MaxCellExcluded
	(*MaxCellGroupingsr16)(nil),                                  // 391: nr_rrc_definitions.v1.MaxCellGroupingsr16
	(*MaxCellHistoryr16)(nil),                                    // 392: nr_rrc_definitions.v1.MaxCellHistoryr16
	(*MaxPscellHistoryr17)(nil),                                  // 393: nr_rrc_definitions.v1.MaxPscellHistoryr17
	(*MaxCellInter)(nil),                                         // 394: nr_rrc_definitions.v1.MaxCellInter
	(*MaxCellIntra)(nil),                                         // 395: nr_rrc_definitions.v1.MaxCellIntra
	(*MaxCellMeasEutra)(nil),                                     // 396: nr_rrc_definitions.v1.MaxCellMeasEutra
	(*MaxCellMeasIdler16)(nil),                                   // 397: nr_rrc_definitions.v1.MaxCellMeasIdler16
	(*MaxCellMeasUtraFDdr16)(nil),                                // 398: nr_rrc_definitions.v1.MaxCellMeasUtraFDdr16
	(*MaxCellNtnr17)(nil),                                        // 399: nr_rrc_definitions.v1.MaxCellNtnr17
	(*MaxCarrierTypePairListr16)(nil),                            // 400: nr_rrc_definitions.v1.MaxCarrierTypePairListr16
	(*MaxCellAllowed)(nil),                                       // 401: nr_rrc_definitions.v1.MaxCellAllowed
	(*MaxEarfcn)(nil),                                            // 402: nr_rrc_definitions.v1.MaxEarfcn
	(*MaxEutraCellExcluded)(nil),                                 // 403: nr_rrc_definitions.v1.MaxEutraCellExcluded
	(*MaxEutraNSPmax)(nil),                                       // 404: nr_rrc_definitions.v1.MaxEutraNSPmax
	(*MaxFeatureCombPreamblesPerRachresourcer17)(nil),            // 405: nr_rrc_definitions.v1.MaxFeatureCombPreamblesPerRachresourcer17
	(*MaxLogMeasReportr16)(nil),                                  // 406: nr_rrc_definitions.v1.MaxLogMeasReportr16
	(*MaxMultiBands)(nil),                                        // 407: nr_rrc_definitions.v1.MaxMultiBands
	(*MaxNarfcn)(nil),                                            // 408: nr_rrc_definitions.v1.MaxNarfcn
	(*MaxNrNSPmax)(nil),                                          // 409: nr_rrc_definitions.v1.MaxNrNSPmax
	(*MaxFreqIdler16)(nil),                                       // 410: nr_rrc_definitions.v1.MaxFreqIdler16
	(*MaxNrofServingCells)(nil),                                  // 411: nr_rrc_definitions.v1.MaxNrofServingCells
	(*MaxNrofServingCells1)(nil),                                 // 412: nr_rrc_definitions.v1.MaxNrofServingCells1
	(*MaxNrofAggregatedCellsPerCellGroup)(nil),                   // 413: nr_rrc_definitions.v1.MaxNrofAggregatedCellsPerCellGroup
	(*MaxNrofAggregatedCellsPerCellGroupMinus4R16)(nil),          // 414: nr_rrc_definitions.v1.MaxNrofAggregatedCellsPerCellGroupMinus4r16
	(*MaxNrofDucellsr16)(nil),                                    // 415: nr_rrc_definitions.v1.MaxNrofDucellsr16
	(*MaxNrofAppLayerMeasr17)(nil),                               // 416: nr_rrc_definitions.v1.MaxNrofAppLayerMeasr17
	(*MaxNrofAppLayerMeas1R17)(nil),                              // 417: nr_rrc_definitions.v1.MaxNrofAppLayerMeas1r17
	(*MaxNrofAvailabilityCombinationsPerSetr16)(nil),             // 418: nr_rrc_definitions.v1.MaxNrofAvailabilityCombinationsPerSetr16
	(*MaxNrofAvailabilityCombinationsPerSet1R16)(nil),            // 419: nr_rrc_definitions.v1.MaxNrofAvailabilityCombinationsPerSet1r16
	(*MaxNrofIabresourceConfigr17)(nil),                          // 420: nr_rrc_definitions.v1.MaxNrofIabresourceConfigr17
	(*MaxNrofIabresourceConfig1R17)(nil),                         // 421: nr_rrc_definitions.v1.MaxNrofIabresourceConfig1r17
	(*MaxNrofScellActRsr17)(nil),                                 // 422: nr_rrc_definitions.v1.MaxNrofScellActRsr17
	(*MaxNrofScells)(nil),                                        // 423: nr_rrc_definitions.v1.MaxNrofScells
	(*MaxNrofCellMeas)(nil),                                      // 424: nr_rrc_definitions.v1.MaxNrofCellMeas
	(*MaxNrofCrsIMInterfCellr17)(nil),                            // 425: nr_rrc_definitions.v1.MaxNrofCrsIMInterfCellr17
	(*MaxNrofRelayMeasr17)(nil),                                  // 426: nr_rrc_definitions.v1.MaxNrofRelayMeasr17
	(*MaxNrofCgSLr16)(nil),                                       // 427: nr_rrc_definitions.v1.MaxNrofCgSLr16
	(*MaxNrofCgSL1R16)(nil),                                      // 428: nr_rrc_definitions.v1.MaxNrofCgSL1r16
	(*MaxSlGCBCDRxQoSr17)(nil),                                   // 429: nr_rrc_definitions.v1.MaxSlGCBCDRxQoSr17
	(*MaxNrofSlRxInfoSetr17)(nil),                                // 430: nr_rrc_definitions.v1.MaxNrofSlRxInfoSetr17
	(*MaxNrofSsBlocksToAverage)(nil),                             // 431: nr_rrc_definitions.v1.MaxNrofSsBlocksToAverage
	(*MaxNrofCondCellsr16)(nil),                                  // 432: nr_rrc_definitions.v1.MaxNrofCondCellsr16
	(*MaxNrofCondCells1R17)(nil),                                 // 433: nr_rrc_definitions.v1.MaxNrofCondCells1r17
	(*MaxNrofCsiRSResourcesToAverage)(nil),                       // 434: nr_rrc_definitions.v1.MaxNrofCsiRSResourcesToAverage
	(*MaxNrofDlAllocations)(nil),                                 // 435: nr_rrc_definitions.v1.MaxNrofDlAllocations
	(*MaxNrofDlAllocationsExtr17)(nil),                           // 436: nr_rrc_definitions.v1.MaxNrofDlAllocationsExtr17
	(*MaxNrofPduSessionsr17)(nil),                                // 437: nr_rrc_definitions.v1.MaxNrofPduSessionsr17
	(*MaxNrofSrConfigPerCellGroup)(nil),                          // 438: nr_rrc_definitions.v1.MaxNrofSrConfigPerCellGroup
	(*MaxLcgID)(nil),                                             // 439: nr_rrc_definitions.v1.MaxLcgID
	(*MaxLcgIDIAbr17)(nil),                                       // 440: nr_rrc_definitions.v1.MaxLcgIDIAbr17
	(*MaxLcID)(nil),                                              // 441: nr_rrc_definitions.v1.MaxLcID
	(*MaxLcIDIabr16)(nil),                                        // 442: nr_rrc_definitions.v1.MaxLcIDIabr16
	(*MaxLteCRsPatternsr16)(nil),                                 // 443: nr_rrc_definitions.v1.MaxLteCRsPatternsr16
	(*MaxNrofTags)(nil),                                          // 444: nr_rrc_definitions.v1.MaxNrofTags
	(*MaxNrofTags1)(nil),                                         // 445: nr_rrc_definitions.v1.MaxNrofTags1
	(*MaxNrofBwps)(nil),                                          // 446: nr_rrc_definitions.v1.MaxNrofBwps
	(*MaxNrofCombIdc)(nil),                                       // 447: nr_rrc_definitions.v1.MaxNrofCombIdc
	(*MaxNrofSymbols1)(nil),                                      // 448: nr_rrc_definitions.v1.MaxNrofSymbols1
	(*MaxNrofSlots)(nil),                                         // 449: nr_rrc_definitions.v1.MaxNrofSlots
	(*MaxNrofSlots1)(nil),                                        // 450: nr_rrc_definitions.v1.MaxNrofSlots1
	(*MaxNrofPhysicalResourceBlocks)(nil),                        // 451: nr_rrc_definitions.v1.MaxNrofPhysicalResourceBlocks
	(*MaxNrofPhysicalResourceBlocks1)(nil),                       // 452: nr_rrc_definitions.v1.MaxNrofPhysicalResourceBlocks1
	(*MaxNrofPhysicalResourceBlocksPlus1)(nil),                   // 453: nr_rrc_definitions.v1.MaxNrofPhysicalResourceBlocksPlus1
	(*MaxNrofControlResourceSets)(nil),                           // 454: nr_rrc_definitions.v1.MaxNrofControlResourceSets
	(*MaxNrofControlResourceSets1)(nil),                          // 455: nr_rrc_definitions.v1.MaxNrofControlResourceSets1
	(*MaxNrofControlResourceSets1R16)(nil),                       // 456: nr_rrc_definitions.v1.MaxNrofControlResourceSets1r16
	(*MaxNrofCoresetPoolsr16)(nil),                               // 457: nr_rrc_definitions.v1.MaxNrofCoresetPoolsr16
	(*MaxCoReSetDuration)(nil),                                   // 458: nr_rrc_definitions.v1.MaxCoReSetDuration
	(*MaxNrofSearchSpaces1)(nil),                                 // 459: nr_rrc_definitions.v1.MaxNrofSearchSpaces1
	(*MaxNrofSearchSpacesLinks1R17)(nil),                         // 460: nr_rrc_definitions.v1.MaxNrofSearchSpacesLinks1r17
	(*MaxNrofBfdresourcePerSetr17)(nil),                          // 461: nr_rrc_definitions.v1.MaxNrofBfdresourcePerSetr17
	(*MaxSfiDCiPayloadSize)(nil),                                 // 462: nr_rrc_definitions.v1.MaxSfiDCiPayloadSize
	(*MaxSfiDCiPayloadSize1)(nil),                                // 463: nr_rrc_definitions.v1.MaxSfiDCiPayloadSize1
	(*MaxIabIPAddressr16)(nil),                                   // 464: nr_rrc_definitions.v1.MaxIabIPAddressr16
	(*MaxIntDCiPayloadSize)(nil),                                 // 465: nr_rrc_definitions.v1.MaxIntDCiPayloadSize
	(*MaxIntDCiPayloadSize1)(nil),                                // 466: nr_rrc_definitions.v1.MaxIntDCiPayloadSize1
	(*MaxNrofRateMatchPatterns)(nil),                             // 467: nr_rrc_definitions.v1.MaxNrofRateMatchPatterns
	(*MaxNrofRateMatchPatterns1)(nil),                            // 468: nr_rrc_definitions.v1.MaxNrofRateMatchPatterns1
	(*MaxNrofRateMatchPatternsPerGroup)(nil),                     // 469: nr_rrc_definitions.v1.MaxNrofRateMatchPatternsPerGroup
	(*MaxNrofCsiReportConfigurations)(nil),                       // 470: nr_rrc_definitions.v1.MaxNrofCsiReportConfigurations
	(*MaxNrofCsiReportConfigurations1)(nil),                      // 471: nr_rrc_definitions.v1.MaxNrofCsiReportConfigurations1
	(*MaxNrofCsiResourceConfigurations)(nil),                     // 472: nr_rrc_definitions.v1.MaxNrofCsiResourceConfigurations
	(*MaxNrofCsiResourceConfigurations1)(nil),                    // 473: nr_rrc_definitions.v1.MaxNrofCsiResourceConfigurations1
	(*MaxNrofApCSiRSResourcesPerSet)(nil),                        // 474: nr_rrc_definitions.v1.MaxNrofApCSiRSResourcesPerSet
	(*MaxNrOfCsiAperiodicTriggers)(nil),                          // 475: nr_rrc_definitions.v1.MaxNrOfCsiAperiodicTriggers
	(*MaxNrofReportConfigPerAperiodicTrigger)(nil),               // 476: nr_rrc_definitions.v1.MaxNrofReportConfigPerAperiodicTrigger
	(*MaxNrofNzpCSiRSResources)(nil),                             // 477: nr_rrc_definitions.v1.MaxNrofNzpCSiRSResources
	(*MaxNrofNzpCSiRSResources1)(nil),                            // 478: nr_rrc_definitions.v1.MaxNrofNzpCSiRSResources1
	(*MaxNrofNzpCSiRSResourcesPerSet)(nil),                       // 479: nr_rrc_definitions.v1.MaxNrofNzpCSiRSResourcesPerSet
	(*MaxNrofNzpCSiRSResourceSets)(nil),                          // 480: nr_rrc_definitions.v1.MaxNrofNzpCSiRSResourceSets
	(*MaxNrofNzpCSiRSResourceSets1)(nil),                         // 481: nr_rrc_definitions.v1.MaxNrofNzpCSiRSResourceSets1
	(*MaxNrofNzpCSiRSResourceSetsPerConfig)(nil),                 // 482: nr_rrc_definitions.v1.MaxNrofNzpCSiRSResourceSetsPerConfig
	(*MaxNrofNzpCSiRSResourcesPerConfig)(nil),                    // 483: nr_rrc_definitions.v1.MaxNrofNzpCSiRSResourcesPerConfig
	(*MaxNrofZpCSiRSResources)(nil),                              // 484: nr_rrc_definitions.v1.MaxNrofZpCSiRSResources
	(*MaxNrofZpCSiRSResources1)(nil),                             // 485: nr_rrc_definitions.v1.MaxNrofZpCSiRSResources1
	(*MaxNrofZpCSiRSResourceSets1)(nil),                          // 486: nr_rrc_definitions.v1.MaxNrofZpCSiRSResourceSets1
	(*MaxNrofZpCSiRSResourcesPerSet)(nil),                        // 487: nr_rrc_definitions.v1.MaxNrofZpCSiRSResourcesPerSet
	(*MaxNrofZpCSiRSResourceSets)(nil),                           // 488: nr_rrc_definitions.v1.MaxNrofZpCSiRSResourceSets
	(*MaxNrofCsiIMResources)(nil),                                // 489: nr_rrc_definitions.v1.MaxNrofCsiIMResources
	(*MaxNrofCsiIMResources1)(nil),                               // 490: nr_rrc_definitions.v1.MaxNrofCsiIMResources1
	(*MaxNrofCsiIMResourcesPerSet)(nil),                          // 491: nr_rrc_definitions.v1.MaxNrofCsiIMResourcesPerSet
	(*MaxNrofCsiIMResourceSets)(nil),                             // 492: nr_rrc_definitions.v1.MaxNrofCsiIMResourceSets
	(*MaxNrofCsiIMResourceSets1)(nil),                            // 493: nr_rrc_definitions.v1.MaxNrofCsiIMResourceSets1
	(*MaxNrofCsiIMResourceSetsPerConfig)(nil),                    // 494: nr_rrc_definitions.v1.MaxNrofCsiIMResourceSetsPerConfig
	(*MaxNrofCsiSSbResourcePerSet)(nil),                          // 495: nr_rrc_definitions.v1.MaxNrofCsiSSbResourcePerSet
	(*MaxNrofCsiSSbResourceSets)(nil),                            // 496: nr_rrc_definitions.v1.MaxNrofCsiSSbResourceSets
	(*MaxNrofCsiSSbResourceSets1)(nil),                           // 497: nr_rrc_definitions.v1.MaxNrofCsiSSbResourceSets1
	(*MaxNrofCsiSSbResourceSetsPerConfig)(nil),                   // 498: nr_rrc_definitions.v1.MaxNrofCsiSSbResourceSetsPerConfig
	(*MaxNrofCsiSSbResourceSetsPerConfigExt)(nil),                // 499: nr_rrc_definitions.v1.MaxNrofCsiSSbResourceSetsPerConfigExt
	(*MaxNrofFailureDetectionResources)(nil),                     // 500: nr_rrc_definitions.v1.MaxNrofFailureDetectionResources
	(*MaxNrofFailureDetectionResources1)(nil),                    // 501: nr_rrc_definitions.v1.MaxNrofFailureDetectionResources1
	(*MaxNrofFailureDetectionResources1R17)(nil),                 // 502: nr_rrc_definitions.v1.MaxNrofFailureDetectionResources1r17
	(*MaxNrofFreqSlr16)(nil),                                     // 503: nr_rrc_definitions.v1.MaxNrofFreqSlr16
	(*MaxNrofSlBWpsr16)(nil),                                     // 504: nr_rrc_definitions.v1.MaxNrofSlBWpsr16
	(*MaxFreqSlEUtrar16)(nil),                                    // 505: nr_rrc_definitions.v1.MaxFreqSlEUtrar16
	(*MaxNrofSlMeasIdr16)(nil),                                   // 506: nr_rrc_definitions.v1.MaxNrofSlMeasIdr16
	(*MaxNrofSlObjectIdr16)(nil),                                 // 507: nr_rrc_definitions.v1.MaxNrofSlObjectIdr16
	(*MaxNrofSlReportConfigIdr16)(nil),                           // 508: nr_rrc_definitions.v1.MaxNrofSlReportConfigIdr16
	(*MaxNrofSlPoolToMeasureNrr16)(nil),                          // 509: nr_rrc_definitions.v1.MaxNrofSlPoolToMeasureNrr16
	(*MaxFreqSlNRr16)(nil),                                       // 510: nr_rrc_definitions.v1.MaxFreqSlNRr16
	(*MaxNrofSlQFisr16)(nil),                                     // 511: nr_rrc_definitions.v1.MaxNrofSlQFisr16
	(*MaxNrofSlQFisPerDestr16)(nil),                              // 512: nr_rrc_definitions.v1.MaxNrofSlQFisPerDestr16
	(*MaxNrofObjectId)(nil),                                      // 513: nr_rrc_definitions.v1.MaxNrofObjectId
	(*MaxNrofPageRec)(nil),                                       // 514: nr_rrc_definitions.v1.MaxNrofPageRec
	(*MaxNrofPciRanges)(nil),                                     // 515: nr_rrc_definitions.v1.MaxNrofPciRanges
	(*MaxPlmn)(nil),                                              // 516: nr_rrc_definitions.v1.MaxPlmn
	(*MaxTacr17)(nil),                                            // 517: nr_rrc_definitions.v1.MaxTacr17
	(*MaxNrofCsiRSResourcesRrm)(nil),                             // 518: nr_rrc_definitions.v1.MaxNrofCsiRSResourcesRrm
	(*MaxNrofCsiRSResourcesRrm1)(nil),                            // 519: nr_rrc_definitions.v1.MaxNrofCsiRSResourcesRrm1
	(*MaxNrofMeasId)(nil),                                        // 520: nr_rrc_definitions.v1.MaxNrofMeasId
	(*MaxNrofQuantityConfig)(nil),                                // 521: nr_rrc_definitions.v1.MaxNrofQuantityConfig
	(*MaxNrofCsiRSCellsRrm)(nil),                                 // 522: nr_rrc_definitions.v1.MaxNrofCsiRSCellsRrm
	(*MaxNrofSlDestr16)(nil),                                     // 523: nr_rrc_definitions.v1.MaxNrofSlDestr16
	(*MaxNrofSlDest1R16)(nil),                                    // 524: nr_rrc_definitions.v1.MaxNrofSlDest1r16
	(*MaxNrofSlrbr16)(nil),                                       // 525: nr_rrc_definitions.v1.MaxNrofSlrbr16
	(*MaxSlLCidr16)(nil),                                         // 526: nr_rrc_definitions.v1.MaxSlLCidr16
	(*MaxSlSyncConfigr16)(nil),                                   // 527: nr_rrc_definitions.v1.MaxSlSyncConfigr16
	(*MaxNrofRxpoolr16)(nil),                                     // 528: nr_rrc_definitions.v1.MaxNrofRxpoolr16
	(*MaxNrofTxpoolr16)(nil),                                     // 529: nr_rrc_definitions.v1.MaxNrofTxpoolr16
	(*MaxNrofPoolIdr16)(nil),                                     // 530: nr_rrc_definitions.v1.MaxNrofPoolIdr16
	(*MaxNrofSrsPathlossReferenceRsr16)(nil),                     // 531: nr_rrc_definitions.v1.MaxNrofSrsPathlossReferenceRsr16
	(*MaxNrofSrsPathlossReferenceRs1R16)(nil),                    // 532: nr_rrc_definitions.v1.MaxNrofSrsPathlossReferenceRs1r16
	(*MaxNrofSrsResourceSets)(nil),                               // 533: nr_rrc_definitions.v1.MaxNrofSrsResourceSets
	(*MaxNrofSrsResourceSets1)(nil),                              // 534: nr_rrc_definitions.v1.MaxNrofSrsResourceSets1
	(*MaxNrofSrsPosResourceSetsr16)(nil),                         // 535: nr_rrc_definitions.v1.MaxNrofSrsPosResourceSetsr16
	(*MaxNrofSrsPosResourceSets1R16)(nil),                        // 536: nr_rrc_definitions.v1.MaxNrofSrsPosResourceSets1r16
	(*MaxNrofSrsResources)(nil),                                  // 537: nr_rrc_definitions.v1.MaxNrofSrsResources
	(*MaxNrofSrsResources1)(nil),                                 // 538: nr_rrc_definitions.v1.MaxNrofSrsResources1
	(*MaxNrofSrsPosResourcesr16)(nil),                            // 539: nr_rrc_definitions.v1.MaxNrofSrsPosResourcesr16
	(*MaxNrofSrsPosResources1R16)(nil),                           // 540: nr_rrc_definitions.v1.MaxNrofSrsPosResources1r16
	(*MaxNrofSrsResourcesPerSet)(nil),                            // 541: nr_rrc_definitions.v1.MaxNrofSrsResourcesPerSet
	(*MaxNrofSrsTriggerStates1)(nil),                             // 542: nr_rrc_definitions.v1.MaxNrofSrsTriggerStates1
	(*MaxNrofSrsTriggerStates2)(nil),                             // 543: nr_rrc_definitions.v1.MaxNrofSrsTriggerStates2
	(*MaxRatCapabilityContainers)(nil),                           // 544: nr_rrc_definitions.v1.MaxRatCapabilityContainers
	(*MaxSimultaneousBands)(nil),                                 // 545: nr_rrc_definitions.v1.MaxSimultaneousBands
	(*MaxUltxSwitchingBandPairs)(nil),                            // 546: nr_rrc_definitions.v1.MaxUltxSwitchingBandPairs
	(*MaxNrofSlotFormatCombinationsPerSet)(nil),                  // 547: nr_rrc_definitions.v1.MaxNrofSlotFormatCombinationsPerSet
	(*MaxNrofSlotFormatCombinationsPerSet1)(nil),                 // 548: nr_rrc_definitions.v1.MaxNrofSlotFormatCombinationsPerSet1
	(*MaxNrofTrafficPatternr16)(nil),                             // 549: nr_rrc_definitions.v1.MaxNrofTrafficPatternr16
	(*MaxNrofPucchResources)(nil),                                // 550: nr_rrc_definitions.v1.MaxNrofPucchResources
	(*MaxNrofPucchResources1)(nil),                               // 551: nr_rrc_definitions.v1.MaxNrofPucchResources1
	(*MaxNrofPucchResourceSets)(nil),                             // 552: nr_rrc_definitions.v1.MaxNrofPucchResourceSets
	(*MaxNrofPucchResourceSets1)(nil),                            // 553: nr_rrc_definitions.v1.MaxNrofPucchResourceSets1
	(*MaxNrofPucchResourcesPerSet)(nil),                          // 554: nr_rrc_definitions.v1.MaxNrofPucchResourcesPerSet
	(*MaxNrofPucchP0PerSet)(nil),                                 // 555: nr_rrc_definitions.v1.MaxNrofPucchP0PerSet
	(*MaxNrofPucchPathlossReferenceRss)(nil),                     // 556: nr_rrc_definitions.v1.MaxNrofPucchPathlossReferenceRss
	(*MaxNrofPucchPathlossReferenceRss1)(nil),                    // 557: nr_rrc_definitions.v1.MaxNrofPucchPathlossReferenceRss1
	(*MaxNrofPucchPathlossReferenceRssr16)(nil),                  // 558: nr_rrc_definitions.v1.MaxNrofPucchPathlossReferenceRssr16
	(*MaxNrofPucchPathlossReferenceRss1R16)(nil),                 // 559: nr_rrc_definitions.v1.MaxNrofPucchPathlossReferenceRss1r16
	(*MaxNrofPucchPathlossReferenceRss1R17)(nil),                 // 560: nr_rrc_definitions.v1.MaxNrofPucchPathlossReferenceRss1r17
	(*MaxNrofPucchPathlossReferenceRssDiffr16)(nil),              // 561: nr_rrc_definitions.v1.MaxNrofPucchPathlossReferenceRssDiffr16
	(*MaxNrofPucchResourceGroupsr16)(nil),                        // 562: nr_rrc_definitions.v1.MaxNrofPucchResourceGroupsr16
	(*MaxNrofPucchResourcesPerGroupr16)(nil),                     // 563: nr_rrc_definitions.v1.MaxNrofPucchResourcesPerGroupr16
	(*MaxNrofPowerControlSetInfosr17)(nil),                       // 564: nr_rrc_definitions.v1.MaxNrofPowerControlSetInfosr17
	(*MaxNrofMultiplePuschsr16)(nil),                             // 565: nr_rrc_definitions.v1.MaxNrofMultiplePuschsr16
	(*MaxNrofP0PUschAlphaSets)(nil),                              // 566: nr_rrc_definitions.v1.MaxNrofP0PUschAlphaSets
	(*MaxNrofP0PUschAlphaSets1)(nil),                             // 567: nr_rrc_definitions.v1.MaxNrofP0PUschAlphaSets1
	(*MaxNrofPuschPathlossReferenceRss)(nil),                     // 568: nr_rrc_definitions.v1.MaxNrofPuschPathlossReferenceRss
	(*MaxNrofPuschPathlossReferenceRss1)(nil),                    // 569: nr_rrc_definitions.v1.MaxNrofPuschPathlossReferenceRss1
	(*MaxNrofPuschPathlossReferenceRssr16)(nil),                  // 570: nr_rrc_definitions.v1.MaxNrofPuschPathlossReferenceRssr16
	(*MaxNrofPuschPathlossReferenceRss1R16)(nil),                 // 571: nr_rrc_definitions.v1.MaxNrofPuschPathlossReferenceRss1r16
	(*MaxNrofPuschPathlossReferenceRssDiffr16)(nil),              // 572: nr_rrc_definitions.v1.MaxNrofPuschPathlossReferenceRssDiffr16
	(*MaxNrofPathlossReferenceRssr17)(nil),                       // 573: nr_rrc_definitions.v1.MaxNrofPathlossReferenceRssr17
	(*MaxNrofPathlossReferenceRss1R17)(nil),                      // 574: nr_rrc_definitions.v1.MaxNrofPathlossReferenceRss1r17
	(*MaxNrofNaicsEntries)(nil),                                  // 575: nr_rrc_definitions.v1.MaxNrofNaicsEntries
	(*MaxBands)(nil),                                             // 576: nr_rrc_definitions.v1.MaxBands
	(*MaxBandsMrdc)(nil),                                         // 577: nr_rrc_definitions.v1.MaxBandsMrdc
	(*MaxBandsEutra)(nil),                                        // 578: nr_rrc_definitions.v1.MaxBandsEutra
	(*MaxCellReport)(nil),                                        // 579: nr_rrc_definitions.v1.MaxCellReport
	(*MaxDrb)(nil),                                               // 580: nr_rrc_definitions.v1.MaxDrb
	(*MaxFreq)(nil),                                              // 581: nr_rrc_definitions.v1.MaxFreq
	(*MaxFreqLayers)(nil),                                        // 582: nr_rrc_definitions.v1.MaxFreqLayers
	(*MaxFreqPlus1)(nil),                                         // 583: nr_rrc_definitions.v1.MaxFreqPlus1
	(*MaxFreqIdcr16)(nil),                                        // 584: nr_rrc_definitions.v1.MaxFreqIdcr16
	(*MaxCombIdcr16)(nil),                                        // 585: nr_rrc_definitions.v1.MaxCombIdcr16
	(*MaxFreqIdcMRdc)(nil),                                       // 586: nr_rrc_definitions.v1.MaxFreqIdcMRdc
	(*MaxNrofCandidateBeams)(nil),                                // 587: nr_rrc_definitions.v1.MaxNrofCandidateBeams
	(*MaxNrofCandidateBeamsr16)(nil),                             // 588: nr_rrc_definitions.v1.MaxNrofCandidateBeamsr16
	(*MaxNrofCandidateBeamsExtr16)(nil),                          // 589: nr_rrc_definitions.v1.MaxNrofCandidateBeamsExtr16
	(*MaxNrofPcisPerSmtc)(nil),                                   // 590: nr_rrc_definitions.v1.MaxNrofPcisPerSmtc
	(*MaxNrofQfis)(nil),                                          // 591: nr_rrc_definitions.v1.MaxNrofQfis
	(*MaxNrofResourceAvailabilityPerCombinationr16)(nil),         // 592: nr_rrc_definitions.v1.MaxNrofResourceAvailabilityPerCombinationr16
	(*MaxNrOfSemiPersistentPuschTriggers)(nil),                   // 593: nr_rrc_definitions.v1.MaxNrOfSemiPersistentPuschTriggers
	(*MaxNrofSrResources)(nil),                                   // 594: nr_rrc_definitions.v1.MaxNrofSrResources
	(*MaxNrofSlotFormatsPerCombination)(nil),                     // 595: nr_rrc_definitions.v1.MaxNrofSlotFormatsPerCombination
	(*MaxNrofSpatialRelationInfos)(nil),                          // 596: nr_rrc_definitions.v1.MaxNrofSpatialRelationInfos
	(*MaxNrofSpatialRelationInfosplus1)(nil),                     // 597: nr_rrc_definitions.v1.MaxNrofSpatialRelationInfosplus1
	(*MaxNrofSpatialRelationInfosr16)(nil),                       // 598: nr_rrc_definitions.v1.MaxNrofSpatialRelationInfosr16
	(*MaxNrofSpatialRelationInfosDiffr16)(nil),                   // 599: nr_rrc_definitions.v1.MaxNrofSpatialRelationInfosDiffr16
	(*MaxNrofIndexesToReport)(nil),                               // 600: nr_rrc_definitions.v1.MaxNrofIndexesToReport
	(*MaxNrofIndexesToReport2)(nil),                              // 601: nr_rrc_definitions.v1.MaxNrofIndexesToReport2
	(*MaxNrofSsbsr16)(nil),                                       // 602: nr_rrc_definitions.v1.MaxNrofSsbsr16
	(*MaxNrofSsbs1)(nil),                                         // 603: nr_rrc_definitions.v1.MaxNrofSsbs1
	(*MaxNrofSNSsai)(nil),                                        // 604: nr_rrc_definitions.v1.MaxNrofSNSsai
	(*MaxNrofTciStatesPdcch)(nil),                                // 605: nr_rrc_definitions.v1.MaxNrofTciStatesPdcch
	(*MaxNrofTciStates)(nil),                                     // 606: nr_rrc_definitions.v1.MaxNrofTciStates
	(*MaxNrofTciStates1)(nil),                                    // 607: nr_rrc_definitions.v1.MaxNrofTciStates1
	(*MaxUlTCir17)(nil),                                          // 608: nr_rrc_definitions.v1.MaxUlTCir17
	(*MaxUlTCi1R17)(nil),                                         // 609: nr_rrc_definitions.v1.MaxUlTCi1r17
	(*MaxNrofAdditionalPcir17)(nil),                              // 610: nr_rrc_definitions.v1.MaxNrofAdditionalPcir17
	(*MaxMpeResourcesr17)(nil),                                   // 611: nr_rrc_definitions.v1.MaxMpeResourcesr17
	(*MaxNrofUlAllocations)(nil),                                 // 612: nr_rrc_definitions.v1.MaxNrofUlAllocations
	(*MaxQfi)(nil),                                               // 613: nr_rrc_definitions.v1.MaxQfi
	(*MaxRaCSirsResources)(nil),                                  // 614: nr_rrc_definitions.v1.MaxRaCSirsResources
	(*MaxRaOccasionsPerCsirs)(nil),                               // 615: nr_rrc_definitions.v1.MaxRaOccasionsPerCsirs
	(*MaxRaOccasions1)(nil),                                      // 616: nr_rrc_definitions.v1.MaxRaOccasions1
	(*MaxRaSSbResources)(nil),                                    // 617: nr_rrc_definitions.v1.MaxRaSSbResources
	(*MaxScss)(nil),                                              // 618: nr_rrc_definitions.v1.MaxScss
	(*MaxSecondaryCellGroups)(nil),                               // 619: nr_rrc_definitions.v1.MaxSecondaryCellGroups
	(*MaxNrofServingCellsEutra)(nil),                             // 620: nr_rrc_definitions.v1.MaxNrofServingCellsEutra
	(*MaxMbsfnAllocations)(nil),                                  // 621: nr_rrc_definitions.v1.MaxMbsfnAllocations
	(*MaxNrofMultiBands)(nil),                                    // 622: nr_rrc_definitions.v1.MaxNrofMultiBands
	(*MaxCellSftd)(nil),                                          // 623: nr_rrc_definitions.v1.MaxCellSftd
	(*MaxReportConfigId)(nil),                                    // 624: nr_rrc_definitions.v1.MaxReportConfigId
	(*MaxNrofCodebooks)(nil),                                     // 625: nr_rrc_definitions.v1.MaxNrofCodebooks
	(*MaxNrofCsiRSResourcesExtr16)(nil),                          // 626: nr_rrc_definitions.v1.MaxNrofCsiRSResourcesExtr16
	(*MaxNrofCsiRSResourcesExtr17)(nil),                          // 627: nr_rrc_definitions.v1.MaxNrofCsiRSResourcesExtr17
	(*MaxNrofCsiRSResources)(nil),                                // 628: nr_rrc_definitions.v1.MaxNrofCsiRSResources
	(*MaxNrofCsiRSResourcesAltr16)(nil),                          // 629: nr_rrc_definitions.v1.MaxNrofCsiRSResourcesAltr16
	(*MaxNrofCsiRSResourcesAlt1R16)(nil),                         // 630: nr_rrc_definitions.v1.MaxNrofCsiRSResourcesAlt1r16
	(*MaxNrofSriPUschMappings)(nil),                              // 631: nr_rrc_definitions.v1.MaxNrofSriPUschMappings
	(*MaxNrofSriPUschMappings1)(nil),                             // 632: nr_rrc_definitions.v1.MaxNrofSriPUschMappings1
	(*MaxSib)(nil),                                               // 633: nr_rrc_definitions.v1.MaxSib
	(*MaxSiMessage)(nil),                                         // 634: nr_rrc_definitions.v1.MaxSiMessage
	(*MaxSibMessagePlus1R17)(nil),                                // 635: nr_rrc_definitions.v1.MaxSibMessagePlus1r17
	(*MaxPoperPf)(nil),                                           // 636: nr_rrc_definitions.v1.MaxPoperPf
	(*MaxPeiperPfr17)(nil),                                       // 637: nr_rrc_definitions.v1.MaxPeiperPfr17
	(*MaxAccessCat1)(nil),                                        // 638: nr_rrc_definitions.v1.MaxAccessCat1
	(*MaxBarringInfoSet)(nil),                                    // 639: nr_rrc_definitions.v1.MaxBarringInfoSet
	(*MaxCellEutra)(nil),                                         // 640: nr_rrc_definitions.v1.MaxCellEutra
	(*MaxEutraCarrier)(nil),                                      // 641: nr_rrc_definitions.v1.MaxEutraCarrier
	(*MaxPlmnidentities)(nil),                                    // 642: nr_rrc_definitions.v1.MaxPlmnidentities
	(*MaxDownlinkFeatureSets)(nil),                               // 643: nr_rrc_definitions.v1.MaxDownlinkFeatureSets
	(*MaxUplinkFeatureSets)(nil),                                 // 644: nr_rrc_definitions.v1.MaxUplinkFeatureSets
	(*MaxEutraDLFeatureSets)(nil),                                // 645: nr_rrc_definitions.v1.MaxEutraDLFeatureSets
	(*MaxEutraULFeatureSets)(nil),                                // 646: nr_rrc_definitions.v1.MaxEutraULFeatureSets
	(*MaxFeatureSetsPerBand)(nil),                                // 647: nr_rrc_definitions.v1.MaxFeatureSetsPerBand
	(*MaxPerCcFeatureSets)(nil),                                  // 648: nr_rrc_definitions.v1.MaxPerCcFeatureSets
	(*MaxFeatureSetCombinations)(nil),                            // 649: nr_rrc_definitions.v1.MaxFeatureSetCombinations
	(*MaxInterRatRStdFreq)(nil),                                  // 650: nr_rrc_definitions.v1.MaxInterRatRStdFreq
	(*MaxGinr17)(nil),                                            // 651: nr_rrc_definitions.v1.MaxGinr17
	(*MaxHrnnLenr16)(nil),                                        // 652: nr_rrc_definitions.v1.MaxHrnnLenr16
	(*MaxNpnr16)(nil),                                            // 653: nr_rrc_definitions.v1.MaxNpnr16
	(*MaxNrOfMinSchedulingOffsetValuesr16)(nil),                  // 654: nr_rrc_definitions.v1.MaxNrOfMinSchedulingOffsetValuesr16
	(*MaxK0SchedulingOffsetr16)(nil),                             // 655: nr_rrc_definitions.v1.MaxK0SchedulingOffsetr16
	(*MaxK2SchedulingOffsetr16)(nil),                             // 656: nr_rrc_definitions.v1.MaxK2SchedulingOffsetr16
	(*MaxK0SchedulingOffsetr17)(nil),                             // 657: nr_rrc_definitions.v1.MaxK0SchedulingOffsetr17
	(*MaxK2SchedulingOffsetr17)(nil),                             // 658: nr_rrc_definitions.v1.MaxK2SchedulingOffsetr17
	(*MaxDci26Sizer16)(nil),                                      // 659: nr_rrc_definitions.v1.MaxDci26Sizer16
	(*MaxDci27Sizer17)(nil),                                      // 660: nr_rrc_definitions.v1.MaxDci27Sizer17
	(*MaxDci26Size1R16)(nil),                                     // 661: nr_rrc_definitions.v1.MaxDci26Size1r16
	(*MaxNrofUlAllocationsr16)(nil),                              // 662: nr_rrc_definitions.v1.MaxNrofUlAllocationsr16
	(*MaxNrofP0PUschSetr16)(nil),                                 // 663: nr_rrc_definitions.v1.MaxNrofP0PUschSetr16
	(*MaxOnDemandSibr16)(nil),                                    // 664: nr_rrc_definitions.v1.MaxOnDemandSibr16
	(*MaxOnDemandPosSibr16)(nil),                                 // 665: nr_rrc_definitions.v1.MaxOnDemandPosSibr16
	(*MaxCiDCiPayloadSizer16)(nil),                               // 666: nr_rrc_definitions.v1.MaxCiDCiPayloadSizer16
	(*MaxCiDCiPayloadSize1R16)(nil),                              // 667: nr_rrc_definitions.v1.MaxCiDCiPayloadSize1r16
	(*MaxUuRelayRlcChannelIdr17)(nil),                            // 668: nr_rrc_definitions.v1.MaxUuRelayRlcChannelIdr17
	(*MaxWlanIdReportr16)(nil),                                   // 669: nr_rrc_definitions.v1.MaxWlanIdReportr16
	(*MaxWlanNamer16)(nil),                                       // 670: nr_rrc_definitions.v1.MaxWlanNamer16
	(*MaxRareportr16)(nil),                                       // 671: nr_rrc_definitions.v1.MaxRareportr16
	(*MaxTxConfigr16)(nil),                                       // 672: nr_rrc_definitions.v1.MaxTxConfigr16
	(*MaxTxConfig1R16)(nil),                                      // 673: nr_rrc_definitions.v1.MaxTxConfig1r16
	(*MaxPsschTxConfigr16)(nil),                                  // 674: nr_rrc_definitions.v1.MaxPsschTxConfigr16
	(*MaxNrofCliRSsiResourcesr16)(nil),                           // 675: nr_rrc_definitions.v1.MaxNrofCliRSsiResourcesr16
	(*MaxNrofCliRSsiResources1R16)(nil),                          // 676: nr_rrc_definitions.v1.MaxNrofCliRSsiResources1r16
	(*MaxNrofCliSRsResourcesr16)(nil),                            // 677: nr_rrc_definitions.v1.MaxNrofCliSRsResourcesr16
	(*MaxCliReportr16)(nil),                                      // 678: nr_rrc_definitions.v1.MaxCliReportr16
	(*MaxNrofCcGroupr17)(nil),                                    // 679: nr_rrc_definitions.v1.MaxNrofCcGroupr17
	(*MaxNrofConfiguredGrantConfigr16)(nil),                      // 680: nr_rrc_definitions.v1.MaxNrofConfiguredGrantConfigr16
	(*MaxNrofConfiguredGrantConfig1R16)(nil),                     // 681: nr_rrc_definitions.v1.MaxNrofConfiguredGrantConfig1r16
	(*MaxNrofCgType2DeactivationState)(nil),                      // 682: nr_rrc_definitions.v1.MaxNrofCgType2DeactivationState
	(*MaxNrofConfiguredGrantConfigMac1R16)(nil),                  // 683: nr_rrc_definitions.v1.MaxNrofConfiguredGrantConfigMac1r16
	(*MaxNrofSpsConfigr16)(nil),                                  // 684: nr_rrc_definitions.v1.MaxNrofSpsConfigr16
	(*MaxNrofSpsConfig1R16)(nil),                                 // 685: nr_rrc_definitions.v1.MaxNrofSpsConfig1r16
	(*MaxNrofSpsDeactivationState)(nil),                          // 686: nr_rrc_definitions.v1.MaxNrofSpsDeactivationState
	(*MaxNrofPpwConfigr17)(nil),                                  // 687: nr_rrc_definitions.v1.MaxNrofPpwConfigr17
	(*MaxNrofPpwID1R17)(nil),                                     // 688: nr_rrc_definitions.v1.MaxNrofPpwID1r17
	(*MaxNrOfTxTegreportr17)(nil),                                // 689: nr_rrc_definitions.v1.MaxNrOfTxTegreportr17
	(*MaxNrOfTxTegID1R17)(nil),                                   // 690: nr_rrc_definitions.v1.MaxNrOfTxTegID1r17
	(*MaxNrofPagingSubgroupsr17)(nil),                            // 691: nr_rrc_definitions.v1.MaxNrofPagingSubgroupsr17
	(*MaxNrofPucchResourceGroups1R16)(nil),                       // 692: nr_rrc_definitions.v1.MaxNrofPucchResourceGroups1r16
	(*MaxNrofReqComDcLocationr17)(nil),                           // 693: nr_rrc_definitions.v1.MaxNrofReqComDcLocationr17
	(*MaxNrofServingCellsTcir16)(nil),                            // 694: nr_rrc_definitions.v1.MaxNrofServingCellsTcir16
	(*MaxNrofTxDcTwoCarrierr16)(nil),                             // 695: nr_rrc_definitions.v1.MaxNrofTxDcTwoCarrierr16
	(*MaxNrofRbSetGroupsr17)(nil),                                // 696: nr_rrc_definitions.v1.MaxNrofRbSetGroupsr17
	(*MaxNrofRbSetsr17)(nil),                                     // 697: nr_rrc_definitions.v1.MaxNrofRbSetsr17
	(*MaxNrofEnhType3HarqACkr17)(nil),                            // 698: nr_rrc_definitions.v1.MaxNrofEnhType3HarqACkr17
	(*MaxNrofEnhType3HarqACk1R17)(nil),                           // 699: nr_rrc_definitions.v1.MaxNrofEnhType3HarqACk1r17
	(*MaxNrofPrsResourcesPerSetr17)(nil),                         // 700: nr_rrc_definitions.v1.MaxNrofPrsResourcesPerSetr17
	(*MaxNrofPrsResourcesPerSet1R17)(nil),                        // 701: nr_rrc_definitions.v1.MaxNrofPrsResourcesPerSet1r17
	(*MaxNrofPrsResourceOffsetValue1R17)(nil),                    // 702: nr_rrc_definitions.v1.MaxNrofPrsResourceOffsetValue1r17
	(*MaxNrofGapIdr17)(nil),                                      // 703: nr_rrc_definitions.v1.MaxNrofGapIdr17
	(*MaxNrofPreConfigPosGapIdr17)(nil),                          // 704: nr_rrc_definitions.v1.MaxNrofPreConfigPosGapIdr17
	(*MaxNrOfGapPrir17)(nil),                                     // 705: nr_rrc_definitions.v1.MaxNrOfGapPrir17
	(*MaxCefreportr17)(nil),                                      // 706: nr_rrc_definitions.v1.MaxCefreportr17
	(*MaxNrofMultiplePdschsr17)(nil),                             // 707: nr_rrc_definitions.v1.MaxNrofMultiplePdschsr17
	(*MaxSliceInfor17)(nil),                                      // 708: nr_rrc_definitions.v1.MaxSliceInfor17
	(*MaxCellSlicer17)(nil),                                      // 709: nr_rrc_definitions.v1.MaxCellSlicer17
	(*MaxNrofTrsResourceSetsr17)(nil),                            // 710: nr_rrc_definitions.v1.MaxNrofTrsResourceSetsr17
	(*MaxNrofSearchSpaceGroups1R17)(nil),                         // 711: nr_rrc_definitions.v1.MaxNrofSearchSpaceGroups1r17
	(*MaxNrofRemoteUer17)(nil),                                   // 712: nr_rrc_definitions.v1.MaxNrofRemoteUer17
	(*MaxDci42Sizer17)(nil),                                      // 713: nr_rrc_definitions.v1.MaxDci42Sizer17
	(*MaxFreqMbsr17)(nil),                                        // 714: nr_rrc_definitions.v1.MaxFreqMbsr17
	(*MaxNrofDrxConfigPtmr17)(nil),                               // 715: nr_rrc_definitions.v1.MaxNrofDrxConfigPtmr17
	(*MaxNrofDrxConfigPtm1R17)(nil),                              // 716: nr_rrc_definitions.v1.MaxNrofDrxConfigPtm1r17
	(*MaxNrofMbsServiceListPerUer17)(nil),                        // 717: nr_rrc_definitions.v1.MaxNrofMbsServiceListPerUer17
	(*MaxNrofMbsSessionr17)(nil),                                 // 718: nr_rrc_definitions.v1.MaxNrofMbsSessionr17
	(*MaxNrofMtchSSbMappingWindowr17)(nil),                       // 719: nr_rrc_definitions.v1.MaxNrofMtchSSbMappingWindowr17
	(*MaxNrofMtchSSbMappingWindow1R17)(nil),                      // 720: nr_rrc_definitions.v1.MaxNrofMtchSSbMappingWindow1r17
	(*MaxNrofMrbBroadcastr17)(nil),                               // 721: nr_rrc_definitions.v1.MaxNrofMrbBroadcastr17
	(*MaxNrofPageGroupr17)(nil),                                  // 722: nr_rrc_definitions.v1.MaxNrofPageGroupr17
	(*MaxNrofPdschConfigPtmr17)(nil),                             // 723: nr_rrc_definitions.v1.MaxNrofPdschConfigPtmr17
	(*MaxNrofPdschConfigPtm1R17)(nil),                            // 724: nr_rrc_definitions.v1.MaxNrofPdschConfigPtm1r17
	(*MaxGRNtir17)(nil),                                          // 725: nr_rrc_definitions.v1.MaxGRNtir17
	(*MaxGRNti1R17)(nil),                                         // 726: nr_rrc_definitions.v1.MaxGRNti1r17
	(*MaxGCSRNtir17)(nil),                                        // 727: nr_rrc_definitions.v1.MaxGCSRNtir17
	(*MaxGCSRNti1R17)(nil),                                       // 728: nr_rrc_definitions.v1.MaxGCSRNti1r17
	(*MaxMrbr17)(nil),                                            // 729: nr_rrc_definitions.v1.MaxMrbr17
	(*MaxFsaiMBsr17)(nil),                                        // 730: nr_rrc_definitions.v1.MaxFsaiMBsr17
	(*MaxNeighCellMbsr17)(nil),                                   // 731: nr_rrc_definitions.v1.MaxNeighCellMbsr17
	(*MaxNrofPdcchBlindDetectionMixed1R16)(nil),                  // 732: nr_rrc_definitions.v1.MaxNrofPdcchBlindDetectionMixed1r16
	(*MaxNrofPdcchBlindDetectionr17)(nil),                        // 733: nr_rrc_definitions.v1.MaxNrofPdcchBlindDetectionr17
	(*SMeasureConfigVarMeasConfig)(nil),                          // 734: nr_rrc_definitions.v1.SMeasureConfigVarMeasConfig
	(*VarMeasConfig)(nil),                                        // 735: nr_rrc_definitions.v1.VarMeasConfig
	(*asn1.BitString)(nil),                                       // 736: asn1.v1.BitString
}
var file_nr_rrc_definitions_proto_depIdxs = []int32{
	59,  // 0: nr_rrc_definitions.v1.BcchBChMessage.message:type_name -> nr_rrc_definitions.v1.BcchBChMessageType
	104, // 1: nr_rrc_definitions.v1.BcchBChMessageType.mib:type_name -> nr_rrc_definitions.v1.Mib
	58,  // 2: nr_rrc_definitions.v1.BcchBChMessageType.message_class_extension:type_name -> nr_rrc_definitions.v1.MessageClassExtensionBcchBChMessageType
	63,  // 3: nr_rrc_definitions.v1.BcchDLSChMessage.message:type_name -> nr_rrc_definitions.v1.BcchDLSChMessageType
	133, // 4: nr_rrc_definitions.v1.C1BcchDLSChMessageType.system_information:type_name -> nr_rrc_definitions.v1.SystemInformation
	131, // 5: nr_rrc_definitions.v1.C1BcchDLSChMessageType.system_information_block_type1:type_name -> nr_rrc_definitions.v1.Sib1
	61,  // 6: nr_rrc_definitions.v1.BcchDLSChMessageType.c1:type_name -> nr_rrc_definitions.v1.C1BcchDLSChMessageType
	62,  // 7: nr_rrc_definitions.v1.BcchDLSChMessageType.message_class_extension:type_name -> nr_rrc_definitions.v1.MessageClassExtensionBcchDLSChMessageType
	67,  // 8: nr_rrc_definitions.v1.DlCCchMessage.message:type_name -> nr_rrc_definitions.v1.DlCCchMessageType
	116, // 9: nr_rrc_definitions.v1.C1DlCCchMessageType.rrc_reject:type_name -> nr_rrc_definitions.v1.Rrcreject
	122, // 10: nr_rrc_definitions.v1.C1DlCCchMessageType.rrc_setup:type_name -> nr_rrc_definitions.v1.Rrcsetup
	65,  // 11: nr_rrc_definitions.v1.DlCCchMessageType.c1:type_name -> nr_rrc_definitions.v1.C1DlCCchMessageType
	66,  // 12: nr_rrc_definitions.v1.DlCCchMessageType.message_class_extension:type_name -> nr_rrc_definitions.v1.MessageClassExtensionDlCCchMessageType
	71,  // 13: nr_rrc_definitions.v1.DlDCchMessage.message:type_name -> nr_rrc_definitions.v1.DlDCchMessageType
	110, // 14: nr_rrc_definitions.v1.C1DlDCchMessageType.rrc_reconfiguration:type_name -> nr_rrc_definitions.v1.Rrcreconfiguration
	118, // 15: nr_rrc_definitions.v1.C1DlDCchMessageType.rrc_resume:type_name -> nr_rrc_definitions.v1.Rrcresume
	117, // 16: nr_rrc_definitions.v1.C1DlDCchMessageType.rrc_release:type_name -> nr_rrc_definitions.v1.Rrcrelease
	106, // 17: nr_rrc_definitions.v1.C1DlDCchMessageType.rrc_reestablishment:type_name -> nr_rrc_definitions.v1.Rrcreestablishment
	128, // 18: nr_rrc_definitions.v1.C1DlDCchMessageType.security_mode_command:type_name -> nr_rrc_definitions.v1.SecurityModeCommand
	90,  // 19: nr_rrc_definitions.v1.C1DlDCchMessageType.dl_information_transfer:type_name -> nr_rrc_definitions.v1.DlinformationTransfer
	135, // 20: nr_rrc_definitions.v1.C1DlDCchMessageType.ue_capability_enquiry:type_name -> nr_rrc_definitions.v1.UecapabilityEnquiry
	86,  // 21: nr_rrc_definitions.v1.C1DlDCchMessageType.counter_check:type_name -> nr_rrc_definitions.v1.CounterCheck
	105, // 22: nr_rrc_definitions.v1.C1DlDCchMessageType.mobility_from_nrcommand:type_name -> nr_rrc_definitions.v1.MobilityFromNrcommand
	89,  // 23: nr_rrc_definitions.v1.C1DlDCchMessageType.dl_dedicated_message_segment_r16:type_name -> nr_rrc_definitions.v1.DldedicatedMessageSegmentr16
	137, // 24: nr_rrc_definitions.v1.C1DlDCchMessageType.ue_information_request_r16:type_name -> nr_rrc_definitions.v1.UeinformationRequestr16
	91,  // 25: nr_rrc_definitions.v1.C1DlDCchMessageType.dl_information_transfer_mrdc_r16:type_name -> nr_rrc_definitions.v1.DlinformationTransferMrdcr16
	95,  // 26: nr_rrc_definitions.v1.C1DlDCchMessageType.logged_measurement_configuration_r16:type_name -> nr_rrc_definitions.v1.LoggedMeasurementConfigurationr16
	69,  // 27: nr_rrc_definitions.v1.DlDCchMessageType.c1:type_name -> nr_rrc_definitions.v1.C1DlDCchMessageType
	70,  // 28: nr_rrc_definitions.v1.DlDCchMessageType.message_class_extension:type_name -> nr_rrc_definitions.v1.MessageClassExtensionDlDCchMessageType
	75,  // 29: nr_rrc_definitions.v1.UlCCchMessage.message:type_name -> nr_rrc_definitions.v1.UlCCchMessageType
	124, // 30: nr_rrc_definitions.v1.C1UlCCchMessageType.rrc_setup_request:type_name -> nr_rrc_definitions.v1.RrcsetupRequest
	120, // 31: nr_rrc_definitions.v1.C1UlCCchMessageType.rrc_resume_request:type_name -> nr_rrc_definitions.v1.RrcresumeRequest
	108, // 32: nr_rrc_definitions.v1.C1UlCCchMessageType.rrc_reestablishment_request:type_name -> nr_rrc_definitions.v1.RrcreestablishmentRequest
	125, // 33: nr_rrc_definitions.v1.C1UlCCchMessageType.rrc_system_info_request:type_name -> nr_rrc_definitions.v1.RrcsystemInfoRequest
	73,  // 34: nr_rrc_definitions.v1.UlCCchMessageType.c1:type_name -> nr_rrc_definitions.v1.C1UlCCchMessageType
	74,  // 35: nr_rrc_definitions.v1.UlCCchMessageType.message_class_extension:type_name -> nr_rrc_definitions.v1.MessageClassExtensionUlCCchMessageType
	79,  // 36: nr_rrc_definitions.v1.UlCCch1Message.message:type_name -> nr_rrc_definitions.v1.UlCCch1MessageType
	121, // 37: nr_rrc_definitions.v1.C1UlCCch1MessageType.rrc_resume_request1:type_name -> nr_rrc_definitions.v1.RrcresumeRequest1
	77,  // 38: nr_rrc_definitions.v1.UlCCch1MessageType.c1:type_name -> nr_rrc_definitions.v1.C1UlCCch1MessageType
	78,  // 39: nr_rrc_definitions.v1.UlCCch1MessageType.message_class_extension:type_name -> nr_rrc_definitions.v1.MessageClassExtensionUlCCch1MessageType
	85,  // 40: nr_rrc_definitions.v1.UlDCchMessage.message:type_name -> nr_rrc_definitions.v1.UlDCchMessageType
	100, // 41: nr_rrc_definitions.v1.C1UlDCchMessageType.measurement_report:type_name -> nr_rrc_definitions.v1.MeasurementReport
	115, // 42: nr_rrc_definitions.v1.C1UlDCchMessageType.rrc_reconfiguration_complete:type_name -> nr_rrc_definitions.v1.RrcreconfigurationComplete
	123, // 43: nr_rrc_definitions.v1.C1UlDCchMessageType.rrc_setup_complete:type_name -> nr_rrc_definitions.v1.RrcsetupComplete
	107, // 44: nr_rrc_definitions.v1.C1UlDCchMessageType.rrc_reestablishment_complete:type_name -> nr_rrc_definitions.v1.RrcreestablishmentComplete
	119, // 45: nr_rrc_definitions.v1.C1UlDCchMessageType.rrc_resume_complete:type_name -> nr_rrc_definitions.v1.RrcresumeComplete
	129, // 46: nr_rrc_definitions.v1.C1UlDCchMessageType.security_mode_complete:type_name -> nr_rrc_definitions.v1.SecurityModeComplete
	130, // 47: nr_rrc_definitions.v1.C1UlDCchMessageType.security_mode_failure:type_name -> nr_rrc_definitions.v1.SecurityModeFailure
	141, // 48: nr_rrc_definitions.v1.C1UlDCchMessageType.ul_information_transfer:type_name -> nr_rrc_definitions.v1.UlinformationTransfer
	94,  // 49: nr_rrc_definitions.v1.C1UlDCchMessageType.location_measurement_indication:type_name -> nr_rrc_definitions.v1.LocationMeasurementIndication
	136, // 50: nr_rrc_definitions.v1.C1UlDCchMessageType.ue_capability_information:type_name -> nr_rrc_definitions.v1.UecapabilityInformation
	87,  // 51: nr_rrc_definitions.v1.C1UlDCchMessageType.counter_check_response:type_name -> nr_rrc_definitions.v1.CounterCheckResponse
	134, // 52: nr_rrc_definitions.v1.C1UlDCchMessageType.ue_assistance_information:type_name -> nr_rrc_definitions.v1.UeassistanceInformation
	92,  // 53: nr_rrc_definitions.v1.C1UlDCchMessageType.failure_information:type_name -> nr_rrc_definitions.v1.FailureInformation
	143, // 54: nr_rrc_definitions.v1.C1UlDCchMessageType.ul_information_transfer_mrdc:type_name -> nr_rrc_definitions.v1.UlinformationTransferMrdc
	126, // 55: nr_rrc_definitions.v1.C1UlDCchMessageType.scg_failure_information:type_name -> nr_rrc_definitions.v1.ScgfailureInformation
	127, // 56: nr_rrc_definitions.v1.C1UlDCchMessageType.scg_failure_information_eutra:type_name -> nr_rrc_definitions.v1.ScgfailureInformationEutra
	140, // 57: nr_rrc_definitions.v1.C2messageClassExtension.ul_dedicated_message_segment_r16:type_name -> nr_rrc_definitions.v1.UldedicatedMessageSegmentr16
	88,  // 58: nr_rrc_definitions.v1.C2messageClassExtension.dedicated_sibrequest_r16:type_name -> nr_rrc_definitions.v1.DedicatedSibrequestr16
	97,  // 59: nr_rrc_definitions.v1.C2messageClassExtension.mcg_failure_information_r16:type_name -> nr_rrc_definitions.v1.McgfailureInformationr16
	138, // 60: nr_rrc_definitions.v1.C2messageClassExtension.ue_information_response_r16:type_name -> nr_rrc_definitions.v1.UeinformationResponser16
	132, // 61: nr_rrc_definitions.v1.C2messageClassExtension.sidelink_ueinformation_nr_r16:type_name -> nr_rrc_definitions.v1.SidelinkUeinformationNrr16
	142, // 62: nr_rrc_definitions.v1.C2messageClassExtension.ul_information_transfer_irat_r16:type_name -> nr_rrc_definitions.v1.UlinformationTransferIratr16
	93,  // 63: nr_rrc_definitions.v1.C2messageClassExtension.iab_other_information_r16:type_name -> nr_rrc_definitions.v1.IabotherInformationr16
	96,  // 64: nr_rrc_definitions.v1.C2messageClassExtension.mbs_interest_indication_r17:type_name -> nr_rrc_definitions.v1.MbsinterestIndicationr17
	139, // 65: nr_rrc_definitions.v1.C2messageClassExtension.ue_positioning_assistance_info_r17:type_name -> nr_rrc_definitions.v1.UepositioningAssistanceInfor17
	103, // 66: nr_rrc_definitions.v1.C2messageClassExtension.measurement_report_app_layer_r17:type_name -> nr_rrc_definitions.v1.MeasurementReportAppLayerr17
	82,  // 67: nr_rrc_definitions.v1.MessageClassExtensionUlDCchMessageType.c2:type_name -> nr_rrc_definitions.v1.C2messageClassExtension
	83,  // 68: nr_rrc_definitions.v1.MessageClassExtensionUlDCchMessageType.message_class_extension_future_r16:type_name -> nr_rrc_definitions.v1.MessageClassExtensionFuturer16messageClassExtension
	81,  // 69: nr_rrc_definitions.v1.UlDCchMessageType.c1:type_name -> nr_rrc_definitions.v1.C1UlDCchMessageType
	84,  // 70: nr_rrc_definitions.v1.UlDCchMessageType.message_class_extension:type_name -> nr_rrc_definitions.v1.MessageClassExtensionUlDCchMessageType
	102, // 71: nr_rrc_definitions.v1.CriticalExtensionsMeasurementReport.measurement_report:type_name -> nr_rrc_definitions.v1.MeasurementReportIEs
	98,  // 72: nr_rrc_definitions.v1.CriticalExtensionsMeasurementReport.critical_extensions_future:type_name -> nr_rrc_definitions.v1.CriticalExtensionsFuturecriticalExtensions
	99,  // 73: nr_rrc_definitions.v1.MeasurementReport.critical_extensions:type_name -> nr_rrc_definitions.v1.CriticalExtensionsMeasurementReport
	281, // 74: nr_rrc_definitions.v1.MeasurementReportIEs.meas_results:type_name -> nr_rrc_definitions.v1.MeasResults
	101, // 75: nr_rrc_definitions.v1.MeasurementReportIEs.non_critical_extension:type_name -> nr_rrc_definitions.v1.NonCriticalExtensionMeasurementReportIEs
	736, // 76: nr_rrc_definitions.v1.Mib.system_frame_number:type_name -> asn1.v1.BitString
	0,   // 77: nr_rrc_definitions.v1.Mib.sub_carrier_spacing_common:type_name -> nr_rrc_definitions.v1.SubCarrierSpacingCommonMib
	1,   // 78: nr_rrc_definitions.v1.Mib.dmrs_type_a_position:type_name -> nr_rrc_definitions.v1.DmrsTypeApositionMib
	310, // 79: nr_rrc_definitions.v1.Mib.pdcch_config_sib1:type_name -> nr_rrc_definitions.v1.PdcchConfigSib1
	2,   // 80: nr_rrc_definitions.v1.Mib.cell_barred:type_name -> nr_rrc_definitions.v1.CellBarredMib
	3,   // 81: nr_rrc_definitions.v1.Mib.intra_freq_reselection:type_name -> nr_rrc_definitions.v1.IntraFreqReselectionMib
	736, // 82: nr_rrc_definitions.v1.Mib.spare:type_name -> asn1.v1.BitString
	111, // 83: nr_rrc_definitions.v1.CriticalExtensionsRrcreconfiguration.rrc_reconfiguration:type_name -> nr_rrc_definitions.v1.RrcreconfigurationIEs
	98,  // 84: nr_rrc_definitions.v1.CriticalExtensionsRrcreconfiguration.critical_extensions_future:type_name -> nr_rrc_definitions.v1.CriticalExtensionsFuturecriticalExtensions
	374, // 85: nr_rrc_definitions.v1.Rrcreconfiguration.rrc_transaction_identifier:type_name -> nr_rrc_definitions.v1.RrcTransactionIdentifier
	109, // 86: nr_rrc_definitions.v1.Rrcreconfiguration.critical_extensions:type_name -> nr_rrc_definitions.v1.CriticalExtensionsRrcreconfiguration
	266, // 87: nr_rrc_definitions.v1.RrcreconfigurationIEs.meas_config:type_name -> nr_rrc_definitions.v1.MeasConfig
	112, // 88: nr_rrc_definitions.v1.RrcreconfigurationIEs.non_critical_extension:type_name -> nr_rrc_definitions.v1.Rrcreconfigurationv1530IEs
	4,   // 89: nr_rrc_definitions.v1.Rrcreconfigurationv1530IEs.full_config:type_name -> nr_rrc_definitions.v1.FullConfigRrcreconfigurationv1530Ies
	261, // 90: nr_rrc_definitions.v1.Rrcreconfigurationv1530IEs.dedicated_nas_message_list:type_name -> nr_rrc_definitions.v1.DedicatedNasMessage
	114, // 91: nr_rrc_definitions.v1.Rrcreconfigurationv1530IEs.master_key_update:type_name -> nr_rrc_definitions.v1.MasterKeyUpdate
	372, // 92: nr_rrc_definitions.v1.Rrcreconfigurationv1530IEs.other_config:type_name -> nr_rrc_definitions.v1.OtherConfig
	113, // 93: nr_rrc_definitions.v1.Rrcreconfigurationv1530IEs.non_critical_extension:type_name -> nr_rrc_definitions.v1.Rrcreconfigurationv1540IEs
	294, // 94: nr_rrc_definitions.v1.MasterKeyUpdate.next_hop_chaining_count:type_name -> nr_rrc_definitions.v1.NextHopChainingCount
	54,  // 95: nr_rrc_definitions.v1.Bwp.subcarrier_spacing:type_name -> nr_rrc_definitions.v1.SubcarrierSpacing
	5,   // 96: nr_rrc_definitions.v1.Bwp.cyclic_prefix:type_name -> nr_rrc_definitions.v1.CyclicPrefixBwp
	152, // 97: nr_rrc_definitions.v1.BwpDownlink.bwp_id:type_name -> nr_rrc_definitions.v1.BwpId
	149, // 98: nr_rrc_definitions.v1.BwpDownlink.bwp_common:type_name -> nr_rrc_definitions.v1.BwpDownlinkCommon
	151, // 99: nr_rrc_definitions.v1.BwpDownlink.bwp_dedicated:type_name -> nr_rrc_definitions.v1.BwpDownlinkDedicated
	309, // 100: nr_rrc_definitions.v1.PdcchConfigCommonBwpDownlinkCommon.setup:type_name -> nr_rrc_definitions.v1.PdcchConfigCommon
	314, // 101: nr_rrc_definitions.v1.PdschConfigCommonBwpDownlinkCommon.setup:type_name -> nr_rrc_definitions.v1.PdschConfigCommon
	145, // 102: nr_rrc_definitions.v1.BwpDownlinkCommon.generic_parameters:type_name -> nr_rrc_definitions.v1.Bwp
	147, // 103: nr_rrc_definitions.v1.BwpDownlinkCommon.pdcch_config_common:type_name -> nr_rrc_definitions.v1.PdcchConfigCommonBwpDownlinkCommon
	148, // 104: nr_rrc_definitions.v1.BwpDownlinkCommon.pdsch_config_common:type_name -> nr_rrc_definitions.v1.PdschConfigCommonBwpDownlinkCommon
	313, // 105: nr_rrc_definitions.v1.PdschConfigBwpDownlinkDedicated.setup:type_name -> nr_rrc_definitions.v1.PdschConfig
	150, // 106: nr_rrc_definitions.v1.BwpDownlinkDedicated.pdsch_config:type_name -> nr_rrc_definitions.v1.PdschConfigBwpDownlinkDedicated
	154, // 107: nr_rrc_definitions.v1.CellGroupConfig.sp_cell_config:type_name -> nr_rrc_definitions.v1.SpCellConfig
	155, // 108: nr_rrc_definitions.v1.SpCellConfig.reconfiguration_with_sync:type_name -> nr_rrc_definitions.v1.ReconfigurationWithSync
	347, // 109: nr_rrc_definitions.v1.SpCellConfig.sp_cell_config_dedicated:type_name -> nr_rrc_definitions.v1.ServingCellConfig
	348, // 110: nr_rrc_definitions.v1.ReconfigurationWithSync.sp_cell_config_common:type_name -> nr_rrc_definitions.v1.ServingCellConfigCommon
	736, // 111: nr_rrc_definitions.v1.TwonrOfAntennaPorts.two_tx_codebook_subset_restriction:type_name -> asn1.v1.BitString
	736, // 112: nr_rrc_definitions.v1.N1n2moreThanTwo.two_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 113: nr_rrc_definitions.v1.N1n2moreThanTwo.two_two_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 114: nr_rrc_definitions.v1.N1n2moreThanTwo.four_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 115: nr_rrc_definitions.v1.N1n2moreThanTwo.three_two_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 116: nr_rrc_definitions.v1.N1n2moreThanTwo.six_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 117: nr_rrc_definitions.v1.N1n2moreThanTwo.four_two_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 118: nr_rrc_definitions.v1.N1n2moreThanTwo.eight_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 119: nr_rrc_definitions.v1.N1n2moreThanTwo.four_three_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 120: nr_rrc_definitions.v1.N1n2moreThanTwo.six_two_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 121: nr_rrc_definitions.v1.N1n2moreThanTwo.twelve_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 122: nr_rrc_definitions.v1.N1n2moreThanTwo.four_four_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 123: nr_rrc_definitions.v1.N1n2moreThanTwo.eight_two_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	736, // 124: nr_rrc_definitions.v1.N1n2moreThanTwo.sixteen_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	157, // 125: nr_rrc_definitions.v1.MoreThanTwonrOfAntennaPorts.n1_n2:type_name -> nr_rrc_definitions.v1.N1n2moreThanTwo
	736, // 126: nr_rrc_definitions.v1.MoreThanTwonrOfAntennaPorts.type_i_single_panel_codebook_subset_restriction_i2:type_name -> asn1.v1.BitString
	156, // 127: nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanel.two:type_name -> nr_rrc_definitions.v1.TwonrOfAntennaPorts
	158, // 128: nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanel.more_than_two:type_name -> nr_rrc_definitions.v1.MoreThanTwonrOfAntennaPorts
	159, // 129: nr_rrc_definitions.v1.TypeISinglePanelsubType.nr_of_antenna_ports:type_name -> nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanel
	736, // 130: nr_rrc_definitions.v1.TypeISinglePanelsubType.type_i_single_panel_ri_restriction:type_name -> asn1.v1.BitString
	736, // 131: nr_rrc_definitions.v1.Ngn1n2typeIMultiPanel.two_two_one_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	736, // 132: nr_rrc_definitions.v1.Ngn1n2typeIMultiPanel.two_four_one_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	736, // 133: nr_rrc_definitions.v1.Ngn1n2typeIMultiPanel.four_two_one_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	736, // 134: nr_rrc_definitions.v1.Ngn1n2typeIMultiPanel.two_two_two_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	736, // 135: nr_rrc_definitions.v1.Ngn1n2typeIMultiPanel.two_eight_one_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	736, // 136: nr_rrc_definitions.v1.Ngn1n2typeIMultiPanel.four_four_one_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	736, // 137: nr_rrc_definitions.v1.Ngn1n2typeIMultiPanel.two_four_two_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	736, // 138: nr_rrc_definitions.v1.Ngn1n2typeIMultiPanel.four_two_two_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	161, // 139: nr_rrc_definitions.v1.TypeIMultiPanelsubType.ng_n1_n2:type_name -> nr_rrc_definitions.v1.Ngn1n2typeIMultiPanel
	736, // 140: nr_rrc_definitions.v1.TypeIMultiPanelsubType.ri_restriction:type_name -> asn1.v1.BitString
	160, // 141: nr_rrc_definitions.v1.SubTypetype1.type_i_single_panel:type_name -> nr_rrc_definitions.v1.TypeISinglePanelsubType
	162, // 142: nr_rrc_definitions.v1.SubTypetype1.type_i_multi_panel:type_name -> nr_rrc_definitions.v1.TypeIMultiPanelsubType
	163, // 143: nr_rrc_definitions.v1.Type1codebookType.sub_type:type_name -> nr_rrc_definitions.v1.SubTypetype1
	736, // 144: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.two_one:type_name -> asn1.v1.BitString
	736, // 145: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.two_two:type_name -> asn1.v1.BitString
	736, // 146: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.four_one:type_name -> asn1.v1.BitString
	736, // 147: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.three_two:type_name -> asn1.v1.BitString
	736, // 148: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.six_one:type_name -> asn1.v1.BitString
	736, // 149: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.four_two:type_name -> asn1.v1.BitString
	736, // 150: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.eight_one:type_name -> asn1.v1.BitString
	736, // 151: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.four_three:type_name -> asn1.v1.BitString
	736, // 152: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.six_two:type_name -> asn1.v1.BitString
	736, // 153: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.twelve_one:type_name -> asn1.v1.BitString
	736, // 154: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.four_four:type_name -> asn1.v1.BitString
	736, // 155: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.eight_two:type_name -> asn1.v1.BitString
	736, // 156: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi.sixteen_one:type_name -> asn1.v1.BitString
	165, // 157: nr_rrc_definitions.v1.TypeIisubType.n1_n2_codebook_subset_restriction:type_name -> nr_rrc_definitions.v1.N1n2codebookSubsetRestrictiontypeIi
	736, // 158: nr_rrc_definitions.v1.TypeIisubType.type_ii_ri_restriction:type_name -> asn1.v1.BitString
	6,   // 159: nr_rrc_definitions.v1.TypeIiPortSelectionsubType.port_selection_sampling_size:type_name -> nr_rrc_definitions.v1.PortSelectionSamplingSizetypeIiportSelection
	736, // 160: nr_rrc_definitions.v1.TypeIiPortSelectionsubType.type_ii_port_selection_ri_restriction:type_name -> asn1.v1.BitString
	166, // 161: nr_rrc_definitions.v1.SubTypetype2.type_ii:type_name -> nr_rrc_definitions.v1.TypeIisubType
	167, // 162: nr_rrc_definitions.v1.SubTypetype2.type_ii_port_selection:type_name -> nr_rrc_definitions.v1.TypeIiPortSelectionsubType
	168, // 163: nr_rrc_definitions.v1.Type2codebookType.sub_type:type_name -> nr_rrc_definitions.v1.SubTypetype2
	7,   // 164: nr_rrc_definitions.v1.Type2codebookType.phase_alphabet_size:type_name -> nr_rrc_definitions.v1.PhaseAlphabetSizetype2
	8,   // 165: nr_rrc_definitions.v1.Type2codebookType.number_of_beams:type_name -> nr_rrc_definitions.v1.NumberOfBeamstype2
	164, // 166: nr_rrc_definitions.v1.CodebookTypeCodebookConfig.type1:type_name -> nr_rrc_definitions.v1.Type1codebookType
	169, // 167: nr_rrc_definitions.v1.CodebookTypeCodebookConfig.type2:type_name -> nr_rrc_definitions.v1.Type2codebookType
	170, // 168: nr_rrc_definitions.v1.CodebookConfig.codebook_type:type_name -> nr_rrc_definitions.v1.CodebookTypeCodebookConfig
	736, // 169: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.two_one:type_name -> asn1.v1.BitString
	736, // 170: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.two_two:type_name -> asn1.v1.BitString
	736, // 171: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.four_one:type_name -> asn1.v1.BitString
	736, // 172: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.three_two:type_name -> asn1.v1.BitString
	736, // 173: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.six_one:type_name -> asn1.v1.BitString
	736, // 174: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.four_two:type_name -> asn1.v1.BitString
	736, // 175: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.eight_one:type_name -> asn1.v1.BitString
	736, // 176: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.four_three:type_name -> asn1.v1.BitString
	736, // 177: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.six_two:type_name -> asn1.v1.BitString
	736, // 178: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.twelve_one:type_name -> asn1.v1.BitString
	736, // 179: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.four_four:type_name -> asn1.v1.BitString
	736, // 180: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.eight_two:type_name -> asn1.v1.BitString
	736, // 181: nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16.sixteen_one:type_name -> asn1.v1.BitString
	172, // 182: nr_rrc_definitions.v1.TypeIir16subType.n1_n2_codebook_subset_restriction_r16:type_name -> nr_rrc_definitions.v1.N1n2codebookSubsetRestrictionr16typeIir16
	736, // 183: nr_rrc_definitions.v1.TypeIir16subType.type_ii_ri_restriction_r16:type_name -> asn1.v1.BitString
	9,   // 184: nr_rrc_definitions.v1.TypeIiPortSelectionr16subType.port_selection_sampling_size_r16:type_name -> nr_rrc_definitions.v1.PortSelectionSamplingSizer16typeIiportSelectionr16
	736, // 185: nr_rrc_definitions.v1.TypeIiPortSelectionr16subType.type_ii_port_selection_ri_restriction_r16:type_name -> asn1.v1.BitString
	173, // 186: nr_rrc_definitions.v1.SubTypetype2r16.type_ii_r16:type_name -> nr_rrc_definitions.v1.TypeIir16subType
	174, // 187: nr_rrc_definitions.v1.SubTypetype2r16.type_ii_port_selection_r16:type_name -> nr_rrc_definitions.v1.TypeIiPortSelectionr16subType
	175, // 188: nr_rrc_definitions.v1.Type2r16codebookTyper16.sub_type:type_name -> nr_rrc_definitions.v1.SubTypetype2r16
	176, // 189: nr_rrc_definitions.v1.CodebookTyper16CodebookConfigr16.type2_r16:type_name -> nr_rrc_definitions.v1.Type2r16codebookTyper16
	177, // 190: nr_rrc_definitions.v1.CodebookConfigr16.codebook_type_r16:type_name -> nr_rrc_definitions.v1.CodebookTyper16CodebookConfigr16
	156, // 191: nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanelGroup1r17.two:type_name -> nr_rrc_definitions.v1.TwonrOfAntennaPorts
	158, // 192: nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanelGroup1r17.more_than_two:type_name -> nr_rrc_definitions.v1.MoreThanTwonrOfAntennaPorts
	179, // 193: nr_rrc_definitions.v1.TypeISinglePanelGroup1r17type1r17.nr_of_antenna_ports:type_name -> nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanelGroup1r17
	156, // 194: nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanelGroup2r17.two:type_name -> nr_rrc_definitions.v1.TwonrOfAntennaPorts
	158, // 195: nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanelGroup2r17.more_than_two:type_name -> nr_rrc_definitions.v1.MoreThanTwonrOfAntennaPorts
	181, // 196: nr_rrc_definitions.v1.TypeISinglePanelGroup2r17type1r17.nr_of_antenna_ports:type_name -> nr_rrc_definitions.v1.NrOfAntennaPortstypeISinglePanelGroup2r17
	180, // 197: nr_rrc_definitions.v1.Type1r17codebookTyper17.type_i_single_panel_group1_r17:type_name -> nr_rrc_definitions.v1.TypeISinglePanelGroup1r17type1r17
	182, // 198: nr_rrc_definitions.v1.Type1r17codebookTyper17.type_i_single_panel_group2_r17:type_name -> nr_rrc_definitions.v1.TypeISinglePanelGroup2r17type1r17
	736, // 199: nr_rrc_definitions.v1.Type1r17codebookTyper17.type_i_single_panel_ri_restriction_strp_r17:type_name -> asn1.v1.BitString
	736, // 200: nr_rrc_definitions.v1.Type1r17codebookTyper17.type_i_single_panel_ri_restriction_sdm_r17:type_name -> asn1.v1.BitString
	10,  // 201: nr_rrc_definitions.v1.TypeIiPortSelectionr17type2r17.value_of_n_r17:type_name -> nr_rrc_definitions.v1.ValueOfNr17typeIiportSelectionr17
	736, // 202: nr_rrc_definitions.v1.TypeIiPortSelectionr17type2r17.type_ii_port_selection_ri_restriction_r17:type_name -> asn1.v1.BitString
	184, // 203: nr_rrc_definitions.v1.Type2r17codebookTyper17.type_ii_port_selection_r17:type_name -> nr_rrc_definitions.v1.TypeIiPortSelectionr17type2r17
	183, // 204: nr_rrc_definitions.v1.CodebookTyper17CodebookConfigr17.type1_r17:type_name -> nr_rrc_definitions.v1.Type1r17codebookTyper17
	185, // 205: nr_rrc_definitions.v1.CodebookTyper17CodebookConfigr17.type2_r17:type_name -> nr_rrc_definitions.v1.Type2r17codebookTyper17
	186, // 206: nr_rrc_definitions.v1.CodebookConfigr17.codebook_type_r17:type_name -> nr_rrc_definitions.v1.CodebookTyper17CodebookConfigr17
	188, // 207: nr_rrc_definitions.v1.CodebookTypev1730CodebookConfigv1730.type1_v1730:type_name -> nr_rrc_definitions.v1.Type1v1730codebookTypev1730
	189, // 208: nr_rrc_definitions.v1.CodebookConfigv1730.codebook_type_v1730:type_name -> nr_rrc_definitions.v1.CodebookTypev1730CodebookConfigv1730
	11,  // 209: nr_rrc_definitions.v1.InterleavedcceREgMappingType.reg_bundle_size:type_name -> nr_rrc_definitions.v1.RegBundleSizeinterleaved
	12,  // 210: nr_rrc_definitions.v1.InterleavedcceREgMappingType.interleaver_size:type_name -> nr_rrc_definitions.v1.InterleaverSizeinterleaved
	191, // 211: nr_rrc_definitions.v1.CceREgMappingTypeControlResourceSet.interleaved:type_name -> nr_rrc_definitions.v1.InterleavedcceREgMappingType
	194, // 212: nr_rrc_definitions.v1.ControlResourceSet.control_resource_set_id:type_name -> nr_rrc_definitions.v1.ControlResourceSetId
	736, // 213: nr_rrc_definitions.v1.ControlResourceSet.frequency_domain_resources:type_name -> asn1.v1.BitString
	192, // 214: nr_rrc_definitions.v1.ControlResourceSet.cce_reg_mapping_type:type_name -> nr_rrc_definitions.v1.CceREgMappingTypeControlResourceSet
	13,  // 215: nr_rrc_definitions.v1.ControlResourceSet.precoder_granularity:type_name -> nr_rrc_definitions.v1.PrecoderGranularityControlResourceSet
	358, // 216: nr_rrc_definitions.v1.ControlResourceSet.tci_states_pdcch_to_add_list:type_name -> nr_rrc_definitions.v1.TciStateId
	358, // 217: nr_rrc_definitions.v1.ControlResourceSet.tci_states_pdcch_to_release_list:type_name -> nr_rrc_definitions.v1.TciStateId
	14,  // 218: nr_rrc_definitions.v1.ControlResourceSet.tci_present_in_dci:type_name -> nr_rrc_definitions.v1.TciPresentInDcicontrolResourceSet
	196, // 219: nr_rrc_definitions.v1.ControlResourceSet.control_resource_set_id_v1610:type_name -> nr_rrc_definitions.v1.ControlResourceSetIdv1610
	15,  // 220: nr_rrc_definitions.v1.ControlResourceSet.follow_unified_tci_state_r17:type_name -> nr_rrc_definitions.v1.FollowUnifiedTcistater17ControlResourceSet
	199, // 221: nr_rrc_definitions.v1.CsiAperiodicTriggerStateList.value:type_name -> nr_rrc_definitions.v1.CsiAperiodicTriggerState
	204, // 222: nr_rrc_definitions.v1.CsiAperiodicTriggerState.associated_report_config_info_list:type_name -> nr_rrc_definitions.v1.CsiAssociatedReportConfigInfo
	16,  // 223: nr_rrc_definitions.v1.CsiAperiodicTriggerState.ap_csi_multiplexing_mode_r17:type_name -> nr_rrc_definitions.v1.ApCsimultiplexingModer17CsiaperiodicTriggerState
	358, // 224: nr_rrc_definitions.v1.NzpCSiRSresourcesForChannel.qcl_info:type_name -> nr_rrc_definitions.v1.TciStateId
	200, // 225: nr_rrc_definitions.v1.ResourcesForChannelCsiAssociatedReportConfigInfo.nzp_csi_rs:type_name -> nr_rrc_definitions.v1.NzpCSiRSresourcesForChannel
	358, // 226: nr_rrc_definitions.v1.NzpCSiRS2r17resourcesForChannel2r17.qcl_info2_r17:type_name -> nr_rrc_definitions.v1.TciStateId
	202, // 227: nr_rrc_definitions.v1.ResourcesForChannel2r17CsiAssociatedReportConfigInfo.nzp_csi_rs2_r17:type_name -> nr_rrc_definitions.v1.NzpCSiRS2r17resourcesForChannel2r17
	245, // 228: nr_rrc_definitions.v1.CsiAssociatedReportConfigInfo.report_config_id:type_name -> nr_rrc_definitions.v1.CsiReportConfigId
	201, // 229: nr_rrc_definitions.v1.CsiAssociatedReportConfigInfo.resources_for_channel:type_name -> nr_rrc_definitions.v1.ResourcesForChannelCsiAssociatedReportConfigInfo
	203, // 230: nr_rrc_definitions.v1.CsiAssociatedReportConfigInfo.resources_for_channel2_r17:type_name -> nr_rrc_definitions.v1.ResourcesForChannel2r17CsiAssociatedReportConfigInfo
	17,  // 231: nr_rrc_definitions.v1.Pattern0csiIMResourceElementPattern.subcarrier_location_p0:type_name -> nr_rrc_definitions.v1.SubcarrierLocationp0pattern0
	18,  // 232: nr_rrc_definitions.v1.Pattern1csiIMResourceElementPattern.subcarrier_location_p1:type_name -> nr_rrc_definitions.v1.SubcarrierLocationp1pattern1
	206, // 233: nr_rrc_definitions.v1.CsiIMResourceElementPatternCsiIMResource.pattern0:type_name -> nr_rrc_definitions.v1.Pattern0csiIMResourceElementPattern
	207, // 234: nr_rrc_definitions.v1.CsiIMResourceElementPatternCsiIMResource.pattern1:type_name -> nr_rrc_definitions.v1.Pattern1csiIMResourceElementPattern
	210, // 235: nr_rrc_definitions.v1.CsiIMResource.csi_im_resource_id:type_name -> nr_rrc_definitions.v1.CsiIMResourceId
	208, // 236: nr_rrc_definitions.v1.CsiIMResource.csi_im_resource_element_pattern:type_name -> nr_rrc_definitions.v1.CsiIMResourceElementPatternCsiIMResource
	205, // 237: nr_rrc_definitions.v1.CsiIMResource.freq_band:type_name -> nr_rrc_definitions.v1.CsiFrequencyOccupation
	251, // 238: nr_rrc_definitions.v1.CsiIMResource.periodicity_and_offset:type_name -> nr_rrc_definitions.v1.CsiResourcePeriodicityAndOffset
	212, // 239: nr_rrc_definitions.v1.CsiIMResourceSet.csi_im_resource_set_id:type_name -> nr_rrc_definitions.v1.CsiIMResourceSetId
	210, // 240: nr_rrc_definitions.v1.CsiIMResourceSet.csi_im_resources:type_name -> nr_rrc_definitions.v1.CsiIMResourceId
	198, // 241: nr_rrc_definitions.v1.AperiodicTriggerStateListCsiMeasConfig.setup:type_name -> nr_rrc_definitions.v1.CsiAperiodicTriggerStateList
	256, // 242: nr_rrc_definitions.v1.SemiPersistentOnPuschTriggerStateListCsiMeasConfig.setup:type_name -> nr_rrc_definitions.v1.CsiSemiPersistentOnPuschTriggerStateList
	295, // 243: nr_rrc_definitions.v1.CsiMeasConfig.nzp_csi_rs_resource_to_add_mod_list:type_name -> nr_rrc_definitions.v1.NzpCSiRSResource
	296, // 244: nr_rrc_definitions.v1.CsiMeasConfig.nzp_csi_rs_resource_to_release_list:type_name -> nr_rrc_definitions.v1.NzpCSiRSResourceId
	297, // 245: nr_rrc_definitions.v1.CsiMeasConfig.nzp_csi_rs_resource_set_to_add_mod_list:type_name -> nr_rrc_definitions.v1.NzpCSiRSResourceSet
	300, // 246: nr_rrc_definitions.v1.CsiMeasConfig.nzp_csi_rs_resource_set_to_release_list:type_name -> nr_rrc_definitions.v1.NzpCSiRSResourceSetId
	209, // 247: nr_rrc_definitions.v1.CsiMeasConfig.csi_im_resource_to_add_mod_list:type_name -> nr_rrc_definitions.v1.CsiIMResource
	210, // 248: nr_rrc_definitions.v1.CsiMeasConfig.csi_im_resource_to_release_list:type_name -> nr_rrc_definitions.v1.CsiIMResourceId
	211, // 249: nr_rrc_definitions.v1.CsiMeasConfig.csi_im_resource_set_to_add_mod_list:type_name -> nr_rrc_definitions.v1.CsiIMResourceSet
	212, // 250: nr_rrc_definitions.v1.CsiMeasConfig.csi_im_resource_set_to_release_list:type_name -> nr_rrc_definitions.v1.CsiIMResourceSetId
	258, // 251: nr_rrc_definitions.v1.CsiMeasConfig.csi_ssb_resource_set_to_add_mod_list:type_name -> nr_rrc_definitions.v1.CsiSSbResourceSet
	260, // 252: nr_rrc_definitions.v1.CsiMeasConfig.csi_ssb_resource_set_to_release_list:type_name -> nr_rrc_definitions.v1.CsiSSbResourceSetId
	249, // 253: nr_rrc_definitions.v1.CsiMeasConfig.csi_resource_config_to_add_mod_list:type_name -> nr_rrc_definitions.v1.CsiResourceConfig
	250, // 254: nr_rrc_definitions.v1.CsiMeasConfig.csi_resource_config_to_release_list:type_name -> nr_rrc_definitions.v1.CsiResourceConfigId
	235, // 255: nr_rrc_definitions.v1.CsiMeasConfig.csi_report_config_to_add_mod_list:type_name -> nr_rrc_definitions.v1.CsiReportConfig
	245, // 256: nr_rrc_definitions.v1.CsiMeasConfig.csi_report_config_to_release_list:type_name -> nr_rrc_definitions.v1.CsiReportConfigId
	213, // 257: nr_rrc_definitions.v1.CsiMeasConfig.aperiodic_trigger_state_list:type_name -> nr_rrc_definitions.v1.AperiodicTriggerStateListCsiMeasConfig
	214, // 258: nr_rrc_definitions.v1.CsiMeasConfig.semi_persistent_on_pusch_trigger_state_list:type_name -> nr_rrc_definitions.v1.SemiPersistentOnPuschTriggerStateListCsiMeasConfig
	339, // 259: nr_rrc_definitions.v1.CsiMeasConfig.s_cell_activation_rs_config_to_add_mod_list_r17:type_name -> nr_rrc_definitions.v1.ScellActivationRsConfigr17
	340, // 260: nr_rrc_definitions.v1.CsiMeasConfig.s_cell_activation_rs_config_to_release_list_r17:type_name -> nr_rrc_definitions.v1.ScellActivationRsConfigIdr17
	236, // 261: nr_rrc_definitions.v1.PeriodicreportConfigType.report_slot_config:type_name -> nr_rrc_definitions.v1.CsiReportPeriodicityAndOffset
	237, // 262: nr_rrc_definitions.v1.PeriodicreportConfigType.pucch_csi_resource_list:type_name -> nr_rrc_definitions.v1.PucchCSiResource
	236, // 263: nr_rrc_definitions.v1.SemiPersistentOnPucchreportConfigType.report_slot_config:type_name -> nr_rrc_definitions.v1.CsiReportPeriodicityAndOffset
	237, // 264: nr_rrc_definitions.v1.SemiPersistentOnPucchreportConfigType.pucch_csi_resource_list:type_name -> nr_rrc_definitions.v1.PucchCSiResource
	19,  // 265: nr_rrc_definitions.v1.SemiPersistentOnPuschreportConfigType.report_slot_config:type_name -> nr_rrc_definitions.v1.ReportSlotConfigsemiPersistentOnPusch
	324, // 266: nr_rrc_definitions.v1.SemiPersistentOnPuschreportConfigType.p0alpha:type_name -> nr_rrc_definitions.v1.P0PUschAlphaSetId
	216, // 267: nr_rrc_definitions.v1.ReportConfigTypeCsiReportConfig.periodic:type_name -> nr_rrc_definitions.v1.PeriodicreportConfigType
	217, // 268: nr_rrc_definitions.v1.ReportConfigTypeCsiReportConfig.semi_persistent_on_pucch:type_name -> nr_rrc_definitions.v1.SemiPersistentOnPucchreportConfigType
	218, // 269: nr_rrc_definitions.v1.ReportConfigTypeCsiReportConfig.semi_persistent_on_pusch:type_name -> nr_rrc_definitions.v1.SemiPersistentOnPuschreportConfigType
	219, // 270: nr_rrc_definitions.v1.ReportConfigTypeCsiReportConfig.aperiodic:type_name -> nr_rrc_definitions.v1.AperiodicreportConfigType
	20,  // 271: nr_rrc_definitions.v1.CriRIi1CQireportQuantity.pdsch_bundle_size_for_csi:type_name -> nr_rrc_definitions.v1.PdschBundleSizeForCsicriRii1Cqi
	221, // 272: nr_rrc_definitions.v1.ReportQuantityCsiReportConfig.cri_ri_i1_cqi:type_name -> nr_rrc_definitions.v1.CriRIi1CQireportQuantity
	736, // 273: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands3:type_name -> asn1.v1.BitString
	736, // 274: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands4:type_name -> asn1.v1.BitString
	736, // 275: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands5:type_name -> asn1.v1.BitString
	736, // 276: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands6:type_name -> asn1.v1.BitString
	736, // 277: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands7:type_name -> asn1.v1.BitString
	736, // 278: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands8:type_name -> asn1.v1.BitString
	736, // 279: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands9:type_name -> asn1.v1.BitString
	736, // 280: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands10:type_name -> asn1.v1.BitString
	736, // 281: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands11:type_name -> asn1.v1.BitString
	736, // 282: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands12:type_name -> asn1.v1.BitString
	736, // 283: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands13:type_name -> asn1.v1.BitString
	736, // 284: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands14:type_name -> asn1.v1.BitString
	736, // 285: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands15:type_name -> asn1.v1.BitString
	736, // 286: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands16:type_name -> asn1.v1.BitString
	736, // 287: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands17:type_name -> asn1.v1.BitString
	736, // 288: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands18:type_name -> asn1.v1.BitString
	736, // 289: nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration.subbands19_v1530:type_name -> asn1.v1.BitString
	21,  // 290: nr_rrc_definitions.v1.ReportFreqConfigurationCsiReportConfig.cqi_format_indicator:type_name -> nr_rrc_definitions.v1.CqiFormatIndicatorreportFreqConfiguration
	22,  // 291: nr_rrc_definitions.v1.ReportFreqConfigurationCsiReportConfig.pmi_format_indicator:type_name -> nr_rrc_definitions.v1.PmiFormatIndicatorreportFreqConfiguration
	223, // 292: nr_rrc_definitions.v1.ReportFreqConfigurationCsiReportConfig.csi_reporting_band:type_name -> nr_rrc_definitions.v1.CsiReportingBandreportFreqConfiguration
	26,  // 293: nr_rrc_definitions.v1.DisabledgroupBasedBeamReporting.nrof_reported_rs:type_name -> nr_rrc_definitions.v1.NrofReportedRsdisabled
	225, // 294: nr_rrc_definitions.v1.GroupBasedBeamReportingCsiReportConfig.disabled:type_name -> nr_rrc_definitions.v1.DisabledgroupBasedBeamReporting
	29,  // 295: nr_rrc_definitions.v1.SemiPersistentOnPuschv1530CsiReportConfig.report_slot_config_v1530:type_name -> nr_rrc_definitions.v1.ReportSlotConfigv1530semiPersistentOnPuschv1530
	31,  // 296: nr_rrc_definitions.v1.GroupBasedBeamReportingv1710CsiReportConfig.nrof_reported_groups_r17:type_name -> nr_rrc_definitions.v1.NrofReportedGroupsr17groupBasedBeamReportingv1710
	245, // 297: nr_rrc_definitions.v1.CsiReportConfig.report_config_id:type_name -> nr_rrc_definitions.v1.CsiReportConfigId
	345, // 298: nr_rrc_definitions.v1.CsiReportConfig.carrier:type_name -> nr_rrc_definitions.v1.ServCellIndex
	250, // 299: nr_rrc_definitions.v1.CsiReportConfig.resources_for_channel_measurement:type_name -> nr_rrc_definitions.v1.CsiResourceConfigId
	250, // 300: nr_rrc_definitions.v1.CsiReportConfig.csi_im_resources_for_interference:type_name -> nr_rrc_definitions.v1.CsiResourceConfigId
	250, // 301: nr_rrc_definitions.v1.CsiReportConfig.nzp_csi_rs_resources_for_interference:type_name -> nr_rrc_definitions.v1.CsiResourceConfigId
	220, // 302: nr_rrc_definitions.v1.CsiReportConfig.report_config_type:type_name -> nr_rrc_definitions.v1.ReportConfigTypeCsiReportConfig
	222, // 303: nr_rrc_definitions.v1.CsiReportConfig.report_quantity:type_name -> nr_rrc_definitions.v1.ReportQuantityCsiReportConfig
	224, // 304: nr_rrc_definitions.v1.CsiReportConfig.report_freq_configuration:type_name -> nr_rrc_definitions.v1.ReportFreqConfigurationCsiReportConfig
	23,  // 305: nr_rrc_definitions.v1.CsiReportConfig.time_restriction_for_channel_measurements:type_name -> nr_rrc_definitions.v1.TimeRestrictionForChannelMeasurementsCsireportConfig
	24,  // 306: nr_rrc_definitions.v1.CsiReportConfig.time_restriction_for_interference_measurements:type_name -> nr_rrc_definitions.v1.TimeRestrictionForInterferenceMeasurementsCsireportConfig
	171, // 307: nr_rrc_definitions.v1.CsiReportConfig.codebook_config:type_name -> nr_rrc_definitions.v1.CodebookConfig
	25,  // 308: nr_rrc_definitions.v1.CsiReportConfig.dummy:type_name -> nr_rrc_definitions.v1.DummyCsireportConfig
	226, // 309: nr_rrc_definitions.v1.CsiReportConfig.group_based_beam_reporting:type_name -> nr_rrc_definitions.v1.GroupBasedBeamReportingCsiReportConfig
	27,  // 310: nr_rrc_definitions.v1.CsiReportConfig.cqi_table:type_name -> nr_rrc_definitions.v1.CqiTableCsireportConfig
	28,  // 311: nr_rrc_definitions.v1.CsiReportConfig.subband_size:type_name -> nr_rrc_definitions.v1.SubbandSizeCsireportConfig
	241, // 312: nr_rrc_definitions.v1.CsiReportConfig.non_pmi_port_indication:type_name -> nr_rrc_definitions.v1.PortIndexFor8Ranks
	227, // 313: nr_rrc_definitions.v1.CsiReportConfig.semi_persistent_on_pusch_v1530:type_name -> nr_rrc_definitions.v1.SemiPersistentOnPuschv1530CsiReportConfig
	228, // 314: nr_rrc_definitions.v1.CsiReportConfig.semi_persistent_on_pusch_v1610:type_name -> nr_rrc_definitions.v1.SemiPersistentOnPuschv1610CsiReportConfig
	229, // 315: nr_rrc_definitions.v1.CsiReportConfig.aperiodic_v1610:type_name -> nr_rrc_definitions.v1.Aperiodicv1610CsiReportConfig
	230, // 316: nr_rrc_definitions.v1.CsiReportConfig.report_quantity_r16:type_name -> nr_rrc_definitions.v1.ReportQuantityr16CsiReportConfig
	178, // 317: nr_rrc_definitions.v1.CsiReportConfig.codebook_config_r16:type_name -> nr_rrc_definitions.v1.CodebookConfigr16
	30,  // 318: nr_rrc_definitions.v1.CsiReportConfig.cqi_bits_per_subband_r17:type_name -> nr_rrc_definitions.v1.CqiBitsPerSubbandr17CsireportConfig
	231, // 319: nr_rrc_definitions.v1.CsiReportConfig.group_based_beam_reporting_v1710:type_name -> nr_rrc_definitions.v1.GroupBasedBeamReportingv1710CsiReportConfig
	187, // 320: nr_rrc_definitions.v1.CsiReportConfig.codebook_config_r17:type_name -> nr_rrc_definitions.v1.CodebookConfigr17
	32,  // 321: nr_rrc_definitions.v1.CsiReportConfig.shared_cmr_r17:type_name -> nr_rrc_definitions.v1.SharedCmrr17CsireportConfig
	33,  // 322: nr_rrc_definitions.v1.CsiReportConfig.csi_report_mode_r17:type_name -> nr_rrc_definitions.v1.CsiReportModer17CsireportConfig
	34,  // 323: nr_rrc_definitions.v1.CsiReportConfig.number_of_single_trp_csi_mode1_r17:type_name -> nr_rrc_definitions.v1.NumberOfSingleTrpcsimode1r17CsireportConfig
	232, // 324: nr_rrc_definitions.v1.CsiReportConfig.report_quantity_r17:type_name -> nr_rrc_definitions.v1.ReportQuantityr17CsiReportConfig
	233, // 325: nr_rrc_definitions.v1.CsiReportConfig.semi_persistent_on_pusch_v1720:type_name -> nr_rrc_definitions.v1.SemiPersistentOnPuschv1720CsiReportConfig
	234, // 326: nr_rrc_definitions.v1.CsiReportConfig.aperiodic_v1720:type_name -> nr_rrc_definitions.v1.Aperiodicv1720CsiReportConfig
	190, // 327: nr_rrc_definitions.v1.CsiReportConfig.codebook_config_v1730:type_name -> nr_rrc_definitions.v1.CodebookConfigv1730
	152, // 328: nr_rrc_definitions.v1.PucchCSiResource.uplink_bandwidth_part_id:type_name -> nr_rrc_definitions.v1.BwpId
	323, // 329: nr_rrc_definitions.v1.PucchCSiResource.pucch_resource:type_name -> nr_rrc_definitions.v1.PucchResourceId
	242, // 330: nr_rrc_definitions.v1.PortIndex8PortIndexFor8Ranks.rank1_8:type_name -> nr_rrc_definitions.v1.PortIndex8
	242, // 331: nr_rrc_definitions.v1.PortIndex8PortIndexFor8Ranks.rank2_8:type_name -> nr_rrc_definitions.v1.PortIndex8
	242, // 332: nr_rrc_definitions.v1.PortIndex8PortIndexFor8Ranks.rank3_8:type_name -> nr_rrc_definitions.v1.PortIndex8
	242, // 333: nr_rrc_definitions.v1.PortIndex8PortIndexFor8Ranks.rank4_8:type_name -> nr_rrc_definitions.v1.PortIndex8
	242, // 334: nr_rrc_definitions.v1.PortIndex8PortIndexFor8Ranks.rank5_8:type_name -> nr_rrc_definitions.v1.PortIndex8
	242, // 335: nr_rrc_definitions.v1.PortIndex8PortIndexFor8Ranks.rank6_8:type_name -> nr_rrc_definitions.v1.PortIndex8
	242, // 336: nr_rrc_definitions.v1.PortIndex8PortIndexFor8Ranks.rank7_8:type_name -> nr_rrc_definitions.v1.PortIndex8
	242, // 337: nr_rrc_definitions.v1.PortIndex8PortIndexFor8Ranks.rank8_8:type_name -> nr_rrc_definitions.v1.PortIndex8
	243, // 338: nr_rrc_definitions.v1.PortIndex4PortIndexFor8Ranks.rank1_4:type_name -> nr_rrc_definitions.v1.PortIndex4
	243, // 339: nr_rrc_definitions.v1.PortIndex4PortIndexFor8Ranks.rank2_4:type_name -> nr_rrc_definitions.v1.PortIndex4
	243, // 340: nr_rrc_definitions.v1.PortIndex4PortIndexFor8Ranks.rank3_4:type_name -> nr_rrc_definitions.v1.PortIndex4
	243, // 341: nr_rrc_definitions.v1.PortIndex4PortIndexFor8Ranks.rank4_4:type_name -> nr_rrc_definitions.v1.PortIndex4
	244, // 342: nr_rrc_definitions.v1.PortIndex2PortIndexFor8Ranks.rank1_2:type_name -> nr_rrc_definitions.v1.PortIndex2
	244, // 343: nr_rrc_definitions.v1.PortIndex2PortIndexFor8Ranks.rank2_2:type_name -> nr_rrc_definitions.v1.PortIndex2
	238, // 344: nr_rrc_definitions.v1.PortIndexFor8Ranks.port_index8:type_name -> nr_rrc_definitions.v1.PortIndex8PortIndexFor8Ranks
	239, // 345: nr_rrc_definitions.v1.PortIndexFor8Ranks.port_index4:type_name -> nr_rrc_definitions.v1.PortIndex4PortIndexFor8Ranks
	240, // 346: nr_rrc_definitions.v1.PortIndexFor8Ranks.port_index2:type_name -> nr_rrc_definitions.v1.PortIndex2PortIndexFor8Ranks
	300, // 347: nr_rrc_definitions.v1.NzpCSiRSSSbcsiRSResourceSetList.nzp_csi_rs_resource_set_list:type_name -> nr_rrc_definitions.v1.NzpCSiRSResourceSetId
	260, // 348: nr_rrc_definitions.v1.NzpCSiRSSSbcsiRSResourceSetList.csi_ssb_resource_set_list:type_name -> nr_rrc_definitions.v1.CsiSSbResourceSetId
	212, // 349: nr_rrc_definitions.v1.CsiIMResourceSetListcsiRSResourceSetList.csi_im_resource_set_list:type_name -> nr_rrc_definitions.v1.CsiIMResourceSetId
	246, // 350: nr_rrc_definitions.v1.CsiRSResourceSetListCsiResourceConfig.nzp_csi_rs_ssb:type_name -> nr_rrc_definitions.v1.NzpCSiRSSSbcsiRSResourceSetList
	247, // 351: nr_rrc_definitions.v1.CsiRSResourceSetListCsiResourceConfig.csi_im_resource_set_list:type_name -> nr_rrc_definitions.v1.CsiIMResourceSetListcsiRSResourceSetList
	250, // 352: nr_rrc_definitions.v1.CsiResourceConfig.csi_resource_config_id:type_name -> nr_rrc_definitions.v1.CsiResourceConfigId
	248, // 353: nr_rrc_definitions.v1.CsiResourceConfig.csi_rs_resource_set_list:type_name -> nr_rrc_definitions.v1.CsiRSResourceSetListCsiResourceConfig
	152, // 354: nr_rrc_definitions.v1.CsiResourceConfig.bwp_id:type_name -> nr_rrc_definitions.v1.BwpId
	35,  // 355: nr_rrc_definitions.v1.CsiResourceConfig.resource_type:type_name -> nr_rrc_definitions.v1.ResourceTypeCsiresourceConfig
	260, // 356: nr_rrc_definitions.v1.CsiResourceConfig.csi_ssb_resource_set_list_ext_r17:type_name -> nr_rrc_definitions.v1.CsiSSbResourceSetId
	736, // 357: nr_rrc_definitions.v1.FrequencyDomainAllocationCsiRSResourceMapping.row1:type_name -> asn1.v1.BitString
	736, // 358: nr_rrc_definitions.v1.FrequencyDomainAllocationCsiRSResourceMapping.row2:type_name -> asn1.v1.BitString
	736, // 359: nr_rrc_definitions.v1.FrequencyDomainAllocationCsiRSResourceMapping.row4:type_name -> asn1.v1.BitString
	736, // 360: nr_rrc_definitions.v1.FrequencyDomainAllocationCsiRSResourceMapping.other:type_name -> asn1.v1.BitString
	38,  // 361: nr_rrc_definitions.v1.DensityCsiRSResourceMapping.dot5:type_name -> nr_rrc_definitions.v1.Dot5density
	253, // 362: nr_rrc_definitions.v1.CsiRSResourceMapping.frequency_domain_allocation:type_name -> nr_rrc_definitions.v1.FrequencyDomainAllocationCsiRSResourceMapping
	36,  // 363: nr_rrc_definitions.v1.CsiRSResourceMapping.nrof_ports:type_name -> nr_rrc_definitions.v1.NrofPortsCsirsresourceMapping
	37,  // 364: nr_rrc_definitions.v1.CsiRSResourceMapping.cdm_type:type_name -> nr_rrc_definitions.v1.CdmTypeCsirsresourceMapping
	254, // 365: nr_rrc_definitions.v1.CsiRSResourceMapping.density:type_name -> nr_rrc_definitions.v1.DensityCsiRSResourceMapping
	205, // 366: nr_rrc_definitions.v1.CsiRSResourceMapping.freq_band:type_name -> nr_rrc_definitions.v1.CsiFrequencyOccupation
	257, // 367: nr_rrc_definitions.v1.CsiSemiPersistentOnPuschTriggerStateList.value:type_name -> nr_rrc_definitions.v1.CsiSemiPersistentOnPuschTriggerState
	245, // 368: nr_rrc_definitions.v1.CsiSemiPersistentOnPuschTriggerState.associated_report_config_info:type_name -> nr_rrc_definitions.v1.CsiReportConfigId
	39,  // 369: nr_rrc_definitions.v1.CsiSemiPersistentOnPuschTriggerState.sp_csi_multiplexing_mode_r17:type_name -> nr_rrc_definitions.v1.SpCsimultiplexingModer17CsisemiPersistentOnPuschtriggerState
	260, // 370: nr_rrc_definitions.v1.CsiSSbResourceSet.csi_ssb_resource_set_id:type_name -> nr_rrc_definitions.v1.CsiSSbResourceSetId
	352, // 371: nr_rrc_definitions.v1.CsiSSbResourceSet.csi_ssb_resource_list:type_name -> nr_rrc_definitions.v1.SsbIndex
	259, // 372: nr_rrc_definitions.v1.CsiSSbResourceSet.serving_additional_pcilist_r17:type_name -> nr_rrc_definitions.v1.ServingAdditionalPciindexr17
	264, // 373: nr_rrc_definitions.v1.DownlinkConfigCommon.frequency_info_dl:type_name -> nr_rrc_definitions.v1.FrequencyInfoDl
	149, // 374: nr_rrc_definitions.v1.DownlinkConfigCommon.initial_downlink_bwp:type_name -> nr_rrc_definitions.v1.BwpDownlinkCommon
	149, // 375: nr_rrc_definitions.v1.DownlinkConfigCommon.initial_downlink_bwp_red_cap_r17:type_name -> nr_rrc_definitions.v1.BwpDownlinkCommon
	144, // 376: nr_rrc_definitions.v1.FrequencyInfoDl.absolute_frequency_ssb:type_name -> nr_rrc_definitions.v1.ArfcnValueNr
	293, // 377: nr_rrc_definitions.v1.FrequencyInfoDl.frequency_band_list:type_name -> nr_rrc_definitions.v1.MultiFrequencyBandListNr
	144, // 378: nr_rrc_definitions.v1.FrequencyInfoDl.absolute_frequency_point_a:type_name -> nr_rrc_definitions.v1.ArfcnValueNr
	342, // 379: nr_rrc_definitions.v1.FrequencyInfoDl.scs_specific_carrier_list:type_name -> nr_rrc_definitions.v1.ScsSpecificCarrier
	337, // 380: nr_rrc_definitions.v1.SMeasureConfigMeasConfig.ssb_rsrp:type_name -> nr_rrc_definitions.v1.RsrpRange
	337, // 381: nr_rrc_definitions.v1.SMeasureConfigMeasConfig.csi_rsrp:type_name -> nr_rrc_definitions.v1.RsrpRange
	267, // 382: nr_rrc_definitions.v1.MeasConfig.meas_object_to_remove_list:type_name -> nr_rrc_definitions.v1.MeasObjectToRemoveList
	278, // 383: nr_rrc_definitions.v1.MeasConfig.meas_object_to_add_mod_list:type_name -> nr_rrc_definitions.v1.MeasObjectToAddModList
	269, // 384: nr_rrc_definitions.v1.MeasConfig.report_config_to_remove_list:type_name -> nr_rrc_definitions.v1.ReportConfigToRemoveList
	334, // 385: nr_rrc_definitions.v1.MeasConfig.report_config_to_add_mod_list:type_name -> nr_rrc_definitions.v1.ReportConfigToAddModList
	268, // 386: nr_rrc_definitions.v1.MeasConfig.meas_id_to_remove_list:type_name -> nr_rrc_definitions.v1.MeasIdToRemoveList
	271, // 387: nr_rrc_definitions.v1.MeasConfig.meas_id_to_add_mod_list:type_name -> nr_rrc_definitions.v1.MeasIdToAddModList
	265, // 388: nr_rrc_definitions.v1.MeasConfig.s_measure_config:type_name -> nr_rrc_definitions.v1.SMeasureConfigMeasConfig
	325, // 389: nr_rrc_definitions.v1.MeasConfig.quantity_config:type_name -> nr_rrc_definitions.v1.QuantityConfig
	273, // 390: nr_rrc_definitions.v1.MeasObjectToRemoveList.value:type_name -> nr_rrc_definitions.v1.MeasObjectId
	270, // 391: nr_rrc_definitions.v1.MeasIdToRemoveList.value:type_name -> nr_rrc_definitions.v1.MeasId
	329, // 392: nr_rrc_definitions.v1.ReportConfigToRemoveList.value:type_name -> nr_rrc_definitions.v1.ReportConfigId
	272, // 393: nr_rrc_definitions.v1.MeasIdToAddModList.value:type_name -> nr_rrc_definitions.v1.MeasIdToAddMod
	270, // 394: nr_rrc_definitions.v1.MeasIdToAddMod.meas_id:type_name -> nr_rrc_definitions.v1.MeasId
	273, // 395: nr_rrc_definitions.v1.MeasIdToAddMod.meas_object_id:type_name -> nr_rrc_definitions.v1.MeasObjectId
	329, // 396: nr_rrc_definitions.v1.MeasIdToAddMod.report_config_id:type_name -> nr_rrc_definitions.v1.ReportConfigId
	144, // 397: nr_rrc_definitions.v1.MeasObjectNr.ssb_frequency:type_name -> nr_rrc_definitions.v1.ArfcnValueNr
	54,  // 398: nr_rrc_definitions.v1.MeasObjectNr.ssb_subcarrier_spacing:type_name -> nr_rrc_definitions.v1.SubcarrierSpacing
	275, // 399: nr_rrc_definitions.v1.MeasObjectNr.reference_signal_config:type_name -> nr_rrc_definitions.v1.ReferenceSignalConfig
	277, // 400: nr_rrc_definitions.v1.ReferenceSignalConfig.ssb_config_mobility:type_name -> nr_rrc_definitions.v1.SsbConfigMobility
	354, // 401: nr_rrc_definitions.v1.SsbToMeasureSsbConfigMobility.setup:type_name -> nr_rrc_definitions.v1.SsbToMeasure
	276, // 402: nr_rrc_definitions.v1.SsbConfigMobility.ssb_to_measure:type_name -> nr_rrc_definitions.v1.SsbToMeasureSsbConfigMobility
	280, // 403: nr_rrc_definitions.v1.MeasObjectToAddModList.value:type_name -> nr_rrc_definitions.v1.MeasObjectToAddMod
	274, // 404: nr_rrc_definitions.v1.MeasObjectMeasObjectToAddMod.meas_object_nr:type_name -> nr_rrc_definitions.v1.MeasObjectNr
	273, // 405: nr_rrc_definitions.v1.MeasObjectToAddMod.meas_object_id:type_name -> nr_rrc_definitions.v1.MeasObjectId
	279, // 406: nr_rrc_definitions.v1.MeasObjectToAddMod.meas_object:type_name -> nr_rrc_definitions.v1.MeasObjectMeasObjectToAddMod
	270, // 407: nr_rrc_definitions.v1.MeasResults.meas_id:type_name -> nr_rrc_definitions.v1.MeasId
	282, // 408: nr_rrc_definitions.v1.MeasResults.meas_result_serving_molist:type_name -> nr_rrc_definitions.v1.MeasResultServMolist
	283, // 409: nr_rrc_definitions.v1.MeasResultServMolist.value:type_name -> nr_rrc_definitions.v1.MeasResultServMo
	345, // 410: nr_rrc_definitions.v1.MeasResultServMo.serv_cell_id:type_name -> nr_rrc_definitions.v1.ServCellIndex
	287, // 411: nr_rrc_definitions.v1.MeasResultServMo.meas_result_serving_cell:type_name -> nr_rrc_definitions.v1.MeasResultNr
	288, // 412: nr_rrc_definitions.v1.CellResultsmeasResult.results_ssb_cell:type_name -> nr_rrc_definitions.v1.MeasQuantityResults
	288, // 413: nr_rrc_definitions.v1.CellResultsmeasResult.results_csi_rs_cell:type_name -> nr_rrc_definitions.v1.MeasQuantityResults
	289, // 414: nr_rrc_definitions.v1.RsIndexResultsmeasResult.results_ssb_indexes:type_name -> nr_rrc_definitions.v1.ResultsPerSsbIndexList
	291, // 415: nr_rrc_definitions.v1.RsIndexResultsmeasResult.results_csi_rs_indexes:type_name -> nr_rrc_definitions.v1.ResultsPerCsiRSIndexList
	284, // 416: nr_rrc_definitions.v1.MeasResultMeasResultNr.cell_results:type_name -> nr_rrc_definitions.v1.CellResultsmeasResult
	285, // 417: nr_rrc_definitions.v1.MeasResultMeasResultNr.rs_index_results:type_name -> nr_rrc_definitions.v1.RsIndexResultsmeasResult
	322, // 418: nr_rrc_definitions.v1.MeasResultNr.phys_cell_id:type_name -> nr_rrc_definitions.v1.PhysCellId
	286, // 419: nr_rrc_definitions.v1.MeasResultNr.meas_result:type_name -> nr_rrc_definitions.v1.MeasResultMeasResultNr
	337, // 420: nr_rrc_definitions.v1.MeasQuantityResults.rsrp:type_name -> nr_rrc_definitions.v1.RsrpRange
	338, // 421: nr_rrc_definitions.v1.MeasQuantityResults.rsrq:type_name -> nr_rrc_definitions.v1.RsrqRange
	351, // 422: nr_rrc_definitions.v1.MeasQuantityResults.sinr:type_name -> nr_rrc_definitions.v1.SinrRange
	290, // 423: nr_rrc_definitions.v1.ResultsPerSsbIndexList.value:type_name -> nr_rrc_definitions.v1.ResultsPerSsbIndex
	352, // 424: nr_rrc_definitions.v1.ResultsPerSsbIndex.ssb_index:type_name -> nr_rrc_definitions.v1.SsbIndex
	288, // 425: nr_rrc_definitions.v1.ResultsPerSsbIndex.ssb_results:type_name -> nr_rrc_definitions.v1.MeasQuantityResults
	292, // 426: nr_rrc_definitions.v1.ResultsPerCsiRSIndexList.value:type_name -> nr_rrc_definitions.v1.ResultsPerCsiRSIndex
	252, // 427: nr_rrc_definitions.v1.ResultsPerCsiRSIndex.csi_rs_index:type_name -> nr_rrc_definitions.v1.CsiRSIndex
	288, // 428: nr_rrc_definitions.v1.ResultsPerCsiRSIndex.csi_rs_results:type_name -> nr_rrc_definitions.v1.MeasQuantityResults
	263, // 429: nr_rrc_definitions.v1.MultiFrequencyBandListNr.value:type_name -> nr_rrc_definitions.v1.FreqBandIndicatorNr
	296, // 430: nr_rrc_definitions.v1.NzpCSiRSResource.nzp_csi_rs_resource_id:type_name -> nr_rrc_definitions.v1.NzpCSiRSResourceId
	255, // 431: nr_rrc_definitions.v1.NzpCSiRSResource.resource_mapping:type_name -> nr_rrc_definitions.v1.CsiRSResourceMapping
	41,  // 432: nr_rrc_definitions.v1.NzpCSiRSResource.power_control_offset_ss:type_name -> nr_rrc_definitions.v1.PowerControlOffsetSsnzpcsirsresource
	341, // 433: nr_rrc_definitions.v1.NzpCSiRSResource.scrambling_id:type_name -> nr_rrc_definitions.v1.ScramblingId
	251, // 434: nr_rrc_definitions.v1.NzpCSiRSResource.periodicity_and_offset:type_name -> nr_rrc_definitions.v1.CsiResourcePeriodicityAndOffset
	358, // 435: nr_rrc_definitions.v1.NzpCSiRSResource.qcl_info_periodic_csi_rs:type_name -> nr_rrc_definitions.v1.TciStateId
	300, // 436: nr_rrc_definitions.v1.NzpCSiRSResourceSet.nzp_csi_resource_set_id:type_name -> nr_rrc_definitions.v1.NzpCSiRSResourceSetId
	296, // 437: nr_rrc_definitions.v1.NzpCSiRSResourceSet.nzp_csi_rs_resources:type_name -> nr_rrc_definitions.v1.NzpCSiRSResourceId
	42,  // 438: nr_rrc_definitions.v1.NzpCSiRSResourceSet.repetition:type_name -> nr_rrc_definitions.v1.RepetitionNzpcsirsresourceSet
	43,  // 439: nr_rrc_definitions.v1.NzpCSiRSResourceSet.trs_info:type_name -> nr_rrc_definitions.v1.TrsInfoNzpcsirsresourceSet
	44,  // 440: nr_rrc_definitions.v1.NzpCSiRSResourceSet.pdc_info_r17:type_name -> nr_rrc_definitions.v1.PdcInfor17NzpcsirsresourceSet
	298, // 441: nr_rrc_definitions.v1.NzpCSiRSResourceSet.cmr_grouping_and_pairing_r17:type_name -> nr_rrc_definitions.v1.CmrgroupingAndPairingr17
	299, // 442: nr_rrc_definitions.v1.CmrgroupingAndPairingr17.pair1_of_nzp_csi_rs_r17:type_name -> nr_rrc_definitions.v1.NzpCSiRSPairingr17
	299, // 443: nr_rrc_definitions.v1.CmrgroupingAndPairingr17.pair2_of_nzp_csi_rs_r17:type_name -> nr_rrc_definitions.v1.NzpCSiRSPairingr17
	322, // 444: nr_rrc_definitions.v1.PciARfcnNRr16.phys_cell_id_r16:type_name -> nr_rrc_definitions.v1.PhysCellId
	144, // 445: nr_rrc_definitions.v1.PciARfcnNRr16.carrier_freq_r16:type_name -> nr_rrc_definitions.v1.ArfcnValueNr
	322, // 446: nr_rrc_definitions.v1.PciList.value:type_name -> nr_rrc_definitions.v1.PhysCellId
	322, // 447: nr_rrc_definitions.v1.PciRange.start:type_name -> nr_rrc_definitions.v1.PhysCellId
	45,  // 448: nr_rrc_definitions.v1.PciRange.range:type_name -> nr_rrc_definitions.v1.RangePcirange
	307, // 449: nr_rrc_definitions.v1.PciRangeElement.pci_range_index:type_name -> nr_rrc_definitions.v1.PciRangeIndex
	305, // 450: nr_rrc_definitions.v1.PciRangeElement.pci_range:type_name -> nr_rrc_definitions.v1.PciRange
	307, // 451: nr_rrc_definitions.v1.PciRangeIndexList.value:type_name -> nr_rrc_definitions.v1.PciRangeIndex
	197, // 452: nr_rrc_definitions.v1.PdcchConfigSib1.control_resource_set_zero:type_name -> nr_rrc_definitions.v1.ControlResourceSetZero
	343, // 453: nr_rrc_definitions.v1.PdcchConfigSib1.search_space_zero:type_name -> nr_rrc_definitions.v1.SearchSpaceZero
	355, // 454: nr_rrc_definitions.v1.ExplicitlistdlOrJointTciStateListr17.dl_or_joint_tci_state_to_add_mod_list_r17:type_name -> nr_rrc_definitions.v1.TciState
	358, // 455: nr_rrc_definitions.v1.ExplicitlistdlOrJointTciStateListr17.dl_or_joint_tci_state_to_release_list_r17:type_name -> nr_rrc_definitions.v1.TciStateId
	311, // 456: nr_rrc_definitions.v1.DlOrJointTciStateListr17PdschConfig.explicitlist:type_name -> nr_rrc_definitions.v1.ExplicitlistdlOrJointTciStateListr17
	344, // 457: nr_rrc_definitions.v1.DlOrJointTciStateListr17PdschConfig.unified_tci_state_ref_r17:type_name -> nr_rrc_definitions.v1.ServingCellAndBwpIdr17
	355, // 458: nr_rrc_definitions.v1.PdschConfig.tci_states_to_add_mod_list:type_name -> nr_rrc_definitions.v1.TciState
	358, // 459: nr_rrc_definitions.v1.PdschConfig.tci_states_to_release_list:type_name -> nr_rrc_definitions.v1.TciStateId
	312, // 460: nr_rrc_definitions.v1.PdschConfig.dl_or_joint_tci_state_list_r17:type_name -> nr_rrc_definitions.v1.DlOrJointTciStateListr17PdschConfig
	46,  // 461: nr_rrc_definitions.v1.PdschConfig.beam_app_time_r17:type_name -> nr_rrc_definitions.v1.BeamAppTimer17Pdschconfig
	315, // 462: nr_rrc_definitions.v1.PdschConfigCommon.pdsch_time_domain_allocation_list:type_name -> nr_rrc_definitions.v1.PdschTimeDomainResourceAllocationList
	316, // 463: nr_rrc_definitions.v1.PdschTimeDomainResourceAllocationList.value:type_name -> nr_rrc_definitions.v1.PdschTimeDomainResourceAllocation
	47,  // 464: nr_rrc_definitions.v1.PdschTimeDomainResourceAllocation.mapping_type:type_name -> nr_rrc_definitions.v1.MappingTypePdschtimeDomainResourceAllocation
	318, // 465: nr_rrc_definitions.v1.PdschTimeDomainResourceAllocationListr16.value:type_name -> nr_rrc_definitions.v1.PdschTimeDomainResourceAllocationr16
	48,  // 466: nr_rrc_definitions.v1.PdschTimeDomainResourceAllocationr16.mapping_type_r16:type_name -> nr_rrc_definitions.v1.MappingTyper16PdschtimeDomainResourceAllocationr16
	49,  // 467: nr_rrc_definitions.v1.PdschTimeDomainResourceAllocationr16.repetition_number_r16:type_name -> nr_rrc_definitions.v1.RepetitionNumberr16PdschtimeDomainResourceAllocationr16
	50,  // 468: nr_rrc_definitions.v1.PdschTimeDomainResourceAllocationr16.repetition_number_v1730:type_name -> nr_rrc_definitions.v1.RepetitionNumberv1730PdschtimeDomainResourceAllocationr16
	321, // 469: nr_rrc_definitions.v1.DummyTDraList.value:type_name -> nr_rrc_definitions.v1.MultiPdschTDrar17
	321, // 470: nr_rrc_definitions.v1.MultiPdschTDraListr17.value:type_name -> nr_rrc_definitions.v1.MultiPdschTDrar17
	318, // 471: nr_rrc_definitions.v1.MultiPdschTDrar17.pdsch_tdra_list_r17:type_name -> nr_rrc_definitions.v1.PdschTimeDomainResourceAllocationr16
	326, // 472: nr_rrc_definitions.v1.QuantityConfig.quantity_config_nr_list:type_name -> nr_rrc_definitions.v1.QuantityConfigNr
	327, // 473: nr_rrc_definitions.v1.QuantityConfigNr.quantity_config_cell:type_name -> nr_rrc_definitions.v1.QuantityConfigRs
	327, // 474: nr_rrc_definitions.v1.QuantityConfigNr.quantity_config_rs_index:type_name -> nr_rrc_definitions.v1.QuantityConfigRs
	328, // 475: nr_rrc_definitions.v1.QuantityConfigRs.ssb_filter_config:type_name -> nr_rrc_definitions.v1.FilterConfig
	328, // 476: nr_rrc_definitions.v1.QuantityConfigRs.csi_rs_filter_config:type_name -> nr_rrc_definitions.v1.FilterConfig
	40,  // 477: nr_rrc_definitions.v1.FilterConfig.filter_coefficient_rsrp:type_name -> nr_rrc_definitions.v1.FilterCoefficient
	40,  // 478: nr_rrc_definitions.v1.FilterConfig.filter_coefficient_rsrq:type_name -> nr_rrc_definitions.v1.FilterCoefficient
	40,  // 479: nr_rrc_definitions.v1.FilterConfig.filter_coefficient_rs_sinr:type_name -> nr_rrc_definitions.v1.FilterCoefficient
	332, // 480: nr_rrc_definitions.v1.ReportTypeReportConfigNr.periodical:type_name -> nr_rrc_definitions.v1.PeriodicalReportConfig
	330, // 481: nr_rrc_definitions.v1.ReportConfigNr.report_type:type_name -> nr_rrc_definitions.v1.ReportTypeReportConfigNr
	51,  // 482: nr_rrc_definitions.v1.PeriodicalReportConfig.rs_type:type_name -> nr_rrc_definitions.v1.NrRSType
	52,  // 483: nr_rrc_definitions.v1.PeriodicalReportConfig.report_interval:type_name -> nr_rrc_definitions.v1.ReportInterval
	333, // 484: nr_rrc_definitions.v1.PeriodicalReportConfig.report_quantity_cell:type_name -> nr_rrc_definitions.v1.MeasReportQuantity
	333, // 485: nr_rrc_definitions.v1.PeriodicalReportConfig.report_quantity_rs_indexes:type_name -> nr_rrc_definitions.v1.MeasReportQuantity
	336, // 486: nr_rrc_definitions.v1.ReportConfigToAddModList.value:type_name -> nr_rrc_definitions.v1.ReportConfigToAddMod
	331, // 487: nr_rrc_definitions.v1.ReportConfigReportConfigToAddMod.report_config_nr:type_name -> nr_rrc_definitions.v1.ReportConfigNr
	329, // 488: nr_rrc_definitions.v1.ReportConfigToAddMod.report_config_id:type_name -> nr_rrc_definitions.v1.ReportConfigId
	335, // 489: nr_rrc_definitions.v1.ReportConfigToAddMod.report_config:type_name -> nr_rrc_definitions.v1.ReportConfigReportConfigToAddMod
	340, // 490: nr_rrc_definitions.v1.ScellActivationRsConfigr17.scell_activation_rs_id_r17:type_name -> nr_rrc_definitions.v1.ScellActivationRsConfigIdr17
	300, // 491: nr_rrc_definitions.v1.ScellActivationRsConfigr17.resource_set_r17:type_name -> nr_rrc_definitions.v1.NzpCSiRSResourceSetId
	358, // 492: nr_rrc_definitions.v1.ScellActivationRsConfigr17.qcl_info_r17:type_name -> nr_rrc_definitions.v1.TciStateId
	54,  // 493: nr_rrc_definitions.v1.ScsSpecificCarrier.subcarrier_spacing:type_name -> nr_rrc_definitions.v1.SubcarrierSpacing
	345, // 494: nr_rrc_definitions.v1.ServingCellAndBwpIdr17.servingcell_r17:type_name -> nr_rrc_definitions.v1.ServCellIndex
	152, // 495: nr_rrc_definitions.v1.ServingCellAndBwpIdr17.bwp_r17:type_name -> nr_rrc_definitions.v1.BwpId
	215, // 496: nr_rrc_definitions.v1.CsiMeasConfigServingCellConfig.setup:type_name -> nr_rrc_definitions.v1.CsiMeasConfig
	151, // 497: nr_rrc_definitions.v1.ServingCellConfig.initial_downlink_bwp:type_name -> nr_rrc_definitions.v1.BwpDownlinkDedicated
	346, // 498: nr_rrc_definitions.v1.ServingCellConfig.csi_meas_config:type_name -> nr_rrc_definitions.v1.CsiMeasConfigServingCellConfig
	322, // 499: nr_rrc_definitions.v1.ServingCellConfigCommon.phys_cell_id:type_name -> nr_rrc_definitions.v1.PhysCellId
	262, // 500: nr_rrc_definitions.v1.ServingCellConfigCommon.downlink_config_common:type_name -> nr_rrc_definitions.v1.DownlinkConfigCommon
	736, // 501: nr_rrc_definitions.v1.SsbPositionsInBurstServingCellConfigCommonSib.in_one_group:type_name -> asn1.v1.BitString
	736, // 502: nr_rrc_definitions.v1.SsbPositionsInBurstServingCellConfigCommonSib.group_presence:type_name -> asn1.v1.BitString
	349, // 503: nr_rrc_definitions.v1.ServingCellConfigCommonSib.ssb_positions_in_burst:type_name -> nr_rrc_definitions.v1.SsbPositionsInBurstServingCellConfigCommonSib
	53,  // 504: nr_rrc_definitions.v1.ServingCellConfigCommonSib.ssb_periodicity_serving_cell:type_name -> nr_rrc_definitions.v1.SsbPeriodicityServingCellServingCellConfigCommonSib
	736, // 505: nr_rrc_definitions.v1.SsbToMeasure.short_bitmap:type_name -> asn1.v1.BitString
	736, // 506: nr_rrc_definitions.v1.SsbToMeasure.medium_bitmap:type_name -> asn1.v1.BitString
	736, // 507: nr_rrc_definitions.v1.SsbToMeasure.long_bitmap:type_name -> asn1.v1.BitString
	358, // 508: nr_rrc_definitions.v1.TciState.tci_state_id:type_name -> nr_rrc_definitions.v1.TciStateId
	357, // 509: nr_rrc_definitions.v1.TciState.qcl_type1:type_name -> nr_rrc_definitions.v1.QclInfo
	357, // 510: nr_rrc_definitions.v1.TciState.qcl_type2:type_name -> nr_rrc_definitions.v1.QclInfo
	353, // 511: nr_rrc_definitions.v1.TciState.additional_pci_r17:type_name -> nr_rrc_definitions.v1.AdditionalPciindexr17
	302, // 512: nr_rrc_definitions.v1.TciState.pathloss_reference_rs_id_r17:type_name -> nr_rrc_definitions.v1.PathlossReferenceRsIdr17
	369, // 513: nr_rrc_definitions.v1.TciState.ul_power_control_r17:type_name -> nr_rrc_definitions.v1.UplinkpowerControlIdr17
	296, // 514: nr_rrc_definitions.v1.ReferenceSignalQclInfo.csi_rs:type_name -> nr_rrc_definitions.v1.NzpCSiRSResourceId
	352, // 515: nr_rrc_definitions.v1.ReferenceSignalQclInfo.ssb:type_name -> nr_rrc_definitions.v1.SsbIndex
	345, // 516: nr_rrc_definitions.v1.QclInfo.cell:type_name -> nr_rrc_definitions.v1.ServCellIndex
	152, // 517: nr_rrc_definitions.v1.QclInfo.bwp_id:type_name -> nr_rrc_definitions.v1.BwpId
	356, // 518: nr_rrc_definitions.v1.QclInfo.reference_signal:type_name -> nr_rrc_definitions.v1.ReferenceSignalQclInfo
	55,  // 519: nr_rrc_definitions.v1.QclInfo.qcl_type:type_name -> nr_rrc_definitions.v1.QclTypeQclinfo
	363, // 520: nr_rrc_definitions.v1.TddULDLConfigDedicated.slot_specific_configurations_to_add_mod_list:type_name -> nr_rrc_definitions.v1.TddULDLSlotConfig
	368, // 521: nr_rrc_definitions.v1.TddULDLConfigDedicated.slot_specific_configurations_to_release_list:type_name -> nr_rrc_definitions.v1.TddULDLSlotIndex
	367, // 522: nr_rrc_definitions.v1.TddULDLConfigDedicatedIAbMTr16.slot_specific_configurations_to_add_mod_list_iab_mt_r16:type_name -> nr_rrc_definitions.v1.TddULDLSlotConfigIAbMTr16
	368, // 523: nr_rrc_definitions.v1.TddULDLConfigDedicatedIAbMTr16.slot_specific_configurations_to_release_list_iab_mt_r16:type_name -> nr_rrc_definitions.v1.TddULDLSlotIndex
	361, // 524: nr_rrc_definitions.v1.SymbolsTddULDLSlotConfig.explicit:type_name -> nr_rrc_definitions.v1.Explicitsymbols
	368, // 525: nr_rrc_definitions.v1.TddULDLSlotConfig.slot_index:type_name -> nr_rrc_definitions.v1.TddULDLSlotIndex
	362, // 526: nr_rrc_definitions.v1.TddULDLSlotConfig.symbols:type_name -> nr_rrc_definitions.v1.SymbolsTddULDLSlotConfig
	364, // 527: nr_rrc_definitions.v1.SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16.explicit_r16:type_name -> nr_rrc_definitions.v1.Explicitr16symbolsIAbMTr16
	365, // 528: nr_rrc_definitions.v1.SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16.explicit_iab_mt_r16:type_name -> nr_rrc_definitions.v1.ExplicitIAbMTr16symbolsIAbMTr16
	368, // 529: nr_rrc_definitions.v1.TddULDLSlotConfigIAbMTr16.slot_index_r16:type_name -> nr_rrc_definitions.v1.TddULDLSlotIndex
	366, // 530: nr_rrc_definitions.v1.TddULDLSlotConfigIAbMTr16.symbols_iab_mt_r16:type_name -> nr_rrc_definitions.v1.SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16
	56,  // 531: nr_rrc_definitions.v1.SetupdelayBudgetReportingConfig.delay_budget_reporting_prohibit_timer:type_name -> nr_rrc_definitions.v1.DelayBudgetReportingProhibitTimersetup
	370, // 532: nr_rrc_definitions.v1.DelayBudgetReportingConfigOtherConfig.setup:type_name -> nr_rrc_definitions.v1.SetupdelayBudgetReportingConfig
	371, // 533: nr_rrc_definitions.v1.OtherConfig.delay_budget_reporting_config:type_name -> nr_rrc_definitions.v1.DelayBudgetReportingConfigOtherConfig
	337, // 534: nr_rrc_definitions.v1.SMeasureConfigVarMeasConfig.ssb_rsrp:type_name -> nr_rrc_definitions.v1.RsrpRange
	337, // 535: nr_rrc_definitions.v1.SMeasureConfigVarMeasConfig.csi_rsrp:type_name -> nr_rrc_definitions.v1.RsrpRange
	271, // 536: nr_rrc_definitions.v1.VarMeasConfig.meas_id_list:type_name -> nr_rrc_definitions.v1.MeasIdToAddModList
	278, // 537: nr_rrc_definitions.v1.VarMeasConfig.meas_object_list:type_name -> nr_rrc_definitions.v1.MeasObjectToAddModList
	334, // 538: nr_rrc_definitions.v1.VarMeasConfig.report_config_list:type_name -> nr_rrc_definitions.v1.ReportConfigToAddModList
	325, // 539: nr_rrc_definitions.v1.VarMeasConfig.quantity_config:type_name -> nr_rrc_definitions.v1.QuantityConfig
	734, // 540: nr_rrc_definitions.v1.VarMeasConfig.s_measure_config:type_name -> nr_rrc_definitions.v1.SMeasureConfigVarMeasConfig
	541, // [541:541] is the sub-list for method output_type
	541, // [541:541] is the sub-list for method input_type
	541, // [541:541] is the sub-list for extension type_name
	541, // [541:541] is the sub-list for extension extendee
	0,   // [0:541] is the sub-list for field type_name
}

func init() { file_nr_rrc_definitions_proto_init() }
func file_nr_rrc_definitions_proto_init() {
	if File_nr_rrc_definitions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nr_rrc_definitions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BcchBChMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageClassExtensionBcchBChMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BcchBChMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BcchDLSChMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C1BcchDLSChMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageClassExtensionBcchDLSChMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BcchDLSChMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DlCCchMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C1DlCCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageClassExtensionDlCCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DlCCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DlDCchMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C1DlDCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageClassExtensionDlDCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DlDCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UlCCchMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C1UlCCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageClassExtensionUlCCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UlCCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UlCCch1Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C1UlCCch1MessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageClassExtensionUlCCch1MessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UlCCch1MessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UlDCchMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C1UlDCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2MessageClassExtension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageClassExtensionFuturer16MessageClassExtension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageClassExtensionUlDCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UlDCchMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CounterCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CounterCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DedicatedSibrequestr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DldedicatedMessageSegmentr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DlinformationTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DlinformationTransferMrdcr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FailureInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IabotherInformationr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationMeasurementIndication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggedMeasurementConfigurationr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MbsinterestIndicationr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*McgfailureInformationr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriticalExtensionsFuturecriticalExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriticalExtensionsMeasurementReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonCriticalExtensionMeasurementReportIEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementReportIEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementReportAppLayerr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mib); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobilityFromNrcommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rrcreestablishment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcreestablishmentComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcreestablishmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriticalExtensionsRrcreconfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rrcreconfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcreconfigurationIEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rrcreconfigurationv1530IEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rrcreconfigurationv1540IEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterKeyUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcreconfigurationComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rrcreject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rrcrelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rrcresume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcresumeComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcresumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcresumeRequest1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rrcsetup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcsetupComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcsetupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcsystemInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScgfailureInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScgfailureInformationEutra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityModeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityModeComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityModeFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sib1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SidelinkUeinformationNrr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeassistanceInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UecapabilityEnquiry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UecapabilityInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeinformationRequestr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeinformationResponser16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UepositioningAssistanceInfor17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UldedicatedMessageSegmentr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UlinformationTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UlinformationTransferIratr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UlinformationTransferMrdc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArfcnValueNr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bwp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BwpDownlink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdcchConfigCommonBwpDownlinkCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdschConfigCommonBwpDownlinkCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BwpDownlinkCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdschConfigBwpDownlinkDedicated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BwpDownlinkDedicated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BwpId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellGroupConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpCellConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReconfigurationWithSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwonrOfAntennaPorts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*N1N2MoreThanTwo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoreThanTwonrOfAntennaPorts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrOfAntennaPortstypeISinglePanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeISinglePanelsubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ngn1N2TypeIMultiPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeIMultiPanelsubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTypetype1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type1CodebookType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*N1N2CodebookSubsetRestrictiontypeIi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeIisubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeIiPortSelectionsubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTypetype2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type2CodebookType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookTypeCodebookConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*N1N2CodebookSubsetRestrictionr16TypeIir16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeIir16SubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeIiPortSelectionr16SubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTypetype2R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type2R16CodebookTyper16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookTyper16CodebookConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrOfAntennaPortstypeISinglePanelGroup1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeISinglePanelGroup1R17Type1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrOfAntennaPortstypeISinglePanelGroup2R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeISinglePanelGroup2R17Type1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type1R17CodebookTyper17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeIiPortSelectionr17Type2R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type2R17CodebookTyper17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookTyper17CodebookConfigr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookConfigr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type1V1730CodebookTypev1730); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookTypev1730CodebookConfigv1730); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookConfigv1730); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterleavedcceREgMappingType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CceREgMappingTypeControlResourceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlResourceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlResourceSetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlResourceSetIdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlResourceSetIdv1610); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlResourceSetZero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiAperiodicTriggerStateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiAperiodicTriggerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NzpCSiRSresourcesForChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcesForChannelCsiAssociatedReportConfigInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NzpCSiRS2R17ResourcesForChannel2R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcesForChannel2R17CsiAssociatedReportConfigInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiAssociatedReportConfigInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiFrequencyOccupation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pattern0CsiIMResourceElementPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pattern1CsiIMResourceElementPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiIMResourceElementPatternCsiIMResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiIMResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiIMResourceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiIMResourceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiIMResourceSetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AperiodicTriggerStateListCsiMeasConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemiPersistentOnPuschTriggerStateListCsiMeasConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiMeasConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeriodicreportConfigType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemiPersistentOnPucchreportConfigType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemiPersistentOnPuschreportConfigType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AperiodicreportConfigType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportConfigTypeCsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriRIi1CQireportQuantity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportQuantityCsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiReportingBandreportFreqConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportFreqConfigurationCsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisabledgroupBasedBeamReporting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupBasedBeamReportingCsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemiPersistentOnPuschv1530CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemiPersistentOnPuschv1610CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aperiodicv1610CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportQuantityr16CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupBasedBeamReportingv1710CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportQuantityr17CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemiPersistentOnPuschv1720CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aperiodicv1720CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiReportPeriodicityAndOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PucchCSiResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex8PortIndexFor8Ranks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex4PortIndexFor8Ranks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex2PortIndexFor8Ranks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndexFor8Ranks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiReportConfigId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NzpCSiRSSSbcsiRSResourceSetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiIMResourceSetListcsiRSResourceSetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiRSResourceSetListCsiResourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiResourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiResourceConfigId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiResourcePeriodicityAndOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiRSIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrequencyDomainAllocationCsiRSResourceMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DensityCsiRSResourceMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiRSResourceMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiSemiPersistentOnPuschTriggerStateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiSemiPersistentOnPuschTriggerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiSSbResourceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingAdditionalPciindexr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiSSbResourceSetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DedicatedNasMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownlinkConfigCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreqBandIndicatorNr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrequencyInfoDl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMeasureConfigMeasConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasObjectToRemoveList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasIdToRemoveList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportConfigToRemoveList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasIdToAddModList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasIdToAddMod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasObjectId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasObjectNr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferenceSignalConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsbToMeasureSsbConfigMobility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsbConfigMobility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasObjectToAddModList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasObjectMeasObjectToAddMod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasObjectToAddMod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasResultServMolist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasResultServMo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellResultsmeasResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RsIndexResultsmeasResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasResultMeasResultNr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasResultNr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasQuantityResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultsPerSsbIndexList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultsPerSsbIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultsPerCsiRSIndexList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultsPerCsiRSIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiFrequencyBandListNr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextHopChainingCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NzpCSiRSResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NzpCSiRSResourceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NzpCSiRSResourceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmrgroupingAndPairingr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NzpCSiRSPairingr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NzpCSiRSResourceSetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PMax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathlossReferenceRsIdr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PciARfcnNRr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PciList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PciRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PciRangeElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PciRangeIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PciRangeIndexList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdcchConfigCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdcchConfigSib1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExplicitlistdlOrJointTciStateListr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DlOrJointTciStateListr17PdschConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdschConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdschConfigCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdschTimeDomainResourceAllocationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdschTimeDomainResourceAllocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdschTimeDomainResourceAllocationListr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdschTimeDomainResourceAllocationr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DummyTDraList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiPdschTDraListr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiPdschTDrar17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhysCellId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PucchResourceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P0PUschAlphaSetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuantityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuantityConfigNr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuantityConfigRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportConfigId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportTypeReportConfigNr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportConfigNr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeriodicalReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasReportQuantity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportConfigToAddModList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportConfigReportConfigToAddMod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportConfigToAddMod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RsrpRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RsrqRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScellActivationRsConfigr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScellActivationRsConfigIdr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScramblingId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScsSpecificCarrier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSpaceZero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingCellAndBwpIdr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServCellIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiMeasConfigServingCellConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingCellConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingCellConfigCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsbPositionsInBurstServingCellConfigCommonSib); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[293].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingCellConfigCommonSib); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[294].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SinrRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[295].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsbIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[296].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalPciindexr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[297].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsbToMeasure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[298].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TciState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[299].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferenceSignalQclInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[300].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QclInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[301].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TciStateId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[302].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TddULDLConfigDedicated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[303].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TddULDLConfigDedicatedIAbMTr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[304].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Explicitsymbols); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[305].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolsTddULDLSlotConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[306].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TddULDLSlotConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[307].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Explicitr16SymbolsIAbMTr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[308].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExplicitIAbMTr16SymbolsIAbMTr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[309].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[310].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TddULDLSlotConfigIAbMTr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[311].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TddULDLSlotIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[312].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UplinkpowerControlIdr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[313].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupdelayBudgetReportingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[314].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelayBudgetReportingConfigOtherConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[315].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[316].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhysCellIdUtraFDdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[317].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcTransactionIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[318].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxAdditionalRachr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[319].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxAiDCiPayloadSizer16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[320].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxAiDCiPayloadSize1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[321].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBandComb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[322].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBandsUtraFDdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[323].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBhRLcChannelIdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[324].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBtIdReportr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[325].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBtNamer16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[326].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCagCellr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[327].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxTwoPucchGrpConfigListr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[328].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxTwoPucchGrpConfigListr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[329].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCbrConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[330].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCbrConfig1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[331].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCbrLevelr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[332].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCbrLevel1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[333].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellExcluded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[334].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellGroupingsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[335].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellHistoryr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[336].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPscellHistoryr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[337].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellInter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[338].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellIntra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[339].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellMeasEutra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[340].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellMeasIdler16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[341].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellMeasUtraFDdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[342].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellNtnr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[343].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCarrierTypePairListr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[344].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellAllowed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[345].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEarfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[346].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEutraCellExcluded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[347].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEutraNSPmax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[348].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFeatureCombPreamblesPerRachresourcer17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[349].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxLogMeasReportr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[350].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxMultiBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[351].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNarfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[352].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrNSPmax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[353].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqIdler16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[354].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofServingCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[355].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofServingCells1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[356].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofAggregatedCellsPerCellGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[357].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofAggregatedCellsPerCellGroupMinus4R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[358].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofDucellsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[359].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofAppLayerMeasr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[360].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofAppLayerMeas1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[361].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofAvailabilityCombinationsPerSetr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[362].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofAvailabilityCombinationsPerSet1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[363].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofIabresourceConfigr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[364].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofIabresourceConfig1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[365].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofScellActRsr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[366].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofScells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[367].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCellMeas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[368].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCrsIMInterfCellr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[369].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRelayMeasr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[370].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCgSLr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[371].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCgSL1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[372].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSlGCBCDRxQoSr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[373].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlRxInfoSetr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[374].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSsBlocksToAverage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[375].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCondCellsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[376].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCondCells1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[377].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesToAverage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[378].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofDlAllocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[379].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofDlAllocationsExtr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[380].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPduSessionsr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[381].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrConfigPerCellGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[382].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxLcgID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[383].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxLcgIDIAbr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[384].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxLcID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[385].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxLcIDIabr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[386].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxLteCRsPatternsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[387].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[388].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTags1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[389].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofBwps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[390].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCombIdc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[391].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSymbols1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[392].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[393].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlots1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[394].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPhysicalResourceBlocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[395].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPhysicalResourceBlocks1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[396].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPhysicalResourceBlocksPlus1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[397].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofControlResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[398].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofControlResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[399].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofControlResourceSets1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[400].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCoresetPoolsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[401].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCoReSetDuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[402].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSearchSpaces1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[403].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSearchSpacesLinks1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[404].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofBfdresourcePerSetr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[405].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSfiDCiPayloadSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[406].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSfiDCiPayloadSize1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[407].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxIabIPAddressr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[408].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxIntDCiPayloadSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[409].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxIntDCiPayloadSize1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[410].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRateMatchPatterns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[411].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRateMatchPatterns1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[412].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRateMatchPatternsPerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[413].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiReportConfigurations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[414].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiReportConfigurations1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[415].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiResourceConfigurations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[416].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiResourceConfigurations1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[417].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofApCSiRSResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[418].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrOfCsiAperiodicTriggers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[419].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofReportConfigPerAperiodicTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[420].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[421].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[422].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[423].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[424].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[425].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResourceSetsPerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[426].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResourcesPerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[427].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofZpCSiRSResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[428].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofZpCSiRSResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[429].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofZpCSiRSResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[430].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofZpCSiRSResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[431].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofZpCSiRSResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[432].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[433].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[434].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[435].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[436].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[437].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResourceSetsPerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[438].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiSSbResourcePerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[439].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiSSbResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[440].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiSSbResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[441].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiSSbResourceSetsPerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[442].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiSSbResourceSetsPerConfigExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[443].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofFailureDetectionResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[444].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofFailureDetectionResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[445].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofFailureDetectionResources1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[446].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofFreqSlr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[447].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlBWpsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[448].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqSlEUtrar16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[449].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlMeasIdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[450].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlObjectIdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[451].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlReportConfigIdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[452].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlPoolToMeasureNrr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[453].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqSlNRr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[454].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlQFisr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[455].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlQFisPerDestr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[456].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofObjectId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[457].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPageRec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[458].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPciRanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[459].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPlmn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[460].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxTacr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[461].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesRrm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[462].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesRrm1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[463].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMeasId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[464].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofQuantityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[465].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSCellsRrm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[466].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlDestr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[467].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlDest1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[468].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlrbr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[469].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSlLCidr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[470].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSlSyncConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[471].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRxpoolr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[472].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTxpoolr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[473].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPoolIdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[474].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPathlossReferenceRsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[475].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPathlossReferenceRs1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[476].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[477].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[478].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPosResourceSetsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[479].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPosResourceSets1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[480].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[481].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[482].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPosResourcesr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[483].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPosResources1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[484].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[485].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsTriggerStates1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[486].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsTriggerStates2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[487].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRatCapabilityContainers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[488].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSimultaneousBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[489].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxUltxSwitchingBandPairs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[490].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlotFormatCombinationsPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[491].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlotFormatCombinationsPerSet1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[492].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTrafficPatternr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[493].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[494].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[495].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[496].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[497].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[498].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchP0PerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[499].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchPathlossReferenceRss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[500].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchPathlossReferenceRss1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[501].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchPathlossReferenceRssr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[502].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchPathlossReferenceRss1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[503].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchPathlossReferenceRss1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[504].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchPathlossReferenceRssDiffr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[505].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourceGroupsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[506].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourcesPerGroupr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[507].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPowerControlSetInfosr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[508].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMultiplePuschsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[509].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofP0PUschAlphaSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[510].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofP0PUschAlphaSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[511].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPuschPathlossReferenceRss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[512].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPuschPathlossReferenceRss1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[513].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPuschPathlossReferenceRssr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[514].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPuschPathlossReferenceRss1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[515].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPuschPathlossReferenceRssDiffr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[516].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPathlossReferenceRssr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[517].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPathlossReferenceRss1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[518].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNaicsEntries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[519].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[520].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBandsMrdc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[521].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBandsEutra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[522].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[523].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxDrb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[524].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[525].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqLayers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[526].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqPlus1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[527].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqIdcr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[528].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCombIdcr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[529].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqIdcMRdc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[530].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCandidateBeams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[531].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCandidateBeamsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[532].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCandidateBeamsExtr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[533].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPcisPerSmtc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[534].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofQfis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[535].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofResourceAvailabilityPerCombinationr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[536].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrOfSemiPersistentPuschTriggers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[537].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[538].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlotFormatsPerCombination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[539].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpatialRelationInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[540].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpatialRelationInfosplus1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[541].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpatialRelationInfosr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[542].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpatialRelationInfosDiffr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[543].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofIndexesToReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[544].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofIndexesToReport2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[545].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSsbsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[546].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSsbs1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[547].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSNSsai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[548].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTciStatesPdcch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[549].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTciStates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[550].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTciStates1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[551].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxUlTCir17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[552].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxUlTCi1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[553].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofAdditionalPcir17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[554].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxMpeResourcesr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[555].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofUlAllocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[556].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxQfi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[557].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRaCSirsResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[558].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRaOccasionsPerCsirs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[559].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRaOccasions1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[560].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRaSSbResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[561].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxScss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[562].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSecondaryCellGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[563].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofServingCellsEutra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[564].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxMbsfnAllocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[565].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMultiBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[566].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellSftd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[567].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxReportConfigId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[568].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCodebooks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[569].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesExtr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[570].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesExtr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[571].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[572].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesAltr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[573].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesAlt1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[574].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSriPUschMappings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[575].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSriPUschMappings1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[576].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSib); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[577].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSiMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[578].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSibMessagePlus1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[579].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPoperPf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[580].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPeiperPfr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[581].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxAccessCat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[582].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBarringInfoSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[583].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellEutra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[584].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEutraCarrier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[585].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPlmnidentities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[586].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxDownlinkFeatureSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[587].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxUplinkFeatureSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[588].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEutraDLFeatureSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[589].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEutraULFeatureSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[590].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFeatureSetsPerBand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[591].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPerCcFeatureSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[592].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFeatureSetCombinations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[593].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxInterRatRStdFreq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[594].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxGinr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[595].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxHrnnLenr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[596].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNpnr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[597].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrOfMinSchedulingOffsetValuesr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[598].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxK0SchedulingOffsetr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[599].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxK2SchedulingOffsetr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[600].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxK0SchedulingOffsetr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[601].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxK2SchedulingOffsetr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[602].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxDci26Sizer16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[603].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxDci27Sizer17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[604].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxDci26Size1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[605].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofUlAllocationsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[606].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofP0PUschSetr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[607].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxOnDemandSibr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[608].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxOnDemandPosSibr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[609].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCiDCiPayloadSizer16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[610].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCiDCiPayloadSize1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[611].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxUuRelayRlcChannelIdr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[612].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxWlanIdReportr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[613].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxWlanNamer16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[614].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRareportr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[615].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxTxConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[616].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxTxConfig1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[617].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPsschTxConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[618].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCliRSsiResourcesr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[619].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCliRSsiResources1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[620].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCliSRsResourcesr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[621].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCliReportr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[622].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCcGroupr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[623].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofConfiguredGrantConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[624].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofConfiguredGrantConfig1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[625].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCgType2DeactivationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[626].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofConfiguredGrantConfigMac1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[627].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpsConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[628].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpsConfig1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[629].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpsDeactivationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[630].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPpwConfigr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[631].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPpwID1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[632].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrOfTxTegreportr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[633].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrOfTxTegID1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[634].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPagingSubgroupsr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[635].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourceGroups1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[636].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofReqComDcLocationr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[637].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofServingCellsTcir16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[638].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTxDcTwoCarrierr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[639].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRbSetGroupsr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[640].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRbSetsr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[641].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofEnhType3HarqACkr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[642].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofEnhType3HarqACk1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[643].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPrsResourcesPerSetr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[644].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPrsResourcesPerSet1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[645].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPrsResourceOffsetValue1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[646].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofGapIdr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[647].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPreConfigPosGapIdr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[648].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrOfGapPrir17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[649].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCefreportr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[650].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMultiplePdschsr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[651].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSliceInfor17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[652].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellSlicer17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[653].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTrsResourceSetsr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[654].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSearchSpaceGroups1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[655].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRemoteUer17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[656].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxDci42Sizer17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[657].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqMbsr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[658].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofDrxConfigPtmr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[659].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofDrxConfigPtm1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[660].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMbsServiceListPerUer17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[661].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMbsSessionr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[662].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMtchSSbMappingWindowr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[663].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMtchSSbMappingWindow1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[664].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMrbBroadcastr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[665].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPageGroupr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[666].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPdschConfigPtmr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[667].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPdschConfigPtm1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[668].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxGRNtir17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[669].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxGRNti1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[670].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxGCSRNtir17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[671].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxGCSRNti1R17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[672].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxMrbr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[673].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFsaiMBsr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[674].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNeighCellMbsr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[675].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPdcchBlindDetectionMixed1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[676].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPdcchBlindDetectionr17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[677].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMeasureConfigVarMeasConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nr_rrc_definitions_proto_msgTypes[678].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VarMeasConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nr_rrc_definitions_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*BcchBChMessageType_Mib)(nil),
		(*BcchBChMessageType_MessageClassExtension)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*C1BcchDLSChMessageType_SystemInformation)(nil),
		(*C1BcchDLSChMessageType_SystemInformationBlockType1)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*BcchDLSChMessageType_C1)(nil),
		(*BcchDLSChMessageType_MessageClassExtension)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*C1DlCCchMessageType_RrcReject)(nil),
		(*C1DlCCchMessageType_RrcSetup)(nil),
		(*C1DlCCchMessageType_Spare2)(nil),
		(*C1DlCCchMessageType_Spare1)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*DlCCchMessageType_C1)(nil),
		(*DlCCchMessageType_MessageClassExtension)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*C1DlDCchMessageType_RrcReconfiguration)(nil),
		(*C1DlDCchMessageType_RrcResume)(nil),
		(*C1DlDCchMessageType_RrcRelease)(nil),
		(*C1DlDCchMessageType_RrcReestablishment)(nil),
		(*C1DlDCchMessageType_SecurityModeCommand)(nil),
		(*C1DlDCchMessageType_DlInformationTransfer)(nil),
		(*C1DlDCchMessageType_UeCapabilityEnquiry)(nil),
		(*C1DlDCchMessageType_CounterCheck)(nil),
		(*C1DlDCchMessageType_MobilityFromNrcommand)(nil),
		(*C1DlDCchMessageType_DlDedicatedMessageSegmentR16)(nil),
		(*C1DlDCchMessageType_UeInformationRequestR16)(nil),
		(*C1DlDCchMessageType_DlInformationTransferMrdcR16)(nil),
		(*C1DlDCchMessageType_LoggedMeasurementConfigurationR16)(nil),
		(*C1DlDCchMessageType_Spare3)(nil),
		(*C1DlDCchMessageType_Spare2)(nil),
		(*C1DlDCchMessageType_Spare1)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*DlDCchMessageType_C1)(nil),
		(*DlDCchMessageType_MessageClassExtension)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*C1UlCCchMessageType_RrcSetupRequest)(nil),
		(*C1UlCCchMessageType_RrcResumeRequest)(nil),
		(*C1UlCCchMessageType_RrcReestablishmentRequest)(nil),
		(*C1UlCCchMessageType_RrcSystemInfoRequest)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*UlCCchMessageType_C1)(nil),
		(*UlCCchMessageType_MessageClassExtension)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*C1UlCCch1MessageType_RrcResumeRequest1)(nil),
		(*C1UlCCch1MessageType_Spare3)(nil),
		(*C1UlCCch1MessageType_Spare2)(nil),
		(*C1UlCCch1MessageType_Spare1)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*UlCCch1MessageType_C1)(nil),
		(*UlCCch1MessageType_MessageClassExtension)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*C1UlDCchMessageType_MeasurementReport)(nil),
		(*C1UlDCchMessageType_RrcReconfigurationComplete)(nil),
		(*C1UlDCchMessageType_RrcSetupComplete)(nil),
		(*C1UlDCchMessageType_RrcReestablishmentComplete)(nil),
		(*C1UlDCchMessageType_RrcResumeComplete)(nil),
		(*C1UlDCchMessageType_SecurityModeComplete)(nil),
		(*C1UlDCchMessageType_SecurityModeFailure)(nil),
		(*C1UlDCchMessageType_UlInformationTransfer)(nil),
		(*C1UlDCchMessageType_LocationMeasurementIndication)(nil),
		(*C1UlDCchMessageType_UeCapabilityInformation)(nil),
		(*C1UlDCchMessageType_CounterCheckResponse)(nil),
		(*C1UlDCchMessageType_UeAssistanceInformation)(nil),
		(*C1UlDCchMessageType_FailureInformation)(nil),
		(*C1UlDCchMessageType_UlInformationTransferMrdc)(nil),
		(*C1UlDCchMessageType_ScgFailureInformation)(nil),
		(*C1UlDCchMessageType_ScgFailureInformationEutra)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*C2MessageClassExtension_UlDedicatedMessageSegmentR16)(nil),
		(*C2MessageClassExtension_DedicatedSibrequestR16)(nil),
		(*C2MessageClassExtension_McgFailureInformationR16)(nil),
		(*C2MessageClassExtension_UeInformationResponseR16)(nil),
		(*C2MessageClassExtension_SidelinkUeinformationNrR16)(nil),
		(*C2MessageClassExtension_UlInformationTransferIratR16)(nil),
		(*C2MessageClassExtension_IabOtherInformationR16)(nil),
		(*C2MessageClassExtension_MbsInterestIndicationR17)(nil),
		(*C2MessageClassExtension_UePositioningAssistanceInfoR17)(nil),
		(*C2MessageClassExtension_MeasurementReportAppLayerR17)(nil),
		(*C2MessageClassExtension_Spare6)(nil),
		(*C2MessageClassExtension_Spare5)(nil),
		(*C2MessageClassExtension_Spare4)(nil),
		(*C2MessageClassExtension_Spare3)(nil),
		(*C2MessageClassExtension_Spare2)(nil),
		(*C2MessageClassExtension_Spare1)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*MessageClassExtensionUlDCchMessageType_C2)(nil),
		(*MessageClassExtensionUlDCchMessageType_MessageClassExtensionFutureR16)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*UlDCchMessageType_C1)(nil),
		(*UlDCchMessageType_MessageClassExtension)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*CriticalExtensionsMeasurementReport_MeasurementReport)(nil),
		(*CriticalExtensionsMeasurementReport_CriticalExtensionsFuture)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[45].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[52].OneofWrappers = []interface{}{
		(*CriticalExtensionsRrcreconfiguration_RrcReconfiguration)(nil),
		(*CriticalExtensionsRrcreconfiguration_CriticalExtensionsFuture)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[55].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[57].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[88].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[89].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[90].OneofWrappers = []interface{}{
		(*PdcchConfigCommonBwpDownlinkCommon_Release)(nil),
		(*PdcchConfigCommonBwpDownlinkCommon_Setup)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[91].OneofWrappers = []interface{}{
		(*PdschConfigCommonBwpDownlinkCommon_Release)(nil),
		(*PdschConfigCommonBwpDownlinkCommon_Setup)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[92].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[93].OneofWrappers = []interface{}{
		(*PdschConfigBwpDownlinkDedicated_Release)(nil),
		(*PdschConfigBwpDownlinkDedicated_Setup)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[96].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[97].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[98].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[100].OneofWrappers = []interface{}{
		(*N1N2MoreThanTwo_TwoOneTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_TwoTwoTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_FourOneTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_ThreeTwoTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_SixOneTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_FourTwoTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_EightOneTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_FourThreeTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_SixTwoTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_TwelveOneTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_FourFourTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_EightTwoTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_SixteenOneTypeISinglePanelRestriction)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[101].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[102].OneofWrappers = []interface{}{
		(*NrOfAntennaPortstypeISinglePanel_Two)(nil),
		(*NrOfAntennaPortstypeISinglePanel_MoreThanTwo)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[104].OneofWrappers = []interface{}{
		(*Ngn1N2TypeIMultiPanel_TwoTwoOneTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_TwoFourOneTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_FourTwoOneTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_TwoTwoTwoTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_TwoEightOneTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_FourFourOneTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_TwoFourTwoTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_FourTwoTwoTypeIMultiPanelRestriction)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[106].OneofWrappers = []interface{}{
		(*SubTypetype1_TypeISinglePanel)(nil),
		(*SubTypetype1_TypeIMultiPanel)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[108].OneofWrappers = []interface{}{
		(*N1N2CodebookSubsetRestrictiontypeIi_TwoOne)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_TwoTwo)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_FourOne)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_ThreeTwo)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_SixOne)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_FourTwo)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_EightOne)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_FourThree)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_SixTwo)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_TwelveOne)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_FourFour)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_EightTwo)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_SixteenOne)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[110].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[111].OneofWrappers = []interface{}{
		(*SubTypetype2_TypeIi)(nil),
		(*SubTypetype2_TypeIiPortSelection)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[113].OneofWrappers = []interface{}{
		(*CodebookTypeCodebookConfig_Type1)(nil),
		(*CodebookTypeCodebookConfig_Type2)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[115].OneofWrappers = []interface{}{
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoOne)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoTwo)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourOne)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_ThreeTwo)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixOne)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourTwo)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_EightOne)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourThree)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixTwo)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwelveOne)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourFour)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_EightTwo)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixteenOne)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[118].OneofWrappers = []interface{}{
		(*SubTypetype2R16_TypeIiR16)(nil),
		(*SubTypetype2R16_TypeIiPortSelectionR16)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[120].OneofWrappers = []interface{}{
		(*CodebookTyper16CodebookConfigr16_Type2R16)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[122].OneofWrappers = []interface{}{
		(*NrOfAntennaPortstypeISinglePanelGroup1R17_Two)(nil),
		(*NrOfAntennaPortstypeISinglePanelGroup1R17_MoreThanTwo)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[124].OneofWrappers = []interface{}{
		(*NrOfAntennaPortstypeISinglePanelGroup2R17_Two)(nil),
		(*NrOfAntennaPortstypeISinglePanelGroup2R17_MoreThanTwo)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[126].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[127].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[129].OneofWrappers = []interface{}{
		(*CodebookTyper17CodebookConfigr17_Type1R17)(nil),
		(*CodebookTyper17CodebookConfigr17_Type2R17)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[131].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[132].OneofWrappers = []interface{}{
		(*CodebookTypev1730CodebookConfigv1730_Type1V1730)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[134].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[135].OneofWrappers = []interface{}{
		(*CceREgMappingTypeControlResourceSet_Interleaved)(nil),
		(*CceREgMappingTypeControlResourceSet_NonInterleaved)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[136].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[142].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[144].OneofWrappers = []interface{}{
		(*ResourcesForChannelCsiAssociatedReportConfigInfo_NzpCsiRs)(nil),
		(*ResourcesForChannelCsiAssociatedReportConfigInfo_CsiSsbResourceSet)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[146].OneofWrappers = []interface{}{
		(*ResourcesForChannel2R17CsiAssociatedReportConfigInfo_NzpCsiRs2R17)(nil),
		(*ResourcesForChannel2R17CsiAssociatedReportConfigInfo_CsiSsbResourceSet2R17)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[147].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[151].OneofWrappers = []interface{}{
		(*CsiIMResourceElementPatternCsiIMResource_Pattern0)(nil),
		(*CsiIMResourceElementPatternCsiIMResource_Pattern1)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[152].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[156].OneofWrappers = []interface{}{
		(*AperiodicTriggerStateListCsiMeasConfig_Release)(nil),
		(*AperiodicTriggerStateListCsiMeasConfig_Setup)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[157].OneofWrappers = []interface{}{
		(*SemiPersistentOnPuschTriggerStateListCsiMeasConfig_Release)(nil),
		(*SemiPersistentOnPuschTriggerStateListCsiMeasConfig_Setup)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[158].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[163].OneofWrappers = []interface{}{
		(*ReportConfigTypeCsiReportConfig_Periodic)(nil),
		(*ReportConfigTypeCsiReportConfig_SemiPersistentOnPucch)(nil),
		(*ReportConfigTypeCsiReportConfig_SemiPersistentOnPusch)(nil),
		(*ReportConfigTypeCsiReportConfig_Aperiodic)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[164].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[165].OneofWrappers = []interface{}{
		(*ReportQuantityCsiReportConfig_None)(nil),
		(*ReportQuantityCsiReportConfig_CriRiPmiCqi)(nil),
		(*ReportQuantityCsiReportConfig_CriRiI1)(nil),
		(*ReportQuantityCsiReportConfig_CriRiI1Cqi)(nil),
		(*ReportQuantityCsiReportConfig_CriRiCqi)(nil),
		(*ReportQuantityCsiReportConfig_CriRsrp)(nil),
		(*ReportQuantityCsiReportConfig_SsbIndexRsrp)(nil),
		(*ReportQuantityCsiReportConfig_CriRiLiPmiCqi)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[166].OneofWrappers = []interface{}{
		(*CsiReportingBandreportFreqConfiguration_Subbands3)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands4)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands5)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands6)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands7)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands8)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands9)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands10)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands11)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands12)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands13)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands14)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands15)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands16)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands17)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands18)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands19V1530)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[167].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[168].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[169].OneofWrappers = []interface{}{
		(*GroupBasedBeamReportingCsiReportConfig_Enabled)(nil),
		(*GroupBasedBeamReportingCsiReportConfig_Disabled)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[173].OneofWrappers = []interface{}{
		(*ReportQuantityr16CsiReportConfig_CriSinrR16)(nil),
		(*ReportQuantityr16CsiReportConfig_SsbIndexSinrR16)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[175].OneofWrappers = []interface{}{
		(*ReportQuantityr17CsiReportConfig_CriRsrpIndexR17)(nil),
		(*ReportQuantityr17CsiReportConfig_SsbIndexRsrpIndexR17)(nil),
		(*ReportQuantityr17CsiReportConfig_CriSinrIndexR17)(nil),
		(*ReportQuantityr17CsiReportConfig_SsbIndexSinrIndexR17)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[178].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[179].OneofWrappers = []interface{}{
		(*CsiReportPeriodicityAndOffset_Slots4)(nil),
		(*CsiReportPeriodicityAndOffset_Slots5)(nil),
		(*CsiReportPeriodicityAndOffset_Slots8)(nil),
		(*CsiReportPeriodicityAndOffset_Slots10)(nil),
		(*CsiReportPeriodicityAndOffset_Slots16)(nil),
		(*CsiReportPeriodicityAndOffset_Slots20)(nil),
		(*CsiReportPeriodicityAndOffset_Slots40)(nil),
		(*CsiReportPeriodicityAndOffset_Slots80)(nil),
		(*CsiReportPeriodicityAndOffset_Slots160)(nil),
		(*CsiReportPeriodicityAndOffset_Slots320)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[181].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[182].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[183].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[184].OneofWrappers = []interface{}{
		(*PortIndexFor8Ranks_PortIndex8)(nil),
		(*PortIndexFor8Ranks_PortIndex4)(nil),
		(*PortIndexFor8Ranks_PortIndex2)(nil),
		(*PortIndexFor8Ranks_PortIndex1)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[191].OneofWrappers = []interface{}{
		(*CsiRSResourceSetListCsiResourceConfig_NzpCsiRsSsb)(nil),
		(*CsiRSResourceSetListCsiResourceConfig_CsiImResourceSetList)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[192].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[194].OneofWrappers = []interface{}{
		(*CsiResourcePeriodicityAndOffset_Slots4)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots5)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots8)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots10)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots16)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots20)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots32)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots40)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots64)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots80)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots160)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots320)(nil),
		(*CsiResourcePeriodicityAndOffset_Slots640)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[196].OneofWrappers = []interface{}{
		(*FrequencyDomainAllocationCsiRSResourceMapping_Row1)(nil),
		(*FrequencyDomainAllocationCsiRSResourceMapping_Row2)(nil),
		(*FrequencyDomainAllocationCsiRSResourceMapping_Row4)(nil),
		(*FrequencyDomainAllocationCsiRSResourceMapping_Other)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[197].OneofWrappers = []interface{}{
		(*DensityCsiRSResourceMapping_Dot5)(nil),
		(*DensityCsiRSResourceMapping_One)(nil),
		(*DensityCsiRSResourceMapping_Three)(nil),
		(*DensityCsiRSResourceMapping_Spare)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[198].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[200].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[205].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[207].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[208].OneofWrappers = []interface{}{
		(*SMeasureConfigMeasConfig_SsbRsrp)(nil),
		(*SMeasureConfigMeasConfig_CsiRsrp)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[209].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[217].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[218].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[219].OneofWrappers = []interface{}{
		(*SsbToMeasureSsbConfigMobility_Release)(nil),
		(*SsbToMeasureSsbConfigMobility_Setup)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[222].OneofWrappers = []interface{}{
		(*MeasObjectMeasObjectToAddMod_MeasObjectNr)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[227].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[228].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[229].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[230].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[231].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[233].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[235].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[238].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[240].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[241].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[248].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[255].OneofWrappers = []interface{}{
		(*DlOrJointTciStateListr17PdschConfig_Explicitlist)(nil),
		(*DlOrJointTciStateListr17PdschConfig_UnifiedTciStateRefR17)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[256].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[257].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[259].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[261].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[269].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[273].OneofWrappers = []interface{}{
		(*ReportTypeReportConfigNr_Periodical)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[275].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[278].OneofWrappers = []interface{}{
		(*ReportConfigReportConfigToAddMod_ReportConfigNr)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[282].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[285].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[289].OneofWrappers = []interface{}{
		(*CsiMeasConfigServingCellConfig_Release)(nil),
		(*CsiMeasConfigServingCellConfig_Setup)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[290].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[291].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[292].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[297].OneofWrappers = []interface{}{
		(*SsbToMeasure_ShortBitmap)(nil),
		(*SsbToMeasure_MediumBitmap)(nil),
		(*SsbToMeasure_LongBitmap)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[298].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[299].OneofWrappers = []interface{}{
		(*ReferenceSignalQclInfo_CsiRs)(nil),
		(*ReferenceSignalQclInfo_Ssb)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[300].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[304].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[305].OneofWrappers = []interface{}{
		(*SymbolsTddULDLSlotConfig_AllDownlink)(nil),
		(*SymbolsTddULDLSlotConfig_AllUplink)(nil),
		(*SymbolsTddULDLSlotConfig_Explicit)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[307].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[308].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[309].OneofWrappers = []interface{}{
		(*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_AllDownlinkR16)(nil),
		(*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_AllUplinkR16)(nil),
		(*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_ExplicitR16)(nil),
		(*SymbolsIAbMTr16TddULDLSlotConfigIAbMTr16_ExplicitIabMtR16)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[314].OneofWrappers = []interface{}{
		(*DelayBudgetReportingConfigOtherConfig_Release)(nil),
		(*DelayBudgetReportingConfigOtherConfig_Setup)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[315].OneofWrappers = []interface{}{}
	file_nr_rrc_definitions_proto_msgTypes[677].OneofWrappers = []interface{}{
		(*SMeasureConfigVarMeasConfig_SsbRsrp)(nil),
		(*SMeasureConfigVarMeasConfig_CsiRsrp)(nil),
	}
	file_nr_rrc_definitions_proto_msgTypes[678].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nr_rrc_definitions_proto_rawDesc,
			NumEnums:      57,
			NumMessages:   679,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nr_rrc_definitions_proto_goTypes,
		DependencyIndexes: file_nr_rrc_definitions_proto_depIdxs,
		EnumInfos:         file_nr_rrc_definitions_proto_enumTypes,
		MessageInfos:      file_nr_rrc_definitions_proto_msgTypes,
	}.Build()
	File_nr_rrc_definitions_proto = out.File
	file_nr_rrc_definitions_proto_rawDesc = nil
	file_nr_rrc_definitions_proto_goTypes = nil
	file_nr_rrc_definitions_proto_depIdxs = nil
}
