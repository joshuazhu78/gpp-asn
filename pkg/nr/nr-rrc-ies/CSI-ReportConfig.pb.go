////////////////////// nr-rrc-ies.proto //////////////////////
// Protobuf generated from /CSI-ReportConfig.asn1 by asn1c-0.9.29
// NR-RRC-IEs { iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) threeGPP(10415) version2(2) rrc(2) nr-RRC-IEs(100) }

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.4
// source: CSI-ReportConfig.proto

package nrrrcies

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	asn1 "github.com/onosproject/onos-lib-go/api/asn1/v1/asn1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enumerated from CSI-ReportConfig.asn1:32
type ReportSlotConfigsemiPersistentOnPusch int32

const (
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL5   ReportSlotConfigsemiPersistentOnPusch = 0
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL10  ReportSlotConfigsemiPersistentOnPusch = 1
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL20  ReportSlotConfigsemiPersistentOnPusch = 2
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL40  ReportSlotConfigsemiPersistentOnPusch = 3
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL80  ReportSlotConfigsemiPersistentOnPusch = 4
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL160 ReportSlotConfigsemiPersistentOnPusch = 5
	ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL320 ReportSlotConfigsemiPersistentOnPusch = 6
)

// Enum value maps for ReportSlotConfigsemiPersistentOnPusch.
var (
	ReportSlotConfigsemiPersistentOnPusch_name = map[int32]string{
		0: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL5",
		1: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL10",
		2: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL20",
		3: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL40",
		4: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL80",
		5: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL160",
		6: "REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL320",
	}
	ReportSlotConfigsemiPersistentOnPusch_value = map[string]int32{
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL5":   0,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL10":  1,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL20":  2,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL40":  3,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL80":  4,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL160": 5,
		"REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL320": 6,
	}
)

func (x ReportSlotConfigsemiPersistentOnPusch) Enum() *ReportSlotConfigsemiPersistentOnPusch {
	p := new(ReportSlotConfigsemiPersistentOnPusch)
	*p = x
	return p
}

func (x ReportSlotConfigsemiPersistentOnPusch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportSlotConfigsemiPersistentOnPusch) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[0].Descriptor()
}

func (ReportSlotConfigsemiPersistentOnPusch) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[0]
}

func (x ReportSlotConfigsemiPersistentOnPusch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportSlotConfigsemiPersistentOnPusch.Descriptor instead.
func (ReportSlotConfigsemiPersistentOnPusch) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{0}
}

// enumerated from CSI-ReportConfig.asn1:45
type PdschBundleSizeForCsicriRii1Cqi int32

const (
	PdschBundleSizeForCsicriRii1Cqi_PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N2 PdschBundleSizeForCsicriRii1Cqi = 0
	PdschBundleSizeForCsicriRii1Cqi_PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N4 PdschBundleSizeForCsicriRii1Cqi = 1
)

// Enum value maps for PdschBundleSizeForCsicriRii1Cqi.
var (
	PdschBundleSizeForCsicriRii1Cqi_name = map[int32]string{
		0: "PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N2",
		1: "PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N4",
	}
	PdschBundleSizeForCsicriRii1Cqi_value = map[string]int32{
		"PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N2": 0,
		"PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N4": 1,
	}
)

func (x PdschBundleSizeForCsicriRii1Cqi) Enum() *PdschBundleSizeForCsicriRii1Cqi {
	p := new(PdschBundleSizeForCsicriRii1Cqi)
	*p = x
	return p
}

func (x PdschBundleSizeForCsicriRii1Cqi) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PdschBundleSizeForCsicriRii1Cqi) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[1].Descriptor()
}

func (PdschBundleSizeForCsicriRii1Cqi) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[1]
}

func (x PdschBundleSizeForCsicriRii1Cqi) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PdschBundleSizeForCsicriRii1Cqi.Descriptor instead.
func (PdschBundleSizeForCsicriRii1Cqi) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{1}
}

// enumerated from CSI-ReportConfig.asn1:53
type CqiFormatIndicatorreportFreqConfiguration int32

const (
	CqiFormatIndicatorreportFreqConfiguration_CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_CQI CqiFormatIndicatorreportFreqConfiguration = 0
	CqiFormatIndicatorreportFreqConfiguration_CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_CQI  CqiFormatIndicatorreportFreqConfiguration = 1
)

// Enum value maps for CqiFormatIndicatorreportFreqConfiguration.
var (
	CqiFormatIndicatorreportFreqConfiguration_name = map[int32]string{
		0: "CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_CQI",
		1: "CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_CQI",
	}
	CqiFormatIndicatorreportFreqConfiguration_value = map[string]int32{
		"CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_CQI": 0,
		"CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_CQI":  1,
	}
)

func (x CqiFormatIndicatorreportFreqConfiguration) Enum() *CqiFormatIndicatorreportFreqConfiguration {
	p := new(CqiFormatIndicatorreportFreqConfiguration)
	*p = x
	return p
}

func (x CqiFormatIndicatorreportFreqConfiguration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CqiFormatIndicatorreportFreqConfiguration) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[2].Descriptor()
}

func (CqiFormatIndicatorreportFreqConfiguration) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[2]
}

func (x CqiFormatIndicatorreportFreqConfiguration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CqiFormatIndicatorreportFreqConfiguration.Descriptor instead.
func (CqiFormatIndicatorreportFreqConfiguration) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{2}
}

// enumerated from CSI-ReportConfig.asn1:54
type PmiFormatIndicatorreportFreqConfiguration int32

const (
	PmiFormatIndicatorreportFreqConfiguration_PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_PMI PmiFormatIndicatorreportFreqConfiguration = 0
	PmiFormatIndicatorreportFreqConfiguration_PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_PMI  PmiFormatIndicatorreportFreqConfiguration = 1
)

// Enum value maps for PmiFormatIndicatorreportFreqConfiguration.
var (
	PmiFormatIndicatorreportFreqConfiguration_name = map[int32]string{
		0: "PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_PMI",
		1: "PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_PMI",
	}
	PmiFormatIndicatorreportFreqConfiguration_value = map[string]int32{
		"PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_PMI": 0,
		"PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_SUBBAND_PMI":  1,
	}
)

func (x PmiFormatIndicatorreportFreqConfiguration) Enum() *PmiFormatIndicatorreportFreqConfiguration {
	p := new(PmiFormatIndicatorreportFreqConfiguration)
	*p = x
	return p
}

func (x PmiFormatIndicatorreportFreqConfiguration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PmiFormatIndicatorreportFreqConfiguration) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[3].Descriptor()
}

func (PmiFormatIndicatorreportFreqConfiguration) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[3]
}

func (x PmiFormatIndicatorreportFreqConfiguration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PmiFormatIndicatorreportFreqConfiguration.Descriptor instead.
func (PmiFormatIndicatorreportFreqConfiguration) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{3}
}

// enumerated from CSI-ReportConfig.asn1:77
type TimeRestrictionForChannelMeasurementsCsireportConfig int32

const (
	TimeRestrictionForChannelMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED     TimeRestrictionForChannelMeasurementsCsireportConfig = 0
	TimeRestrictionForChannelMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED TimeRestrictionForChannelMeasurementsCsireportConfig = 1
)

// Enum value maps for TimeRestrictionForChannelMeasurementsCsireportConfig.
var (
	TimeRestrictionForChannelMeasurementsCsireportConfig_name = map[int32]string{
		0: "TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED",
		1: "TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED",
	}
	TimeRestrictionForChannelMeasurementsCsireportConfig_value = map[string]int32{
		"TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED":     0,
		"TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED": 1,
	}
)

func (x TimeRestrictionForChannelMeasurementsCsireportConfig) Enum() *TimeRestrictionForChannelMeasurementsCsireportConfig {
	p := new(TimeRestrictionForChannelMeasurementsCsireportConfig)
	*p = x
	return p
}

func (x TimeRestrictionForChannelMeasurementsCsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeRestrictionForChannelMeasurementsCsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[4].Descriptor()
}

func (TimeRestrictionForChannelMeasurementsCsireportConfig) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[4]
}

func (x TimeRestrictionForChannelMeasurementsCsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeRestrictionForChannelMeasurementsCsireportConfig.Descriptor instead.
func (TimeRestrictionForChannelMeasurementsCsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{4}
}

// enumerated from CSI-ReportConfig.asn1:78
type TimeRestrictionForInterferenceMeasurementsCsireportConfig int32

const (
	TimeRestrictionForInterferenceMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED     TimeRestrictionForInterferenceMeasurementsCsireportConfig = 0
	TimeRestrictionForInterferenceMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED TimeRestrictionForInterferenceMeasurementsCsireportConfig = 1
)

// Enum value maps for TimeRestrictionForInterferenceMeasurementsCsireportConfig.
var (
	TimeRestrictionForInterferenceMeasurementsCsireportConfig_name = map[int32]string{
		0: "TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED",
		1: "TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED",
	}
	TimeRestrictionForInterferenceMeasurementsCsireportConfig_value = map[string]int32{
		"TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED":     0,
		"TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_NOT_CONFIGURED": 1,
	}
)

func (x TimeRestrictionForInterferenceMeasurementsCsireportConfig) Enum() *TimeRestrictionForInterferenceMeasurementsCsireportConfig {
	p := new(TimeRestrictionForInterferenceMeasurementsCsireportConfig)
	*p = x
	return p
}

func (x TimeRestrictionForInterferenceMeasurementsCsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeRestrictionForInterferenceMeasurementsCsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[5].Descriptor()
}

func (TimeRestrictionForInterferenceMeasurementsCsireportConfig) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[5]
}

func (x TimeRestrictionForInterferenceMeasurementsCsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeRestrictionForInterferenceMeasurementsCsireportConfig.Descriptor instead.
func (TimeRestrictionForInterferenceMeasurementsCsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{5}
}

// enumerated from CSI-ReportConfig.asn1:80
type DummyCsireportConfig int32

const (
	DummyCsireportConfig_DUMMY_CSIREPORT_CONFIG_N1 DummyCsireportConfig = 0
	DummyCsireportConfig_DUMMY_CSIREPORT_CONFIG_N2 DummyCsireportConfig = 1
)

// Enum value maps for DummyCsireportConfig.
var (
	DummyCsireportConfig_name = map[int32]string{
		0: "DUMMY_CSIREPORT_CONFIG_N1",
		1: "DUMMY_CSIREPORT_CONFIG_N2",
	}
	DummyCsireportConfig_value = map[string]int32{
		"DUMMY_CSIREPORT_CONFIG_N1": 0,
		"DUMMY_CSIREPORT_CONFIG_N2": 1,
	}
)

func (x DummyCsireportConfig) Enum() *DummyCsireportConfig {
	p := new(DummyCsireportConfig)
	*p = x
	return p
}

func (x DummyCsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DummyCsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[6].Descriptor()
}

func (DummyCsireportConfig) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[6]
}

func (x DummyCsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DummyCsireportConfig.Descriptor instead.
func (DummyCsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{6}
}

// enumerated from CSI-ReportConfig.asn1:84
type NrofReportedRsdisabled int32

const (
	NrofReportedRsdisabled_NROF_REPORTED_RSDISABLED_N1 NrofReportedRsdisabled = 0
	NrofReportedRsdisabled_NROF_REPORTED_RSDISABLED_N2 NrofReportedRsdisabled = 1
	NrofReportedRsdisabled_NROF_REPORTED_RSDISABLED_N3 NrofReportedRsdisabled = 2
	NrofReportedRsdisabled_NROF_REPORTED_RSDISABLED_N4 NrofReportedRsdisabled = 3
)

// Enum value maps for NrofReportedRsdisabled.
var (
	NrofReportedRsdisabled_name = map[int32]string{
		0: "NROF_REPORTED_RSDISABLED_N1",
		1: "NROF_REPORTED_RSDISABLED_N2",
		2: "NROF_REPORTED_RSDISABLED_N3",
		3: "NROF_REPORTED_RSDISABLED_N4",
	}
	NrofReportedRsdisabled_value = map[string]int32{
		"NROF_REPORTED_RSDISABLED_N1": 0,
		"NROF_REPORTED_RSDISABLED_N2": 1,
		"NROF_REPORTED_RSDISABLED_N3": 2,
		"NROF_REPORTED_RSDISABLED_N4": 3,
	}
)

func (x NrofReportedRsdisabled) Enum() *NrofReportedRsdisabled {
	p := new(NrofReportedRsdisabled)
	*p = x
	return p
}

func (x NrofReportedRsdisabled) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NrofReportedRsdisabled) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[7].Descriptor()
}

func (NrofReportedRsdisabled) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[7]
}

func (x NrofReportedRsdisabled) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NrofReportedRsdisabled.Descriptor instead.
func (NrofReportedRsdisabled) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{7}
}

// enumerated from CSI-ReportConfig.asn1:87
type CqiTableCsireportConfig int32

const (
	CqiTableCsireportConfig_CQI_TABLE_CSIREPORT_CONFIG_TABLE1 CqiTableCsireportConfig = 0
	CqiTableCsireportConfig_CQI_TABLE_CSIREPORT_CONFIG_TABLE2 CqiTableCsireportConfig = 1
	CqiTableCsireportConfig_CQI_TABLE_CSIREPORT_CONFIG_TABLE3 CqiTableCsireportConfig = 2
	CqiTableCsireportConfig_CQI_TABLE_CSIREPORT_CONFIG_SPARE1 CqiTableCsireportConfig = 3
)

// Enum value maps for CqiTableCsireportConfig.
var (
	CqiTableCsireportConfig_name = map[int32]string{
		0: "CQI_TABLE_CSIREPORT_CONFIG_TABLE1",
		1: "CQI_TABLE_CSIREPORT_CONFIG_TABLE2",
		2: "CQI_TABLE_CSIREPORT_CONFIG_TABLE3",
		3: "CQI_TABLE_CSIREPORT_CONFIG_SPARE1",
	}
	CqiTableCsireportConfig_value = map[string]int32{
		"CQI_TABLE_CSIREPORT_CONFIG_TABLE1": 0,
		"CQI_TABLE_CSIREPORT_CONFIG_TABLE2": 1,
		"CQI_TABLE_CSIREPORT_CONFIG_TABLE3": 2,
		"CQI_TABLE_CSIREPORT_CONFIG_SPARE1": 3,
	}
)

func (x CqiTableCsireportConfig) Enum() *CqiTableCsireportConfig {
	p := new(CqiTableCsireportConfig)
	*p = x
	return p
}

func (x CqiTableCsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CqiTableCsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[8].Descriptor()
}

func (CqiTableCsireportConfig) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[8]
}

func (x CqiTableCsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CqiTableCsireportConfig.Descriptor instead.
func (CqiTableCsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{8}
}

// enumerated from CSI-ReportConfig.asn1:88
type SubbandSizeCsireportConfig int32

const (
	SubbandSizeCsireportConfig_SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE1 SubbandSizeCsireportConfig = 0
	SubbandSizeCsireportConfig_SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE2 SubbandSizeCsireportConfig = 1
)

// Enum value maps for SubbandSizeCsireportConfig.
var (
	SubbandSizeCsireportConfig_name = map[int32]string{
		0: "SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE1",
		1: "SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE2",
	}
	SubbandSizeCsireportConfig_value = map[string]int32{
		"SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE1": 0,
		"SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE2": 1,
	}
)

func (x SubbandSizeCsireportConfig) Enum() *SubbandSizeCsireportConfig {
	p := new(SubbandSizeCsireportConfig)
	*p = x
	return p
}

func (x SubbandSizeCsireportConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubbandSizeCsireportConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[9].Descriptor()
}

func (SubbandSizeCsireportConfig) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[9]
}

func (x SubbandSizeCsireportConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubbandSizeCsireportConfig.Descriptor instead.
func (SubbandSizeCsireportConfig) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{9}
}

// enumerated from CSI-ReportConfig.asn1:93
type ReportSlotConfigv1530SemiPersistentOnPuschv1530 int32

const (
	ReportSlotConfigv1530SemiPersistentOnPuschv1530_REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL4  ReportSlotConfigv1530SemiPersistentOnPuschv1530 = 0
	ReportSlotConfigv1530SemiPersistentOnPuschv1530_REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL8  ReportSlotConfigv1530SemiPersistentOnPuschv1530 = 1
	ReportSlotConfigv1530SemiPersistentOnPuschv1530_REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL16 ReportSlotConfigv1530SemiPersistentOnPuschv1530 = 2
)

// Enum value maps for ReportSlotConfigv1530SemiPersistentOnPuschv1530.
var (
	ReportSlotConfigv1530SemiPersistentOnPuschv1530_name = map[int32]string{
		0: "REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL4",
		1: "REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL8",
		2: "REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL16",
	}
	ReportSlotConfigv1530SemiPersistentOnPuschv1530_value = map[string]int32{
		"REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL4":  0,
		"REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL8":  1,
		"REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL16": 2,
	}
)

func (x ReportSlotConfigv1530SemiPersistentOnPuschv1530) Enum() *ReportSlotConfigv1530SemiPersistentOnPuschv1530 {
	p := new(ReportSlotConfigv1530SemiPersistentOnPuschv1530)
	*p = x
	return p
}

func (x ReportSlotConfigv1530SemiPersistentOnPuschv1530) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportSlotConfigv1530SemiPersistentOnPuschv1530) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[10].Descriptor()
}

func (ReportSlotConfigv1530SemiPersistentOnPuschv1530) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[10]
}

func (x ReportSlotConfigv1530SemiPersistentOnPuschv1530) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportSlotConfigv1530SemiPersistentOnPuschv1530.Descriptor instead.
func (ReportSlotConfigv1530SemiPersistentOnPuschv1530) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{10}
}

// enumerated from CSI-ReportConfig.asn1:245
type PortSelectionSamplingSizetypeIiportSelection int32

const (
	PortSelectionSamplingSizetypeIiportSelection_PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N1 PortSelectionSamplingSizetypeIiportSelection = 0
	PortSelectionSamplingSizetypeIiportSelection_PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N2 PortSelectionSamplingSizetypeIiportSelection = 1
	PortSelectionSamplingSizetypeIiportSelection_PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N3 PortSelectionSamplingSizetypeIiportSelection = 2
	PortSelectionSamplingSizetypeIiportSelection_PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N4 PortSelectionSamplingSizetypeIiportSelection = 3
)

// Enum value maps for PortSelectionSamplingSizetypeIiportSelection.
var (
	PortSelectionSamplingSizetypeIiportSelection_name = map[int32]string{
		0: "PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N1",
		1: "PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N2",
		2: "PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N3",
		3: "PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N4",
	}
	PortSelectionSamplingSizetypeIiportSelection_value = map[string]int32{
		"PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N1": 0,
		"PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N2": 1,
		"PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N3": 2,
		"PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N4": 3,
	}
)

func (x PortSelectionSamplingSizetypeIiportSelection) Enum() *PortSelectionSamplingSizetypeIiportSelection {
	p := new(PortSelectionSamplingSizetypeIiportSelection)
	*p = x
	return p
}

func (x PortSelectionSamplingSizetypeIiportSelection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortSelectionSamplingSizetypeIiportSelection) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[11].Descriptor()
}

func (PortSelectionSamplingSizetypeIiportSelection) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[11]
}

func (x PortSelectionSamplingSizetypeIiportSelection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortSelectionSamplingSizetypeIiportSelection.Descriptor instead.
func (PortSelectionSamplingSizetypeIiportSelection) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{11}
}

// enumerated from CSI-ReportConfig.asn1:249
type PhaseAlphabetSizetype2 int32

const (
	PhaseAlphabetSizetype2_PHASE_ALPHABET_SIZETYPE2_N4 PhaseAlphabetSizetype2 = 0
	PhaseAlphabetSizetype2_PHASE_ALPHABET_SIZETYPE2_N8 PhaseAlphabetSizetype2 = 1
)

// Enum value maps for PhaseAlphabetSizetype2.
var (
	PhaseAlphabetSizetype2_name = map[int32]string{
		0: "PHASE_ALPHABET_SIZETYPE2_N4",
		1: "PHASE_ALPHABET_SIZETYPE2_N8",
	}
	PhaseAlphabetSizetype2_value = map[string]int32{
		"PHASE_ALPHABET_SIZETYPE2_N4": 0,
		"PHASE_ALPHABET_SIZETYPE2_N8": 1,
	}
)

func (x PhaseAlphabetSizetype2) Enum() *PhaseAlphabetSizetype2 {
	p := new(PhaseAlphabetSizetype2)
	*p = x
	return p
}

func (x PhaseAlphabetSizetype2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhaseAlphabetSizetype2) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[12].Descriptor()
}

func (PhaseAlphabetSizetype2) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[12]
}

func (x PhaseAlphabetSizetype2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhaseAlphabetSizetype2.Descriptor instead.
func (PhaseAlphabetSizetype2) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{12}
}

// enumerated from CSI-ReportConfig.asn1:251
type NumberOfBeamstype2 int32

const (
	NumberOfBeamstype2_NUMBER_OF_BEAMSTYPE2_TWO   NumberOfBeamstype2 = 0
	NumberOfBeamstype2_NUMBER_OF_BEAMSTYPE2_THREE NumberOfBeamstype2 = 1
	NumberOfBeamstype2_NUMBER_OF_BEAMSTYPE2_FOUR  NumberOfBeamstype2 = 2
)

// Enum value maps for NumberOfBeamstype2.
var (
	NumberOfBeamstype2_name = map[int32]string{
		0: "NUMBER_OF_BEAMSTYPE2_TWO",
		1: "NUMBER_OF_BEAMSTYPE2_THREE",
		2: "NUMBER_OF_BEAMSTYPE2_FOUR",
	}
	NumberOfBeamstype2_value = map[string]int32{
		"NUMBER_OF_BEAMSTYPE2_TWO":   0,
		"NUMBER_OF_BEAMSTYPE2_THREE": 1,
		"NUMBER_OF_BEAMSTYPE2_FOUR":  2,
	}
)

func (x NumberOfBeamstype2) Enum() *NumberOfBeamstype2 {
	p := new(NumberOfBeamstype2)
	*p = x
	return p
}

func (x NumberOfBeamstype2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NumberOfBeamstype2) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[13].Descriptor()
}

func (NumberOfBeamstype2) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[13]
}

func (x NumberOfBeamstype2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NumberOfBeamstype2.Descriptor instead.
func (NumberOfBeamstype2) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{13}
}

// enumerated from CSI-ReportConfig.asn1:279
type PortSelectionSamplingSizer16TypeIiportSelectionr16 int32

const (
	PortSelectionSamplingSizer16TypeIiportSelectionr16_PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N1 PortSelectionSamplingSizer16TypeIiportSelectionr16 = 0
	PortSelectionSamplingSizer16TypeIiportSelectionr16_PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N2 PortSelectionSamplingSizer16TypeIiportSelectionr16 = 1
	PortSelectionSamplingSizer16TypeIiportSelectionr16_PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N3 PortSelectionSamplingSizer16TypeIiportSelectionr16 = 2
	PortSelectionSamplingSizer16TypeIiportSelectionr16_PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N4 PortSelectionSamplingSizer16TypeIiportSelectionr16 = 3
)

// Enum value maps for PortSelectionSamplingSizer16TypeIiportSelectionr16.
var (
	PortSelectionSamplingSizer16TypeIiportSelectionr16_name = map[int32]string{
		0: "PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N1",
		1: "PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N2",
		2: "PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N3",
		3: "PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N4",
	}
	PortSelectionSamplingSizer16TypeIiportSelectionr16_value = map[string]int32{
		"PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N1": 0,
		"PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N2": 1,
		"PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N3": 2,
		"PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N4": 3,
	}
)

func (x PortSelectionSamplingSizer16TypeIiportSelectionr16) Enum() *PortSelectionSamplingSizer16TypeIiportSelectionr16 {
	p := new(PortSelectionSamplingSizer16TypeIiportSelectionr16)
	*p = x
	return p
}

func (x PortSelectionSamplingSizer16TypeIiportSelectionr16) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortSelectionSamplingSizer16TypeIiportSelectionr16) Descriptor() protoreflect.EnumDescriptor {
	return file_CSI_ReportConfig_proto_enumTypes[14].Descriptor()
}

func (PortSelectionSamplingSizer16TypeIiportSelectionr16) Type() protoreflect.EnumType {
	return &file_CSI_ReportConfig_proto_enumTypes[14]
}

func (x PortSelectionSamplingSizer16TypeIiportSelectionr16) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortSelectionSamplingSizer16TypeIiportSelectionr16.Descriptor instead.
func (PortSelectionSamplingSizer16TypeIiportSelectionr16) EnumDescriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{14}
}

// range of Integer from CSI-ReportConfig.asn1:10
// {CSI-ReportConfigId}
type CsiReportConfigId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:47,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:47,"`
}

func (x *CsiReportConfigId) Reset() {
	*x = CsiReportConfigId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiReportConfigId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiReportConfigId) ProtoMessage() {}

func (x *CsiReportConfigId) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiReportConfigId.ProtoReflect.Descriptor instead.
func (*CsiReportConfigId) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{0}
}

func (x *CsiReportConfigId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from CSI-ReportConfig.asn1:24
// {periodicreportConfigType}
type PeriodicreportConfigType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportSlotConfig *CsiReportPeriodicityAndOffset `protobuf:"bytes,1,opt,name=report_slot_config,json=reportSlotConfig,proto3" json:"report_slot_config,omitempty"`
	// @inject_tag: aper:"sizeLB:1,sizeUB:4,"
	PucchCsiResourceList []*PucchCSiResource `protobuf:"bytes,2,rep,name=pucch_csi_resource_list,json=pucch-CSI-ResourceList,proto3" json:"pucch_csi_resource_list,omitempty" aper:"sizeLB:1,sizeUB:4,"`
}

func (x *PeriodicreportConfigType) Reset() {
	*x = PeriodicreportConfigType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeriodicreportConfigType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodicreportConfigType) ProtoMessage() {}

func (x *PeriodicreportConfigType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodicreportConfigType.ProtoReflect.Descriptor instead.
func (*PeriodicreportConfigType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{1}
}

func (x *PeriodicreportConfigType) GetReportSlotConfig() *CsiReportPeriodicityAndOffset {
	if x != nil {
		return x.ReportSlotConfig
	}
	return nil
}

func (x *PeriodicreportConfigType) GetPucchCsiResourceList() []*PucchCSiResource {
	if x != nil {
		return x.PucchCsiResourceList
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:28
// {semiPersistentOnPUCCHreportConfigType}
type SemiPersistentOnPucchreportConfigType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportSlotConfig *CsiReportPeriodicityAndOffset `protobuf:"bytes,1,opt,name=report_slot_config,json=reportSlotConfig,proto3" json:"report_slot_config,omitempty"`
	// @inject_tag: aper:"sizeLB:1,sizeUB:4,"
	PucchCsiResourceList []*PucchCSiResource `protobuf:"bytes,2,rep,name=pucch_csi_resource_list,json=pucch-CSI-ResourceList,proto3" json:"pucch_csi_resource_list,omitempty" aper:"sizeLB:1,sizeUB:4,"`
}

func (x *SemiPersistentOnPucchreportConfigType) Reset() {
	*x = SemiPersistentOnPucchreportConfigType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemiPersistentOnPucchreportConfigType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemiPersistentOnPucchreportConfigType) ProtoMessage() {}

func (x *SemiPersistentOnPucchreportConfigType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemiPersistentOnPucchreportConfigType.ProtoReflect.Descriptor instead.
func (*SemiPersistentOnPucchreportConfigType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{2}
}

func (x *SemiPersistentOnPucchreportConfigType) GetReportSlotConfig() *CsiReportPeriodicityAndOffset {
	if x != nil {
		return x.ReportSlotConfig
	}
	return nil
}

func (x *SemiPersistentOnPucchreportConfigType) GetPucchCsiResourceList() []*PucchCSiResource {
	if x != nil {
		return x.PucchCsiResourceList
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:32
// {semiPersistentOnPUSCHreportConfigType}
type SemiPersistentOnPuschreportConfigType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:6,"
	ReportSlotConfig ReportSlotConfigsemiPersistentOnPusch `protobuf:"varint,1,opt,name=report_slot_config,json=reportSlotConfig,proto3,enum=_csi_report_config.v2.ReportSlotConfigsemiPersistentOnPusch" json:"report_slot_config,omitempty" aper:"valueLB:0,valueUB:6,"`
	// @inject_tag: aper:"valueLB:0,valueUB:32,sizeLB:1,sizeUB:16,"
	ReportSlotOffsetList []int32            `protobuf:"varint,2,rep,packed,name=report_slot_offset_list,json=reportSlotOffsetList,proto3" json:"report_slot_offset_list,omitempty" aper:"valueLB:0,valueUB:32,sizeLB:1,sizeUB:16,"`
	P0Alpha              *P0PUschAlphaSetId `protobuf:"bytes,3,opt,name=p0alpha,proto3" json:"p0alpha,omitempty"`
}

func (x *SemiPersistentOnPuschreportConfigType) Reset() {
	*x = SemiPersistentOnPuschreportConfigType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemiPersistentOnPuschreportConfigType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemiPersistentOnPuschreportConfigType) ProtoMessage() {}

func (x *SemiPersistentOnPuschreportConfigType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemiPersistentOnPuschreportConfigType.ProtoReflect.Descriptor instead.
func (*SemiPersistentOnPuschreportConfigType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{3}
}

func (x *SemiPersistentOnPuschreportConfigType) GetReportSlotConfig() ReportSlotConfigsemiPersistentOnPusch {
	if x != nil {
		return x.ReportSlotConfig
	}
	return ReportSlotConfigsemiPersistentOnPusch_REPORT_SLOT_CONFIGSEMI_PERSISTENT_ON_PUSCH_SL5
}

func (x *SemiPersistentOnPuschreportConfigType) GetReportSlotOffsetList() []int32 {
	if x != nil {
		return x.ReportSlotOffsetList
	}
	return nil
}

func (x *SemiPersistentOnPuschreportConfigType) GetP0Alpha() *P0PUschAlphaSetId {
	if x != nil {
		return x.P0Alpha
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:38
// {aperiodicreportConfigType}
type AperiodicreportConfigType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:32,sizeLB:1,sizeUB:16,"
	ReportSlotOffsetList []int32 `protobuf:"varint,1,rep,packed,name=report_slot_offset_list,json=reportSlotOffsetList,proto3" json:"report_slot_offset_list,omitempty" aper:"valueLB:0,valueUB:32,sizeLB:1,sizeUB:16,"`
}

func (x *AperiodicreportConfigType) Reset() {
	*x = AperiodicreportConfigType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AperiodicreportConfigType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AperiodicreportConfigType) ProtoMessage() {}

func (x *AperiodicreportConfigType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AperiodicreportConfigType.ProtoReflect.Descriptor instead.
func (*AperiodicreportConfigType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{4}
}

func (x *AperiodicreportConfigType) GetReportSlotOffsetList() []int32 {
	if x != nil {
		return x.ReportSlotOffsetList
	}
	return nil
}

// choice from CSI-ReportConfig.asn1:26
// {reportConfigTypeCSI-ReportConfig}
type ReportConfigTypeCsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:26
	//
	// Types that are assignable to ReportConfigTypeCsiReportConfig:
	//	*ReportConfigTypeCsiReportConfig_Periodic
	//	*ReportConfigTypeCsiReportConfig_SemiPersistentOnPucch
	//	*ReportConfigTypeCsiReportConfig_SemiPersistentOnPusch
	//	*ReportConfigTypeCsiReportConfig_Aperiodic
	ReportConfigTypeCsiReportConfig isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig `protobuf_oneof:"report_config_type_csi_report_config"`
}

func (x *ReportConfigTypeCsiReportConfig) Reset() {
	*x = ReportConfigTypeCsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportConfigTypeCsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportConfigTypeCsiReportConfig) ProtoMessage() {}

func (x *ReportConfigTypeCsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportConfigTypeCsiReportConfig.ProtoReflect.Descriptor instead.
func (*ReportConfigTypeCsiReportConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{5}
}

func (m *ReportConfigTypeCsiReportConfig) GetReportConfigTypeCsiReportConfig() isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig {
	if m != nil {
		return m.ReportConfigTypeCsiReportConfig
	}
	return nil
}

func (x *ReportConfigTypeCsiReportConfig) GetPeriodic() *PeriodicreportConfigType {
	if x, ok := x.GetReportConfigTypeCsiReportConfig().(*ReportConfigTypeCsiReportConfig_Periodic); ok {
		return x.Periodic
	}
	return nil
}

func (x *ReportConfigTypeCsiReportConfig) GetSemiPersistentOnPucch() *SemiPersistentOnPucchreportConfigType {
	if x, ok := x.GetReportConfigTypeCsiReportConfig().(*ReportConfigTypeCsiReportConfig_SemiPersistentOnPucch); ok {
		return x.SemiPersistentOnPucch
	}
	return nil
}

func (x *ReportConfigTypeCsiReportConfig) GetSemiPersistentOnPusch() *SemiPersistentOnPuschreportConfigType {
	if x, ok := x.GetReportConfigTypeCsiReportConfig().(*ReportConfigTypeCsiReportConfig_SemiPersistentOnPusch); ok {
		return x.SemiPersistentOnPusch
	}
	return nil
}

func (x *ReportConfigTypeCsiReportConfig) GetAperiodic() *AperiodicreportConfigType {
	if x, ok := x.GetReportConfigTypeCsiReportConfig().(*ReportConfigTypeCsiReportConfig_Aperiodic); ok {
		return x.Aperiodic
	}
	return nil
}

type isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig interface {
	isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig()
}

type ReportConfigTypeCsiReportConfig_Periodic struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Periodic *PeriodicreportConfigType `protobuf:"bytes,1,opt,name=periodic,proto3,oneof" aper:"choiceIdx:1,"`
}

type ReportConfigTypeCsiReportConfig_SemiPersistentOnPucch struct {
	// @inject_tag: aper:"choiceIdx:2,"
	SemiPersistentOnPucch *SemiPersistentOnPucchreportConfigType `protobuf:"bytes,2,opt,name=semi_persistent_on_pucch,json=semiPersistentOnPUCCH,proto3,oneof" aper:"choiceIdx:2,"`
}

type ReportConfigTypeCsiReportConfig_SemiPersistentOnPusch struct {
	// @inject_tag: aper:"choiceIdx:3,"
	SemiPersistentOnPusch *SemiPersistentOnPuschreportConfigType `protobuf:"bytes,3,opt,name=semi_persistent_on_pusch,json=semiPersistentOnPUSCH,proto3,oneof" aper:"choiceIdx:3,"`
}

type ReportConfigTypeCsiReportConfig_Aperiodic struct {
	// @inject_tag: aper:"choiceIdx:4,"
	Aperiodic *AperiodicreportConfigType `protobuf:"bytes,4,opt,name=aperiodic,proto3,oneof" aper:"choiceIdx:4,"`
}

func (*ReportConfigTypeCsiReportConfig_Periodic) isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig() {
}

func (*ReportConfigTypeCsiReportConfig_SemiPersistentOnPucch) isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig() {
}

func (*ReportConfigTypeCsiReportConfig_SemiPersistentOnPusch) isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig() {
}

func (*ReportConfigTypeCsiReportConfig_Aperiodic) isReportConfigTypeCsiReportConfig_ReportConfigTypeCsiReportConfig() {
}

// sequence from CSI-ReportConfig.asn1:45
// {cri-RI-i1-CQIreportQuantity}
type CriRIi1CQireportQuantity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,"
	PdschBundleSizeForCsi *PdschBundleSizeForCsicriRii1Cqi `protobuf:"varint,1,opt,name=pdsch_bundle_size_for_csi,json=pdsch-BundleSizeForCSI,proto3,enum=_csi_report_config.v2.PdschBundleSizeForCsicriRii1Cqi,oneof" json:"pdsch_bundle_size_for_csi,omitempty" aper:"optional,valueLB:0,valueUB:1,"`
}

func (x *CriRIi1CQireportQuantity) Reset() {
	*x = CriRIi1CQireportQuantity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriRIi1CQireportQuantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriRIi1CQireportQuantity) ProtoMessage() {}

func (x *CriRIi1CQireportQuantity) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriRIi1CQireportQuantity.ProtoReflect.Descriptor instead.
func (*CriRIi1CQireportQuantity) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{6}
}

func (x *CriRIi1CQireportQuantity) GetPdschBundleSizeForCsi() PdschBundleSizeForCsicriRii1Cqi {
	if x != nil && x.PdschBundleSizeForCsi != nil {
		return *x.PdschBundleSizeForCsi
	}
	return PdschBundleSizeForCsicriRii1Cqi_PDSCH_BUNDLE_SIZE_FOR_CSICRI_RII1_CQI_N2
}

// choice from CSI-ReportConfig.asn1:41
// {reportQuantityCSI-ReportConfig}
type ReportQuantityCsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:41
	//
	// Types that are assignable to ReportQuantityCsiReportConfig:
	//	*ReportQuantityCsiReportConfig_None
	//	*ReportQuantityCsiReportConfig_CriRiPmiCqi
	//	*ReportQuantityCsiReportConfig_CriRiI1
	//	*ReportQuantityCsiReportConfig_CriRiI1Cqi
	//	*ReportQuantityCsiReportConfig_CriRiCqi
	//	*ReportQuantityCsiReportConfig_CriRsrp
	//	*ReportQuantityCsiReportConfig_SsbIndexRsrp
	//	*ReportQuantityCsiReportConfig_CriRiLiPmiCqi
	ReportQuantityCsiReportConfig isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig `protobuf_oneof:"report_quantity_csi_report_config"`
}

func (x *ReportQuantityCsiReportConfig) Reset() {
	*x = ReportQuantityCsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportQuantityCsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportQuantityCsiReportConfig) ProtoMessage() {}

func (x *ReportQuantityCsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportQuantityCsiReportConfig.ProtoReflect.Descriptor instead.
func (*ReportQuantityCsiReportConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{7}
}

func (m *ReportQuantityCsiReportConfig) GetReportQuantityCsiReportConfig() isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig {
	if m != nil {
		return m.ReportQuantityCsiReportConfig
	}
	return nil
}

func (x *ReportQuantityCsiReportConfig) GetNone() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_None); ok {
		return x.None
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetCriRiPmiCqi() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRiPmiCqi); ok {
		return x.CriRiPmiCqi
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetCriRiI1() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRiI1); ok {
		return x.CriRiI1
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetCriRiI1Cqi() *CriRIi1CQireportQuantity {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRiI1Cqi); ok {
		return x.CriRiI1Cqi
	}
	return nil
}

func (x *ReportQuantityCsiReportConfig) GetCriRiCqi() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRiCqi); ok {
		return x.CriRiCqi
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetCriRsrp() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRsrp); ok {
		return x.CriRsrp
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetSsbIndexRsrp() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_SsbIndexRsrp); ok {
		return x.SsbIndexRsrp
	}
	return 0
}

func (x *ReportQuantityCsiReportConfig) GetCriRiLiPmiCqi() int32 {
	if x, ok := x.GetReportQuantityCsiReportConfig().(*ReportQuantityCsiReportConfig_CriRiLiPmiCqi); ok {
		return x.CriRiLiPmiCqi
	}
	return 0
}

type isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig interface {
	isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig()
}

type ReportQuantityCsiReportConfig_None struct {
	// @inject_tag: aper:"choiceIdx:1,"
	None int32 `protobuf:"varint,1,opt,name=none,proto3,oneof" aper:"choiceIdx:1,"`
}

type ReportQuantityCsiReportConfig_CriRiPmiCqi struct {
	// @inject_tag: aper:"choiceIdx:2,"
	CriRiPmiCqi int32 `protobuf:"varint,2,opt,name=cri_ri_pmi_cqi,json=cri-RI-PMI-CQI,proto3,oneof" aper:"choiceIdx:2,"`
}

type ReportQuantityCsiReportConfig_CriRiI1 struct {
	// @inject_tag: aper:"choiceIdx:3,"
	CriRiI1 int32 `protobuf:"varint,3,opt,name=cri_ri_i1,json=cri-RI-i1,proto3,oneof" aper:"choiceIdx:3,"`
}

type ReportQuantityCsiReportConfig_CriRiI1Cqi struct {
	// @inject_tag: aper:"choiceIdx:4,"
	CriRiI1Cqi *CriRIi1CQireportQuantity `protobuf:"bytes,4,opt,name=cri_ri_i1_cqi,json=cri-RI-i1-CQI,proto3,oneof" aper:"choiceIdx:4,"`
}

type ReportQuantityCsiReportConfig_CriRiCqi struct {
	// @inject_tag: aper:"choiceIdx:5,"
	CriRiCqi int32 `protobuf:"varint,5,opt,name=cri_ri_cqi,json=cri-RI-CQI,proto3,oneof" aper:"choiceIdx:5,"`
}

type ReportQuantityCsiReportConfig_CriRsrp struct {
	// @inject_tag: aper:"choiceIdx:6,"
	CriRsrp int32 `protobuf:"varint,6,opt,name=cri_rsrp,json=cri-RSRP,proto3,oneof" aper:"choiceIdx:6,"`
}

type ReportQuantityCsiReportConfig_SsbIndexRsrp struct {
	// @inject_tag: aper:"choiceIdx:7,"
	SsbIndexRsrp int32 `protobuf:"varint,7,opt,name=ssb_index_rsrp,json=ssb-Index-RSRP,proto3,oneof" aper:"choiceIdx:7,"`
}

type ReportQuantityCsiReportConfig_CriRiLiPmiCqi struct {
	// @inject_tag: aper:"choiceIdx:8,"
	CriRiLiPmiCqi int32 `protobuf:"varint,8,opt,name=cri_ri_li_pmi_cqi,json=cri-RI-LI-PMI-CQI,proto3,oneof" aper:"choiceIdx:8,"`
}

func (*ReportQuantityCsiReportConfig_None) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRiPmiCqi) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRiI1) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRiI1Cqi) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRiCqi) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRsrp) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_SsbIndexRsrp) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

func (*ReportQuantityCsiReportConfig_CriRiLiPmiCqi) isReportQuantityCsiReportConfig_ReportQuantityCsiReportConfig() {
}

// choice from CSI-ReportConfig.asn1:56
// @inject_tag: aper:"choiceExt"
// {csi-ReportingBandreportFreqConfiguration}
type CsiReportingBandreportFreqConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:56
	//
	// Types that are assignable to CsiReportingBandreportFreqConfiguration:
	//	*CsiReportingBandreportFreqConfiguration_Subbands3
	//	*CsiReportingBandreportFreqConfiguration_Subbands4
	//	*CsiReportingBandreportFreqConfiguration_Subbands5
	//	*CsiReportingBandreportFreqConfiguration_Subbands6
	//	*CsiReportingBandreportFreqConfiguration_Subbands7
	//	*CsiReportingBandreportFreqConfiguration_Subbands8
	//	*CsiReportingBandreportFreqConfiguration_Subbands9
	//	*CsiReportingBandreportFreqConfiguration_Subbands10
	//	*CsiReportingBandreportFreqConfiguration_Subbands11
	//	*CsiReportingBandreportFreqConfiguration_Subbands12
	//	*CsiReportingBandreportFreqConfiguration_Subbands13
	//	*CsiReportingBandreportFreqConfiguration_Subbands14
	//	*CsiReportingBandreportFreqConfiguration_Subbands15
	//	*CsiReportingBandreportFreqConfiguration_Subbands16
	//	*CsiReportingBandreportFreqConfiguration_Subbands17
	//	*CsiReportingBandreportFreqConfiguration_Subbands18
	//	*CsiReportingBandreportFreqConfiguration_Subbands19V1530
	CsiReportingBandreportFreqConfiguration isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration `protobuf_oneof:"csi_reporting_bandreport_freq_configuration"`
}

func (x *CsiReportingBandreportFreqConfiguration) Reset() {
	*x = CsiReportingBandreportFreqConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiReportingBandreportFreqConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiReportingBandreportFreqConfiguration) ProtoMessage() {}

func (x *CsiReportingBandreportFreqConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiReportingBandreportFreqConfiguration.ProtoReflect.Descriptor instead.
func (*CsiReportingBandreportFreqConfiguration) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{8}
}

func (m *CsiReportingBandreportFreqConfiguration) GetCsiReportingBandreportFreqConfiguration() isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration {
	if m != nil {
		return m.CsiReportingBandreportFreqConfiguration
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands3() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands3); ok {
		return x.Subbands3
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands4() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands4); ok {
		return x.Subbands4
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands5() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands5); ok {
		return x.Subbands5
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands6() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands6); ok {
		return x.Subbands6
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands7() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands7); ok {
		return x.Subbands7
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands8() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands8); ok {
		return x.Subbands8
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands9() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands9); ok {
		return x.Subbands9
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands10() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands10); ok {
		return x.Subbands10
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands11() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands11); ok {
		return x.Subbands11
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands12() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands12); ok {
		return x.Subbands12
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands13() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands13); ok {
		return x.Subbands13
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands14() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands14); ok {
		return x.Subbands14
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands15() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands15); ok {
		return x.Subbands15
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands16() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands16); ok {
		return x.Subbands16
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands17() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands17); ok {
		return x.Subbands17
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands18() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands18); ok {
		return x.Subbands18
	}
	return nil
}

func (x *CsiReportingBandreportFreqConfiguration) GetSubbands19V1530() *asn1.BitString {
	if x, ok := x.GetCsiReportingBandreportFreqConfiguration().(*CsiReportingBandreportFreqConfiguration_Subbands19V1530); ok {
		return x.Subbands19V1530
	}
	return nil
}

type isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration interface {
	isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration()
}

type CsiReportingBandreportFreqConfiguration_Subbands3 struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:3,sizeUB:3,"
	Subbands3 *asn1.BitString `protobuf:"bytes,1,opt,name=subbands3,proto3,oneof" aper:"choiceIdx:1,sizeLB:3,sizeUB:3,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands4 struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:4,sizeUB:4,"
	Subbands4 *asn1.BitString `protobuf:"bytes,2,opt,name=subbands4,proto3,oneof" aper:"choiceIdx:2,sizeLB:4,sizeUB:4,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands5 struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:5,sizeUB:5,"
	Subbands5 *asn1.BitString `protobuf:"bytes,3,opt,name=subbands5,proto3,oneof" aper:"choiceIdx:3,sizeLB:5,sizeUB:5,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands6 struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:6,sizeUB:6,"
	Subbands6 *asn1.BitString `protobuf:"bytes,4,opt,name=subbands6,proto3,oneof" aper:"choiceIdx:4,sizeLB:6,sizeUB:6,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands7 struct {
	// @inject_tag: aper:"choiceIdx:5,sizeLB:7,sizeUB:7,"
	Subbands7 *asn1.BitString `protobuf:"bytes,5,opt,name=subbands7,proto3,oneof" aper:"choiceIdx:5,sizeLB:7,sizeUB:7,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands8 struct {
	// @inject_tag: aper:"choiceIdx:6,sizeLB:8,sizeUB:8,"
	Subbands8 *asn1.BitString `protobuf:"bytes,6,opt,name=subbands8,proto3,oneof" aper:"choiceIdx:6,sizeLB:8,sizeUB:8,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands9 struct {
	// @inject_tag: aper:"choiceIdx:7,sizeLB:9,sizeUB:9,"
	Subbands9 *asn1.BitString `protobuf:"bytes,7,opt,name=subbands9,proto3,oneof" aper:"choiceIdx:7,sizeLB:9,sizeUB:9,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands10 struct {
	// @inject_tag: aper:"choiceIdx:8,sizeLB:10,sizeUB:10,"
	Subbands10 *asn1.BitString `protobuf:"bytes,8,opt,name=subbands10,proto3,oneof" aper:"choiceIdx:8,sizeLB:10,sizeUB:10,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands11 struct {
	// @inject_tag: aper:"choiceIdx:9,sizeLB:11,sizeUB:11,"
	Subbands11 *asn1.BitString `protobuf:"bytes,9,opt,name=subbands11,proto3,oneof" aper:"choiceIdx:9,sizeLB:11,sizeUB:11,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands12 struct {
	// @inject_tag: aper:"choiceIdx:10,sizeLB:12,sizeUB:12,"
	Subbands12 *asn1.BitString `protobuf:"bytes,10,opt,name=subbands12,proto3,oneof" aper:"choiceIdx:10,sizeLB:12,sizeUB:12,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands13 struct {
	// @inject_tag: aper:"choiceIdx:11,sizeLB:13,sizeUB:13,"
	Subbands13 *asn1.BitString `protobuf:"bytes,11,opt,name=subbands13,proto3,oneof" aper:"choiceIdx:11,sizeLB:13,sizeUB:13,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands14 struct {
	// @inject_tag: aper:"choiceIdx:12,sizeLB:14,sizeUB:14,"
	Subbands14 *asn1.BitString `protobuf:"bytes,12,opt,name=subbands14,proto3,oneof" aper:"choiceIdx:12,sizeLB:14,sizeUB:14,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands15 struct {
	// @inject_tag: aper:"choiceIdx:13,sizeLB:15,sizeUB:15,"
	Subbands15 *asn1.BitString `protobuf:"bytes,13,opt,name=subbands15,proto3,oneof" aper:"choiceIdx:13,sizeLB:15,sizeUB:15,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands16 struct {
	// @inject_tag: aper:"choiceIdx:14,sizeLB:16,sizeUB:16,"
	Subbands16 *asn1.BitString `protobuf:"bytes,14,opt,name=subbands16,proto3,oneof" aper:"choiceIdx:14,sizeLB:16,sizeUB:16,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands17 struct {
	// @inject_tag: aper:"choiceIdx:15,sizeLB:17,sizeUB:17,"
	Subbands17 *asn1.BitString `protobuf:"bytes,15,opt,name=subbands17,proto3,oneof" aper:"choiceIdx:15,sizeLB:17,sizeUB:17,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands18 struct {
	// @inject_tag: aper:"choiceIdx:16,sizeLB:18,sizeUB:18,"
	Subbands18 *asn1.BitString `protobuf:"bytes,16,opt,name=subbands18,proto3,oneof" aper:"choiceIdx:16,sizeLB:18,sizeUB:18,"`
}

type CsiReportingBandreportFreqConfiguration_Subbands19V1530 struct {
	// @inject_tag: aper:"choiceIdx:17,fromChoiceExt,sizeLB:19,sizeUB:19,"
	Subbands19V1530 *asn1.BitString `protobuf:"bytes,17,opt,name=subbands19_v1530,json=subbands19-v1530,proto3,oneof" aper:"choiceIdx:17,fromChoiceExt,sizeLB:19,sizeUB:19,"`
}

func (*CsiReportingBandreportFreqConfiguration_Subbands3) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands4) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands5) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands6) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands7) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands8) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands9) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands10) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands11) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands12) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands13) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands14) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands15) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands16) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands17) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands18) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

func (*CsiReportingBandreportFreqConfiguration_Subbands19V1530) isCsiReportingBandreportFreqConfiguration_CsiReportingBandreportFreqConfiguration() {
}

// sequence from CSI-ReportConfig.asn1:53
// {reportFreqConfigurationCSI-ReportConfig}
type ReportFreqConfigurationCsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,"
	CqiFormatIndicator *CqiFormatIndicatorreportFreqConfiguration `protobuf:"varint,1,opt,name=cqi_format_indicator,json=cqi-FormatIndicator,proto3,enum=_csi_report_config.v2.CqiFormatIndicatorreportFreqConfiguration,oneof" json:"cqi_format_indicator,omitempty" aper:"optional,valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,"
	PmiFormatIndicator *PmiFormatIndicatorreportFreqConfiguration `protobuf:"varint,2,opt,name=pmi_format_indicator,json=pmi-FormatIndicator,proto3,enum=_csi_report_config.v2.PmiFormatIndicatorreportFreqConfiguration,oneof" json:"pmi_format_indicator,omitempty" aper:"optional,valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"optional,choiceExt,"
	CsiReportingBand *CsiReportingBandreportFreqConfiguration `protobuf:"bytes,3,opt,name=csi_reporting_band,json=csi-ReportingBand,proto3,oneof" json:"csi_reporting_band,omitempty" aper:"optional,choiceExt,"`
}

func (x *ReportFreqConfigurationCsiReportConfig) Reset() {
	*x = ReportFreqConfigurationCsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportFreqConfigurationCsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportFreqConfigurationCsiReportConfig) ProtoMessage() {}

func (x *ReportFreqConfigurationCsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportFreqConfigurationCsiReportConfig.ProtoReflect.Descriptor instead.
func (*ReportFreqConfigurationCsiReportConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{9}
}

func (x *ReportFreqConfigurationCsiReportConfig) GetCqiFormatIndicator() CqiFormatIndicatorreportFreqConfiguration {
	if x != nil && x.CqiFormatIndicator != nil {
		return *x.CqiFormatIndicator
	}
	return CqiFormatIndicatorreportFreqConfiguration_CQI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_CQI
}

func (x *ReportFreqConfigurationCsiReportConfig) GetPmiFormatIndicator() PmiFormatIndicatorreportFreqConfiguration {
	if x != nil && x.PmiFormatIndicator != nil {
		return *x.PmiFormatIndicator
	}
	return PmiFormatIndicatorreportFreqConfiguration_PMI_FORMAT_INDICATORREPORT_FREQ_CONFIGURATION_WIDEBAND_PMI
}

func (x *ReportFreqConfigurationCsiReportConfig) GetCsiReportingBand() *CsiReportingBandreportFreqConfiguration {
	if x != nil {
		return x.CsiReportingBand
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:84
// {disabledgroupBasedBeamReporting}
type DisabledgroupBasedBeamReporting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:3,"
	NrofReportedRs *NrofReportedRsdisabled `protobuf:"varint,1,opt,name=nrof_reported_rs,json=nrofReportedRS,proto3,enum=_csi_report_config.v2.NrofReportedRsdisabled,oneof" json:"nrof_reported_rs,omitempty" aper:"optional,valueLB:0,valueUB:3,"`
}

func (x *DisabledgroupBasedBeamReporting) Reset() {
	*x = DisabledgroupBasedBeamReporting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisabledgroupBasedBeamReporting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisabledgroupBasedBeamReporting) ProtoMessage() {}

func (x *DisabledgroupBasedBeamReporting) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisabledgroupBasedBeamReporting.ProtoReflect.Descriptor instead.
func (*DisabledgroupBasedBeamReporting) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{10}
}

func (x *DisabledgroupBasedBeamReporting) GetNrofReportedRs() NrofReportedRsdisabled {
	if x != nil && x.NrofReportedRs != nil {
		return *x.NrofReportedRs
	}
	return NrofReportedRsdisabled_NROF_REPORTED_RSDISABLED_N1
}

// choice from CSI-ReportConfig.asn1:82
// {groupBasedBeamReportingCSI-ReportConfig}
type GroupBasedBeamReportingCsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:82
	//
	// Types that are assignable to GroupBasedBeamReportingCsiReportConfig:
	//	*GroupBasedBeamReportingCsiReportConfig_Enabled
	//	*GroupBasedBeamReportingCsiReportConfig_Disabled
	GroupBasedBeamReportingCsiReportConfig isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig `protobuf_oneof:"group_based_beam_reporting_csi_report_config"`
}

func (x *GroupBasedBeamReportingCsiReportConfig) Reset() {
	*x = GroupBasedBeamReportingCsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupBasedBeamReportingCsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBasedBeamReportingCsiReportConfig) ProtoMessage() {}

func (x *GroupBasedBeamReportingCsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupBasedBeamReportingCsiReportConfig.ProtoReflect.Descriptor instead.
func (*GroupBasedBeamReportingCsiReportConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{11}
}

func (m *GroupBasedBeamReportingCsiReportConfig) GetGroupBasedBeamReportingCsiReportConfig() isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig {
	if m != nil {
		return m.GroupBasedBeamReportingCsiReportConfig
	}
	return nil
}

func (x *GroupBasedBeamReportingCsiReportConfig) GetEnabled() int32 {
	if x, ok := x.GetGroupBasedBeamReportingCsiReportConfig().(*GroupBasedBeamReportingCsiReportConfig_Enabled); ok {
		return x.Enabled
	}
	return 0
}

func (x *GroupBasedBeamReportingCsiReportConfig) GetDisabled() *DisabledgroupBasedBeamReporting {
	if x, ok := x.GetGroupBasedBeamReportingCsiReportConfig().(*GroupBasedBeamReportingCsiReportConfig_Disabled); ok {
		return x.Disabled
	}
	return nil
}

type isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig interface {
	isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig()
}

type GroupBasedBeamReportingCsiReportConfig_Enabled struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Enabled int32 `protobuf:"varint,1,opt,name=enabled,proto3,oneof" aper:"choiceIdx:1,"`
}

type GroupBasedBeamReportingCsiReportConfig_Disabled struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Disabled *DisabledgroupBasedBeamReporting `protobuf:"bytes,2,opt,name=disabled,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*GroupBasedBeamReportingCsiReportConfig_Enabled) isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig() {
}

func (*GroupBasedBeamReportingCsiReportConfig_Disabled) isGroupBasedBeamReportingCsiReportConfig_GroupBasedBeamReportingCsiReportConfig() {
}

// sequence from CSI-ReportConfig.asn1:94
// {semiPersistentOnPUSCH-v1530CSI-ReportConfig}
type SemiPersistentOnPuschv1530CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:2,"
	ReportSlotConfigV1530 ReportSlotConfigv1530SemiPersistentOnPuschv1530 `protobuf:"varint,1,opt,name=report_slot_config_v1530,json=reportSlotConfig-v1530,proto3,enum=_csi_report_config.v2.ReportSlotConfigv1530SemiPersistentOnPuschv1530" json:"report_slot_config_v1530,omitempty" aper:"valueLB:0,valueUB:2,"`
}

func (x *SemiPersistentOnPuschv1530CsiReportConfig) Reset() {
	*x = SemiPersistentOnPuschv1530CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemiPersistentOnPuschv1530CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemiPersistentOnPuschv1530CsiReportConfig) ProtoMessage() {}

func (x *SemiPersistentOnPuschv1530CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemiPersistentOnPuschv1530CsiReportConfig.ProtoReflect.Descriptor instead.
func (*SemiPersistentOnPuschv1530CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{12}
}

func (x *SemiPersistentOnPuschv1530CsiReportConfig) GetReportSlotConfigV1530() ReportSlotConfigv1530SemiPersistentOnPuschv1530 {
	if x != nil {
		return x.ReportSlotConfigV1530
	}
	return ReportSlotConfigv1530SemiPersistentOnPuschv1530_REPORT_SLOT_CONFIGV1530SEMI_PERSISTENT_ON_PUSCHV1530_SL4
}

// sequence from CSI-ReportConfig.asn1:98
// {semiPersistentOnPUSCH-v1610CSI-ReportConfig}
type SemiPersistentOnPuschv1610CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_2R16 []int32 `protobuf:"varint,1,rep,packed,name=report_slot_offset_list_dci_0_2_r16,json=reportSlotOffsetListDCI-0-2-r16,proto3" json:"report_slot_offset_list_dci_0_2_r16,omitempty" aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_1R16 []int32 `protobuf:"varint,2,rep,packed,name=report_slot_offset_list_dci_0_1_r16,json=reportSlotOffsetListDCI-0-1-r16,proto3" json:"report_slot_offset_list_dci_0_1_r16,omitempty" aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"`
}

func (x *SemiPersistentOnPuschv1610CsiReportConfig) Reset() {
	*x = SemiPersistentOnPuschv1610CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemiPersistentOnPuschv1610CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemiPersistentOnPuschv1610CsiReportConfig) ProtoMessage() {}

func (x *SemiPersistentOnPuschv1610CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemiPersistentOnPuschv1610CsiReportConfig.ProtoReflect.Descriptor instead.
func (*SemiPersistentOnPuschv1610CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{13}
}

func (x *SemiPersistentOnPuschv1610CsiReportConfig) GetReportSlotOffsetListDci_0_2R16() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_2R16
	}
	return nil
}

func (x *SemiPersistentOnPuschv1610CsiReportConfig) GetReportSlotOffsetListDci_0_1R16() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_1R16
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:102
// {aperiodic-v1610CSI-ReportConfig}
type Aperiodicv1610CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_2R16 []int32 `protobuf:"varint,1,rep,packed,name=report_slot_offset_list_dci_0_2_r16,json=reportSlotOffsetListDCI-0-2-r16,proto3" json:"report_slot_offset_list_dci_0_2_r16,omitempty" aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"
	ReportSlotOffsetListDci_0_1R16 []int32 `protobuf:"varint,2,rep,packed,name=report_slot_offset_list_dci_0_1_r16,json=reportSlotOffsetListDCI-0-1-r16,proto3" json:"report_slot_offset_list_dci_0_1_r16,omitempty" aper:"optional,valueLB:0,valueUB:32,sizeLB:1,sizeUB:64,"`
}

func (x *Aperiodicv1610CsiReportConfig) Reset() {
	*x = Aperiodicv1610CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aperiodicv1610CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aperiodicv1610CsiReportConfig) ProtoMessage() {}

func (x *Aperiodicv1610CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aperiodicv1610CsiReportConfig.ProtoReflect.Descriptor instead.
func (*Aperiodicv1610CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{14}
}

func (x *Aperiodicv1610CsiReportConfig) GetReportSlotOffsetListDci_0_2R16() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_2R16
	}
	return nil
}

func (x *Aperiodicv1610CsiReportConfig) GetReportSlotOffsetListDci_0_1R16() []int32 {
	if x != nil {
		return x.ReportSlotOffsetListDci_0_1R16
	}
	return nil
}

// choice from CSI-ReportConfig.asn1:106
// {reportQuantity-r16CSI-ReportConfig}
type ReportQuantityr16CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:106
	//
	// Types that are assignable to ReportQuantityR16CsiReportConfig:
	//	*ReportQuantityr16CsiReportConfig_CriSinrR16
	//	*ReportQuantityr16CsiReportConfig_SsbIndexSinrR16
	ReportQuantityR16CsiReportConfig isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig `protobuf_oneof:"report_quantity_r16_csi_report_config"`
}

func (x *ReportQuantityr16CsiReportConfig) Reset() {
	*x = ReportQuantityr16CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportQuantityr16CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportQuantityr16CsiReportConfig) ProtoMessage() {}

func (x *ReportQuantityr16CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportQuantityr16CsiReportConfig.ProtoReflect.Descriptor instead.
func (*ReportQuantityr16CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{15}
}

func (m *ReportQuantityr16CsiReportConfig) GetReportQuantityR16CsiReportConfig() isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig {
	if m != nil {
		return m.ReportQuantityR16CsiReportConfig
	}
	return nil
}

func (x *ReportQuantityr16CsiReportConfig) GetCriSinrR16() int32 {
	if x, ok := x.GetReportQuantityR16CsiReportConfig().(*ReportQuantityr16CsiReportConfig_CriSinrR16); ok {
		return x.CriSinrR16
	}
	return 0
}

func (x *ReportQuantityr16CsiReportConfig) GetSsbIndexSinrR16() int32 {
	if x, ok := x.GetReportQuantityR16CsiReportConfig().(*ReportQuantityr16CsiReportConfig_SsbIndexSinrR16); ok {
		return x.SsbIndexSinrR16
	}
	return 0
}

type isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig interface {
	isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig()
}

type ReportQuantityr16CsiReportConfig_CriSinrR16 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	CriSinrR16 int32 `protobuf:"varint,1,opt,name=cri_sinr_r16,json=cri-SINR-r16,proto3,oneof" aper:"choiceIdx:1,"`
}

type ReportQuantityr16CsiReportConfig_SsbIndexSinrR16 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	SsbIndexSinrR16 int32 `protobuf:"varint,2,opt,name=ssb_index_sinr_r16,json=ssb-Index-SINR-r16,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*ReportQuantityr16CsiReportConfig_CriSinrR16) isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig() {
}

func (*ReportQuantityr16CsiReportConfig_SsbIndexSinrR16) isReportQuantityr16CsiReportConfig_ReportQuantityR16CsiReportConfig() {
}

// sequence from CSI-ReportConfig.asn1:17
// @inject_tag: aper:"valueExt"
// {CSI-ReportConfig}
type CsiReportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportConfigId *CsiReportConfigId `protobuf:"bytes,1,opt,name=report_config_id,json=reportConfigId,proto3" json:"report_config_id,omitempty"`
	// @inject_tag: aper:"optional,"
	Carrier                        *ServCellIndex       `protobuf:"bytes,2,opt,name=carrier,proto3,oneof" json:"carrier,omitempty" aper:"optional,"`
	ResourcesForChannelMeasurement *CsiResourceConfigId `protobuf:"bytes,3,opt,name=resources_for_channel_measurement,json=resourcesForChannelMeasurement,proto3" json:"resources_for_channel_measurement,omitempty"`
	// @inject_tag: aper:"optional,"
	CsiImResourcesForInterference *CsiResourceConfigId `protobuf:"bytes,4,opt,name=csi_im_resources_for_interference,json=csi-IM-ResourcesForInterference,proto3,oneof" json:"csi_im_resources_for_interference,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	NzpCsiRsResourcesForInterference *CsiResourceConfigId             `protobuf:"bytes,5,opt,name=nzp_csi_rs_resources_for_interference,json=nzp-CSI-RS-ResourcesForInterference,proto3,oneof" json:"nzp_csi_rs_resources_for_interference,omitempty" aper:"optional,"`
	ReportConfigType                 *ReportConfigTypeCsiReportConfig `protobuf:"bytes,6,opt,name=report_config_type,json=reportConfigType,proto3" json:"report_config_type,omitempty"`
	ReportQuantity                   *ReportQuantityCsiReportConfig   `protobuf:"bytes,7,opt,name=report_quantity,json=reportQuantity,proto3" json:"report_quantity,omitempty"`
	// @inject_tag: aper:"optional,"
	ReportFreqConfiguration *ReportFreqConfigurationCsiReportConfig `protobuf:"bytes,8,opt,name=report_freq_configuration,json=reportFreqConfiguration,proto3,oneof" json:"report_freq_configuration,omitempty" aper:"optional,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	TimeRestrictionForChannelMeasurements TimeRestrictionForChannelMeasurementsCsireportConfig `protobuf:"varint,9,opt,name=time_restriction_for_channel_measurements,json=timeRestrictionForChannelMeasurements,proto3,enum=_csi_report_config.v2.TimeRestrictionForChannelMeasurementsCsireportConfig" json:"time_restriction_for_channel_measurements,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	TimeRestrictionForInterferenceMeasurements TimeRestrictionForInterferenceMeasurementsCsireportConfig `protobuf:"varint,10,opt,name=time_restriction_for_interference_measurements,json=timeRestrictionForInterferenceMeasurements,proto3,enum=_csi_report_config.v2.TimeRestrictionForInterferenceMeasurementsCsireportConfig" json:"time_restriction_for_interference_measurements,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"optional,"
	CodebookConfig *CodebookConfig `protobuf:"bytes,11,opt,name=codebook_config,json=codebookConfig,proto3,oneof" json:"codebook_config,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,"
	Dummy                   *DummyCsireportConfig                   `protobuf:"varint,12,opt,name=dummy,proto3,enum=_csi_report_config.v2.DummyCsireportConfig,oneof" json:"dummy,omitempty" aper:"optional,valueLB:0,valueUB:1,"`
	GroupBasedBeamReporting *GroupBasedBeamReportingCsiReportConfig `protobuf:"bytes,13,opt,name=group_based_beam_reporting,json=groupBasedBeamReporting,proto3" json:"group_based_beam_reporting,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:3,"
	CqiTable *CqiTableCsireportConfig `protobuf:"varint,14,opt,name=cqi_table,json=cqi-Table,proto3,enum=_csi_report_config.v2.CqiTableCsireportConfig,oneof" json:"cqi_table,omitempty" aper:"optional,valueLB:0,valueUB:3,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	SubbandSize SubbandSizeCsireportConfig `protobuf:"varint,15,opt,name=subband_size,json=subbandSize,proto3,enum=_csi_report_config.v2.SubbandSizeCsireportConfig" json:"subband_size,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:128,"
	NonPmiPortIndication []*PortIndexFor8Ranks `protobuf:"bytes,16,rep,name=non_pmi_port_indication,json=non-PMI-PortIndication,proto3" json:"non_pmi_port_indication,omitempty" aper:"optional,sizeLB:1,sizeUB:128,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	SemiPersistentOnPuschV1530 *SemiPersistentOnPuschv1530CsiReportConfig `protobuf:"bytes,17,opt,name=semi_persistent_on_pusch_v1530,json=semiPersistentOnPUSCH-v1530,proto3,oneof" json:"semi_persistent_on_pusch_v1530,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	SemiPersistentOnPuschV1610 *SemiPersistentOnPuschv1610CsiReportConfig `protobuf:"bytes,18,opt,name=semi_persistent_on_pusch_v1610,json=semiPersistentOnPUSCH-v1610,proto3,oneof" json:"semi_persistent_on_pusch_v1610,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	AperiodicV1610 *Aperiodicv1610CsiReportConfig `protobuf:"bytes,19,opt,name=aperiodic_v1610,json=aperiodic-v1610,proto3,oneof" json:"aperiodic_v1610,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	ReportQuantityR16 *ReportQuantityr16CsiReportConfig `protobuf:"bytes,20,opt,name=report_quantity_r16,json=reportQuantity-r16,proto3,oneof" json:"report_quantity_r16,omitempty" aper:"optional,fromValueExt,"`
	// @inject_tag: aper:"optional,fromValueExt,"
	CodebookConfigR16 *CodebookConfigr16 `protobuf:"bytes,21,opt,name=codebook_config_r16,json=codebookConfig-r16,proto3,oneof" json:"codebook_config_r16,omitempty" aper:"optional,fromValueExt,"`
}

func (x *CsiReportConfig) Reset() {
	*x = CsiReportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiReportConfig) ProtoMessage() {}

func (x *CsiReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiReportConfig.ProtoReflect.Descriptor instead.
func (*CsiReportConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{16}
}

func (x *CsiReportConfig) GetReportConfigId() *CsiReportConfigId {
	if x != nil {
		return x.ReportConfigId
	}
	return nil
}

func (x *CsiReportConfig) GetCarrier() *ServCellIndex {
	if x != nil {
		return x.Carrier
	}
	return nil
}

func (x *CsiReportConfig) GetResourcesForChannelMeasurement() *CsiResourceConfigId {
	if x != nil {
		return x.ResourcesForChannelMeasurement
	}
	return nil
}

func (x *CsiReportConfig) GetCsiImResourcesForInterference() *CsiResourceConfigId {
	if x != nil {
		return x.CsiImResourcesForInterference
	}
	return nil
}

func (x *CsiReportConfig) GetNzpCsiRsResourcesForInterference() *CsiResourceConfigId {
	if x != nil {
		return x.NzpCsiRsResourcesForInterference
	}
	return nil
}

func (x *CsiReportConfig) GetReportConfigType() *ReportConfigTypeCsiReportConfig {
	if x != nil {
		return x.ReportConfigType
	}
	return nil
}

func (x *CsiReportConfig) GetReportQuantity() *ReportQuantityCsiReportConfig {
	if x != nil {
		return x.ReportQuantity
	}
	return nil
}

func (x *CsiReportConfig) GetReportFreqConfiguration() *ReportFreqConfigurationCsiReportConfig {
	if x != nil {
		return x.ReportFreqConfiguration
	}
	return nil
}

func (x *CsiReportConfig) GetTimeRestrictionForChannelMeasurements() TimeRestrictionForChannelMeasurementsCsireportConfig {
	if x != nil {
		return x.TimeRestrictionForChannelMeasurements
	}
	return TimeRestrictionForChannelMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_CHANNEL_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED
}

func (x *CsiReportConfig) GetTimeRestrictionForInterferenceMeasurements() TimeRestrictionForInterferenceMeasurementsCsireportConfig {
	if x != nil {
		return x.TimeRestrictionForInterferenceMeasurements
	}
	return TimeRestrictionForInterferenceMeasurementsCsireportConfig_TIME_RESTRICTION_FOR_INTERFERENCE_MEASUREMENTS_CSIREPORT_CONFIG_CONFIGURED
}

func (x *CsiReportConfig) GetCodebookConfig() *CodebookConfig {
	if x != nil {
		return x.CodebookConfig
	}
	return nil
}

func (x *CsiReportConfig) GetDummy() DummyCsireportConfig {
	if x != nil && x.Dummy != nil {
		return *x.Dummy
	}
	return DummyCsireportConfig_DUMMY_CSIREPORT_CONFIG_N1
}

func (x *CsiReportConfig) GetGroupBasedBeamReporting() *GroupBasedBeamReportingCsiReportConfig {
	if x != nil {
		return x.GroupBasedBeamReporting
	}
	return nil
}

func (x *CsiReportConfig) GetCqiTable() CqiTableCsireportConfig {
	if x != nil && x.CqiTable != nil {
		return *x.CqiTable
	}
	return CqiTableCsireportConfig_CQI_TABLE_CSIREPORT_CONFIG_TABLE1
}

func (x *CsiReportConfig) GetSubbandSize() SubbandSizeCsireportConfig {
	if x != nil {
		return x.SubbandSize
	}
	return SubbandSizeCsireportConfig_SUBBAND_SIZE_CSIREPORT_CONFIG_VALUE1
}

func (x *CsiReportConfig) GetNonPmiPortIndication() []*PortIndexFor8Ranks {
	if x != nil {
		return x.NonPmiPortIndication
	}
	return nil
}

func (x *CsiReportConfig) GetSemiPersistentOnPuschV1530() *SemiPersistentOnPuschv1530CsiReportConfig {
	if x != nil {
		return x.SemiPersistentOnPuschV1530
	}
	return nil
}

func (x *CsiReportConfig) GetSemiPersistentOnPuschV1610() *SemiPersistentOnPuschv1610CsiReportConfig {
	if x != nil {
		return x.SemiPersistentOnPuschV1610
	}
	return nil
}

func (x *CsiReportConfig) GetAperiodicV1610() *Aperiodicv1610CsiReportConfig {
	if x != nil {
		return x.AperiodicV1610
	}
	return nil
}

func (x *CsiReportConfig) GetReportQuantityR16() *ReportQuantityr16CsiReportConfig {
	if x != nil {
		return x.ReportQuantityR16
	}
	return nil
}

func (x *CsiReportConfig) GetCodebookConfigR16() *CodebookConfigr16 {
	if x != nil {
		return x.CodebookConfigR16
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:114
// {CSI-ReportPeriodicityAndOffset}
type CsiReportPeriodicityAndOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:114
	//
	// Types that are assignable to CsiReportPeriodicityAndOffset:
	//	*CsiReportPeriodicityAndOffset_Slots4
	//	*CsiReportPeriodicityAndOffset_Slots5
	//	*CsiReportPeriodicityAndOffset_Slots8
	//	*CsiReportPeriodicityAndOffset_Slots10
	//	*CsiReportPeriodicityAndOffset_Slots16
	//	*CsiReportPeriodicityAndOffset_Slots20
	//	*CsiReportPeriodicityAndOffset_Slots40
	//	*CsiReportPeriodicityAndOffset_Slots80
	//	*CsiReportPeriodicityAndOffset_Slots160
	//	*CsiReportPeriodicityAndOffset_Slots320
	CsiReportPeriodicityAndOffset isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset `protobuf_oneof:"csi_report_periodicity_and_offset"`
}

func (x *CsiReportPeriodicityAndOffset) Reset() {
	*x = CsiReportPeriodicityAndOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiReportPeriodicityAndOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiReportPeriodicityAndOffset) ProtoMessage() {}

func (x *CsiReportPeriodicityAndOffset) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiReportPeriodicityAndOffset.ProtoReflect.Descriptor instead.
func (*CsiReportPeriodicityAndOffset) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{17}
}

func (m *CsiReportPeriodicityAndOffset) GetCsiReportPeriodicityAndOffset() isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset {
	if m != nil {
		return m.CsiReportPeriodicityAndOffset
	}
	return nil
}

func (x *CsiReportPeriodicityAndOffset) GetSlots4() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots4); ok {
		return x.Slots4
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots5() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots5); ok {
		return x.Slots5
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots8() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots8); ok {
		return x.Slots8
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots10() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots10); ok {
		return x.Slots10
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots16() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots16); ok {
		return x.Slots16
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots20() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots20); ok {
		return x.Slots20
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots40() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots40); ok {
		return x.Slots40
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots80() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots80); ok {
		return x.Slots80
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots160() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots160); ok {
		return x.Slots160
	}
	return 0
}

func (x *CsiReportPeriodicityAndOffset) GetSlots320() int32 {
	if x, ok := x.GetCsiReportPeriodicityAndOffset().(*CsiReportPeriodicityAndOffset_Slots320); ok {
		return x.Slots320
	}
	return 0
}

type isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset interface {
	isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset()
}

type CsiReportPeriodicityAndOffset_Slots4 struct {
	// @inject_tag: aper:"choiceIdx:1,valueLB:0,valueUB:3,"
	Slots4 int32 `protobuf:"varint,1,opt,name=slots4,proto3,oneof" aper:"choiceIdx:1,valueLB:0,valueUB:3,"`
}

type CsiReportPeriodicityAndOffset_Slots5 struct {
	// @inject_tag: aper:"choiceIdx:2,valueLB:0,valueUB:4,"
	Slots5 int32 `protobuf:"varint,2,opt,name=slots5,proto3,oneof" aper:"choiceIdx:2,valueLB:0,valueUB:4,"`
}

type CsiReportPeriodicityAndOffset_Slots8 struct {
	// @inject_tag: aper:"choiceIdx:3,valueLB:0,valueUB:7,"
	Slots8 int32 `protobuf:"varint,3,opt,name=slots8,proto3,oneof" aper:"choiceIdx:3,valueLB:0,valueUB:7,"`
}

type CsiReportPeriodicityAndOffset_Slots10 struct {
	// @inject_tag: aper:"choiceIdx:4,valueLB:0,valueUB:9,"
	Slots10 int32 `protobuf:"varint,4,opt,name=slots10,proto3,oneof" aper:"choiceIdx:4,valueLB:0,valueUB:9,"`
}

type CsiReportPeriodicityAndOffset_Slots16 struct {
	// @inject_tag: aper:"choiceIdx:5,valueLB:0,valueUB:15,"
	Slots16 int32 `protobuf:"varint,5,opt,name=slots16,proto3,oneof" aper:"choiceIdx:5,valueLB:0,valueUB:15,"`
}

type CsiReportPeriodicityAndOffset_Slots20 struct {
	// @inject_tag: aper:"choiceIdx:6,valueLB:0,valueUB:19,"
	Slots20 int32 `protobuf:"varint,6,opt,name=slots20,proto3,oneof" aper:"choiceIdx:6,valueLB:0,valueUB:19,"`
}

type CsiReportPeriodicityAndOffset_Slots40 struct {
	// @inject_tag: aper:"choiceIdx:7,valueLB:0,valueUB:39,"
	Slots40 int32 `protobuf:"varint,7,opt,name=slots40,proto3,oneof" aper:"choiceIdx:7,valueLB:0,valueUB:39,"`
}

type CsiReportPeriodicityAndOffset_Slots80 struct {
	// @inject_tag: aper:"choiceIdx:8,valueLB:0,valueUB:79,"
	Slots80 int32 `protobuf:"varint,8,opt,name=slots80,proto3,oneof" aper:"choiceIdx:8,valueLB:0,valueUB:79,"`
}

type CsiReportPeriodicityAndOffset_Slots160 struct {
	// @inject_tag: aper:"choiceIdx:9,valueLB:0,valueUB:159,"
	Slots160 int32 `protobuf:"varint,9,opt,name=slots160,proto3,oneof" aper:"choiceIdx:9,valueLB:0,valueUB:159,"`
}

type CsiReportPeriodicityAndOffset_Slots320 struct {
	// @inject_tag: aper:"choiceIdx:10,valueLB:0,valueUB:319,"
	Slots320 int32 `protobuf:"varint,10,opt,name=slots320,proto3,oneof" aper:"choiceIdx:10,valueLB:0,valueUB:319,"`
}

func (*CsiReportPeriodicityAndOffset_Slots4) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots5) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots8) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots10) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots16) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots20) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots40) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots80) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots160) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

func (*CsiReportPeriodicityAndOffset_Slots320) isCsiReportPeriodicityAndOffset_CsiReportPeriodicityAndOffset() {
}

// sequence from CSI-ReportConfig.asn1:127
// {PUCCH-CSI-Resource}
type PucchCSiResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UplinkBandwidthPartId *BwpId           `protobuf:"bytes,1,opt,name=uplink_bandwidth_part_id,json=uplinkBandwidthPartId,proto3" json:"uplink_bandwidth_part_id,omitempty"`
	PucchResource         *PucchResourceId `protobuf:"bytes,2,opt,name=pucch_resource,json=pucch-Resource,proto3" json:"pucch_resource,omitempty"`
}

func (x *PucchCSiResource) Reset() {
	*x = PucchCSiResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PucchCSiResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PucchCSiResource) ProtoMessage() {}

func (x *PucchCSiResource) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PucchCSiResource.ProtoReflect.Descriptor instead.
func (*PucchCSiResource) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{18}
}

func (x *PucchCSiResource) GetUplinkBandwidthPartId() *BwpId {
	if x != nil {
		return x.UplinkBandwidthPartId
	}
	return nil
}

func (x *PucchCSiResource) GetPucchResource() *PucchResourceId {
	if x != nil {
		return x.PucchResource
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:133
// {portIndex8PortIndexFor8Ranks}
type PortIndex8PortIndexFor8Ranks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	Rank1_8 *PortIndex8 `protobuf:"bytes,1,opt,name=rank1_8,json=rank1-8,proto3,oneof" json:"rank1_8,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,sizeLB:2,sizeUB:2,"
	Rank2_8 []*PortIndex8 `protobuf:"bytes,2,rep,name=rank2_8,json=rank2-8,proto3" json:"rank2_8,omitempty" aper:"optional,sizeLB:2,sizeUB:2,"`
	// @inject_tag: aper:"optional,sizeLB:3,sizeUB:3,"
	Rank3_8 []*PortIndex8 `protobuf:"bytes,3,rep,name=rank3_8,json=rank3-8,proto3" json:"rank3_8,omitempty" aper:"optional,sizeLB:3,sizeUB:3,"`
	// @inject_tag: aper:"optional,sizeLB:4,sizeUB:4,"
	Rank4_8 []*PortIndex8 `protobuf:"bytes,4,rep,name=rank4_8,json=rank4-8,proto3" json:"rank4_8,omitempty" aper:"optional,sizeLB:4,sizeUB:4,"`
	// @inject_tag: aper:"optional,sizeLB:5,sizeUB:5,"
	Rank5_8 []*PortIndex8 `protobuf:"bytes,5,rep,name=rank5_8,json=rank5-8,proto3" json:"rank5_8,omitempty" aper:"optional,sizeLB:5,sizeUB:5,"`
	// @inject_tag: aper:"optional,sizeLB:6,sizeUB:6,"
	Rank6_8 []*PortIndex8 `protobuf:"bytes,6,rep,name=rank6_8,json=rank6-8,proto3" json:"rank6_8,omitempty" aper:"optional,sizeLB:6,sizeUB:6,"`
	// @inject_tag: aper:"optional,sizeLB:7,sizeUB:7,"
	Rank7_8 []*PortIndex8 `protobuf:"bytes,7,rep,name=rank7_8,json=rank7-8,proto3" json:"rank7_8,omitempty" aper:"optional,sizeLB:7,sizeUB:7,"`
	// @inject_tag: aper:"optional,sizeLB:8,sizeUB:8,"
	Rank8_8 []*PortIndex8 `protobuf:"bytes,8,rep,name=rank8_8,json=rank8-8,proto3" json:"rank8_8,omitempty" aper:"optional,sizeLB:8,sizeUB:8,"`
}

func (x *PortIndex8PortIndexFor8Ranks) Reset() {
	*x = PortIndex8PortIndexFor8Ranks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex8PortIndexFor8Ranks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex8PortIndexFor8Ranks) ProtoMessage() {}

func (x *PortIndex8PortIndexFor8Ranks) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex8PortIndexFor8Ranks.ProtoReflect.Descriptor instead.
func (*PortIndex8PortIndexFor8Ranks) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{19}
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank1_8() *PortIndex8 {
	if x != nil {
		return x.Rank1_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank2_8() []*PortIndex8 {
	if x != nil {
		return x.Rank2_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank3_8() []*PortIndex8 {
	if x != nil {
		return x.Rank3_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank4_8() []*PortIndex8 {
	if x != nil {
		return x.Rank4_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank5_8() []*PortIndex8 {
	if x != nil {
		return x.Rank5_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank6_8() []*PortIndex8 {
	if x != nil {
		return x.Rank6_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank7_8() []*PortIndex8 {
	if x != nil {
		return x.Rank7_8
	}
	return nil
}

func (x *PortIndex8PortIndexFor8Ranks) GetRank8_8() []*PortIndex8 {
	if x != nil {
		return x.Rank8_8
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:143
// {portIndex4PortIndexFor8Ranks}
type PortIndex4PortIndexFor8Ranks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	Rank1_4 *PortIndex4 `protobuf:"bytes,1,opt,name=rank1_4,json=rank1-4,proto3,oneof" json:"rank1_4,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,sizeLB:2,sizeUB:2,"
	Rank2_4 []*PortIndex4 `protobuf:"bytes,2,rep,name=rank2_4,json=rank2-4,proto3" json:"rank2_4,omitempty" aper:"optional,sizeLB:2,sizeUB:2,"`
	// @inject_tag: aper:"optional,sizeLB:3,sizeUB:3,"
	Rank3_4 []*PortIndex4 `protobuf:"bytes,3,rep,name=rank3_4,json=rank3-4,proto3" json:"rank3_4,omitempty" aper:"optional,sizeLB:3,sizeUB:3,"`
	// @inject_tag: aper:"optional,sizeLB:4,sizeUB:4,"
	Rank4_4 []*PortIndex4 `protobuf:"bytes,4,rep,name=rank4_4,json=rank4-4,proto3" json:"rank4_4,omitempty" aper:"optional,sizeLB:4,sizeUB:4,"`
}

func (x *PortIndex4PortIndexFor8Ranks) Reset() {
	*x = PortIndex4PortIndexFor8Ranks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex4PortIndexFor8Ranks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex4PortIndexFor8Ranks) ProtoMessage() {}

func (x *PortIndex4PortIndexFor8Ranks) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex4PortIndexFor8Ranks.ProtoReflect.Descriptor instead.
func (*PortIndex4PortIndexFor8Ranks) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{20}
}

func (x *PortIndex4PortIndexFor8Ranks) GetRank1_4() *PortIndex4 {
	if x != nil {
		return x.Rank1_4
	}
	return nil
}

func (x *PortIndex4PortIndexFor8Ranks) GetRank2_4() []*PortIndex4 {
	if x != nil {
		return x.Rank2_4
	}
	return nil
}

func (x *PortIndex4PortIndexFor8Ranks) GetRank3_4() []*PortIndex4 {
	if x != nil {
		return x.Rank3_4
	}
	return nil
}

func (x *PortIndex4PortIndexFor8Ranks) GetRank4_4() []*PortIndex4 {
	if x != nil {
		return x.Rank4_4
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:149
// {portIndex2PortIndexFor8Ranks}
type PortIndex2PortIndexFor8Ranks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	Rank1_2 *PortIndex2 `protobuf:"bytes,1,opt,name=rank1_2,json=rank1-2,proto3,oneof" json:"rank1_2,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,sizeLB:2,sizeUB:2,"
	Rank2_2 []*PortIndex2 `protobuf:"bytes,2,rep,name=rank2_2,json=rank2-2,proto3" json:"rank2_2,omitempty" aper:"optional,sizeLB:2,sizeUB:2,"`
}

func (x *PortIndex2PortIndexFor8Ranks) Reset() {
	*x = PortIndex2PortIndexFor8Ranks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex2PortIndexFor8Ranks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex2PortIndexFor8Ranks) ProtoMessage() {}

func (x *PortIndex2PortIndexFor8Ranks) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex2PortIndexFor8Ranks.ProtoReflect.Descriptor instead.
func (*PortIndex2PortIndexFor8Ranks) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{21}
}

func (x *PortIndex2PortIndexFor8Ranks) GetRank1_2() *PortIndex2 {
	if x != nil {
		return x.Rank1_2
	}
	return nil
}

func (x *PortIndex2PortIndexFor8Ranks) GetRank2_2() []*PortIndex2 {
	if x != nil {
		return x.Rank2_2
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:141
// {PortIndexFor8Ranks}
type PortIndexFor8Ranks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:141
	//
	// Types that are assignable to PortIndexFor8Ranks:
	//	*PortIndexFor8Ranks_PortIndex8
	//	*PortIndexFor8Ranks_PortIndex4
	//	*PortIndexFor8Ranks_PortIndex2
	//	*PortIndexFor8Ranks_PortIndex1
	PortIndexFor8Ranks isPortIndexFor8Ranks_PortIndexFor8Ranks `protobuf_oneof:"port_index_for8_ranks"`
}

func (x *PortIndexFor8Ranks) Reset() {
	*x = PortIndexFor8Ranks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndexFor8Ranks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndexFor8Ranks) ProtoMessage() {}

func (x *PortIndexFor8Ranks) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndexFor8Ranks.ProtoReflect.Descriptor instead.
func (*PortIndexFor8Ranks) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{22}
}

func (m *PortIndexFor8Ranks) GetPortIndexFor8Ranks() isPortIndexFor8Ranks_PortIndexFor8Ranks {
	if m != nil {
		return m.PortIndexFor8Ranks
	}
	return nil
}

func (x *PortIndexFor8Ranks) GetPortIndex8() *PortIndex8PortIndexFor8Ranks {
	if x, ok := x.GetPortIndexFor8Ranks().(*PortIndexFor8Ranks_PortIndex8); ok {
		return x.PortIndex8
	}
	return nil
}

func (x *PortIndexFor8Ranks) GetPortIndex4() *PortIndex4PortIndexFor8Ranks {
	if x, ok := x.GetPortIndexFor8Ranks().(*PortIndexFor8Ranks_PortIndex4); ok {
		return x.PortIndex4
	}
	return nil
}

func (x *PortIndexFor8Ranks) GetPortIndex2() *PortIndex2PortIndexFor8Ranks {
	if x, ok := x.GetPortIndexFor8Ranks().(*PortIndexFor8Ranks_PortIndex2); ok {
		return x.PortIndex2
	}
	return nil
}

func (x *PortIndexFor8Ranks) GetPortIndex1() int32 {
	if x, ok := x.GetPortIndexFor8Ranks().(*PortIndexFor8Ranks_PortIndex1); ok {
		return x.PortIndex1
	}
	return 0
}

type isPortIndexFor8Ranks_PortIndexFor8Ranks interface {
	isPortIndexFor8Ranks_PortIndexFor8Ranks()
}

type PortIndexFor8Ranks_PortIndex8 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	PortIndex8 *PortIndex8PortIndexFor8Ranks `protobuf:"bytes,1,opt,name=port_index8,json=portIndex8,proto3,oneof" aper:"choiceIdx:1,"`
}

type PortIndexFor8Ranks_PortIndex4 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	PortIndex4 *PortIndex4PortIndexFor8Ranks `protobuf:"bytes,2,opt,name=port_index4,json=portIndex4,proto3,oneof" aper:"choiceIdx:2,"`
}

type PortIndexFor8Ranks_PortIndex2 struct {
	// @inject_tag: aper:"choiceIdx:3,"
	PortIndex2 *PortIndex2PortIndexFor8Ranks `protobuf:"bytes,3,opt,name=port_index2,json=portIndex2,proto3,oneof" aper:"choiceIdx:3,"`
}

type PortIndexFor8Ranks_PortIndex1 struct {
	// @inject_tag: aper:"choiceIdx:4,"
	PortIndex1 int32 `protobuf:"varint,4,opt,name=port_index1,json=portIndex1,proto3,oneof" aper:"choiceIdx:4,"`
}

func (*PortIndexFor8Ranks_PortIndex8) isPortIndexFor8Ranks_PortIndexFor8Ranks() {}

func (*PortIndexFor8Ranks_PortIndex4) isPortIndexFor8Ranks_PortIndexFor8Ranks() {}

func (*PortIndexFor8Ranks_PortIndex2) isPortIndexFor8Ranks_PortIndexFor8Ranks() {}

func (*PortIndexFor8Ranks_PortIndex1) isPortIndexFor8Ranks_PortIndexFor8Ranks() {}

// range of Integer from CSI-ReportConfig.asn1:155
// {PortIndex8}
type PortIndex8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:7,"`
}

func (x *PortIndex8) Reset() {
	*x = PortIndex8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex8) ProtoMessage() {}

func (x *PortIndex8) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex8.ProtoReflect.Descriptor instead.
func (*PortIndex8) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{23}
}

func (x *PortIndex8) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from CSI-ReportConfig.asn1:156
// {PortIndex4}
type PortIndex4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:3,"`
}

func (x *PortIndex4) Reset() {
	*x = PortIndex4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex4) ProtoMessage() {}

func (x *PortIndex4) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex4.ProtoReflect.Descriptor instead.
func (*PortIndex4) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{24}
}

func (x *PortIndex4) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from CSI-ReportConfig.asn1:157
// {PortIndex2}
type PortIndex2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:1,"`
}

func (x *PortIndex2) Reset() {
	*x = PortIndex2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortIndex2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortIndex2) ProtoMessage() {}

func (x *PortIndex2) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortIndex2.ProtoReflect.Descriptor instead.
func (*PortIndex2) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{25}
}

func (x *PortIndex2) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from CSI-ReportConfig.asn1:163
// {ServCellIndex}
type ServCellIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:31,"`
}

func (x *ServCellIndex) Reset() {
	*x = ServCellIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServCellIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServCellIndex) ProtoMessage() {}

func (x *ServCellIndex) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServCellIndex.ProtoReflect.Descriptor instead.
func (*ServCellIndex) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{26}
}

func (x *ServCellIndex) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from CSI-ReportConfig.asn1:169
// {CSI-ResourceConfigId}
type CsiResourceConfigId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:111,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:111,"`
}

func (x *CsiResourceConfigId) Reset() {
	*x = CsiResourceConfigId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsiResourceConfigId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsiResourceConfigId) ProtoMessage() {}

func (x *CsiResourceConfigId) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsiResourceConfigId.ProtoReflect.Descriptor instead.
func (*CsiResourceConfigId) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{27}
}

func (x *CsiResourceConfigId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from CSI-ReportConfig.asn1:173
// {P0-PUSCH-AlphaSetId}
type P0PUschAlphaSetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:29,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:29,"`
}

func (x *P0PUschAlphaSetId) Reset() {
	*x = P0PUschAlphaSetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P0PUschAlphaSetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P0PUschAlphaSetId) ProtoMessage() {}

func (x *P0PUschAlphaSetId) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P0PUschAlphaSetId.ProtoReflect.Descriptor instead.
func (*P0PUschAlphaSetId) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{28}
}

func (x *P0PUschAlphaSetId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from CSI-ReportConfig.asn1:185
// {twonrOfAntennaPorts}
type TwonrOfAntennaPorts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:6,sizeUB:6,"
	TwoTxCodebookSubsetRestriction *asn1.BitString `protobuf:"bytes,1,opt,name=two_tx_codebook_subset_restriction,json=twoTX-CodebookSubsetRestriction,proto3" json:"two_tx_codebook_subset_restriction,omitempty" aper:"sizeLB:6,sizeUB:6,"`
}

func (x *TwonrOfAntennaPorts) Reset() {
	*x = TwonrOfAntennaPorts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwonrOfAntennaPorts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwonrOfAntennaPorts) ProtoMessage() {}

func (x *TwonrOfAntennaPorts) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwonrOfAntennaPorts.ProtoReflect.Descriptor instead.
func (*TwonrOfAntennaPorts) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{29}
}

func (x *TwonrOfAntennaPorts) GetTwoTxCodebookSubsetRestriction() *asn1.BitString {
	if x != nil {
		return x.TwoTxCodebookSubsetRestriction
	}
	return nil
}

// choice from CSI-ReportConfig.asn1:188
// {n1-n2moreThanTwo}
type N1N2MoreThanTwo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:188
	//
	// Types that are assignable to N1N2MoreThanTwo:
	//	*N1N2MoreThanTwo_TwoOneTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_TwoTwoTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_FourOneTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_ThreeTwoTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_SixOneTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_FourTwoTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_EightOneTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_FourThreeTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_SixTwoTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_TwelveOneTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_FourFourTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_EightTwoTypeISinglePanelRestriction
	//	*N1N2MoreThanTwo_SixteenOneTypeISinglePanelRestriction
	N1N2MoreThanTwo isN1N2MoreThanTwo_N1N2MoreThanTwo `protobuf_oneof:"n1_n2more_than_two"`
}

func (x *N1N2MoreThanTwo) Reset() {
	*x = N1N2MoreThanTwo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *N1N2MoreThanTwo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N1N2MoreThanTwo) ProtoMessage() {}

func (x *N1N2MoreThanTwo) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N1N2MoreThanTwo.ProtoReflect.Descriptor instead.
func (*N1N2MoreThanTwo) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{30}
}

func (m *N1N2MoreThanTwo) GetN1N2MoreThanTwo() isN1N2MoreThanTwo_N1N2MoreThanTwo {
	if m != nil {
		return m.N1N2MoreThanTwo
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetTwoOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_TwoOneTypeISinglePanelRestriction); ok {
		return x.TwoOneTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetTwoTwoTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_TwoTwoTypeISinglePanelRestriction); ok {
		return x.TwoTwoTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetFourOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_FourOneTypeISinglePanelRestriction); ok {
		return x.FourOneTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetThreeTwoTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_ThreeTwoTypeISinglePanelRestriction); ok {
		return x.ThreeTwoTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetSixOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_SixOneTypeISinglePanelRestriction); ok {
		return x.SixOneTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetFourTwoTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_FourTwoTypeISinglePanelRestriction); ok {
		return x.FourTwoTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetEightOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_EightOneTypeISinglePanelRestriction); ok {
		return x.EightOneTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetFourThreeTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_FourThreeTypeISinglePanelRestriction); ok {
		return x.FourThreeTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetSixTwoTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_SixTwoTypeISinglePanelRestriction); ok {
		return x.SixTwoTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetTwelveOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_TwelveOneTypeISinglePanelRestriction); ok {
		return x.TwelveOneTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetFourFourTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_FourFourTypeISinglePanelRestriction); ok {
		return x.FourFourTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetEightTwoTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_EightTwoTypeISinglePanelRestriction); ok {
		return x.EightTwoTypeISinglePanelRestriction
	}
	return nil
}

func (x *N1N2MoreThanTwo) GetSixteenOneTypeISinglePanelRestriction() *asn1.BitString {
	if x, ok := x.GetN1N2MoreThanTwo().(*N1N2MoreThanTwo_SixteenOneTypeISinglePanelRestriction); ok {
		return x.SixteenOneTypeISinglePanelRestriction
	}
	return nil
}

type isN1N2MoreThanTwo_N1N2MoreThanTwo interface {
	isN1N2MoreThanTwo_N1N2MoreThanTwo()
}

type N1N2MoreThanTwo_TwoOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:8,sizeUB:8,"
	TwoOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,1,opt,name=two_one_type_i_single_panel_restriction,json=two-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:1,sizeLB:8,sizeUB:8,"`
}

type N1N2MoreThanTwo_TwoTwoTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:64,sizeUB:64,"
	TwoTwoTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=two_two_type_i_single_panel_restriction,json=two-two-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:2,sizeLB:64,sizeUB:64,"`
}

type N1N2MoreThanTwo_FourOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:16,sizeUB:16,"
	FourOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,3,opt,name=four_one_type_i_single_panel_restriction,json=four-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:3,sizeLB:16,sizeUB:16,"`
}

type N1N2MoreThanTwo_ThreeTwoTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:96,sizeUB:96,"
	ThreeTwoTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,4,opt,name=three_two_type_i_single_panel_restriction,json=three-two-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:4,sizeLB:96,sizeUB:96,"`
}

type N1N2MoreThanTwo_SixOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:5,sizeLB:24,sizeUB:24,"
	SixOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,5,opt,name=six_one_type_i_single_panel_restriction,json=six-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:5,sizeLB:24,sizeUB:24,"`
}

type N1N2MoreThanTwo_FourTwoTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:6,sizeLB:128,sizeUB:128,"
	FourTwoTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,6,opt,name=four_two_type_i_single_panel_restriction,json=four-two-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:6,sizeLB:128,sizeUB:128,"`
}

type N1N2MoreThanTwo_EightOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:7,sizeLB:32,sizeUB:32,"
	EightOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,7,opt,name=eight_one_type_i_single_panel_restriction,json=eight-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:7,sizeLB:32,sizeUB:32,"`
}

type N1N2MoreThanTwo_FourThreeTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:8,sizeLB:192,sizeUB:192,"
	FourThreeTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,8,opt,name=four_three_type_i_single_panel_restriction,json=four-three-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:8,sizeLB:192,sizeUB:192,"`
}

type N1N2MoreThanTwo_SixTwoTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:9,sizeLB:192,sizeUB:192,"
	SixTwoTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,9,opt,name=six_two_type_i_single_panel_restriction,json=six-two-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:9,sizeLB:192,sizeUB:192,"`
}

type N1N2MoreThanTwo_TwelveOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:10,sizeLB:48,sizeUB:48,"
	TwelveOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,10,opt,name=twelve_one_type_i_single_panel_restriction,json=twelve-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:10,sizeLB:48,sizeUB:48,"`
}

type N1N2MoreThanTwo_FourFourTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:11,sizeLB:256,sizeUB:256,"
	FourFourTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,11,opt,name=four_four_type_i_single_panel_restriction,json=four-four-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:11,sizeLB:256,sizeUB:256,"`
}

type N1N2MoreThanTwo_EightTwoTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:12,sizeLB:256,sizeUB:256,"
	EightTwoTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,12,opt,name=eight_two_type_i_single_panel_restriction,json=eight-two-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:12,sizeLB:256,sizeUB:256,"`
}

type N1N2MoreThanTwo_SixteenOneTypeISinglePanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:13,sizeLB:64,sizeUB:64,"
	SixteenOneTypeISinglePanelRestriction *asn1.BitString `protobuf:"bytes,13,opt,name=sixteen_one_type_i_single_panel_restriction,json=sixteen-one-TypeI-SinglePanel-Restriction,proto3,oneof" aper:"choiceIdx:13,sizeLB:64,sizeUB:64,"`
}

func (*N1N2MoreThanTwo_TwoOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_TwoTwoTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_FourOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_ThreeTwoTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_SixOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_FourTwoTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_EightOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_FourThreeTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_SixTwoTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_TwelveOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_FourFourTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_EightTwoTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

func (*N1N2MoreThanTwo_SixteenOneTypeISinglePanelRestriction) isN1N2MoreThanTwo_N1N2MoreThanTwo() {}

// sequence from CSI-ReportConfig.asn1:201
// {moreThanTwonrOfAntennaPorts}
type MoreThanTwonrOfAntennaPorts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N1N2 *N1N2MoreThanTwo `protobuf:"bytes,1,opt,name=n1_n2,json=n1-n2,proto3" json:"n1_n2,omitempty"`
	// @inject_tag: aper:"optional,sizeLB:16,sizeUB:16,"
	TypeISinglePanelCodebookSubsetRestrictionI2 *asn1.BitString `protobuf:"bytes,2,opt,name=type_i_single_panel_codebook_subset_restriction_i2,json=typeI-SinglePanel-codebookSubsetRestriction-i2,proto3,oneof" json:"type_i_single_panel_codebook_subset_restriction_i2,omitempty" aper:"optional,sizeLB:16,sizeUB:16,"`
}

func (x *MoreThanTwonrOfAntennaPorts) Reset() {
	*x = MoreThanTwonrOfAntennaPorts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoreThanTwonrOfAntennaPorts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoreThanTwonrOfAntennaPorts) ProtoMessage() {}

func (x *MoreThanTwonrOfAntennaPorts) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoreThanTwonrOfAntennaPorts.ProtoReflect.Descriptor instead.
func (*MoreThanTwonrOfAntennaPorts) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{31}
}

func (x *MoreThanTwonrOfAntennaPorts) GetN1N2() *N1N2MoreThanTwo {
	if x != nil {
		return x.N1N2
	}
	return nil
}

func (x *MoreThanTwonrOfAntennaPorts) GetTypeISinglePanelCodebookSubsetRestrictionI2() *asn1.BitString {
	if x != nil {
		return x.TypeISinglePanelCodebookSubsetRestrictionI2
	}
	return nil
}

// choice from CSI-ReportConfig.asn1:185
// {nrOfAntennaPortstypeI-SinglePanel}
type NrOfAntennaPortstypeISinglePanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:185
	//
	// Types that are assignable to NrOfAntennaPortstypeISinglePanel:
	//	*NrOfAntennaPortstypeISinglePanel_Two
	//	*NrOfAntennaPortstypeISinglePanel_MoreThanTwo
	NrOfAntennaPortstypeISinglePanel isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel `protobuf_oneof:"nr_of_antenna_portstype_i_single_panel"`
}

func (x *NrOfAntennaPortstypeISinglePanel) Reset() {
	*x = NrOfAntennaPortstypeISinglePanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrOfAntennaPortstypeISinglePanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrOfAntennaPortstypeISinglePanel) ProtoMessage() {}

func (x *NrOfAntennaPortstypeISinglePanel) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrOfAntennaPortstypeISinglePanel.ProtoReflect.Descriptor instead.
func (*NrOfAntennaPortstypeISinglePanel) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{32}
}

func (m *NrOfAntennaPortstypeISinglePanel) GetNrOfAntennaPortstypeISinglePanel() isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel {
	if m != nil {
		return m.NrOfAntennaPortstypeISinglePanel
	}
	return nil
}

func (x *NrOfAntennaPortstypeISinglePanel) GetTwo() *TwonrOfAntennaPorts {
	if x, ok := x.GetNrOfAntennaPortstypeISinglePanel().(*NrOfAntennaPortstypeISinglePanel_Two); ok {
		return x.Two
	}
	return nil
}

func (x *NrOfAntennaPortstypeISinglePanel) GetMoreThanTwo() *MoreThanTwonrOfAntennaPorts {
	if x, ok := x.GetNrOfAntennaPortstypeISinglePanel().(*NrOfAntennaPortstypeISinglePanel_MoreThanTwo); ok {
		return x.MoreThanTwo
	}
	return nil
}

type isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel interface {
	isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel()
}

type NrOfAntennaPortstypeISinglePanel_Two struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Two *TwonrOfAntennaPorts `protobuf:"bytes,1,opt,name=two,proto3,oneof" aper:"choiceIdx:1,"`
}

type NrOfAntennaPortstypeISinglePanel_MoreThanTwo struct {
	// @inject_tag: aper:"choiceIdx:2,"
	MoreThanTwo *MoreThanTwonrOfAntennaPorts `protobuf:"bytes,2,opt,name=more_than_two,json=moreThanTwo,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*NrOfAntennaPortstypeISinglePanel_Two) isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel() {
}

func (*NrOfAntennaPortstypeISinglePanel_MoreThanTwo) isNrOfAntennaPortstypeISinglePanel_NrOfAntennaPortstypeISinglePanel() {
}

// sequence from CSI-ReportConfig.asn1:204
// {typeI-SinglePanelsubType}
type TypeISinglePanelsubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NrOfAntennaPorts *NrOfAntennaPortstypeISinglePanel `protobuf:"bytes,1,opt,name=nr_of_antenna_ports,json=nrOfAntennaPorts,proto3" json:"nr_of_antenna_ports,omitempty"`
	// @inject_tag: aper:"sizeLB:8,sizeUB:8,"
	TypeISinglePanelRiRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=type_i_single_panel_ri_restriction,json=typeI-SinglePanel-ri-Restriction,proto3" json:"type_i_single_panel_ri_restriction,omitempty" aper:"sizeLB:8,sizeUB:8,"`
}

func (x *TypeISinglePanelsubType) Reset() {
	*x = TypeISinglePanelsubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeISinglePanelsubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeISinglePanelsubType) ProtoMessage() {}

func (x *TypeISinglePanelsubType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeISinglePanelsubType.ProtoReflect.Descriptor instead.
func (*TypeISinglePanelsubType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{33}
}

func (x *TypeISinglePanelsubType) GetNrOfAntennaPorts() *NrOfAntennaPortstypeISinglePanel {
	if x != nil {
		return x.NrOfAntennaPorts
	}
	return nil
}

func (x *TypeISinglePanelsubType) GetTypeISinglePanelRiRestriction() *asn1.BitString {
	if x != nil {
		return x.TypeISinglePanelRiRestriction
	}
	return nil
}

// choice from CSI-ReportConfig.asn1:209
// {ng-n1-n2typeI-MultiPanel}
type Ngn1N2TypeIMultiPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:209
	//
	// Types that are assignable to NgN1N2TypeIMultiPanel:
	//	*Ngn1N2TypeIMultiPanel_TwoTwoOneTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_TwoFourOneTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_FourTwoOneTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_TwoTwoTwoTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_TwoEightOneTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_FourFourOneTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_TwoFourTwoTypeIMultiPanelRestriction
	//	*Ngn1N2TypeIMultiPanel_FourTwoTwoTypeIMultiPanelRestriction
	NgN1N2TypeIMultiPanel isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel `protobuf_oneof:"ng_n1_n2type_i_multi_panel"`
}

func (x *Ngn1N2TypeIMultiPanel) Reset() {
	*x = Ngn1N2TypeIMultiPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ngn1N2TypeIMultiPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ngn1N2TypeIMultiPanel) ProtoMessage() {}

func (x *Ngn1N2TypeIMultiPanel) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ngn1N2TypeIMultiPanel.ProtoReflect.Descriptor instead.
func (*Ngn1N2TypeIMultiPanel) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{34}
}

func (m *Ngn1N2TypeIMultiPanel) GetNgN1N2TypeIMultiPanel() isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel {
	if m != nil {
		return m.NgN1N2TypeIMultiPanel
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetTwoTwoOneTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_TwoTwoOneTypeIMultiPanelRestriction); ok {
		return x.TwoTwoOneTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetTwoFourOneTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_TwoFourOneTypeIMultiPanelRestriction); ok {
		return x.TwoFourOneTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetFourTwoOneTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_FourTwoOneTypeIMultiPanelRestriction); ok {
		return x.FourTwoOneTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetTwoTwoTwoTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_TwoTwoTwoTypeIMultiPanelRestriction); ok {
		return x.TwoTwoTwoTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetTwoEightOneTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_TwoEightOneTypeIMultiPanelRestriction); ok {
		return x.TwoEightOneTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetFourFourOneTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_FourFourOneTypeIMultiPanelRestriction); ok {
		return x.FourFourOneTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetTwoFourTwoTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_TwoFourTwoTypeIMultiPanelRestriction); ok {
		return x.TwoFourTwoTypeIMultiPanelRestriction
	}
	return nil
}

func (x *Ngn1N2TypeIMultiPanel) GetFourTwoTwoTypeIMultiPanelRestriction() *asn1.BitString {
	if x, ok := x.GetNgN1N2TypeIMultiPanel().(*Ngn1N2TypeIMultiPanel_FourTwoTwoTypeIMultiPanelRestriction); ok {
		return x.FourTwoTwoTypeIMultiPanelRestriction
	}
	return nil
}

type isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel interface {
	isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel()
}

type Ngn1N2TypeIMultiPanel_TwoTwoOneTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:8,sizeUB:8,"
	TwoTwoOneTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,1,opt,name=two_two_one_type_i_multi_panel_restriction,json=two-two-one-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:1,sizeLB:8,sizeUB:8,"`
}

type Ngn1N2TypeIMultiPanel_TwoFourOneTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:16,sizeUB:16,"
	TwoFourOneTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=two_four_one_type_i_multi_panel_restriction,json=two-four-one-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:2,sizeLB:16,sizeUB:16,"`
}

type Ngn1N2TypeIMultiPanel_FourTwoOneTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:8,sizeUB:8,"
	FourTwoOneTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,3,opt,name=four_two_one_type_i_multi_panel_restriction,json=four-two-one-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:3,sizeLB:8,sizeUB:8,"`
}

type Ngn1N2TypeIMultiPanel_TwoTwoTwoTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:64,sizeUB:64,"
	TwoTwoTwoTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,4,opt,name=two_two_two_type_i_multi_panel_restriction,json=two-two-two-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:4,sizeLB:64,sizeUB:64,"`
}

type Ngn1N2TypeIMultiPanel_TwoEightOneTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:5,sizeLB:32,sizeUB:32,"
	TwoEightOneTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,5,opt,name=two_eight_one_type_i_multi_panel_restriction,json=two-eight-one-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:5,sizeLB:32,sizeUB:32,"`
}

type Ngn1N2TypeIMultiPanel_FourFourOneTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:6,sizeLB:16,sizeUB:16,"
	FourFourOneTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,6,opt,name=four_four_one_type_i_multi_panel_restriction,json=four-four-one-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:6,sizeLB:16,sizeUB:16,"`
}

type Ngn1N2TypeIMultiPanel_TwoFourTwoTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:7,sizeLB:128,sizeUB:128,"
	TwoFourTwoTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,7,opt,name=two_four_two_type_i_multi_panel_restriction,json=two-four-two-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:7,sizeLB:128,sizeUB:128,"`
}

type Ngn1N2TypeIMultiPanel_FourTwoTwoTypeIMultiPanelRestriction struct {
	// @inject_tag: aper:"choiceIdx:8,sizeLB:64,sizeUB:64,"
	FourTwoTwoTypeIMultiPanelRestriction *asn1.BitString `protobuf:"bytes,8,opt,name=four_two_two_type_i_multi_panel_restriction,json=four-two-two-TypeI-MultiPanel-Restriction,proto3,oneof" aper:"choiceIdx:8,sizeLB:64,sizeUB:64,"`
}

func (*Ngn1N2TypeIMultiPanel_TwoTwoOneTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_TwoFourOneTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_FourTwoOneTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_TwoTwoTwoTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_TwoEightOneTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_FourFourOneTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_TwoFourTwoTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

func (*Ngn1N2TypeIMultiPanel_FourTwoTwoTypeIMultiPanelRestriction) isNgn1N2TypeIMultiPanel_NgN1N2TypeIMultiPanel() {
}

// sequence from CSI-ReportConfig.asn1:217
// {typeI-MultiPanelsubType}
type TypeIMultiPanelsubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NgN1N2 *Ngn1N2TypeIMultiPanel `protobuf:"bytes,1,opt,name=ng_n1_n2,json=ng-n1-n2,proto3" json:"ng_n1_n2,omitempty"`
	// @inject_tag: aper:"sizeLB:4,sizeUB:4,"
	RiRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=ri_restriction,json=ri-Restriction,proto3" json:"ri_restriction,omitempty" aper:"sizeLB:4,sizeUB:4,"`
}

func (x *TypeIMultiPanelsubType) Reset() {
	*x = TypeIMultiPanelsubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeIMultiPanelsubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeIMultiPanelsubType) ProtoMessage() {}

func (x *TypeIMultiPanelsubType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeIMultiPanelsubType.ProtoReflect.Descriptor instead.
func (*TypeIMultiPanelsubType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{35}
}

func (x *TypeIMultiPanelsubType) GetNgN1N2() *Ngn1N2TypeIMultiPanel {
	if x != nil {
		return x.NgN1N2
	}
	return nil
}

func (x *TypeIMultiPanelsubType) GetRiRestriction() *asn1.BitString {
	if x != nil {
		return x.RiRestriction
	}
	return nil
}

// choice from CSI-ReportConfig.asn1:206
// {subTypetype1}
type SubTypetype1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:206
	//
	// Types that are assignable to SubTypetype1:
	//	*SubTypetype1_TypeISinglePanel
	//	*SubTypetype1_TypeIMultiPanel
	SubTypetype1 isSubTypetype1_SubTypetype1 `protobuf_oneof:"sub_typetype1"`
}

func (x *SubTypetype1) Reset() {
	*x = SubTypetype1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTypetype1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTypetype1) ProtoMessage() {}

func (x *SubTypetype1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTypetype1.ProtoReflect.Descriptor instead.
func (*SubTypetype1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{36}
}

func (m *SubTypetype1) GetSubTypetype1() isSubTypetype1_SubTypetype1 {
	if m != nil {
		return m.SubTypetype1
	}
	return nil
}

func (x *SubTypetype1) GetTypeISinglePanel() *TypeISinglePanelsubType {
	if x, ok := x.GetSubTypetype1().(*SubTypetype1_TypeISinglePanel); ok {
		return x.TypeISinglePanel
	}
	return nil
}

func (x *SubTypetype1) GetTypeIMultiPanel() *TypeIMultiPanelsubType {
	if x, ok := x.GetSubTypetype1().(*SubTypetype1_TypeIMultiPanel); ok {
		return x.TypeIMultiPanel
	}
	return nil
}

type isSubTypetype1_SubTypetype1 interface {
	isSubTypetype1_SubTypetype1()
}

type SubTypetype1_TypeISinglePanel struct {
	// @inject_tag: aper:"choiceIdx:1,"
	TypeISinglePanel *TypeISinglePanelsubType `protobuf:"bytes,1,opt,name=type_i_single_panel,json=typeI-SinglePanel,proto3,oneof" aper:"choiceIdx:1,"`
}

type SubTypetype1_TypeIMultiPanel struct {
	// @inject_tag: aper:"choiceIdx:2,"
	TypeIMultiPanel *TypeIMultiPanelsubType `protobuf:"bytes,2,opt,name=type_i_multi_panel,json=typeI-MultiPanel,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*SubTypetype1_TypeISinglePanel) isSubTypetype1_SubTypetype1() {}

func (*SubTypetype1_TypeIMultiPanel) isSubTypetype1_SubTypetype1() {}

// sequence from CSI-ReportConfig.asn1:220
// {type1codebookType}
type Type1CodebookType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubType *SubTypetype1 `protobuf:"bytes,1,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	// @inject_tag: aper:"valueLB:1,valueUB:2,"
	CodebookMode int32 `protobuf:"varint,2,opt,name=codebook_mode,json=codebookMode,proto3" json:"codebook_mode,omitempty" aper:"valueLB:1,valueUB:2,"`
}

func (x *Type1CodebookType) Reset() {
	*x = Type1CodebookType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type1CodebookType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type1CodebookType) ProtoMessage() {}

func (x *Type1CodebookType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type1CodebookType.ProtoReflect.Descriptor instead.
func (*Type1CodebookType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{37}
}

func (x *Type1CodebookType) GetSubType() *SubTypetype1 {
	if x != nil {
		return x.SubType
	}
	return nil
}

func (x *Type1CodebookType) GetCodebookMode() int32 {
	if x != nil {
		return x.CodebookMode
	}
	return 0
}

// choice from CSI-ReportConfig.asn1:228
// {n1-n2-codebookSubsetRestrictiontypeII}
type N1N2CodebookSubsetRestrictiontypeIi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:228
	//
	// Types that are assignable to N1N2CodebookSubsetRestrictiontypeIi:
	//	*N1N2CodebookSubsetRestrictiontypeIi_TwoOne
	//	*N1N2CodebookSubsetRestrictiontypeIi_TwoTwo
	//	*N1N2CodebookSubsetRestrictiontypeIi_FourOne
	//	*N1N2CodebookSubsetRestrictiontypeIi_ThreeTwo
	//	*N1N2CodebookSubsetRestrictiontypeIi_SixOne
	//	*N1N2CodebookSubsetRestrictiontypeIi_FourTwo
	//	*N1N2CodebookSubsetRestrictiontypeIi_EightOne
	//	*N1N2CodebookSubsetRestrictiontypeIi_FourThree
	//	*N1N2CodebookSubsetRestrictiontypeIi_SixTwo
	//	*N1N2CodebookSubsetRestrictiontypeIi_TwelveOne
	//	*N1N2CodebookSubsetRestrictiontypeIi_FourFour
	//	*N1N2CodebookSubsetRestrictiontypeIi_EightTwo
	//	*N1N2CodebookSubsetRestrictiontypeIi_SixteenOne
	N1N2CodebookSubsetRestrictiontypeIi isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi `protobuf_oneof:"n1_n2_codebook_subset_restrictiontype_ii"`
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) Reset() {
	*x = N1N2CodebookSubsetRestrictiontypeIi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N1N2CodebookSubsetRestrictiontypeIi) ProtoMessage() {}

func (x *N1N2CodebookSubsetRestrictiontypeIi) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N1N2CodebookSubsetRestrictiontypeIi.ProtoReflect.Descriptor instead.
func (*N1N2CodebookSubsetRestrictiontypeIi) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{38}
}

func (m *N1N2CodebookSubsetRestrictiontypeIi) GetN1N2CodebookSubsetRestrictiontypeIi() isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi {
	if m != nil {
		return m.N1N2CodebookSubsetRestrictiontypeIi
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetTwoOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_TwoOne); ok {
		return x.TwoOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetTwoTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_TwoTwo); ok {
		return x.TwoTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetFourOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_FourOne); ok {
		return x.FourOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetThreeTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_ThreeTwo); ok {
		return x.ThreeTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetSixOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_SixOne); ok {
		return x.SixOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetFourTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_FourTwo); ok {
		return x.FourTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetEightOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_EightOne); ok {
		return x.EightOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetFourThree() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_FourThree); ok {
		return x.FourThree
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetSixTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_SixTwo); ok {
		return x.SixTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetTwelveOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_TwelveOne); ok {
		return x.TwelveOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetFourFour() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_FourFour); ok {
		return x.FourFour
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetEightTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_EightTwo); ok {
		return x.EightTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictiontypeIi) GetSixteenOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictiontypeIi().(*N1N2CodebookSubsetRestrictiontypeIi_SixteenOne); ok {
		return x.SixteenOne
	}
	return nil
}

type isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi interface {
	isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi()
}

type N1N2CodebookSubsetRestrictiontypeIi_TwoOne struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:16,sizeUB:16,"
	TwoOne *asn1.BitString `protobuf:"bytes,1,opt,name=two_one,json=two-one,proto3,oneof" aper:"choiceIdx:1,sizeLB:16,sizeUB:16,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_TwoTwo struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:43,sizeUB:43,"
	TwoTwo *asn1.BitString `protobuf:"bytes,2,opt,name=two_two,json=two-two,proto3,oneof" aper:"choiceIdx:2,sizeLB:43,sizeUB:43,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_FourOne struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:32,sizeUB:32,"
	FourOne *asn1.BitString `protobuf:"bytes,3,opt,name=four_one,json=four-one,proto3,oneof" aper:"choiceIdx:3,sizeLB:32,sizeUB:32,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_ThreeTwo struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:59,sizeUB:59,"
	ThreeTwo *asn1.BitString `protobuf:"bytes,4,opt,name=three_two,json=three-two,proto3,oneof" aper:"choiceIdx:4,sizeLB:59,sizeUB:59,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_SixOne struct {
	// @inject_tag: aper:"choiceIdx:5,sizeLB:48,sizeUB:48,"
	SixOne *asn1.BitString `protobuf:"bytes,5,opt,name=six_one,json=six-one,proto3,oneof" aper:"choiceIdx:5,sizeLB:48,sizeUB:48,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_FourTwo struct {
	// @inject_tag: aper:"choiceIdx:6,sizeLB:75,sizeUB:75,"
	FourTwo *asn1.BitString `protobuf:"bytes,6,opt,name=four_two,json=four-two,proto3,oneof" aper:"choiceIdx:6,sizeLB:75,sizeUB:75,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_EightOne struct {
	// @inject_tag: aper:"choiceIdx:7,sizeLB:64,sizeUB:64,"
	EightOne *asn1.BitString `protobuf:"bytes,7,opt,name=eight_one,json=eight-one,proto3,oneof" aper:"choiceIdx:7,sizeLB:64,sizeUB:64,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_FourThree struct {
	// @inject_tag: aper:"choiceIdx:8,sizeLB:107,sizeUB:107,"
	FourThree *asn1.BitString `protobuf:"bytes,8,opt,name=four_three,json=four-three,proto3,oneof" aper:"choiceIdx:8,sizeLB:107,sizeUB:107,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_SixTwo struct {
	// @inject_tag: aper:"choiceIdx:9,sizeLB:107,sizeUB:107,"
	SixTwo *asn1.BitString `protobuf:"bytes,9,opt,name=six_two,json=six-two,proto3,oneof" aper:"choiceIdx:9,sizeLB:107,sizeUB:107,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_TwelveOne struct {
	// @inject_tag: aper:"choiceIdx:10,sizeLB:96,sizeUB:96,"
	TwelveOne *asn1.BitString `protobuf:"bytes,10,opt,name=twelve_one,json=twelve-one,proto3,oneof" aper:"choiceIdx:10,sizeLB:96,sizeUB:96,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_FourFour struct {
	// @inject_tag: aper:"choiceIdx:11,sizeLB:139,sizeUB:139,"
	FourFour *asn1.BitString `protobuf:"bytes,11,opt,name=four_four,json=four-four,proto3,oneof" aper:"choiceIdx:11,sizeLB:139,sizeUB:139,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_EightTwo struct {
	// @inject_tag: aper:"choiceIdx:12,sizeLB:139,sizeUB:139,"
	EightTwo *asn1.BitString `protobuf:"bytes,12,opt,name=eight_two,json=eight-two,proto3,oneof" aper:"choiceIdx:12,sizeLB:139,sizeUB:139,"`
}

type N1N2CodebookSubsetRestrictiontypeIi_SixteenOne struct {
	// @inject_tag: aper:"choiceIdx:13,sizeLB:128,sizeUB:128,"
	SixteenOne *asn1.BitString `protobuf:"bytes,13,opt,name=sixteen_one,json=sixteen-one,proto3,oneof" aper:"choiceIdx:13,sizeLB:128,sizeUB:128,"`
}

func (*N1N2CodebookSubsetRestrictiontypeIi_TwoOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_TwoTwo) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_FourOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_ThreeTwo) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_SixOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_FourTwo) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_EightOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_FourThree) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_SixTwo) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_TwelveOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_FourFour) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_EightTwo) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

func (*N1N2CodebookSubsetRestrictiontypeIi_SixteenOne) isN1N2CodebookSubsetRestrictiontypeIi_N1N2CodebookSubsetRestrictiontypeIi() {
}

// sequence from CSI-ReportConfig.asn1:241
// {typeIIsubType}
type TypeIisubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N1N2CodebookSubsetRestriction *N1N2CodebookSubsetRestrictiontypeIi `protobuf:"bytes,1,opt,name=n1_n2_codebook_subset_restriction,json=n1-n2-codebookSubsetRestriction,proto3" json:"n1_n2_codebook_subset_restriction,omitempty"`
	// @inject_tag: aper:"sizeLB:2,sizeUB:2,"
	TypeIiRiRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=type_ii_ri_restriction,json=typeII-RI-Restriction,proto3" json:"type_ii_ri_restriction,omitempty" aper:"sizeLB:2,sizeUB:2,"`
}

func (x *TypeIisubType) Reset() {
	*x = TypeIisubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeIisubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeIisubType) ProtoMessage() {}

func (x *TypeIisubType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeIisubType.ProtoReflect.Descriptor instead.
func (*TypeIisubType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{39}
}

func (x *TypeIisubType) GetN1N2CodebookSubsetRestriction() *N1N2CodebookSubsetRestrictiontypeIi {
	if x != nil {
		return x.N1N2CodebookSubsetRestriction
	}
	return nil
}

func (x *TypeIisubType) GetTypeIiRiRestriction() *asn1.BitString {
	if x != nil {
		return x.TypeIiRiRestriction
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:245
// {typeII-PortSelectionsubType}
type TypeIiPortSelectionsubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:3,"
	PortSelectionSamplingSize *PortSelectionSamplingSizetypeIiportSelection `protobuf:"varint,1,opt,name=port_selection_sampling_size,json=portSelectionSamplingSize,proto3,enum=_csi_report_config.v2.PortSelectionSamplingSizetypeIiportSelection,oneof" json:"port_selection_sampling_size,omitempty" aper:"optional,valueLB:0,valueUB:3,"`
	// @inject_tag: aper:"sizeLB:2,sizeUB:2,"
	TypeIiPortSelectionRiRestriction *asn1.BitString `protobuf:"bytes,2,opt,name=type_ii_port_selection_ri_restriction,json=typeII-PortSelectionRI-Restriction,proto3" json:"type_ii_port_selection_ri_restriction,omitempty" aper:"sizeLB:2,sizeUB:2,"`
}

func (x *TypeIiPortSelectionsubType) Reset() {
	*x = TypeIiPortSelectionsubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeIiPortSelectionsubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeIiPortSelectionsubType) ProtoMessage() {}

func (x *TypeIiPortSelectionsubType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeIiPortSelectionsubType.ProtoReflect.Descriptor instead.
func (*TypeIiPortSelectionsubType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{40}
}

func (x *TypeIiPortSelectionsubType) GetPortSelectionSamplingSize() PortSelectionSamplingSizetypeIiportSelection {
	if x != nil && x.PortSelectionSamplingSize != nil {
		return *x.PortSelectionSamplingSize
	}
	return PortSelectionSamplingSizetypeIiportSelection_PORT_SELECTION_SAMPLING_SIZETYPE_IIPORT_SELECTION_N1
}

func (x *TypeIiPortSelectionsubType) GetTypeIiPortSelectionRiRestriction() *asn1.BitString {
	if x != nil {
		return x.TypeIiPortSelectionRiRestriction
	}
	return nil
}

// choice from CSI-ReportConfig.asn1:243
// {subTypetype2}
type SubTypetype2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:243
	//
	// Types that are assignable to SubTypetype2:
	//	*SubTypetype2_TypeIi
	//	*SubTypetype2_TypeIiPortSelection
	SubTypetype2 isSubTypetype2_SubTypetype2 `protobuf_oneof:"sub_typetype2"`
}

func (x *SubTypetype2) Reset() {
	*x = SubTypetype2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTypetype2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTypetype2) ProtoMessage() {}

func (x *SubTypetype2) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTypetype2.ProtoReflect.Descriptor instead.
func (*SubTypetype2) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{41}
}

func (m *SubTypetype2) GetSubTypetype2() isSubTypetype2_SubTypetype2 {
	if m != nil {
		return m.SubTypetype2
	}
	return nil
}

func (x *SubTypetype2) GetTypeIi() *TypeIisubType {
	if x, ok := x.GetSubTypetype2().(*SubTypetype2_TypeIi); ok {
		return x.TypeIi
	}
	return nil
}

func (x *SubTypetype2) GetTypeIiPortSelection() *TypeIiPortSelectionsubType {
	if x, ok := x.GetSubTypetype2().(*SubTypetype2_TypeIiPortSelection); ok {
		return x.TypeIiPortSelection
	}
	return nil
}

type isSubTypetype2_SubTypetype2 interface {
	isSubTypetype2_SubTypetype2()
}

type SubTypetype2_TypeIi struct {
	// @inject_tag: aper:"choiceIdx:1,"
	TypeIi *TypeIisubType `protobuf:"bytes,1,opt,name=type_ii,json=typeII,proto3,oneof" aper:"choiceIdx:1,"`
}

type SubTypetype2_TypeIiPortSelection struct {
	// @inject_tag: aper:"choiceIdx:2,"
	TypeIiPortSelection *TypeIiPortSelectionsubType `protobuf:"bytes,2,opt,name=type_ii_port_selection,json=typeII-PortSelection,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*SubTypetype2_TypeIi) isSubTypetype2_SubTypetype2() {}

func (*SubTypetype2_TypeIiPortSelection) isSubTypetype2_SubTypetype2() {}

// sequence from CSI-ReportConfig.asn1:248
// {type2codebookType}
type Type2CodebookType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubType *SubTypetype2 `protobuf:"bytes,1,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	PhaseAlphabetSize PhaseAlphabetSizetype2 `protobuf:"varint,2,opt,name=phase_alphabet_size,json=phaseAlphabetSize,proto3,enum=_csi_report_config.v2.PhaseAlphabetSizetype2" json:"phase_alphabet_size,omitempty" aper:"valueLB:0,valueUB:1,"`
	SubbandAmplitude  bool                   `protobuf:"varint,3,opt,name=subband_amplitude,json=subbandAmplitude,proto3" json:"subband_amplitude,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:2,"
	NumberOfBeams NumberOfBeamstype2 `protobuf:"varint,4,opt,name=number_of_beams,json=numberOfBeams,proto3,enum=_csi_report_config.v2.NumberOfBeamstype2" json:"number_of_beams,omitempty" aper:"valueLB:0,valueUB:2,"`
}

func (x *Type2CodebookType) Reset() {
	*x = Type2CodebookType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type2CodebookType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type2CodebookType) ProtoMessage() {}

func (x *Type2CodebookType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type2CodebookType.ProtoReflect.Descriptor instead.
func (*Type2CodebookType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{42}
}

func (x *Type2CodebookType) GetSubType() *SubTypetype2 {
	if x != nil {
		return x.SubType
	}
	return nil
}

func (x *Type2CodebookType) GetPhaseAlphabetSize() PhaseAlphabetSizetype2 {
	if x != nil {
		return x.PhaseAlphabetSize
	}
	return PhaseAlphabetSizetype2_PHASE_ALPHABET_SIZETYPE2_N4
}

func (x *Type2CodebookType) GetSubbandAmplitude() bool {
	if x != nil {
		return x.SubbandAmplitude
	}
	return false
}

func (x *Type2CodebookType) GetNumberOfBeams() NumberOfBeamstype2 {
	if x != nil {
		return x.NumberOfBeams
	}
	return NumberOfBeamstype2_NUMBER_OF_BEAMSTYPE2_TWO
}

// choice from CSI-ReportConfig.asn1:223
// {codebookTypeCodebookConfig}
type CodebookTypeCodebookConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:223
	//
	// Types that are assignable to CodebookTypeCodebookConfig:
	//	*CodebookTypeCodebookConfig_Type1
	//	*CodebookTypeCodebookConfig_Type2
	CodebookTypeCodebookConfig isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig `protobuf_oneof:"codebook_type_codebook_config"`
}

func (x *CodebookTypeCodebookConfig) Reset() {
	*x = CodebookTypeCodebookConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookTypeCodebookConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookTypeCodebookConfig) ProtoMessage() {}

func (x *CodebookTypeCodebookConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookTypeCodebookConfig.ProtoReflect.Descriptor instead.
func (*CodebookTypeCodebookConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{43}
}

func (m *CodebookTypeCodebookConfig) GetCodebookTypeCodebookConfig() isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig {
	if m != nil {
		return m.CodebookTypeCodebookConfig
	}
	return nil
}

func (x *CodebookTypeCodebookConfig) GetType1() *Type1CodebookType {
	if x, ok := x.GetCodebookTypeCodebookConfig().(*CodebookTypeCodebookConfig_Type1); ok {
		return x.Type1
	}
	return nil
}

func (x *CodebookTypeCodebookConfig) GetType2() *Type2CodebookType {
	if x, ok := x.GetCodebookTypeCodebookConfig().(*CodebookTypeCodebookConfig_Type2); ok {
		return x.Type2
	}
	return nil
}

type isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig interface {
	isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig()
}

type CodebookTypeCodebookConfig_Type1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Type1 *Type1CodebookType `protobuf:"bytes,1,opt,name=type1,proto3,oneof" aper:"choiceIdx:1,"`
}

type CodebookTypeCodebookConfig_Type2 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	Type2 *Type2CodebookType `protobuf:"bytes,2,opt,name=type2,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*CodebookTypeCodebookConfig_Type1) isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig() {}

func (*CodebookTypeCodebookConfig_Type2) isCodebookTypeCodebookConfig_CodebookTypeCodebookConfig() {}

// sequence from CSI-ReportConfig.asn1:254
// {CodebookConfig}
type CodebookConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodebookType *CodebookTypeCodebookConfig `protobuf:"bytes,1,opt,name=codebook_type,json=codebookType,proto3" json:"codebook_type,omitempty"`
}

func (x *CodebookConfig) Reset() {
	*x = CodebookConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookConfig) ProtoMessage() {}

func (x *CodebookConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookConfig.ProtoReflect.Descriptor instead.
func (*CodebookConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{44}
}

func (x *CodebookConfig) GetCodebookType() *CodebookTypeCodebookConfig {
	if x != nil {
		return x.CodebookType
	}
	return nil
}

// choice from CSI-ReportConfig.asn1:262
// {n1-n2-codebookSubsetRestriction-r16typeII-r16}
type N1N2CodebookSubsetRestrictionr16TypeIir16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:262
	//
	// Types that are assignable to N1N2CodebookSubsetRestrictionR16TypeIiR16:
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoOne
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoTwo
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_FourOne
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_ThreeTwo
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_SixOne
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_FourTwo
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_EightOne
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_FourThree
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_SixTwo
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_TwelveOne
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_FourFour
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_EightTwo
	//	*N1N2CodebookSubsetRestrictionr16TypeIir16_SixteenOne
	N1N2CodebookSubsetRestrictionR16TypeIiR16 isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16 `protobuf_oneof:"n1_n2_codebook_subset_restriction_r16type_ii_r16"`
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) Reset() {
	*x = N1N2CodebookSubsetRestrictionr16TypeIir16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16) ProtoMessage() {}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N1N2CodebookSubsetRestrictionr16TypeIir16.ProtoReflect.Descriptor instead.
func (*N1N2CodebookSubsetRestrictionr16TypeIir16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{45}
}

func (m *N1N2CodebookSubsetRestrictionr16TypeIir16) GetN1N2CodebookSubsetRestrictionR16TypeIiR16() isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16 {
	if m != nil {
		return m.N1N2CodebookSubsetRestrictionR16TypeIiR16
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetTwoOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoOne); ok {
		return x.TwoOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetTwoTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoTwo); ok {
		return x.TwoTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetFourOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourOne); ok {
		return x.FourOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetThreeTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_ThreeTwo); ok {
		return x.ThreeTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetSixOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixOne); ok {
		return x.SixOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetFourTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourTwo); ok {
		return x.FourTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetEightOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_EightOne); ok {
		return x.EightOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetFourThree() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourThree); ok {
		return x.FourThree
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetSixTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixTwo); ok {
		return x.SixTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetTwelveOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwelveOne); ok {
		return x.TwelveOne
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetFourFour() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourFour); ok {
		return x.FourFour
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetEightTwo() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_EightTwo); ok {
		return x.EightTwo
	}
	return nil
}

func (x *N1N2CodebookSubsetRestrictionr16TypeIir16) GetSixteenOne() *asn1.BitString {
	if x, ok := x.GetN1N2CodebookSubsetRestrictionR16TypeIiR16().(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixteenOne); ok {
		return x.SixteenOne
	}
	return nil
}

type isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16 interface {
	isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16()
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_TwoOne struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:16,sizeUB:16,"
	TwoOne *asn1.BitString `protobuf:"bytes,1,opt,name=two_one,json=two-one,proto3,oneof" aper:"choiceIdx:1,sizeLB:16,sizeUB:16,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_TwoTwo struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:43,sizeUB:43,"
	TwoTwo *asn1.BitString `protobuf:"bytes,2,opt,name=two_two,json=two-two,proto3,oneof" aper:"choiceIdx:2,sizeLB:43,sizeUB:43,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_FourOne struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:32,sizeUB:32,"
	FourOne *asn1.BitString `protobuf:"bytes,3,opt,name=four_one,json=four-one,proto3,oneof" aper:"choiceIdx:3,sizeLB:32,sizeUB:32,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_ThreeTwo struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:59,sizeUB:59,"
	ThreeTwo *asn1.BitString `protobuf:"bytes,4,opt,name=three_two,json=three-two,proto3,oneof" aper:"choiceIdx:4,sizeLB:59,sizeUB:59,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_SixOne struct {
	// @inject_tag: aper:"choiceIdx:5,sizeLB:48,sizeUB:48,"
	SixOne *asn1.BitString `protobuf:"bytes,5,opt,name=six_one,json=six-one,proto3,oneof" aper:"choiceIdx:5,sizeLB:48,sizeUB:48,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_FourTwo struct {
	// @inject_tag: aper:"choiceIdx:6,sizeLB:75,sizeUB:75,"
	FourTwo *asn1.BitString `protobuf:"bytes,6,opt,name=four_two,json=four-two,proto3,oneof" aper:"choiceIdx:6,sizeLB:75,sizeUB:75,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_EightOne struct {
	// @inject_tag: aper:"choiceIdx:7,sizeLB:64,sizeUB:64,"
	EightOne *asn1.BitString `protobuf:"bytes,7,opt,name=eight_one,json=eight-one,proto3,oneof" aper:"choiceIdx:7,sizeLB:64,sizeUB:64,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_FourThree struct {
	// @inject_tag: aper:"choiceIdx:8,sizeLB:107,sizeUB:107,"
	FourThree *asn1.BitString `protobuf:"bytes,8,opt,name=four_three,json=four-three,proto3,oneof" aper:"choiceIdx:8,sizeLB:107,sizeUB:107,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_SixTwo struct {
	// @inject_tag: aper:"choiceIdx:9,sizeLB:107,sizeUB:107,"
	SixTwo *asn1.BitString `protobuf:"bytes,9,opt,name=six_two,json=six-two,proto3,oneof" aper:"choiceIdx:9,sizeLB:107,sizeUB:107,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_TwelveOne struct {
	// @inject_tag: aper:"choiceIdx:10,sizeLB:96,sizeUB:96,"
	TwelveOne *asn1.BitString `protobuf:"bytes,10,opt,name=twelve_one,json=twelve-one,proto3,oneof" aper:"choiceIdx:10,sizeLB:96,sizeUB:96,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_FourFour struct {
	// @inject_tag: aper:"choiceIdx:11,sizeLB:139,sizeUB:139,"
	FourFour *asn1.BitString `protobuf:"bytes,11,opt,name=four_four,json=four-four,proto3,oneof" aper:"choiceIdx:11,sizeLB:139,sizeUB:139,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_EightTwo struct {
	// @inject_tag: aper:"choiceIdx:12,sizeLB:139,sizeUB:139,"
	EightTwo *asn1.BitString `protobuf:"bytes,12,opt,name=eight_two,json=eight-two,proto3,oneof" aper:"choiceIdx:12,sizeLB:139,sizeUB:139,"`
}

type N1N2CodebookSubsetRestrictionr16TypeIir16_SixteenOne struct {
	// @inject_tag: aper:"choiceIdx:13,sizeLB:128,sizeUB:128,"
	SixteenOne *asn1.BitString `protobuf:"bytes,13,opt,name=sixteen_one,json=sixteen-one,proto3,oneof" aper:"choiceIdx:13,sizeLB:128,sizeUB:128,"`
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoTwo) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_FourOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_ThreeTwo) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_SixOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_FourTwo) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_EightOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_FourThree) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_SixTwo) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_TwelveOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_FourFour) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_EightTwo) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

func (*N1N2CodebookSubsetRestrictionr16TypeIir16_SixteenOne) isN1N2CodebookSubsetRestrictionr16TypeIir16_N1N2CodebookSubsetRestrictionR16TypeIiR16() {
}

// sequence from CSI-ReportConfig.asn1:275
// {typeII-r16subType}
type TypeIir16SubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N1N2CodebookSubsetRestrictionR16 *N1N2CodebookSubsetRestrictionr16TypeIir16 `protobuf:"bytes,1,opt,name=n1_n2_codebook_subset_restriction_r16,json=n1-n2-codebookSubsetRestriction-r16,proto3" json:"n1_n2_codebook_subset_restriction_r16,omitempty"`
	// @inject_tag: aper:"sizeLB:4,sizeUB:4,"
	TypeIiRiRestrictionR16 *asn1.BitString `protobuf:"bytes,2,opt,name=type_ii_ri_restriction_r16,json=typeII-RI-Restriction-r16,proto3" json:"type_ii_ri_restriction_r16,omitempty" aper:"sizeLB:4,sizeUB:4,"`
}

func (x *TypeIir16SubType) Reset() {
	*x = TypeIir16SubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeIir16SubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeIir16SubType) ProtoMessage() {}

func (x *TypeIir16SubType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeIir16SubType.ProtoReflect.Descriptor instead.
func (*TypeIir16SubType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{46}
}

func (x *TypeIir16SubType) GetN1N2CodebookSubsetRestrictionR16() *N1N2CodebookSubsetRestrictionr16TypeIir16 {
	if x != nil {
		return x.N1N2CodebookSubsetRestrictionR16
	}
	return nil
}

func (x *TypeIir16SubType) GetTypeIiRiRestrictionR16() *asn1.BitString {
	if x != nil {
		return x.TypeIiRiRestrictionR16
	}
	return nil
}

// sequence from CSI-ReportConfig.asn1:279
// {typeII-PortSelection-r16subType}
type TypeIiPortSelectionr16SubType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	PortSelectionSamplingSizeR16 PortSelectionSamplingSizer16TypeIiportSelectionr16 `protobuf:"varint,1,opt,name=port_selection_sampling_size_r16,json=portSelectionSamplingSize-r16,proto3,enum=_csi_report_config.v2.PortSelectionSamplingSizer16TypeIiportSelectionr16" json:"port_selection_sampling_size_r16,omitempty" aper:"valueLB:0,valueUB:3,"`
	// @inject_tag: aper:"sizeLB:4,sizeUB:4,"
	TypeIiPortSelectionRiRestrictionR16 *asn1.BitString `protobuf:"bytes,2,opt,name=type_ii_port_selection_ri_restriction_r16,json=typeII-PortSelectionRI-Restriction-r16,proto3" json:"type_ii_port_selection_ri_restriction_r16,omitempty" aper:"sizeLB:4,sizeUB:4,"`
}

func (x *TypeIiPortSelectionr16SubType) Reset() {
	*x = TypeIiPortSelectionr16SubType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeIiPortSelectionr16SubType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeIiPortSelectionr16SubType) ProtoMessage() {}

func (x *TypeIiPortSelectionr16SubType) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeIiPortSelectionr16SubType.ProtoReflect.Descriptor instead.
func (*TypeIiPortSelectionr16SubType) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{47}
}

func (x *TypeIiPortSelectionr16SubType) GetPortSelectionSamplingSizeR16() PortSelectionSamplingSizer16TypeIiportSelectionr16 {
	if x != nil {
		return x.PortSelectionSamplingSizeR16
	}
	return PortSelectionSamplingSizer16TypeIiportSelectionr16_PORT_SELECTION_SAMPLING_SIZER16TYPE_IIPORT_SELECTIONR16_N1
}

func (x *TypeIiPortSelectionr16SubType) GetTypeIiPortSelectionRiRestrictionR16() *asn1.BitString {
	if x != nil {
		return x.TypeIiPortSelectionRiRestrictionR16
	}
	return nil
}

// choice from CSI-ReportConfig.asn1:277
// {subTypetype2-r16}
type SubTypetype2R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:277
	//
	// Types that are assignable to SubTypetype2R16:
	//	*SubTypetype2R16_TypeIiR16
	//	*SubTypetype2R16_TypeIiPortSelectionR16
	SubTypetype2R16 isSubTypetype2R16_SubTypetype2R16 `protobuf_oneof:"sub_typetype2_r16"`
}

func (x *SubTypetype2R16) Reset() {
	*x = SubTypetype2R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTypetype2R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTypetype2R16) ProtoMessage() {}

func (x *SubTypetype2R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTypetype2R16.ProtoReflect.Descriptor instead.
func (*SubTypetype2R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{48}
}

func (m *SubTypetype2R16) GetSubTypetype2R16() isSubTypetype2R16_SubTypetype2R16 {
	if m != nil {
		return m.SubTypetype2R16
	}
	return nil
}

func (x *SubTypetype2R16) GetTypeIiR16() *TypeIir16SubType {
	if x, ok := x.GetSubTypetype2R16().(*SubTypetype2R16_TypeIiR16); ok {
		return x.TypeIiR16
	}
	return nil
}

func (x *SubTypetype2R16) GetTypeIiPortSelectionR16() *TypeIiPortSelectionr16SubType {
	if x, ok := x.GetSubTypetype2R16().(*SubTypetype2R16_TypeIiPortSelectionR16); ok {
		return x.TypeIiPortSelectionR16
	}
	return nil
}

type isSubTypetype2R16_SubTypetype2R16 interface {
	isSubTypetype2R16_SubTypetype2R16()
}

type SubTypetype2R16_TypeIiR16 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	TypeIiR16 *TypeIir16SubType `protobuf:"bytes,1,opt,name=type_ii_r16,json=typeII-r16,proto3,oneof" aper:"choiceIdx:1,"`
}

type SubTypetype2R16_TypeIiPortSelectionR16 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	TypeIiPortSelectionR16 *TypeIiPortSelectionr16SubType `protobuf:"bytes,2,opt,name=type_ii_port_selection_r16,json=typeII-PortSelection-r16,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*SubTypetype2R16_TypeIiR16) isSubTypetype2R16_SubTypetype2R16() {}

func (*SubTypetype2R16_TypeIiPortSelectionR16) isSubTypetype2R16_SubTypetype2R16() {}

// sequence from CSI-ReportConfig.asn1:282
// {type2-r16codebookType-r16}
type Type2R16CodebookTyper16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubType *SubTypetype2R16 `protobuf:"bytes,1,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	// @inject_tag: aper:"valueLB:1,valueUB:2,"
	NumberOfPmiSubbandsPerCqiSubbandR16 int32 `protobuf:"varint,2,opt,name=number_of_pmi_subbands_per_cqi_subband_r16,json=numberOfPMI-SubbandsPerCQI-Subband-r16,proto3" json:"number_of_pmi_subbands_per_cqi_subband_r16,omitempty" aper:"valueLB:1,valueUB:2,"`
	// @inject_tag: aper:"valueLB:1,valueUB:8,"
	ParamCombinationR16 int32 `protobuf:"varint,3,opt,name=param_combination_r16,json=paramCombination-r16,proto3" json:"param_combination_r16,omitempty" aper:"valueLB:1,valueUB:8,"`
}

func (x *Type2R16CodebookTyper16) Reset() {
	*x = Type2R16CodebookTyper16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type2R16CodebookTyper16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type2R16CodebookTyper16) ProtoMessage() {}

func (x *Type2R16CodebookTyper16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type2R16CodebookTyper16.ProtoReflect.Descriptor instead.
func (*Type2R16CodebookTyper16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{49}
}

func (x *Type2R16CodebookTyper16) GetSubType() *SubTypetype2R16 {
	if x != nil {
		return x.SubType
	}
	return nil
}

func (x *Type2R16CodebookTyper16) GetNumberOfPmiSubbandsPerCqiSubbandR16() int32 {
	if x != nil {
		return x.NumberOfPmiSubbandsPerCqiSubbandR16
	}
	return 0
}

func (x *Type2R16CodebookTyper16) GetParamCombinationR16() int32 {
	if x != nil {
		return x.ParamCombinationR16
	}
	return 0
}

// choice from CSI-ReportConfig.asn1:286
// {codebookType-r16CodebookConfig-r16}
type CodebookTyper16CodebookConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from CSI-ReportConfig.asn1:286
	//
	// Types that are assignable to CodebookTypeR16CodebookConfigR16:
	//	*CodebookTyper16CodebookConfigr16_Type2R16
	CodebookTypeR16CodebookConfigR16 isCodebookTyper16CodebookConfigr16_CodebookTypeR16CodebookConfigR16 `protobuf_oneof:"codebook_type_r16_codebook_config_r16"`
}

func (x *CodebookTyper16CodebookConfigr16) Reset() {
	*x = CodebookTyper16CodebookConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookTyper16CodebookConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookTyper16CodebookConfigr16) ProtoMessage() {}

func (x *CodebookTyper16CodebookConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookTyper16CodebookConfigr16.ProtoReflect.Descriptor instead.
func (*CodebookTyper16CodebookConfigr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{50}
}

func (m *CodebookTyper16CodebookConfigr16) GetCodebookTypeR16CodebookConfigR16() isCodebookTyper16CodebookConfigr16_CodebookTypeR16CodebookConfigR16 {
	if m != nil {
		return m.CodebookTypeR16CodebookConfigR16
	}
	return nil
}

func (x *CodebookTyper16CodebookConfigr16) GetType2R16() *Type2R16CodebookTyper16 {
	if x, ok := x.GetCodebookTypeR16CodebookConfigR16().(*CodebookTyper16CodebookConfigr16_Type2R16); ok {
		return x.Type2R16
	}
	return nil
}

type isCodebookTyper16CodebookConfigr16_CodebookTypeR16CodebookConfigR16 interface {
	isCodebookTyper16CodebookConfigr16_CodebookTypeR16CodebookConfigR16()
}

type CodebookTyper16CodebookConfigr16_Type2R16 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	Type2R16 *Type2R16CodebookTyper16 `protobuf:"bytes,1,opt,name=type2_r16,json=type2-r16,proto3,oneof" aper:"choiceIdx:1,"`
}

func (*CodebookTyper16CodebookConfigr16_Type2R16) isCodebookTyper16CodebookConfigr16_CodebookTypeR16CodebookConfigR16() {
}

// sequence from CSI-ReportConfig.asn1:287
// {CodebookConfig-r16}
type CodebookConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodebookTypeR16 *CodebookTyper16CodebookConfigr16 `protobuf:"bytes,1,opt,name=codebook_type_r16,json=codebookType-r16,proto3" json:"codebook_type_r16,omitempty"`
}

func (x *CodebookConfigr16) Reset() {
	*x = CodebookConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodebookConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodebookConfigr16) ProtoMessage() {}

func (x *CodebookConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodebookConfigr16.ProtoReflect.Descriptor instead.
func (*CodebookConfigr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{51}
}

func (x *CodebookConfigr16) GetCodebookTypeR16() *CodebookTyper16CodebookConfigr16 {
	if x != nil {
		return x.CodebookTypeR16
	}
	return nil
}

// range of Integer from CSI-ReportConfig.asn1:293
// {BWP-Id}
type BwpId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4,"`
}

func (x *BwpId) Reset() {
	*x = BwpId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BwpId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BwpId) ProtoMessage() {}

func (x *BwpId) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BwpId.ProtoReflect.Descriptor instead.
func (*BwpId) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{52}
}

func (x *BwpId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from CSI-ReportConfig.asn1:297
// {PUCCH-ResourceId}
type PucchResourceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:127,"`
}

func (x *PucchResourceId) Reset() {
	*x = PucchResourceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PucchResourceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PucchResourceId) ProtoMessage() {}

func (x *PucchResourceId) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PucchResourceId.ProtoReflect.Descriptor instead.
func (*PucchResourceId) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{53}
}

func (x *PucchResourceId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:302
// {-}
type MaxAiDCiPayloadSizer16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxAiDCiPayloadSizer16) Reset() {
	*x = MaxAiDCiPayloadSizer16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxAiDCiPayloadSizer16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxAiDCiPayloadSizer16) ProtoMessage() {}

func (x *MaxAiDCiPayloadSizer16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxAiDCiPayloadSizer16.ProtoReflect.Descriptor instead.
func (*MaxAiDCiPayloadSizer16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{54}
}

func (x *MaxAiDCiPayloadSizer16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:303
// {-}
type MaxAiDCiPayloadSize1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:127,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:127,valueUB:127,"`
}

func (x *MaxAiDCiPayloadSize1R16) Reset() {
	*x = MaxAiDCiPayloadSize1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxAiDCiPayloadSize1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxAiDCiPayloadSize1R16) ProtoMessage() {}

func (x *MaxAiDCiPayloadSize1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxAiDCiPayloadSize1R16.ProtoReflect.Descriptor instead.
func (*MaxAiDCiPayloadSize1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{55}
}

func (x *MaxAiDCiPayloadSize1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:304
// {-}
type MaxBandComb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65536,valueUB:65536,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65536,valueUB:65536,"`
}

func (x *MaxBandComb) Reset() {
	*x = MaxBandComb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBandComb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBandComb) ProtoMessage() {}

func (x *MaxBandComb) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBandComb.ProtoReflect.Descriptor instead.
func (*MaxBandComb) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{56}
}

func (x *MaxBandComb) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:305
// {-}
type MaxBandsUtraFDdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxBandsUtraFDdr16) Reset() {
	*x = MaxBandsUtraFDdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBandsUtraFDdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBandsUtraFDdr16) ProtoMessage() {}

func (x *MaxBandsUtraFDdr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBandsUtraFDdr16.ProtoReflect.Descriptor instead.
func (*MaxBandsUtraFDdr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{57}
}

func (x *MaxBandsUtraFDdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:306
// {-}
type MaxBhRLcChannelIdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65536,valueUB:65536,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65536,valueUB:65536,"`
}

func (x *MaxBhRLcChannelIdr16) Reset() {
	*x = MaxBhRLcChannelIdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBhRLcChannelIdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBhRLcChannelIdr16) ProtoMessage() {}

func (x *MaxBhRLcChannelIdr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBhRLcChannelIdr16.ProtoReflect.Descriptor instead.
func (*MaxBhRLcChannelIdr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{58}
}

func (x *MaxBhRLcChannelIdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:307
// {-}
type MaxBtIdReportr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxBtIdReportr16) Reset() {
	*x = MaxBtIdReportr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBtIdReportr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBtIdReportr16) ProtoMessage() {}

func (x *MaxBtIdReportr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBtIdReportr16.ProtoReflect.Descriptor instead.
func (*MaxBtIdReportr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{59}
}

func (x *MaxBtIdReportr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:308
// {-}
type MaxBtNamer16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxBtNamer16) Reset() {
	*x = MaxBtNamer16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBtNamer16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBtNamer16) ProtoMessage() {}

func (x *MaxBtNamer16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBtNamer16.ProtoReflect.Descriptor instead.
func (*MaxBtNamer16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{60}
}

func (x *MaxBtNamer16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:309
// {-}
type MaxCagCellr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCagCellr16) Reset() {
	*x = MaxCagCellr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCagCellr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCagCellr16) ProtoMessage() {}

func (x *MaxCagCellr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCagCellr16.ProtoReflect.Descriptor instead.
func (*MaxCagCellr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{61}
}

func (x *MaxCagCellr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:310
// {-}
type MaxTwoPucchGrpConfigListr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxTwoPucchGrpConfigListr16) Reset() {
	*x = MaxTwoPucchGrpConfigListr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxTwoPucchGrpConfigListr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxTwoPucchGrpConfigListr16) ProtoMessage() {}

func (x *MaxTwoPucchGrpConfigListr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxTwoPucchGrpConfigListr16.ProtoReflect.Descriptor instead.
func (*MaxTwoPucchGrpConfigListr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{62}
}

func (x *MaxTwoPucchGrpConfigListr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:312
// {-}
type MaxCbrConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxCbrConfigr16) Reset() {
	*x = MaxCbrConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCbrConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCbrConfigr16) ProtoMessage() {}

func (x *MaxCbrConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCbrConfigr16.ProtoReflect.Descriptor instead.
func (*MaxCbrConfigr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{63}
}

func (x *MaxCbrConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:314
// {-}
type MaxCbrConfig1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxCbrConfig1R16) Reset() {
	*x = MaxCbrConfig1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCbrConfig1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCbrConfig1R16) ProtoMessage() {}

func (x *MaxCbrConfig1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCbrConfig1R16.ProtoReflect.Descriptor instead.
func (*MaxCbrConfig1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{64}
}

func (x *MaxCbrConfig1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:316
// {-}
type MaxCbrLevelr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCbrLevelr16) Reset() {
	*x = MaxCbrLevelr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCbrLevelr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCbrLevelr16) ProtoMessage() {}

func (x *MaxCbrLevelr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCbrLevelr16.ProtoReflect.Descriptor instead.
func (*MaxCbrLevelr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{65}
}

func (x *MaxCbrLevelr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:317
// {-}
type MaxCbrLevel1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxCbrLevel1R16) Reset() {
	*x = MaxCbrLevel1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCbrLevel1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCbrLevel1R16) ProtoMessage() {}

func (x *MaxCbrLevel1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCbrLevel1R16.ProtoReflect.Descriptor instead.
func (*MaxCbrLevel1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{66}
}

func (x *MaxCbrLevel1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:318
// {-}
type MaxCellBlack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCellBlack) Reset() {
	*x = MaxCellBlack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellBlack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellBlack) ProtoMessage() {}

func (x *MaxCellBlack) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellBlack.ProtoReflect.Descriptor instead.
func (*MaxCellBlack) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{67}
}

func (x *MaxCellBlack) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:319
// {-}
type MaxCellGroupingsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxCellGroupingsr16) Reset() {
	*x = MaxCellGroupingsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellGroupingsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellGroupingsr16) ProtoMessage() {}

func (x *MaxCellGroupingsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellGroupingsr16.ProtoReflect.Descriptor instead.
func (*MaxCellGroupingsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{68}
}

func (x *MaxCellGroupingsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:320
// {-}
type MaxCellHistoryr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCellHistoryr16) Reset() {
	*x = MaxCellHistoryr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellHistoryr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellHistoryr16) ProtoMessage() {}

func (x *MaxCellHistoryr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellHistoryr16.ProtoReflect.Descriptor instead.
func (*MaxCellHistoryr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{69}
}

func (x *MaxCellHistoryr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:321
// {-}
type MaxCellInter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCellInter) Reset() {
	*x = MaxCellInter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellInter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellInter) ProtoMessage() {}

func (x *MaxCellInter) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellInter.ProtoReflect.Descriptor instead.
func (*MaxCellInter) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{70}
}

func (x *MaxCellInter) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:322
// {-}
type MaxCellIntra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCellIntra) Reset() {
	*x = MaxCellIntra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellIntra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellIntra) ProtoMessage() {}

func (x *MaxCellIntra) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellIntra.ProtoReflect.Descriptor instead.
func (*MaxCellIntra) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{71}
}

func (x *MaxCellIntra) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:323
// {-}
type MaxCellMeasEutra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxCellMeasEutra) Reset() {
	*x = MaxCellMeasEutra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellMeasEutra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellMeasEutra) ProtoMessage() {}

func (x *MaxCellMeasEutra) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellMeasEutra.ProtoReflect.Descriptor instead.
func (*MaxCellMeasEutra) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{72}
}

func (x *MaxCellMeasEutra) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:324
// {-}
type MaxCellMeasIdler16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxCellMeasIdler16) Reset() {
	*x = MaxCellMeasIdler16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellMeasIdler16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellMeasIdler16) ProtoMessage() {}

func (x *MaxCellMeasIdler16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellMeasIdler16.ProtoReflect.Descriptor instead.
func (*MaxCellMeasIdler16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{73}
}

func (x *MaxCellMeasIdler16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:325
// {-}
type MaxCellMeasUtraFDdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxCellMeasUtraFDdr16) Reset() {
	*x = MaxCellMeasUtraFDdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellMeasUtraFDdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellMeasUtraFDdr16) ProtoMessage() {}

func (x *MaxCellMeasUtraFDdr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellMeasUtraFDdr16.ProtoReflect.Descriptor instead.
func (*MaxCellMeasUtraFDdr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{74}
}

func (x *MaxCellMeasUtraFDdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:326
// {-}
type MaxCarrierTypePairListr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCarrierTypePairListr16) Reset() {
	*x = MaxCarrierTypePairListr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCarrierTypePairListr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCarrierTypePairListr16) ProtoMessage() {}

func (x *MaxCarrierTypePairListr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCarrierTypePairListr16.ProtoReflect.Descriptor instead.
func (*MaxCarrierTypePairListr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{75}
}

func (x *MaxCarrierTypePairListr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:329
// {-}
type MaxCellWhite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxCellWhite) Reset() {
	*x = MaxCellWhite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellWhite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellWhite) ProtoMessage() {}

func (x *MaxCellWhite) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellWhite.ProtoReflect.Descriptor instead.
func (*MaxCellWhite) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{76}
}

func (x *MaxCellWhite) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:330
// {-}
type MaxEarfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:262143,valueUB:262143,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:262143,valueUB:262143,"`
}

func (x *MaxEarfcn) Reset() {
	*x = MaxEarfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEarfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEarfcn) ProtoMessage() {}

func (x *MaxEarfcn) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEarfcn.ProtoReflect.Descriptor instead.
func (*MaxEarfcn) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{77}
}

func (x *MaxEarfcn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:331
// {-}
type MaxEutraCellBlack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxEutraCellBlack) Reset() {
	*x = MaxEutraCellBlack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEutraCellBlack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEutraCellBlack) ProtoMessage() {}

func (x *MaxEutraCellBlack) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEutraCellBlack.ProtoReflect.Descriptor instead.
func (*MaxEutraCellBlack) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{78}
}

func (x *MaxEutraCellBlack) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:333
// {-}
type MaxEutraNSPmax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxEutraNSPmax) Reset() {
	*x = MaxEutraNSPmax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEutraNSPmax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEutraNSPmax) ProtoMessage() {}

func (x *MaxEutraNSPmax) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEutraNSPmax.ProtoReflect.Descriptor instead.
func (*MaxEutraNSPmax) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{79}
}

func (x *MaxEutraNSPmax) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:334
// {-}
type MaxLogMeasReportr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:520,valueUB:520,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:520,valueUB:520,"`
}

func (x *MaxLogMeasReportr16) Reset() {
	*x = MaxLogMeasReportr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxLogMeasReportr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxLogMeasReportr16) ProtoMessage() {}

func (x *MaxLogMeasReportr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxLogMeasReportr16.ProtoReflect.Descriptor instead.
func (*MaxLogMeasReportr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{80}
}

func (x *MaxLogMeasReportr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:335
// {-}
type MaxMultiBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxMultiBands) Reset() {
	*x = MaxMultiBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxMultiBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxMultiBands) ProtoMessage() {}

func (x *MaxMultiBands) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxMultiBands.ProtoReflect.Descriptor instead.
func (*MaxMultiBands) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{81}
}

func (x *MaxMultiBands) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:336
// {-}
type MaxNarfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3279165,valueUB:3279165,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3279165,valueUB:3279165,"`
}

func (x *MaxNarfcn) Reset() {
	*x = MaxNarfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNarfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNarfcn) ProtoMessage() {}

func (x *MaxNarfcn) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNarfcn.ProtoReflect.Descriptor instead.
func (*MaxNarfcn) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{82}
}

func (x *MaxNarfcn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:337
// {-}
type MaxNrNSPmax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrNSPmax) Reset() {
	*x = MaxNrNSPmax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrNSPmax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrNSPmax) ProtoMessage() {}

func (x *MaxNrNSPmax) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrNSPmax.ProtoReflect.Descriptor instead.
func (*MaxNrNSPmax) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{83}
}

func (x *MaxNrNSPmax) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:338
// {-}
type MaxFreqIdler16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxFreqIdler16) Reset() {
	*x = MaxFreqIdler16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqIdler16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqIdler16) ProtoMessage() {}

func (x *MaxFreqIdler16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqIdler16.ProtoReflect.Descriptor instead.
func (*MaxFreqIdler16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{84}
}

func (x *MaxFreqIdler16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:339
// {-}
type MaxNrofServingCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofServingCells) Reset() {
	*x = MaxNrofServingCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofServingCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofServingCells) ProtoMessage() {}

func (x *MaxNrofServingCells) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofServingCells.ProtoReflect.Descriptor instead.
func (*MaxNrofServingCells) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{85}
}

func (x *MaxNrofServingCells) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:340
// {-}
type MaxNrofServingCells1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofServingCells1) Reset() {
	*x = MaxNrofServingCells1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofServingCells1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofServingCells1) ProtoMessage() {}

func (x *MaxNrofServingCells1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofServingCells1.ProtoReflect.Descriptor instead.
func (*MaxNrofServingCells1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{86}
}

func (x *MaxNrofServingCells1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:341
// {-}
type MaxNrofAggregatedCellsPerCellGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofAggregatedCellsPerCellGroup) Reset() {
	*x = MaxNrofAggregatedCellsPerCellGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofAggregatedCellsPerCellGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofAggregatedCellsPerCellGroup) ProtoMessage() {}

func (x *MaxNrofAggregatedCellsPerCellGroup) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofAggregatedCellsPerCellGroup.ProtoReflect.Descriptor instead.
func (*MaxNrofAggregatedCellsPerCellGroup) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{87}
}

func (x *MaxNrofAggregatedCellsPerCellGroup) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:342
// {-}
type MaxNrofAggregatedCellsPerCellGroupMinus4R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:12,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:12,"`
}

func (x *MaxNrofAggregatedCellsPerCellGroupMinus4R16) Reset() {
	*x = MaxNrofAggregatedCellsPerCellGroupMinus4R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofAggregatedCellsPerCellGroupMinus4R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofAggregatedCellsPerCellGroupMinus4R16) ProtoMessage() {}

func (x *MaxNrofAggregatedCellsPerCellGroupMinus4R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofAggregatedCellsPerCellGroupMinus4R16.ProtoReflect.Descriptor instead.
func (*MaxNrofAggregatedCellsPerCellGroupMinus4R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{88}
}

func (x *MaxNrofAggregatedCellsPerCellGroupMinus4R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:343
// {-}
type MaxNrofDucellsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxNrofDucellsr16) Reset() {
	*x = MaxNrofDucellsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofDucellsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofDucellsr16) ProtoMessage() {}

func (x *MaxNrofDucellsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofDucellsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofDucellsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{89}
}

func (x *MaxNrofDucellsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:344
// {-}
type MaxNrofAvailabilityCombinationsPerSetr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxNrofAvailabilityCombinationsPerSetr16) Reset() {
	*x = MaxNrofAvailabilityCombinationsPerSetr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofAvailabilityCombinationsPerSetr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofAvailabilityCombinationsPerSetr16) ProtoMessage() {}

func (x *MaxNrofAvailabilityCombinationsPerSetr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofAvailabilityCombinationsPerSetr16.ProtoReflect.Descriptor instead.
func (*MaxNrofAvailabilityCombinationsPerSetr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{90}
}

func (x *MaxNrofAvailabilityCombinationsPerSetr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:345
// {-}
type MaxNrofAvailabilityCombinationsPerSet1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:511,valueUB:511,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:511,valueUB:511,"`
}

func (x *MaxNrofAvailabilityCombinationsPerSet1R16) Reset() {
	*x = MaxNrofAvailabilityCombinationsPerSet1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofAvailabilityCombinationsPerSet1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofAvailabilityCombinationsPerSet1R16) ProtoMessage() {}

func (x *MaxNrofAvailabilityCombinationsPerSet1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofAvailabilityCombinationsPerSet1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofAvailabilityCombinationsPerSet1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{91}
}

func (x *MaxNrofAvailabilityCombinationsPerSet1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:346
// {-}
type MaxNrofScells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofScells) Reset() {
	*x = MaxNrofScells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofScells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofScells) ProtoMessage() {}

func (x *MaxNrofScells) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofScells.ProtoReflect.Descriptor instead.
func (*MaxNrofScells) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{92}
}

func (x *MaxNrofScells) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:347
// {-}
type MaxNrofCellMeas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofCellMeas) Reset() {
	*x = MaxNrofCellMeas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCellMeas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCellMeas) ProtoMessage() {}

func (x *MaxNrofCellMeas) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCellMeas.ProtoReflect.Descriptor instead.
func (*MaxNrofCellMeas) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{93}
}

func (x *MaxNrofCellMeas) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:348
// {-}
type MaxNrofCgSLr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofCgSLr16) Reset() {
	*x = MaxNrofCgSLr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCgSLr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCgSLr16) ProtoMessage() {}

func (x *MaxNrofCgSLr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCgSLr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCgSLr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{94}
}

func (x *MaxNrofCgSLr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:349
// {-}
type MaxNrofCgSL1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofCgSL1R16) Reset() {
	*x = MaxNrofCgSL1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCgSL1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCgSL1R16) ProtoMessage() {}

func (x *MaxNrofCgSL1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCgSL1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofCgSL1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{95}
}

func (x *MaxNrofCgSL1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:350
// {-}
type MaxNrofSsBlocksToAverage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSsBlocksToAverage) Reset() {
	*x = MaxNrofSsBlocksToAverage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSsBlocksToAverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSsBlocksToAverage) ProtoMessage() {}

func (x *MaxNrofSsBlocksToAverage) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSsBlocksToAverage.ProtoReflect.Descriptor instead.
func (*MaxNrofSsBlocksToAverage) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{96}
}

func (x *MaxNrofSsBlocksToAverage) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:351
// {-}
type MaxNrofCondCellsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofCondCellsr16) Reset() {
	*x = MaxNrofCondCellsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCondCellsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCondCellsr16) ProtoMessage() {}

func (x *MaxNrofCondCellsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCondCellsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCondCellsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{97}
}

func (x *MaxNrofCondCellsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:352
// {-}
type MaxNrofCsiRSResourcesToAverage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCsiRSResourcesToAverage) Reset() {
	*x = MaxNrofCsiRSResourcesToAverage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesToAverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesToAverage) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesToAverage) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesToAverage.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesToAverage) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{98}
}

func (x *MaxNrofCsiRSResourcesToAverage) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:353
// {-}
type MaxNrofDlAllocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofDlAllocations) Reset() {
	*x = MaxNrofDlAllocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofDlAllocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofDlAllocations) ProtoMessage() {}

func (x *MaxNrofDlAllocations) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofDlAllocations.ProtoReflect.Descriptor instead.
func (*MaxNrofDlAllocations) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{99}
}

func (x *MaxNrofDlAllocations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:354
// {-}
type MaxNrofSrConfigPerCellGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSrConfigPerCellGroup) Reset() {
	*x = MaxNrofSrConfigPerCellGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrConfigPerCellGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrConfigPerCellGroup) ProtoMessage() {}

func (x *MaxNrofSrConfigPerCellGroup) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrConfigPerCellGroup.ProtoReflect.Descriptor instead.
func (*MaxNrofSrConfigPerCellGroup) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{100}
}

func (x *MaxNrofSrConfigPerCellGroup) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:355
// {-}
type MaxLcgID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxLcgID) Reset() {
	*x = MaxLcgID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxLcgID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxLcgID) ProtoMessage() {}

func (x *MaxLcgID) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxLcgID.ProtoReflect.Descriptor instead.
func (*MaxLcgID) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{101}
}

func (x *MaxLcgID) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:356
// {-}
type MaxLcID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxLcID) Reset() {
	*x = MaxLcID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxLcID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxLcID) ProtoMessage() {}

func (x *MaxLcID) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxLcID.ProtoReflect.Descriptor instead.
func (*MaxLcID) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{102}
}

func (x *MaxLcID) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:357
// {-}
type MaxLcIDIabr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65855,valueUB:65855,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65855,valueUB:65855,"`
}

func (x *MaxLcIDIabr16) Reset() {
	*x = MaxLcIDIabr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxLcIDIabr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxLcIDIabr16) ProtoMessage() {}

func (x *MaxLcIDIabr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxLcIDIabr16.ProtoReflect.Descriptor instead.
func (*MaxLcIDIabr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{103}
}

func (x *MaxLcIDIabr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:358
// {-}
type MaxLteCRsPatternsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxLteCRsPatternsr16) Reset() {
	*x = MaxLteCRsPatternsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxLteCRsPatternsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxLteCRsPatternsr16) ProtoMessage() {}

func (x *MaxLteCRsPatternsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxLteCRsPatternsr16.ProtoReflect.Descriptor instead.
func (*MaxLteCRsPatternsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{104}
}

func (x *MaxLteCRsPatternsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:359
// {-}
type MaxNrofTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofTags) Reset() {
	*x = MaxNrofTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTags) ProtoMessage() {}

func (x *MaxNrofTags) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTags.ProtoReflect.Descriptor instead.
func (*MaxNrofTags) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{105}
}

func (x *MaxNrofTags) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:360
// {-}
type MaxNrofTags1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofTags1) Reset() {
	*x = MaxNrofTags1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTags1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTags1) ProtoMessage() {}

func (x *MaxNrofTags1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTags1.ProtoReflect.Descriptor instead.
func (*MaxNrofTags1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{106}
}

func (x *MaxNrofTags1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:361
// {-}
type MaxNrofBwps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofBwps) Reset() {
	*x = MaxNrofBwps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofBwps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofBwps) ProtoMessage() {}

func (x *MaxNrofBwps) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofBwps.ProtoReflect.Descriptor instead.
func (*MaxNrofBwps) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{107}
}

func (x *MaxNrofBwps) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:362
// {-}
type MaxNrofCombIdc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrofCombIdc) Reset() {
	*x = MaxNrofCombIdc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCombIdc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCombIdc) ProtoMessage() {}

func (x *MaxNrofCombIdc) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCombIdc.ProtoReflect.Descriptor instead.
func (*MaxNrofCombIdc) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{108}
}

func (x *MaxNrofCombIdc) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:363
// {-}
type MaxNrofSymbols1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:13,valueUB:13,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:13,valueUB:13,"`
}

func (x *MaxNrofSymbols1) Reset() {
	*x = MaxNrofSymbols1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSymbols1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSymbols1) ProtoMessage() {}

func (x *MaxNrofSymbols1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSymbols1.ProtoReflect.Descriptor instead.
func (*MaxNrofSymbols1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{109}
}

func (x *MaxNrofSymbols1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:364
// {-}
type MaxNrofSlots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:320,valueUB:320,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:320,valueUB:320,"`
}

func (x *MaxNrofSlots) Reset() {
	*x = MaxNrofSlots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlots) ProtoMessage() {}

func (x *MaxNrofSlots) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlots.ProtoReflect.Descriptor instead.
func (*MaxNrofSlots) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{110}
}

func (x *MaxNrofSlots) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:365
// {-}
type MaxNrofSlots1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:319,valueUB:319,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:319,valueUB:319,"`
}

func (x *MaxNrofSlots1) Reset() {
	*x = MaxNrofSlots1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlots1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlots1) ProtoMessage() {}

func (x *MaxNrofSlots1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlots1.ProtoReflect.Descriptor instead.
func (*MaxNrofSlots1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{111}
}

func (x *MaxNrofSlots1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:366
// {-}
type MaxNrofPhysicalResourceBlocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:275,valueUB:275,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:275,valueUB:275,"`
}

func (x *MaxNrofPhysicalResourceBlocks) Reset() {
	*x = MaxNrofPhysicalResourceBlocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPhysicalResourceBlocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPhysicalResourceBlocks) ProtoMessage() {}

func (x *MaxNrofPhysicalResourceBlocks) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPhysicalResourceBlocks.ProtoReflect.Descriptor instead.
func (*MaxNrofPhysicalResourceBlocks) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{112}
}

func (x *MaxNrofPhysicalResourceBlocks) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:367
// {-}
type MaxNrofPhysicalResourceBlocks1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:274,valueUB:274,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:274,valueUB:274,"`
}

func (x *MaxNrofPhysicalResourceBlocks1) Reset() {
	*x = MaxNrofPhysicalResourceBlocks1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPhysicalResourceBlocks1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPhysicalResourceBlocks1) ProtoMessage() {}

func (x *MaxNrofPhysicalResourceBlocks1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPhysicalResourceBlocks1.ProtoReflect.Descriptor instead.
func (*MaxNrofPhysicalResourceBlocks1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{113}
}

func (x *MaxNrofPhysicalResourceBlocks1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:368
// {-}
type MaxNrofPhysicalResourceBlocksPlus1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:276,valueUB:276,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:276,valueUB:276,"`
}

func (x *MaxNrofPhysicalResourceBlocksPlus1) Reset() {
	*x = MaxNrofPhysicalResourceBlocksPlus1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPhysicalResourceBlocksPlus1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPhysicalResourceBlocksPlus1) ProtoMessage() {}

func (x *MaxNrofPhysicalResourceBlocksPlus1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPhysicalResourceBlocksPlus1.ProtoReflect.Descriptor instead.
func (*MaxNrofPhysicalResourceBlocksPlus1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{114}
}

func (x *MaxNrofPhysicalResourceBlocksPlus1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:369
// {-}
type MaxNrofControlResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:12,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:12,"`
}

func (x *MaxNrofControlResourceSets) Reset() {
	*x = MaxNrofControlResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofControlResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofControlResourceSets) ProtoMessage() {}

func (x *MaxNrofControlResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofControlResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofControlResourceSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{115}
}

func (x *MaxNrofControlResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:370
// {-}
type MaxNrofControlResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:11,valueUB:11,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:11,valueUB:11,"`
}

func (x *MaxNrofControlResourceSets1) Reset() {
	*x = MaxNrofControlResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofControlResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofControlResourceSets1) ProtoMessage() {}

func (x *MaxNrofControlResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofControlResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofControlResourceSets1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{116}
}

func (x *MaxNrofControlResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:371
// {-}
type MaxNrofControlResourceSets1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofControlResourceSets1R16) Reset() {
	*x = MaxNrofControlResourceSets1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofControlResourceSets1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofControlResourceSets1R16) ProtoMessage() {}

func (x *MaxNrofControlResourceSets1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofControlResourceSets1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofControlResourceSets1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{117}
}

func (x *MaxNrofControlResourceSets1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:372
// {-}
type MaxNrofCoresetPoolsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrofCoresetPoolsr16) Reset() {
	*x = MaxNrofCoresetPoolsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCoresetPoolsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCoresetPoolsr16) ProtoMessage() {}

func (x *MaxNrofCoresetPoolsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCoresetPoolsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCoresetPoolsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{118}
}

func (x *MaxNrofCoresetPoolsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:373
// {-}
type MaxCoReSetDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxCoReSetDuration) Reset() {
	*x = MaxCoReSetDuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCoReSetDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCoReSetDuration) ProtoMessage() {}

func (x *MaxCoReSetDuration) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCoReSetDuration.ProtoReflect.Descriptor instead.
func (*MaxCoReSetDuration) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{119}
}

func (x *MaxCoReSetDuration) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:374
// {-}
type MaxNrofSearchSpaces1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:39,valueUB:39,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:39,valueUB:39,"`
}

func (x *MaxNrofSearchSpaces1) Reset() {
	*x = MaxNrofSearchSpaces1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSearchSpaces1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSearchSpaces1) ProtoMessage() {}

func (x *MaxNrofSearchSpaces1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSearchSpaces1.ProtoReflect.Descriptor instead.
func (*MaxNrofSearchSpaces1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{120}
}

func (x *MaxNrofSearchSpaces1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:375
// {-}
type MaxSfiDCiPayloadSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxSfiDCiPayloadSize) Reset() {
	*x = MaxSfiDCiPayloadSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSfiDCiPayloadSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSfiDCiPayloadSize) ProtoMessage() {}

func (x *MaxSfiDCiPayloadSize) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSfiDCiPayloadSize.ProtoReflect.Descriptor instead.
func (*MaxSfiDCiPayloadSize) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{121}
}

func (x *MaxSfiDCiPayloadSize) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:376
// {-}
type MaxSfiDCiPayloadSize1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:127,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:127,valueUB:127,"`
}

func (x *MaxSfiDCiPayloadSize1) Reset() {
	*x = MaxSfiDCiPayloadSize1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSfiDCiPayloadSize1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSfiDCiPayloadSize1) ProtoMessage() {}

func (x *MaxSfiDCiPayloadSize1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSfiDCiPayloadSize1.ProtoReflect.Descriptor instead.
func (*MaxSfiDCiPayloadSize1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{122}
}

func (x *MaxSfiDCiPayloadSize1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:377
// {-}
type MaxIabIPAddressr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxIabIPAddressr16) Reset() {
	*x = MaxIabIPAddressr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxIabIPAddressr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxIabIPAddressr16) ProtoMessage() {}

func (x *MaxIabIPAddressr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxIabIPAddressr16.ProtoReflect.Descriptor instead.
func (*MaxIabIPAddressr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{123}
}

func (x *MaxIabIPAddressr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:378
// {-}
type MaxIntDCiPayloadSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:126,valueUB:126,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:126,valueUB:126,"`
}

func (x *MaxIntDCiPayloadSize) Reset() {
	*x = MaxIntDCiPayloadSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxIntDCiPayloadSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxIntDCiPayloadSize) ProtoMessage() {}

func (x *MaxIntDCiPayloadSize) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxIntDCiPayloadSize.ProtoReflect.Descriptor instead.
func (*MaxIntDCiPayloadSize) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{124}
}

func (x *MaxIntDCiPayloadSize) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:379
// {-}
type MaxIntDCiPayloadSize1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:125,valueUB:125,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:125,valueUB:125,"`
}

func (x *MaxIntDCiPayloadSize1) Reset() {
	*x = MaxIntDCiPayloadSize1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxIntDCiPayloadSize1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxIntDCiPayloadSize1) ProtoMessage() {}

func (x *MaxIntDCiPayloadSize1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxIntDCiPayloadSize1.ProtoReflect.Descriptor instead.
func (*MaxIntDCiPayloadSize1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{125}
}

func (x *MaxIntDCiPayloadSize1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:380
// {-}
type MaxNrofRateMatchPatterns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofRateMatchPatterns) Reset() {
	*x = MaxNrofRateMatchPatterns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRateMatchPatterns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRateMatchPatterns) ProtoMessage() {}

func (x *MaxNrofRateMatchPatterns) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRateMatchPatterns.ProtoReflect.Descriptor instead.
func (*MaxNrofRateMatchPatterns) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{126}
}

func (x *MaxNrofRateMatchPatterns) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:381
// {-}
type MaxNrofRateMatchPatterns1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofRateMatchPatterns1) Reset() {
	*x = MaxNrofRateMatchPatterns1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRateMatchPatterns1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRateMatchPatterns1) ProtoMessage() {}

func (x *MaxNrofRateMatchPatterns1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRateMatchPatterns1.ProtoReflect.Descriptor instead.
func (*MaxNrofRateMatchPatterns1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{127}
}

func (x *MaxNrofRateMatchPatterns1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:382
// {-}
type MaxNrofRateMatchPatternsPerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofRateMatchPatternsPerGroup) Reset() {
	*x = MaxNrofRateMatchPatternsPerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRateMatchPatternsPerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRateMatchPatternsPerGroup) ProtoMessage() {}

func (x *MaxNrofRateMatchPatternsPerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRateMatchPatternsPerGroup.ProtoReflect.Descriptor instead.
func (*MaxNrofRateMatchPatternsPerGroup) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{128}
}

func (x *MaxNrofRateMatchPatternsPerGroup) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:383
// {-}
type MaxNrofCsiReportConfigurations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:48,valueUB:48,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:48,valueUB:48,"`
}

func (x *MaxNrofCsiReportConfigurations) Reset() {
	*x = MaxNrofCsiReportConfigurations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiReportConfigurations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiReportConfigurations) ProtoMessage() {}

func (x *MaxNrofCsiReportConfigurations) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiReportConfigurations.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiReportConfigurations) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{129}
}

func (x *MaxNrofCsiReportConfigurations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:384
// {-}
type MaxNrofCsiReportConfigurations1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:47,valueUB:47,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:47,valueUB:47,"`
}

func (x *MaxNrofCsiReportConfigurations1) Reset() {
	*x = MaxNrofCsiReportConfigurations1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiReportConfigurations1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiReportConfigurations1) ProtoMessage() {}

func (x *MaxNrofCsiReportConfigurations1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiReportConfigurations1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiReportConfigurations1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{130}
}

func (x *MaxNrofCsiReportConfigurations1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:385
// {-}
type MaxNrofCsiResourceConfigurations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:112,valueUB:112,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:112,valueUB:112,"`
}

func (x *MaxNrofCsiResourceConfigurations) Reset() {
	*x = MaxNrofCsiResourceConfigurations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiResourceConfigurations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiResourceConfigurations) ProtoMessage() {}

func (x *MaxNrofCsiResourceConfigurations) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiResourceConfigurations.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiResourceConfigurations) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{131}
}

func (x *MaxNrofCsiResourceConfigurations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:386
// {-}
type MaxNrofCsiResourceConfigurations1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:111,valueUB:111,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:111,valueUB:111,"`
}

func (x *MaxNrofCsiResourceConfigurations1) Reset() {
	*x = MaxNrofCsiResourceConfigurations1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiResourceConfigurations1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiResourceConfigurations1) ProtoMessage() {}

func (x *MaxNrofCsiResourceConfigurations1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiResourceConfigurations1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiResourceConfigurations1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{132}
}

func (x *MaxNrofCsiResourceConfigurations1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:387
// {-}
type MaxNrofApCSiRSResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofApCSiRSResourcesPerSet) Reset() {
	*x = MaxNrofApCSiRSResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofApCSiRSResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofApCSiRSResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofApCSiRSResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofApCSiRSResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofApCSiRSResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{133}
}

func (x *MaxNrofApCSiRSResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:388
// {-}
type MaxNrOfCsiAperiodicTriggers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrOfCsiAperiodicTriggers) Reset() {
	*x = MaxNrOfCsiAperiodicTriggers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrOfCsiAperiodicTriggers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrOfCsiAperiodicTriggers) ProtoMessage() {}

func (x *MaxNrOfCsiAperiodicTriggers) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrOfCsiAperiodicTriggers.ProtoReflect.Descriptor instead.
func (*MaxNrOfCsiAperiodicTriggers) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{134}
}

func (x *MaxNrOfCsiAperiodicTriggers) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:389
// {-}
type MaxNrofReportConfigPerAperiodicTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofReportConfigPerAperiodicTrigger) Reset() {
	*x = MaxNrofReportConfigPerAperiodicTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofReportConfigPerAperiodicTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofReportConfigPerAperiodicTrigger) ProtoMessage() {}

func (x *MaxNrofReportConfigPerAperiodicTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofReportConfigPerAperiodicTrigger.ProtoReflect.Descriptor instead.
func (*MaxNrofReportConfigPerAperiodicTrigger) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{135}
}

func (x *MaxNrofReportConfigPerAperiodicTrigger) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:390
// {-}
type MaxNrofNzpCSiRSResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:192,valueUB:192,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:192,valueUB:192,"`
}

func (x *MaxNrofNzpCSiRSResources) Reset() {
	*x = MaxNrofNzpCSiRSResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResources) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResources) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResources.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResources) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{136}
}

func (x *MaxNrofNzpCSiRSResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:391
// {-}
type MaxNrofNzpCSiRSResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:191,valueUB:191,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:191,valueUB:191,"`
}

func (x *MaxNrofNzpCSiRSResources1) Reset() {
	*x = MaxNrofNzpCSiRSResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResources1) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResources1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResources1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{137}
}

func (x *MaxNrofNzpCSiRSResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:392
// {-}
type MaxNrofNzpCSiRSResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofNzpCSiRSResourcesPerSet) Reset() {
	*x = MaxNrofNzpCSiRSResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{138}
}

func (x *MaxNrofNzpCSiRSResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:393
// {-}
type MaxNrofNzpCSiRSResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofNzpCSiRSResourceSets) Reset() {
	*x = MaxNrofNzpCSiRSResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResourceSets) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResourceSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{139}
}

func (x *MaxNrofNzpCSiRSResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:394
// {-}
type MaxNrofNzpCSiRSResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofNzpCSiRSResourceSets1) Reset() {
	*x = MaxNrofNzpCSiRSResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResourceSets1) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResourceSets1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{140}
}

func (x *MaxNrofNzpCSiRSResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:395
// {-}
type MaxNrofNzpCSiRSResourceSetsPerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofNzpCSiRSResourceSetsPerConfig) Reset() {
	*x = MaxNrofNzpCSiRSResourceSetsPerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResourceSetsPerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResourceSetsPerConfig) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResourceSetsPerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResourceSetsPerConfig.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResourceSetsPerConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{141}
}

func (x *MaxNrofNzpCSiRSResourceSetsPerConfig) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:396
// {-}
type MaxNrofNzpCSiRSResourcesPerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrofNzpCSiRSResourcesPerConfig) Reset() {
	*x = MaxNrofNzpCSiRSResourcesPerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNzpCSiRSResourcesPerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNzpCSiRSResourcesPerConfig) ProtoMessage() {}

func (x *MaxNrofNzpCSiRSResourcesPerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNzpCSiRSResourcesPerConfig.ProtoReflect.Descriptor instead.
func (*MaxNrofNzpCSiRSResourcesPerConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{142}
}

func (x *MaxNrofNzpCSiRSResourcesPerConfig) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:397
// {-}
type MaxNrofZpCSiRSResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofZpCSiRSResources) Reset() {
	*x = MaxNrofZpCSiRSResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofZpCSiRSResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofZpCSiRSResources) ProtoMessage() {}

func (x *MaxNrofZpCSiRSResources) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofZpCSiRSResources.ProtoReflect.Descriptor instead.
func (*MaxNrofZpCSiRSResources) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{143}
}

func (x *MaxNrofZpCSiRSResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:398
// {-}
type MaxNrofZpCSiRSResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofZpCSiRSResources1) Reset() {
	*x = MaxNrofZpCSiRSResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofZpCSiRSResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofZpCSiRSResources1) ProtoMessage() {}

func (x *MaxNrofZpCSiRSResources1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofZpCSiRSResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofZpCSiRSResources1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{144}
}

func (x *MaxNrofZpCSiRSResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:399
// {-}
type MaxNrofZpCSiRSResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofZpCSiRSResourceSets1) Reset() {
	*x = MaxNrofZpCSiRSResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofZpCSiRSResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofZpCSiRSResourceSets1) ProtoMessage() {}

func (x *MaxNrofZpCSiRSResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofZpCSiRSResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofZpCSiRSResourceSets1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{145}
}

func (x *MaxNrofZpCSiRSResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:400
// {-}
type MaxNrofZpCSiRSResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofZpCSiRSResourcesPerSet) Reset() {
	*x = MaxNrofZpCSiRSResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofZpCSiRSResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofZpCSiRSResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofZpCSiRSResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofZpCSiRSResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofZpCSiRSResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{146}
}

func (x *MaxNrofZpCSiRSResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:401
// {-}
type MaxNrofZpCSiRSResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofZpCSiRSResourceSets) Reset() {
	*x = MaxNrofZpCSiRSResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofZpCSiRSResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofZpCSiRSResourceSets) ProtoMessage() {}

func (x *MaxNrofZpCSiRSResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofZpCSiRSResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofZpCSiRSResourceSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{147}
}

func (x *MaxNrofZpCSiRSResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:402
// {-}
type MaxNrofCsiIMResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofCsiIMResources) Reset() {
	*x = MaxNrofCsiIMResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResources) ProtoMessage() {}

func (x *MaxNrofCsiIMResources) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResources.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResources) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{148}
}

func (x *MaxNrofCsiIMResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:403
// {-}
type MaxNrofCsiIMResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofCsiIMResources1) Reset() {
	*x = MaxNrofCsiIMResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResources1) ProtoMessage() {}

func (x *MaxNrofCsiIMResources1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResources1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{149}
}

func (x *MaxNrofCsiIMResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:404
// {-}
type MaxNrofCsiIMResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofCsiIMResourcesPerSet) Reset() {
	*x = MaxNrofCsiIMResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofCsiIMResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{150}
}

func (x *MaxNrofCsiIMResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:405
// {-}
type MaxNrofCsiIMResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofCsiIMResourceSets) Reset() {
	*x = MaxNrofCsiIMResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResourceSets) ProtoMessage() {}

func (x *MaxNrofCsiIMResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResourceSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{151}
}

func (x *MaxNrofCsiIMResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:406
// {-}
type MaxNrofCsiIMResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofCsiIMResourceSets1) Reset() {
	*x = MaxNrofCsiIMResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResourceSets1) ProtoMessage() {}

func (x *MaxNrofCsiIMResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResourceSets1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{152}
}

func (x *MaxNrofCsiIMResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:407
// {-}
type MaxNrofCsiIMResourceSetsPerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCsiIMResourceSetsPerConfig) Reset() {
	*x = MaxNrofCsiIMResourceSetsPerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiIMResourceSetsPerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiIMResourceSetsPerConfig) ProtoMessage() {}

func (x *MaxNrofCsiIMResourceSetsPerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiIMResourceSetsPerConfig.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiIMResourceSetsPerConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{153}
}

func (x *MaxNrofCsiIMResourceSetsPerConfig) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:408
// {-}
type MaxNrofCsiSSbResourcePerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofCsiSSbResourcePerSet) Reset() {
	*x = MaxNrofCsiSSbResourcePerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiSSbResourcePerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiSSbResourcePerSet) ProtoMessage() {}

func (x *MaxNrofCsiSSbResourcePerSet) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiSSbResourcePerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiSSbResourcePerSet) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{154}
}

func (x *MaxNrofCsiSSbResourcePerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:409
// {-}
type MaxNrofCsiSSbResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofCsiSSbResourceSets) Reset() {
	*x = MaxNrofCsiSSbResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiSSbResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiSSbResourceSets) ProtoMessage() {}

func (x *MaxNrofCsiSSbResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiSSbResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiSSbResourceSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{155}
}

func (x *MaxNrofCsiSSbResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:410
// {-}
type MaxNrofCsiSSbResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofCsiSSbResourceSets1) Reset() {
	*x = MaxNrofCsiSSbResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiSSbResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiSSbResourceSets1) ProtoMessage() {}

func (x *MaxNrofCsiSSbResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiSSbResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiSSbResourceSets1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{156}
}

func (x *MaxNrofCsiSSbResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:411
// {-}
type MaxNrofCsiSSbResourceSetsPerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:1,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:1,"`
}

func (x *MaxNrofCsiSSbResourceSetsPerConfig) Reset() {
	*x = MaxNrofCsiSSbResourceSetsPerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiSSbResourceSetsPerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiSSbResourceSetsPerConfig) ProtoMessage() {}

func (x *MaxNrofCsiSSbResourceSetsPerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiSSbResourceSetsPerConfig.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiSSbResourceSetsPerConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{157}
}

func (x *MaxNrofCsiSSbResourceSetsPerConfig) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:412
// {-}
type MaxNrofFailureDetectionResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:10,valueUB:10,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:10,valueUB:10,"`
}

func (x *MaxNrofFailureDetectionResources) Reset() {
	*x = MaxNrofFailureDetectionResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofFailureDetectionResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofFailureDetectionResources) ProtoMessage() {}

func (x *MaxNrofFailureDetectionResources) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofFailureDetectionResources.ProtoReflect.Descriptor instead.
func (*MaxNrofFailureDetectionResources) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{158}
}

func (x *MaxNrofFailureDetectionResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:413
// {-}
type MaxNrofFailureDetectionResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:9,valueUB:9,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:9,valueUB:9,"`
}

func (x *MaxNrofFailureDetectionResources1) Reset() {
	*x = MaxNrofFailureDetectionResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofFailureDetectionResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofFailureDetectionResources1) ProtoMessage() {}

func (x *MaxNrofFailureDetectionResources1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofFailureDetectionResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofFailureDetectionResources1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{159}
}

func (x *MaxNrofFailureDetectionResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:414
// {-}
type MaxNrofFreqSlr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofFreqSlr16) Reset() {
	*x = MaxNrofFreqSlr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofFreqSlr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofFreqSlr16) ProtoMessage() {}

func (x *MaxNrofFreqSlr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofFreqSlr16.ProtoReflect.Descriptor instead.
func (*MaxNrofFreqSlr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{160}
}

func (x *MaxNrofFreqSlr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:415
// {-}
type MaxNrofSlBWpsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofSlBWpsr16) Reset() {
	*x = MaxNrofSlBWpsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlBWpsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlBWpsr16) ProtoMessage() {}

func (x *MaxNrofSlBWpsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlBWpsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlBWpsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{161}
}

func (x *MaxNrofSlBWpsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:416
// {-}
type MaxFreqSlEUtrar16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxFreqSlEUtrar16) Reset() {
	*x = MaxFreqSlEUtrar16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqSlEUtrar16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqSlEUtrar16) ProtoMessage() {}

func (x *MaxFreqSlEUtrar16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqSlEUtrar16.ProtoReflect.Descriptor instead.
func (*MaxFreqSlEUtrar16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{162}
}

func (x *MaxFreqSlEUtrar16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:417
// {-}
type MaxNrofSlMeasIdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSlMeasIdr16) Reset() {
	*x = MaxNrofSlMeasIdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlMeasIdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlMeasIdr16) ProtoMessage() {}

func (x *MaxNrofSlMeasIdr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlMeasIdr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlMeasIdr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{163}
}

func (x *MaxNrofSlMeasIdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:418
// {-}
type MaxNrofSlObjectIdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSlObjectIdr16) Reset() {
	*x = MaxNrofSlObjectIdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlObjectIdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlObjectIdr16) ProtoMessage() {}

func (x *MaxNrofSlObjectIdr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlObjectIdr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlObjectIdr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{164}
}

func (x *MaxNrofSlObjectIdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:419
// {-}
type MaxNrofSlReportConfigIdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSlReportConfigIdr16) Reset() {
	*x = MaxNrofSlReportConfigIdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlReportConfigIdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlReportConfigIdr16) ProtoMessage() {}

func (x *MaxNrofSlReportConfigIdr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlReportConfigIdr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlReportConfigIdr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{165}
}

func (x *MaxNrofSlReportConfigIdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:420
// {-}
type MaxNrofSlPoolToMeasureNrr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSlPoolToMeasureNrr16) Reset() {
	*x = MaxNrofSlPoolToMeasureNrr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlPoolToMeasureNrr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlPoolToMeasureNrr16) ProtoMessage() {}

func (x *MaxNrofSlPoolToMeasureNrr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlPoolToMeasureNrr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlPoolToMeasureNrr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{166}
}

func (x *MaxNrofSlPoolToMeasureNrr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:422
// {-}
type MaxFreqSlNRr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxFreqSlNRr16) Reset() {
	*x = MaxFreqSlNRr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqSlNRr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqSlNRr16) ProtoMessage() {}

func (x *MaxFreqSlNRr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqSlNRr16.ProtoReflect.Descriptor instead.
func (*MaxFreqSlNRr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{167}
}

func (x *MaxFreqSlNRr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:423
// {-}
type MaxNrofSlQFisr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2048,valueUB:2048,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2048,valueUB:2048,"`
}

func (x *MaxNrofSlQFisr16) Reset() {
	*x = MaxNrofSlQFisr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlQFisr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlQFisr16) ProtoMessage() {}

func (x *MaxNrofSlQFisr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlQFisr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlQFisr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{168}
}

func (x *MaxNrofSlQFisr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:424
// {-}
type MaxNrofSlQFisPerDestr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSlQFisPerDestr16) Reset() {
	*x = MaxNrofSlQFisPerDestr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlQFisPerDestr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlQFisPerDestr16) ProtoMessage() {}

func (x *MaxNrofSlQFisPerDestr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlQFisPerDestr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlQFisPerDestr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{169}
}

func (x *MaxNrofSlQFisPerDestr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:425
// {-}
type MaxNrofObjectId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofObjectId) Reset() {
	*x = MaxNrofObjectId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofObjectId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofObjectId) ProtoMessage() {}

func (x *MaxNrofObjectId) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofObjectId.ProtoReflect.Descriptor instead.
func (*MaxNrofObjectId) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{170}
}

func (x *MaxNrofObjectId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:426
// {-}
type MaxNrofPageRec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofPageRec) Reset() {
	*x = MaxNrofPageRec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPageRec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPageRec) ProtoMessage() {}

func (x *MaxNrofPageRec) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPageRec.ProtoReflect.Descriptor instead.
func (*MaxNrofPageRec) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{171}
}

func (x *MaxNrofPageRec) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:427
// {-}
type MaxNrofPciRanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofPciRanges) Reset() {
	*x = MaxNrofPciRanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPciRanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPciRanges) ProtoMessage() {}

func (x *MaxNrofPciRanges) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPciRanges.ProtoReflect.Descriptor instead.
func (*MaxNrofPciRanges) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{172}
}

func (x *MaxNrofPciRanges) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:428
// {-}
type MaxPlmn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:12,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:12,"`
}

func (x *MaxPlmn) Reset() {
	*x = MaxPlmn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPlmn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPlmn) ProtoMessage() {}

func (x *MaxPlmn) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPlmn.ProtoReflect.Descriptor instead.
func (*MaxPlmn) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{173}
}

func (x *MaxPlmn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:429
// {-}
type MaxNrofCsiRSResourcesRrm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:96,valueUB:96,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:96,valueUB:96,"`
}

func (x *MaxNrofCsiRSResourcesRrm) Reset() {
	*x = MaxNrofCsiRSResourcesRrm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesRrm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesRrm) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesRrm) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesRrm.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesRrm) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{174}
}

func (x *MaxNrofCsiRSResourcesRrm) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:430
// {-}
type MaxNrofCsiRSResourcesRrm1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:95,valueUB:95,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:95,valueUB:95,"`
}

func (x *MaxNrofCsiRSResourcesRrm1) Reset() {
	*x = MaxNrofCsiRSResourcesRrm1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesRrm1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesRrm1) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesRrm1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesRrm1.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesRrm1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{175}
}

func (x *MaxNrofCsiRSResourcesRrm1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:431
// {-}
type MaxNrofMeasId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofMeasId) Reset() {
	*x = MaxNrofMeasId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMeasId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMeasId) ProtoMessage() {}

func (x *MaxNrofMeasId) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMeasId.ProtoReflect.Descriptor instead.
func (*MaxNrofMeasId) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{176}
}

func (x *MaxNrofMeasId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:432
// {-}
type MaxNrofQuantityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrofQuantityConfig) Reset() {
	*x = MaxNrofQuantityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofQuantityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofQuantityConfig) ProtoMessage() {}

func (x *MaxNrofQuantityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofQuantityConfig.ProtoReflect.Descriptor instead.
func (*MaxNrofQuantityConfig) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{177}
}

func (x *MaxNrofQuantityConfig) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:433
// {-}
type MaxNrofCsiRSCellsRrm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:96,valueUB:96,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:96,valueUB:96,"`
}

func (x *MaxNrofCsiRSCellsRrm) Reset() {
	*x = MaxNrofCsiRSCellsRrm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSCellsRrm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSCellsRrm) ProtoMessage() {}

func (x *MaxNrofCsiRSCellsRrm) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSCellsRrm.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSCellsRrm) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{178}
}

func (x *MaxNrofCsiRSCellsRrm) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:434
// {-}
type MaxNrofSlDestr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofSlDestr16) Reset() {
	*x = MaxNrofSlDestr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlDestr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlDestr16) ProtoMessage() {}

func (x *MaxNrofSlDestr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlDestr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlDestr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{179}
}

func (x *MaxNrofSlDestr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:435
// {-}
type MaxNrofSlDest1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofSlDest1R16) Reset() {
	*x = MaxNrofSlDest1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlDest1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlDest1R16) ProtoMessage() {}

func (x *MaxNrofSlDest1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlDest1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlDest1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{180}
}

func (x *MaxNrofSlDest1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:436
// {-}
type MaxNrofSlrbr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxNrofSlrbr16) Reset() {
	*x = MaxNrofSlrbr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlrbr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlrbr16) ProtoMessage() {}

func (x *MaxNrofSlrbr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlrbr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSlrbr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{181}
}

func (x *MaxNrofSlrbr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:437
// {-}
type MaxSlLCidr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxSlLCidr16) Reset() {
	*x = MaxSlLCidr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSlLCidr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSlLCidr16) ProtoMessage() {}

func (x *MaxSlLCidr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSlLCidr16.ProtoReflect.Descriptor instead.
func (*MaxSlLCidr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{182}
}

func (x *MaxSlLCidr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:438
// {-}
type MaxSlSyncConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxSlSyncConfigr16) Reset() {
	*x = MaxSlSyncConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSlSyncConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSlSyncConfigr16) ProtoMessage() {}

func (x *MaxSlSyncConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSlSyncConfigr16.ProtoReflect.Descriptor instead.
func (*MaxSlSyncConfigr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{183}
}

func (x *MaxSlSyncConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:439
// {-}
type MaxNrofRxpoolr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofRxpoolr16) Reset() {
	*x = MaxNrofRxpoolr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofRxpoolr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofRxpoolr16) ProtoMessage() {}

func (x *MaxNrofRxpoolr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofRxpoolr16.ProtoReflect.Descriptor instead.
func (*MaxNrofRxpoolr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{184}
}

func (x *MaxNrofRxpoolr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:440
// {-}
type MaxNrofTxpoolr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofTxpoolr16) Reset() {
	*x = MaxNrofTxpoolr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTxpoolr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTxpoolr16) ProtoMessage() {}

func (x *MaxNrofTxpoolr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTxpoolr16.ProtoReflect.Descriptor instead.
func (*MaxNrofTxpoolr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{185}
}

func (x *MaxNrofTxpoolr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:441
// {-}
type MaxNrofPoolIdr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofPoolIdr16) Reset() {
	*x = MaxNrofPoolIdr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPoolIdr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPoolIdr16) ProtoMessage() {}

func (x *MaxNrofPoolIdr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPoolIdr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPoolIdr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{186}
}

func (x *MaxNrofPoolIdr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:442
// {-}
type MaxNrofSrsPathlossReferenceRsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSrsPathlossReferenceRsr16) Reset() {
	*x = MaxNrofSrsPathlossReferenceRsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPathlossReferenceRsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPathlossReferenceRsr16) ProtoMessage() {}

func (x *MaxNrofSrsPathlossReferenceRsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPathlossReferenceRsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPathlossReferenceRsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{187}
}

func (x *MaxNrofSrsPathlossReferenceRsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:443
// {-}
type MaxNrofSrsPathlossReferenceRs1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofSrsPathlossReferenceRs1R16) Reset() {
	*x = MaxNrofSrsPathlossReferenceRs1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPathlossReferenceRs1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPathlossReferenceRs1R16) ProtoMessage() {}

func (x *MaxNrofSrsPathlossReferenceRs1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPathlossReferenceRs1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPathlossReferenceRs1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{188}
}

func (x *MaxNrofSrsPathlossReferenceRs1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:444
// {-}
type MaxNrofSrsResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSrsResourceSets) Reset() {
	*x = MaxNrofSrsResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsResourceSets) ProtoMessage() {}

func (x *MaxNrofSrsResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsResourceSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{189}
}

func (x *MaxNrofSrsResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:445
// {-}
type MaxNrofSrsResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofSrsResourceSets1) Reset() {
	*x = MaxNrofSrsResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsResourceSets1) ProtoMessage() {}

func (x *MaxNrofSrsResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsResourceSets1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{190}
}

func (x *MaxNrofSrsResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:446
// {-}
type MaxNrofSrsPosResourceSetsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSrsPosResourceSetsr16) Reset() {
	*x = MaxNrofSrsPosResourceSetsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPosResourceSetsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPosResourceSetsr16) ProtoMessage() {}

func (x *MaxNrofSrsPosResourceSetsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPosResourceSetsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPosResourceSetsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{191}
}

func (x *MaxNrofSrsPosResourceSetsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:447
// {-}
type MaxNrofSrsPosResourceSets1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofSrsPosResourceSets1R16) Reset() {
	*x = MaxNrofSrsPosResourceSets1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPosResourceSets1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPosResourceSets1R16) ProtoMessage() {}

func (x *MaxNrofSrsPosResourceSets1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPosResourceSets1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPosResourceSets1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{192}
}

func (x *MaxNrofSrsPosResourceSets1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:448
// {-}
type MaxNrofSrsResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSrsResources) Reset() {
	*x = MaxNrofSrsResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsResources) ProtoMessage() {}

func (x *MaxNrofSrsResources) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsResources.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsResources) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{193}
}

func (x *MaxNrofSrsResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:449
// {-}
type MaxNrofSrsResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofSrsResources1) Reset() {
	*x = MaxNrofSrsResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsResources1) ProtoMessage() {}

func (x *MaxNrofSrsResources1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsResources1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{194}
}

func (x *MaxNrofSrsResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:450
// {-}
type MaxNrofSrsPosResourcesr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSrsPosResourcesr16) Reset() {
	*x = MaxNrofSrsPosResourcesr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPosResourcesr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPosResourcesr16) ProtoMessage() {}

func (x *MaxNrofSrsPosResourcesr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPosResourcesr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPosResourcesr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{195}
}

func (x *MaxNrofSrsPosResourcesr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:451
// {-}
type MaxNrofSrsPosResources1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofSrsPosResources1R16) Reset() {
	*x = MaxNrofSrsPosResources1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsPosResources1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsPosResources1R16) ProtoMessage() {}

func (x *MaxNrofSrsPosResources1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsPosResources1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsPosResources1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{196}
}

func (x *MaxNrofSrsPosResources1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:452
// {-}
type MaxNrofSrsResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSrsResourcesPerSet) Reset() {
	*x = MaxNrofSrsResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofSrsResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{197}
}

func (x *MaxNrofSrsResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:453
// {-}
type MaxNrofSrsTriggerStates1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofSrsTriggerStates1) Reset() {
	*x = MaxNrofSrsTriggerStates1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsTriggerStates1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsTriggerStates1) ProtoMessage() {}

func (x *MaxNrofSrsTriggerStates1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsTriggerStates1.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsTriggerStates1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{198}
}

func (x *MaxNrofSrsTriggerStates1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:454
// {-}
type MaxNrofSrsTriggerStates2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrofSrsTriggerStates2) Reset() {
	*x = MaxNrofSrsTriggerStates2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrsTriggerStates2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrsTriggerStates2) ProtoMessage() {}

func (x *MaxNrofSrsTriggerStates2) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrsTriggerStates2.ProtoReflect.Descriptor instead.
func (*MaxNrofSrsTriggerStates2) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{199}
}

func (x *MaxNrofSrsTriggerStates2) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:455
// {-}
type MaxRatCapabilityContainers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxRatCapabilityContainers) Reset() {
	*x = MaxRatCapabilityContainers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRatCapabilityContainers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRatCapabilityContainers) ProtoMessage() {}

func (x *MaxRatCapabilityContainers) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRatCapabilityContainers.ProtoReflect.Descriptor instead.
func (*MaxRatCapabilityContainers) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{200}
}

func (x *MaxRatCapabilityContainers) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:456
// {-}
type MaxSimultaneousBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxSimultaneousBands) Reset() {
	*x = MaxSimultaneousBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSimultaneousBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSimultaneousBands) ProtoMessage() {}

func (x *MaxSimultaneousBands) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSimultaneousBands.ProtoReflect.Descriptor instead.
func (*MaxSimultaneousBands) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{201}
}

func (x *MaxSimultaneousBands) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:457
// {-}
type MaxUltxSwitchingBandPairs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxUltxSwitchingBandPairs) Reset() {
	*x = MaxUltxSwitchingBandPairs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxUltxSwitchingBandPairs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxUltxSwitchingBandPairs) ProtoMessage() {}

func (x *MaxUltxSwitchingBandPairs) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxUltxSwitchingBandPairs.ProtoReflect.Descriptor instead.
func (*MaxUltxSwitchingBandPairs) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{202}
}

func (x *MaxUltxSwitchingBandPairs) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:458
// {-}
type MaxNrofSlotFormatCombinationsPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxNrofSlotFormatCombinationsPerSet) Reset() {
	*x = MaxNrofSlotFormatCombinationsPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlotFormatCombinationsPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlotFormatCombinationsPerSet) ProtoMessage() {}

func (x *MaxNrofSlotFormatCombinationsPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlotFormatCombinationsPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofSlotFormatCombinationsPerSet) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{203}
}

func (x *MaxNrofSlotFormatCombinationsPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:459
// {-}
type MaxNrofSlotFormatCombinationsPerSet1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:511,valueUB:511,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:511,valueUB:511,"`
}

func (x *MaxNrofSlotFormatCombinationsPerSet1) Reset() {
	*x = MaxNrofSlotFormatCombinationsPerSet1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlotFormatCombinationsPerSet1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlotFormatCombinationsPerSet1) ProtoMessage() {}

func (x *MaxNrofSlotFormatCombinationsPerSet1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlotFormatCombinationsPerSet1.ProtoReflect.Descriptor instead.
func (*MaxNrofSlotFormatCombinationsPerSet1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{204}
}

func (x *MaxNrofSlotFormatCombinationsPerSet1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:460
// {-}
type MaxNrofTrafficPatternr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofTrafficPatternr16) Reset() {
	*x = MaxNrofTrafficPatternr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTrafficPatternr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTrafficPatternr16) ProtoMessage() {}

func (x *MaxNrofTrafficPatternr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTrafficPatternr16.ProtoReflect.Descriptor instead.
func (*MaxNrofTrafficPatternr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{205}
}

func (x *MaxNrofTrafficPatternr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:461
// {-}
type MaxNrofPucchResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrofPucchResources) Reset() {
	*x = MaxNrofPucchResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResources) ProtoMessage() {}

func (x *MaxNrofPucchResources) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResources.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResources) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{206}
}

func (x *MaxNrofPucchResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:462
// {-}
type MaxNrofPucchResources1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:127,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:127,valueUB:127,"`
}

func (x *MaxNrofPucchResources1) Reset() {
	*x = MaxNrofPucchResources1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResources1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResources1) ProtoMessage() {}

func (x *MaxNrofPucchResources1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResources1.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResources1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{207}
}

func (x *MaxNrofPucchResources1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:463
// {-}
type MaxNrofPucchResourceSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofPucchResourceSets) Reset() {
	*x = MaxNrofPucchResourceSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourceSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourceSets) ProtoMessage() {}

func (x *MaxNrofPucchResourceSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourceSets.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourceSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{208}
}

func (x *MaxNrofPucchResourceSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:464
// {-}
type MaxNrofPucchResourceSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofPucchResourceSets1) Reset() {
	*x = MaxNrofPucchResourceSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourceSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourceSets1) ProtoMessage() {}

func (x *MaxNrofPucchResourceSets1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourceSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourceSets1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{209}
}

func (x *MaxNrofPucchResourceSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:465
// {-}
type MaxNrofPucchResourcesPerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofPucchResourcesPerSet) Reset() {
	*x = MaxNrofPucchResourcesPerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourcesPerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourcesPerSet) ProtoMessage() {}

func (x *MaxNrofPucchResourcesPerSet) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourcesPerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourcesPerSet) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{210}
}

func (x *MaxNrofPucchResourcesPerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:466
// {-}
type MaxNrofPucchP0PerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofPucchP0PerSet) Reset() {
	*x = MaxNrofPucchP0PerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchP0PerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchP0PerSet) ProtoMessage() {}

func (x *MaxNrofPucchP0PerSet) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchP0PerSet.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchP0PerSet) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{211}
}

func (x *MaxNrofPucchP0PerSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:467
// {-}
type MaxNrofPucchPathlossReferenceRss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofPucchPathlossReferenceRss) Reset() {
	*x = MaxNrofPucchPathlossReferenceRss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchPathlossReferenceRss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchPathlossReferenceRss) ProtoMessage() {}

func (x *MaxNrofPucchPathlossReferenceRss) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchPathlossReferenceRss.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchPathlossReferenceRss) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{212}
}

func (x *MaxNrofPucchPathlossReferenceRss) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:468
// {-}
type MaxNrofPucchPathlossReferenceRss1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofPucchPathlossReferenceRss1) Reset() {
	*x = MaxNrofPucchPathlossReferenceRss1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchPathlossReferenceRss1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchPathlossReferenceRss1) ProtoMessage() {}

func (x *MaxNrofPucchPathlossReferenceRss1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchPathlossReferenceRss1.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchPathlossReferenceRss1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{213}
}

func (x *MaxNrofPucchPathlossReferenceRss1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:469
// {-}
type MaxNrofPucchPathlossReferenceRssr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofPucchPathlossReferenceRssr16) Reset() {
	*x = MaxNrofPucchPathlossReferenceRssr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchPathlossReferenceRssr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchPathlossReferenceRssr16) ProtoMessage() {}

func (x *MaxNrofPucchPathlossReferenceRssr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchPathlossReferenceRssr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchPathlossReferenceRssr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{214}
}

func (x *MaxNrofPucchPathlossReferenceRssr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:470
// {-}
type MaxNrofPucchPathlossReferenceRss1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofPucchPathlossReferenceRss1R16) Reset() {
	*x = MaxNrofPucchPathlossReferenceRss1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchPathlossReferenceRss1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchPathlossReferenceRss1R16) ProtoMessage() {}

func (x *MaxNrofPucchPathlossReferenceRss1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchPathlossReferenceRss1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchPathlossReferenceRss1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{215}
}

func (x *MaxNrofPucchPathlossReferenceRss1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:472
// {-}
type MaxNrofPucchPathlossReferenceRssDiffr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:60,valueUB:60,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:60,valueUB:60,"`
}

func (x *MaxNrofPucchPathlossReferenceRssDiffr16) Reset() {
	*x = MaxNrofPucchPathlossReferenceRssDiffr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchPathlossReferenceRssDiffr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchPathlossReferenceRssDiffr16) ProtoMessage() {}

func (x *MaxNrofPucchPathlossReferenceRssDiffr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchPathlossReferenceRssDiffr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchPathlossReferenceRssDiffr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{216}
}

func (x *MaxNrofPucchPathlossReferenceRssDiffr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:473
// {-}
type MaxNrofPucchResourceGroupsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofPucchResourceGroupsr16) Reset() {
	*x = MaxNrofPucchResourceGroupsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourceGroupsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourceGroupsr16) ProtoMessage() {}

func (x *MaxNrofPucchResourceGroupsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourceGroupsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourceGroupsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{217}
}

func (x *MaxNrofPucchResourceGroupsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:474
// {-}
type MaxNrofPucchResourcesPerGroupr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrofPucchResourcesPerGroupr16) Reset() {
	*x = MaxNrofPucchResourcesPerGroupr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourcesPerGroupr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourcesPerGroupr16) ProtoMessage() {}

func (x *MaxNrofPucchResourcesPerGroupr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourcesPerGroupr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourcesPerGroupr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{218}
}

func (x *MaxNrofPucchResourcesPerGroupr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:475
// {-}
type MaxNrofMultiplePuschsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofMultiplePuschsr16) Reset() {
	*x = MaxNrofMultiplePuschsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMultiplePuschsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMultiplePuschsr16) ProtoMessage() {}

func (x *MaxNrofMultiplePuschsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMultiplePuschsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofMultiplePuschsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{219}
}

func (x *MaxNrofMultiplePuschsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:476
// {-}
type MaxNrofP0PUschAlphaSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:30,valueUB:30,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:30,valueUB:30,"`
}

func (x *MaxNrofP0PUschAlphaSets) Reset() {
	*x = MaxNrofP0PUschAlphaSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofP0PUschAlphaSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofP0PUschAlphaSets) ProtoMessage() {}

func (x *MaxNrofP0PUschAlphaSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofP0PUschAlphaSets.ProtoReflect.Descriptor instead.
func (*MaxNrofP0PUschAlphaSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{220}
}

func (x *MaxNrofP0PUschAlphaSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:477
// {-}
type MaxNrofP0PUschAlphaSets1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:29,valueUB:29,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:29,valueUB:29,"`
}

func (x *MaxNrofP0PUschAlphaSets1) Reset() {
	*x = MaxNrofP0PUschAlphaSets1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofP0PUschAlphaSets1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofP0PUschAlphaSets1) ProtoMessage() {}

func (x *MaxNrofP0PUschAlphaSets1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofP0PUschAlphaSets1.ProtoReflect.Descriptor instead.
func (*MaxNrofP0PUschAlphaSets1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{221}
}

func (x *MaxNrofP0PUschAlphaSets1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:478
// {-}
type MaxNrofPuschPathlossReferenceRss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxNrofPuschPathlossReferenceRss) Reset() {
	*x = MaxNrofPuschPathlossReferenceRss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPuschPathlossReferenceRss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPuschPathlossReferenceRss) ProtoMessage() {}

func (x *MaxNrofPuschPathlossReferenceRss) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPuschPathlossReferenceRss.ProtoReflect.Descriptor instead.
func (*MaxNrofPuschPathlossReferenceRss) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{222}
}

func (x *MaxNrofPuschPathlossReferenceRss) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:479
// {-}
type MaxNrofPuschPathlossReferenceRss1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofPuschPathlossReferenceRss1) Reset() {
	*x = MaxNrofPuschPathlossReferenceRss1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPuschPathlossReferenceRss1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPuschPathlossReferenceRss1) ProtoMessage() {}

func (x *MaxNrofPuschPathlossReferenceRss1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPuschPathlossReferenceRss1.ProtoReflect.Descriptor instead.
func (*MaxNrofPuschPathlossReferenceRss1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{223}
}

func (x *MaxNrofPuschPathlossReferenceRss1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:480
// {-}
type MaxNrofPuschPathlossReferenceRssr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofPuschPathlossReferenceRssr16) Reset() {
	*x = MaxNrofPuschPathlossReferenceRssr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPuschPathlossReferenceRssr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPuschPathlossReferenceRssr16) ProtoMessage() {}

func (x *MaxNrofPuschPathlossReferenceRssr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPuschPathlossReferenceRssr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPuschPathlossReferenceRssr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{224}
}

func (x *MaxNrofPuschPathlossReferenceRssr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:481
// {-}
type MaxNrofPuschPathlossReferenceRss1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofPuschPathlossReferenceRss1R16) Reset() {
	*x = MaxNrofPuschPathlossReferenceRss1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPuschPathlossReferenceRss1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPuschPathlossReferenceRss1R16) ProtoMessage() {}

func (x *MaxNrofPuschPathlossReferenceRss1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPuschPathlossReferenceRss1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofPuschPathlossReferenceRss1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{225}
}

func (x *MaxNrofPuschPathlossReferenceRss1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:483
// {-}
type MaxNrofPuschPathlossReferenceRssDiffr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:60,valueUB:60,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:60,valueUB:60,"`
}

func (x *MaxNrofPuschPathlossReferenceRssDiffr16) Reset() {
	*x = MaxNrofPuschPathlossReferenceRssDiffr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPuschPathlossReferenceRssDiffr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPuschPathlossReferenceRssDiffr16) ProtoMessage() {}

func (x *MaxNrofPuschPathlossReferenceRssDiffr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPuschPathlossReferenceRssDiffr16.ProtoReflect.Descriptor instead.
func (*MaxNrofPuschPathlossReferenceRssDiffr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{226}
}

func (x *MaxNrofPuschPathlossReferenceRssDiffr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:485
// {-}
type MaxNrofNaicsEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofNaicsEntries) Reset() {
	*x = MaxNrofNaicsEntries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofNaicsEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofNaicsEntries) ProtoMessage() {}

func (x *MaxNrofNaicsEntries) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofNaicsEntries.ProtoReflect.Descriptor instead.
func (*MaxNrofNaicsEntries) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{227}
}

func (x *MaxNrofNaicsEntries) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:486
// {-}
type MaxBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxBands) Reset() {
	*x = MaxBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBands) ProtoMessage() {}

func (x *MaxBands) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBands.ProtoReflect.Descriptor instead.
func (*MaxBands) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{228}
}

func (x *MaxBands) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:487
// {-}
type MaxBandsMrdc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1280,valueUB:1280,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1280,valueUB:1280,"`
}

func (x *MaxBandsMrdc) Reset() {
	*x = MaxBandsMrdc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBandsMrdc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBandsMrdc) ProtoMessage() {}

func (x *MaxBandsMrdc) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBandsMrdc.ProtoReflect.Descriptor instead.
func (*MaxBandsMrdc) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{229}
}

func (x *MaxBandsMrdc) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:488
// {-}
type MaxBandsEutra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxBandsEutra) Reset() {
	*x = MaxBandsEutra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBandsEutra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBandsEutra) ProtoMessage() {}

func (x *MaxBandsEutra) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBandsEutra.ProtoReflect.Descriptor instead.
func (*MaxBandsEutra) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{230}
}

func (x *MaxBandsEutra) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:489
// {-}
type MaxCellReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxCellReport) Reset() {
	*x = MaxCellReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellReport) ProtoMessage() {}

func (x *MaxCellReport) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellReport.ProtoReflect.Descriptor instead.
func (*MaxCellReport) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{231}
}

func (x *MaxCellReport) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:490
// {-}
type MaxDrb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:29,valueUB:29,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:29,valueUB:29,"`
}

func (x *MaxDrb) Reset() {
	*x = MaxDrb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxDrb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxDrb) ProtoMessage() {}

func (x *MaxDrb) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxDrb.ProtoReflect.Descriptor instead.
func (*MaxDrb) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{232}
}

func (x *MaxDrb) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:491
// {-}
type MaxFreq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxFreq) Reset() {
	*x = MaxFreq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreq) ProtoMessage() {}

func (x *MaxFreq) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreq.ProtoReflect.Descriptor instead.
func (*MaxFreq) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{233}
}

func (x *MaxFreq) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:492
// {-}
type MaxFreqLayers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxFreqLayers) Reset() {
	*x = MaxFreqLayers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqLayers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqLayers) ProtoMessage() {}

func (x *MaxFreqLayers) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqLayers.ProtoReflect.Descriptor instead.
func (*MaxFreqLayers) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{234}
}

func (x *MaxFreqLayers) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:493
// {-}
type MaxFreqIdcr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxFreqIdcr16) Reset() {
	*x = MaxFreqIdcr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqIdcr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqIdcr16) ProtoMessage() {}

func (x *MaxFreqIdcr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqIdcr16.ProtoReflect.Descriptor instead.
func (*MaxFreqIdcr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{235}
}

func (x *MaxFreqIdcr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:494
// {-}
type MaxCombIdcr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxCombIdcr16) Reset() {
	*x = MaxCombIdcr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCombIdcr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCombIdcr16) ProtoMessage() {}

func (x *MaxCombIdcr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCombIdcr16.ProtoReflect.Descriptor instead.
func (*MaxCombIdcr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{236}
}

func (x *MaxCombIdcr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:495
// {-}
type MaxFreqIdcMRdc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxFreqIdcMRdc) Reset() {
	*x = MaxFreqIdcMRdc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFreqIdcMRdc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFreqIdcMRdc) ProtoMessage() {}

func (x *MaxFreqIdcMRdc) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFreqIdcMRdc.ProtoReflect.Descriptor instead.
func (*MaxFreqIdcMRdc) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{237}
}

func (x *MaxFreqIdcMRdc) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:496
// {-}
type MaxNrofCandidateBeams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCandidateBeams) Reset() {
	*x = MaxNrofCandidateBeams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCandidateBeams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCandidateBeams) ProtoMessage() {}

func (x *MaxNrofCandidateBeams) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCandidateBeams.ProtoReflect.Descriptor instead.
func (*MaxNrofCandidateBeams) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{238}
}

func (x *MaxNrofCandidateBeams) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:497
// {-}
type MaxNrofCandidateBeamsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofCandidateBeamsr16) Reset() {
	*x = MaxNrofCandidateBeamsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCandidateBeamsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCandidateBeamsr16) ProtoMessage() {}

func (x *MaxNrofCandidateBeamsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCandidateBeamsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCandidateBeamsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{239}
}

func (x *MaxNrofCandidateBeamsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:498
// {-}
type MaxNrofCandidateBeamsExtr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:48,valueUB:48,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:48,valueUB:48,"`
}

func (x *MaxNrofCandidateBeamsExtr16) Reset() {
	*x = MaxNrofCandidateBeamsExtr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCandidateBeamsExtr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCandidateBeamsExtr16) ProtoMessage() {}

func (x *MaxNrofCandidateBeamsExtr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCandidateBeamsExtr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCandidateBeamsExtr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{240}
}

func (x *MaxNrofCandidateBeamsExtr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:499
// {-}
type MaxNrofPcisPerSmtc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofPcisPerSmtc) Reset() {
	*x = MaxNrofPcisPerSmtc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPcisPerSmtc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPcisPerSmtc) ProtoMessage() {}

func (x *MaxNrofPcisPerSmtc) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPcisPerSmtc.ProtoReflect.Descriptor instead.
func (*MaxNrofPcisPerSmtc) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{241}
}

func (x *MaxNrofPcisPerSmtc) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:500
// {-}
type MaxNrofQfis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofQfis) Reset() {
	*x = MaxNrofQfis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofQfis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofQfis) ProtoMessage() {}

func (x *MaxNrofQfis) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofQfis.ProtoReflect.Descriptor instead.
func (*MaxNrofQfis) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{242}
}

func (x *MaxNrofQfis) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:501
// {-}
type MaxNrofResourceAvailabilityPerCombinationr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxNrofResourceAvailabilityPerCombinationr16) Reset() {
	*x = MaxNrofResourceAvailabilityPerCombinationr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofResourceAvailabilityPerCombinationr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofResourceAvailabilityPerCombinationr16) ProtoMessage() {}

func (x *MaxNrofResourceAvailabilityPerCombinationr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofResourceAvailabilityPerCombinationr16.ProtoReflect.Descriptor instead.
func (*MaxNrofResourceAvailabilityPerCombinationr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{243}
}

func (x *MaxNrofResourceAvailabilityPerCombinationr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:502
// {-}
type MaxNrOfSemiPersistentPuschTriggers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrOfSemiPersistentPuschTriggers) Reset() {
	*x = MaxNrOfSemiPersistentPuschTriggers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrOfSemiPersistentPuschTriggers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrOfSemiPersistentPuschTriggers) ProtoMessage() {}

func (x *MaxNrOfSemiPersistentPuschTriggers) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrOfSemiPersistentPuschTriggers.ProtoReflect.Descriptor instead.
func (*MaxNrOfSemiPersistentPuschTriggers) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{244}
}

func (x *MaxNrOfSemiPersistentPuschTriggers) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:503
// {-}
type MaxNrofSrResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSrResources) Reset() {
	*x = MaxNrofSrResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSrResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSrResources) ProtoMessage() {}

func (x *MaxNrofSrResources) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSrResources.ProtoReflect.Descriptor instead.
func (*MaxNrofSrResources) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{245}
}

func (x *MaxNrofSrResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:504
// {-}
type MaxNrofSlotFormatsPerCombination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxNrofSlotFormatsPerCombination) Reset() {
	*x = MaxNrofSlotFormatsPerCombination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSlotFormatsPerCombination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSlotFormatsPerCombination) ProtoMessage() {}

func (x *MaxNrofSlotFormatsPerCombination) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSlotFormatsPerCombination.ProtoReflect.Descriptor instead.
func (*MaxNrofSlotFormatsPerCombination) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{246}
}

func (x *MaxNrofSlotFormatsPerCombination) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:505
// {-}
type MaxNrofSpatialRelationInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSpatialRelationInfos) Reset() {
	*x = MaxNrofSpatialRelationInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpatialRelationInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpatialRelationInfos) ProtoMessage() {}

func (x *MaxNrofSpatialRelationInfos) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpatialRelationInfos.ProtoReflect.Descriptor instead.
func (*MaxNrofSpatialRelationInfos) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{247}
}

func (x *MaxNrofSpatialRelationInfos) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:506
// {-}
type MaxNrofSpatialRelationInfosplus1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:9,valueUB:9,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:9,valueUB:9,"`
}

func (x *MaxNrofSpatialRelationInfosplus1) Reset() {
	*x = MaxNrofSpatialRelationInfosplus1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpatialRelationInfosplus1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpatialRelationInfosplus1) ProtoMessage() {}

func (x *MaxNrofSpatialRelationInfosplus1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpatialRelationInfosplus1.ProtoReflect.Descriptor instead.
func (*MaxNrofSpatialRelationInfosplus1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{248}
}

func (x *MaxNrofSpatialRelationInfosplus1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:507
// {-}
type MaxNrofSpatialRelationInfosr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSpatialRelationInfosr16) Reset() {
	*x = MaxNrofSpatialRelationInfosr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpatialRelationInfosr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpatialRelationInfosr16) ProtoMessage() {}

func (x *MaxNrofSpatialRelationInfosr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpatialRelationInfosr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSpatialRelationInfosr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{249}
}

func (x *MaxNrofSpatialRelationInfosr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:508
// {-}
type MaxNrofSpatialRelationInfosDiffr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:56,valueUB:56,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:56,valueUB:56,"`
}

func (x *MaxNrofSpatialRelationInfosDiffr16) Reset() {
	*x = MaxNrofSpatialRelationInfosDiffr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpatialRelationInfosDiffr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpatialRelationInfosDiffr16) ProtoMessage() {}

func (x *MaxNrofSpatialRelationInfosDiffr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpatialRelationInfosDiffr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSpatialRelationInfosDiffr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{250}
}

func (x *MaxNrofSpatialRelationInfosDiffr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:509
// {-}
type MaxNrofIndexesToReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofIndexesToReport) Reset() {
	*x = MaxNrofIndexesToReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofIndexesToReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofIndexesToReport) ProtoMessage() {}

func (x *MaxNrofIndexesToReport) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofIndexesToReport.ProtoReflect.Descriptor instead.
func (*MaxNrofIndexesToReport) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{251}
}

func (x *MaxNrofIndexesToReport) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:510
// {-}
type MaxNrofIndexesToReport2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofIndexesToReport2) Reset() {
	*x = MaxNrofIndexesToReport2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofIndexesToReport2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofIndexesToReport2) ProtoMessage() {}

func (x *MaxNrofIndexesToReport2) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofIndexesToReport2.ProtoReflect.Descriptor instead.
func (*MaxNrofIndexesToReport2) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{252}
}

func (x *MaxNrofIndexesToReport2) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:511
// {-}
type MaxNrofSsbsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofSsbsr16) Reset() {
	*x = MaxNrofSsbsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSsbsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSsbsr16) ProtoMessage() {}

func (x *MaxNrofSsbsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSsbsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSsbsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{253}
}

func (x *MaxNrofSsbsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:512
// {-}
type MaxNrofSsbs1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofSsbs1) Reset() {
	*x = MaxNrofSsbs1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSsbs1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSsbs1) ProtoMessage() {}

func (x *MaxNrofSsbs1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSsbs1.ProtoReflect.Descriptor instead.
func (*MaxNrofSsbs1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{254}
}

func (x *MaxNrofSsbs1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:513
// {-}
type MaxNrofSNSsai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSNSsai) Reset() {
	*x = MaxNrofSNSsai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSNSsai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSNSsai) ProtoMessage() {}

func (x *MaxNrofSNSsai) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSNSsai.ProtoReflect.Descriptor instead.
func (*MaxNrofSNSsai) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{255}
}

func (x *MaxNrofSNSsai) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:514
// {-}
type MaxNrofTciStatesPdcch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofTciStatesPdcch) Reset() {
	*x = MaxNrofTciStatesPdcch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTciStatesPdcch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTciStatesPdcch) ProtoMessage() {}

func (x *MaxNrofTciStatesPdcch) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTciStatesPdcch.ProtoReflect.Descriptor instead.
func (*MaxNrofTciStatesPdcch) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{256}
}

func (x *MaxNrofTciStatesPdcch) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:515
// {-}
type MaxNrofTciStates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxNrofTciStates) Reset() {
	*x = MaxNrofTciStates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTciStates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTciStates) ProtoMessage() {}

func (x *MaxNrofTciStates) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTciStates.ProtoReflect.Descriptor instead.
func (*MaxNrofTciStates) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{257}
}

func (x *MaxNrofTciStates) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:516
// {-}
type MaxNrofTciStates1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:127,valueUB:127,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:127,valueUB:127,"`
}

func (x *MaxNrofTciStates1) Reset() {
	*x = MaxNrofTciStates1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTciStates1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTciStates1) ProtoMessage() {}

func (x *MaxNrofTciStates1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTciStates1.ProtoReflect.Descriptor instead.
func (*MaxNrofTciStates1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{258}
}

func (x *MaxNrofTciStates1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:517
// {-}
type MaxNrofUlAllocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofUlAllocations) Reset() {
	*x = MaxNrofUlAllocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofUlAllocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofUlAllocations) ProtoMessage() {}

func (x *MaxNrofUlAllocations) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofUlAllocations.ProtoReflect.Descriptor instead.
func (*MaxNrofUlAllocations) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{259}
}

func (x *MaxNrofUlAllocations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:518
// {-}
type MaxQfi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxQfi) Reset() {
	*x = MaxQfi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxQfi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxQfi) ProtoMessage() {}

func (x *MaxQfi) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxQfi.ProtoReflect.Descriptor instead.
func (*MaxQfi) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{260}
}

func (x *MaxQfi) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:519
// {-}
type MaxRaCSirsResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:96,valueUB:96,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:96,valueUB:96,"`
}

func (x *MaxRaCSirsResources) Reset() {
	*x = MaxRaCSirsResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRaCSirsResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRaCSirsResources) ProtoMessage() {}

func (x *MaxRaCSirsResources) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRaCSirsResources.ProtoReflect.Descriptor instead.
func (*MaxRaCSirsResources) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{261}
}

func (x *MaxRaCSirsResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:520
// {-}
type MaxRaOccasionsPerCsirs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxRaOccasionsPerCsirs) Reset() {
	*x = MaxRaOccasionsPerCsirs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRaOccasionsPerCsirs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRaOccasionsPerCsirs) ProtoMessage() {}

func (x *MaxRaOccasionsPerCsirs) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRaOccasionsPerCsirs.ProtoReflect.Descriptor instead.
func (*MaxRaOccasionsPerCsirs) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{262}
}

func (x *MaxRaOccasionsPerCsirs) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:521
// {-}
type MaxRaOccasions1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:511,valueUB:511,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:511,valueUB:511,"`
}

func (x *MaxRaOccasions1) Reset() {
	*x = MaxRaOccasions1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRaOccasions1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRaOccasions1) ProtoMessage() {}

func (x *MaxRaOccasions1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRaOccasions1.ProtoReflect.Descriptor instead.
func (*MaxRaOccasions1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{263}
}

func (x *MaxRaOccasions1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:522
// {-}
type MaxRaSSbResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxRaSSbResources) Reset() {
	*x = MaxRaSSbResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRaSSbResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRaSSbResources) ProtoMessage() {}

func (x *MaxRaSSbResources) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRaSSbResources.ProtoReflect.Descriptor instead.
func (*MaxRaSSbResources) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{264}
}

func (x *MaxRaSSbResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:523
// {-}
type MaxScss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:5,valueUB:5,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:5,valueUB:5,"`
}

func (x *MaxScss) Reset() {
	*x = MaxScss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxScss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxScss) ProtoMessage() {}

func (x *MaxScss) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxScss.ProtoReflect.Descriptor instead.
func (*MaxScss) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{265}
}

func (x *MaxScss) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:524
// {-}
type MaxSecondaryCellGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxSecondaryCellGroups) Reset() {
	*x = MaxSecondaryCellGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSecondaryCellGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSecondaryCellGroups) ProtoMessage() {}

func (x *MaxSecondaryCellGroups) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSecondaryCellGroups.ProtoReflect.Descriptor instead.
func (*MaxSecondaryCellGroups) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{266}
}

func (x *MaxSecondaryCellGroups) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:525
// {-}
type MaxNrofServingCellsEutra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofServingCellsEutra) Reset() {
	*x = MaxNrofServingCellsEutra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofServingCellsEutra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofServingCellsEutra) ProtoMessage() {}

func (x *MaxNrofServingCellsEutra) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofServingCellsEutra.ProtoReflect.Descriptor instead.
func (*MaxNrofServingCellsEutra) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{267}
}

func (x *MaxNrofServingCellsEutra) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:526
// {-}
type MaxMbsfnAllocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxMbsfnAllocations) Reset() {
	*x = MaxMbsfnAllocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxMbsfnAllocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxMbsfnAllocations) ProtoMessage() {}

func (x *MaxMbsfnAllocations) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxMbsfnAllocations.ProtoReflect.Descriptor instead.
func (*MaxMbsfnAllocations) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{268}
}

func (x *MaxMbsfnAllocations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:527
// {-}
type MaxNrofMultiBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofMultiBands) Reset() {
	*x = MaxNrofMultiBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofMultiBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofMultiBands) ProtoMessage() {}

func (x *MaxNrofMultiBands) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofMultiBands.ProtoReflect.Descriptor instead.
func (*MaxNrofMultiBands) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{269}
}

func (x *MaxNrofMultiBands) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:528
// {-}
type MaxCellSftd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxCellSftd) Reset() {
	*x = MaxCellSftd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellSftd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellSftd) ProtoMessage() {}

func (x *MaxCellSftd) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellSftd.ProtoReflect.Descriptor instead.
func (*MaxCellSftd) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{270}
}

func (x *MaxCellSftd) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:529
// {-}
type MaxReportConfigId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxReportConfigId) Reset() {
	*x = MaxReportConfigId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxReportConfigId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxReportConfigId) ProtoMessage() {}

func (x *MaxReportConfigId) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxReportConfigId.ProtoReflect.Descriptor instead.
func (*MaxReportConfigId) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{271}
}

func (x *MaxReportConfigId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:530
// {-}
type MaxNrofCodebooks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCodebooks) Reset() {
	*x = MaxNrofCodebooks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCodebooks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCodebooks) ProtoMessage() {}

func (x *MaxNrofCodebooks) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCodebooks.ProtoReflect.Descriptor instead.
func (*MaxNrofCodebooks) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{272}
}

func (x *MaxNrofCodebooks) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:531
// {-}
type MaxNrofCsiRSResourcesExtr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCsiRSResourcesExtr16) Reset() {
	*x = MaxNrofCsiRSResourcesExtr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesExtr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesExtr16) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesExtr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesExtr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesExtr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{273}
}

func (x *MaxNrofCsiRSResourcesExtr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:532
// {-}
type MaxNrofCsiRSResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofCsiRSResources) Reset() {
	*x = MaxNrofCsiRSResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResources) ProtoMessage() {}

func (x *MaxNrofCsiRSResources) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResources.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResources) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{274}
}

func (x *MaxNrofCsiRSResources) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:533
// {-}
type MaxNrofCsiRSResourcesAltr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:512,valueUB:512,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:512,valueUB:512,"`
}

func (x *MaxNrofCsiRSResourcesAltr16) Reset() {
	*x = MaxNrofCsiRSResourcesAltr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesAltr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesAltr16) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesAltr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesAltr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesAltr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{275}
}

func (x *MaxNrofCsiRSResourcesAltr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:534
// {-}
type MaxNrofCsiRSResourcesAlt1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:511,valueUB:511,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:511,valueUB:511,"`
}

func (x *MaxNrofCsiRSResourcesAlt1R16) Reset() {
	*x = MaxNrofCsiRSResourcesAlt1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCsiRSResourcesAlt1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCsiRSResourcesAlt1R16) ProtoMessage() {}

func (x *MaxNrofCsiRSResourcesAlt1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCsiRSResourcesAlt1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofCsiRSResourcesAlt1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{276}
}

func (x *MaxNrofCsiRSResourcesAlt1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:535
// {-}
type MaxNrofSriPUschMappings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSriPUschMappings) Reset() {
	*x = MaxNrofSriPUschMappings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSriPUschMappings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSriPUschMappings) ProtoMessage() {}

func (x *MaxNrofSriPUschMappings) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSriPUschMappings.ProtoReflect.Descriptor instead.
func (*MaxNrofSriPUschMappings) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{277}
}

func (x *MaxNrofSriPUschMappings) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:536
// {-}
type MaxNrofSriPUschMappings1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:15,valueUB:15,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:15,valueUB:15,"`
}

func (x *MaxNrofSriPUschMappings1) Reset() {
	*x = MaxNrofSriPUschMappings1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSriPUschMappings1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSriPUschMappings1) ProtoMessage() {}

func (x *MaxNrofSriPUschMappings1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSriPUschMappings1.ProtoReflect.Descriptor instead.
func (*MaxNrofSriPUschMappings1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{278}
}

func (x *MaxNrofSriPUschMappings1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:537
// {-}
type MaxSib struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxSib) Reset() {
	*x = MaxSib{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSib) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSib) ProtoMessage() {}

func (x *MaxSib) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSib.ProtoReflect.Descriptor instead.
func (*MaxSib) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{279}
}

func (x *MaxSib) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:538
// {-}
type MaxSiMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxSiMessage) Reset() {
	*x = MaxSiMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSiMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSiMessage) ProtoMessage() {}

func (x *MaxSiMessage) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSiMessage.ProtoReflect.Descriptor instead.
func (*MaxSiMessage) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{280}
}

func (x *MaxSiMessage) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:539
// {-}
type MaxPoperPf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxPoperPf) Reset() {
	*x = MaxPoperPf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPoperPf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPoperPf) ProtoMessage() {}

func (x *MaxPoperPf) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPoperPf.ProtoReflect.Descriptor instead.
func (*MaxPoperPf) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{281}
}

func (x *MaxPoperPf) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:540
// {-}
type MaxAccessCat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxAccessCat1) Reset() {
	*x = MaxAccessCat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxAccessCat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxAccessCat1) ProtoMessage() {}

func (x *MaxAccessCat1) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxAccessCat1.ProtoReflect.Descriptor instead.
func (*MaxAccessCat1) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{282}
}

func (x *MaxAccessCat1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:541
// {-}
type MaxBarringInfoSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxBarringInfoSet) Reset() {
	*x = MaxBarringInfoSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBarringInfoSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBarringInfoSet) ProtoMessage() {}

func (x *MaxBarringInfoSet) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBarringInfoSet.ProtoReflect.Descriptor instead.
func (*MaxBarringInfoSet) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{283}
}

func (x *MaxBarringInfoSet) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:542
// {-}
type MaxCellEutra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxCellEutra) Reset() {
	*x = MaxCellEutra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCellEutra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCellEutra) ProtoMessage() {}

func (x *MaxCellEutra) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCellEutra.ProtoReflect.Descriptor instead.
func (*MaxCellEutra) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{284}
}

func (x *MaxCellEutra) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:543
// {-}
type MaxEutraCarrier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxEutraCarrier) Reset() {
	*x = MaxEutraCarrier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEutraCarrier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEutraCarrier) ProtoMessage() {}

func (x *MaxEutraCarrier) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEutraCarrier.ProtoReflect.Descriptor instead.
func (*MaxEutraCarrier) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{285}
}

func (x *MaxEutraCarrier) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:544
// {-}
type MaxPlmnidentities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxPlmnidentities) Reset() {
	*x = MaxPlmnidentities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPlmnidentities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPlmnidentities) ProtoMessage() {}

func (x *MaxPlmnidentities) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPlmnidentities.ProtoReflect.Descriptor instead.
func (*MaxPlmnidentities) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{286}
}

func (x *MaxPlmnidentities) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:545
// {-}
type MaxDownlinkFeatureSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxDownlinkFeatureSets) Reset() {
	*x = MaxDownlinkFeatureSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxDownlinkFeatureSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxDownlinkFeatureSets) ProtoMessage() {}

func (x *MaxDownlinkFeatureSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxDownlinkFeatureSets.ProtoReflect.Descriptor instead.
func (*MaxDownlinkFeatureSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{287}
}

func (x *MaxDownlinkFeatureSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:546
// {-}
type MaxUplinkFeatureSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxUplinkFeatureSets) Reset() {
	*x = MaxUplinkFeatureSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxUplinkFeatureSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxUplinkFeatureSets) ProtoMessage() {}

func (x *MaxUplinkFeatureSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxUplinkFeatureSets.ProtoReflect.Descriptor instead.
func (*MaxUplinkFeatureSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{288}
}

func (x *MaxUplinkFeatureSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:547
// {-}
type MaxEutraDLFeatureSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxEutraDLFeatureSets) Reset() {
	*x = MaxEutraDLFeatureSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEutraDLFeatureSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEutraDLFeatureSets) ProtoMessage() {}

func (x *MaxEutraDLFeatureSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEutraDLFeatureSets.ProtoReflect.Descriptor instead.
func (*MaxEutraDLFeatureSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{289}
}

func (x *MaxEutraDLFeatureSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:548
// {-}
type MaxEutraULFeatureSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxEutraULFeatureSets) Reset() {
	*x = MaxEutraULFeatureSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEutraULFeatureSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEutraULFeatureSets) ProtoMessage() {}

func (x *MaxEutraULFeatureSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEutraULFeatureSets.ProtoReflect.Descriptor instead.
func (*MaxEutraULFeatureSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{290}
}

func (x *MaxEutraULFeatureSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:549
// {-}
type MaxFeatureSetsPerBand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:128,valueUB:128,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:128,valueUB:128,"`
}

func (x *MaxFeatureSetsPerBand) Reset() {
	*x = MaxFeatureSetsPerBand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFeatureSetsPerBand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFeatureSetsPerBand) ProtoMessage() {}

func (x *MaxFeatureSetsPerBand) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFeatureSetsPerBand.ProtoReflect.Descriptor instead.
func (*MaxFeatureSetsPerBand) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{291}
}

func (x *MaxFeatureSetsPerBand) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:550
// {-}
type MaxPerCcFeatureSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxPerCcFeatureSets) Reset() {
	*x = MaxPerCcFeatureSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPerCcFeatureSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPerCcFeatureSets) ProtoMessage() {}

func (x *MaxPerCcFeatureSets) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPerCcFeatureSets.ProtoReflect.Descriptor instead.
func (*MaxPerCcFeatureSets) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{292}
}

func (x *MaxPerCcFeatureSets) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:551
// {-}
type MaxFeatureSetCombinations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxFeatureSetCombinations) Reset() {
	*x = MaxFeatureSetCombinations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[293]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxFeatureSetCombinations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxFeatureSetCombinations) ProtoMessage() {}

func (x *MaxFeatureSetCombinations) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[293]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxFeatureSetCombinations.ProtoReflect.Descriptor instead.
func (*MaxFeatureSetCombinations) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{293}
}

func (x *MaxFeatureSetCombinations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:552
// {-}
type MaxInterRatRStdFreq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxInterRatRStdFreq) Reset() {
	*x = MaxInterRatRStdFreq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[294]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxInterRatRStdFreq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxInterRatRStdFreq) ProtoMessage() {}

func (x *MaxInterRatRStdFreq) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[294]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxInterRatRStdFreq.ProtoReflect.Descriptor instead.
func (*MaxInterRatRStdFreq) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{294}
}

func (x *MaxInterRatRStdFreq) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:553
// {-}
type MaxHrnnLenr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:48,valueUB:48,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:48,valueUB:48,"`
}

func (x *MaxHrnnLenr16) Reset() {
	*x = MaxHrnnLenr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[295]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxHrnnLenr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxHrnnLenr16) ProtoMessage() {}

func (x *MaxHrnnLenr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[295]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxHrnnLenr16.ProtoReflect.Descriptor instead.
func (*MaxHrnnLenr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{295}
}

func (x *MaxHrnnLenr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:554
// {-}
type MaxNpnr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:12,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:12,"`
}

func (x *MaxNpnr16) Reset() {
	*x = MaxNpnr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[296]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNpnr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNpnr16) ProtoMessage() {}

func (x *MaxNpnr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[296]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNpnr16.ProtoReflect.Descriptor instead.
func (*MaxNpnr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{296}
}

func (x *MaxNpnr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:555
// {-}
type MaxNrOfMinSchedulingOffsetValuesr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrOfMinSchedulingOffsetValuesr16) Reset() {
	*x = MaxNrOfMinSchedulingOffsetValuesr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[297]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrOfMinSchedulingOffsetValuesr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrOfMinSchedulingOffsetValuesr16) ProtoMessage() {}

func (x *MaxNrOfMinSchedulingOffsetValuesr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[297]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrOfMinSchedulingOffsetValuesr16.ProtoReflect.Descriptor instead.
func (*MaxNrOfMinSchedulingOffsetValuesr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{297}
}

func (x *MaxNrOfMinSchedulingOffsetValuesr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:556
// {-}
type MaxK0SchedulingOffsetr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxK0SchedulingOffsetr16) Reset() {
	*x = MaxK0SchedulingOffsetr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[298]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxK0SchedulingOffsetr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxK0SchedulingOffsetr16) ProtoMessage() {}

func (x *MaxK0SchedulingOffsetr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[298]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxK0SchedulingOffsetr16.ProtoReflect.Descriptor instead.
func (*MaxK0SchedulingOffsetr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{298}
}

func (x *MaxK0SchedulingOffsetr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:557
// {-}
type MaxK2SchedulingOffsetr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxK2SchedulingOffsetr16) Reset() {
	*x = MaxK2SchedulingOffsetr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[299]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxK2SchedulingOffsetr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxK2SchedulingOffsetr16) ProtoMessage() {}

func (x *MaxK2SchedulingOffsetr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[299]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxK2SchedulingOffsetr16.ProtoReflect.Descriptor instead.
func (*MaxK2SchedulingOffsetr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{299}
}

func (x *MaxK2SchedulingOffsetr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:558
// {-}
type MaxDci26Sizer16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:140,valueUB:140,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:140,valueUB:140,"`
}

func (x *MaxDci26Sizer16) Reset() {
	*x = MaxDci26Sizer16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[300]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxDci26Sizer16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxDci26Sizer16) ProtoMessage() {}

func (x *MaxDci26Sizer16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[300]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxDci26Sizer16.ProtoReflect.Descriptor instead.
func (*MaxDci26Sizer16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{300}
}

func (x *MaxDci26Sizer16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:559
// {-}
type MaxDci26Size1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:139,valueUB:139,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:139,valueUB:139,"`
}

func (x *MaxDci26Size1R16) Reset() {
	*x = MaxDci26Size1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[301]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxDci26Size1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxDci26Size1R16) ProtoMessage() {}

func (x *MaxDci26Size1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[301]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxDci26Size1R16.ProtoReflect.Descriptor instead.
func (*MaxDci26Size1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{301}
}

func (x *MaxDci26Size1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:560
// {-}
type MaxNrofUlAllocationsr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofUlAllocationsr16) Reset() {
	*x = MaxNrofUlAllocationsr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[302]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofUlAllocationsr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofUlAllocationsr16) ProtoMessage() {}

func (x *MaxNrofUlAllocationsr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[302]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofUlAllocationsr16.ProtoReflect.Descriptor instead.
func (*MaxNrofUlAllocationsr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{302}
}

func (x *MaxNrofUlAllocationsr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:561
// {-}
type MaxNrofP0PUschSetr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:2,valueUB:2,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:2,valueUB:2,"`
}

func (x *MaxNrofP0PUschSetr16) Reset() {
	*x = MaxNrofP0PUschSetr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[303]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofP0PUschSetr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofP0PUschSetr16) ProtoMessage() {}

func (x *MaxNrofP0PUschSetr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[303]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofP0PUschSetr16.ProtoReflect.Descriptor instead.
func (*MaxNrofP0PUschSetr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{303}
}

func (x *MaxNrofP0PUschSetr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:562
// {-}
type MaxOnDemandSibr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxOnDemandSibr16) Reset() {
	*x = MaxOnDemandSibr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[304]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxOnDemandSibr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxOnDemandSibr16) ProtoMessage() {}

func (x *MaxOnDemandSibr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[304]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxOnDemandSibr16.ProtoReflect.Descriptor instead.
func (*MaxOnDemandSibr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{304}
}

func (x *MaxOnDemandSibr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:563
// {-}
type MaxOnDemandPosSibr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxOnDemandPosSibr16) Reset() {
	*x = MaxOnDemandPosSibr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[305]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxOnDemandPosSibr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxOnDemandPosSibr16) ProtoMessage() {}

func (x *MaxOnDemandPosSibr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[305]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxOnDemandPosSibr16.ProtoReflect.Descriptor instead.
func (*MaxOnDemandPosSibr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{305}
}

func (x *MaxOnDemandPosSibr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:564
// {-}
type MaxCiDCiPayloadSizer16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:126,valueUB:126,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:126,valueUB:126,"`
}

func (x *MaxCiDCiPayloadSizer16) Reset() {
	*x = MaxCiDCiPayloadSizer16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[306]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCiDCiPayloadSizer16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCiDCiPayloadSizer16) ProtoMessage() {}

func (x *MaxCiDCiPayloadSizer16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[306]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCiDCiPayloadSizer16.ProtoReflect.Descriptor instead.
func (*MaxCiDCiPayloadSizer16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{306}
}

func (x *MaxCiDCiPayloadSizer16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:565
// {-}
type MaxCiDCiPayloadSize1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:125,valueUB:125,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:125,valueUB:125,"`
}

func (x *MaxCiDCiPayloadSize1R16) Reset() {
	*x = MaxCiDCiPayloadSize1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[307]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCiDCiPayloadSize1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCiDCiPayloadSize1R16) ProtoMessage() {}

func (x *MaxCiDCiPayloadSize1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[307]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCiDCiPayloadSize1R16.ProtoReflect.Descriptor instead.
func (*MaxCiDCiPayloadSize1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{307}
}

func (x *MaxCiDCiPayloadSize1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:566
// {-}
type MaxWlanIdReportr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxWlanIdReportr16) Reset() {
	*x = MaxWlanIdReportr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[308]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxWlanIdReportr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxWlanIdReportr16) ProtoMessage() {}

func (x *MaxWlanIdReportr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[308]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxWlanIdReportr16.ProtoReflect.Descriptor instead.
func (*MaxWlanIdReportr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{308}
}

func (x *MaxWlanIdReportr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:567
// {-}
type MaxWlanNamer16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxWlanNamer16) Reset() {
	*x = MaxWlanNamer16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[309]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxWlanNamer16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxWlanNamer16) ProtoMessage() {}

func (x *MaxWlanNamer16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[309]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxWlanNamer16.ProtoReflect.Descriptor instead.
func (*MaxWlanNamer16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{309}
}

func (x *MaxWlanNamer16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:568
// {-}
type MaxRareportr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxRareportr16) Reset() {
	*x = MaxRareportr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[310]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxRareportr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxRareportr16) ProtoMessage() {}

func (x *MaxRareportr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[310]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxRareportr16.ProtoReflect.Descriptor instead.
func (*MaxRareportr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{310}
}

func (x *MaxRareportr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:569
// {-}
type MaxTxConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxTxConfigr16) Reset() {
	*x = MaxTxConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[311]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxTxConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxTxConfigr16) ProtoMessage() {}

func (x *MaxTxConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[311]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxTxConfigr16.ProtoReflect.Descriptor instead.
func (*MaxTxConfigr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{311}
}

func (x *MaxTxConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:570
// {-}
type MaxTxConfig1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxTxConfig1R16) Reset() {
	*x = MaxTxConfig1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[312]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxTxConfig1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxTxConfig1R16) ProtoMessage() {}

func (x *MaxTxConfig1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[312]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxTxConfig1R16.ProtoReflect.Descriptor instead.
func (*MaxTxConfig1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{312}
}

func (x *MaxTxConfig1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:571
// {-}
type MaxPsschTxConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxPsschTxConfigr16) Reset() {
	*x = MaxPsschTxConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[313]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxPsschTxConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxPsschTxConfigr16) ProtoMessage() {}

func (x *MaxPsschTxConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[313]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxPsschTxConfigr16.ProtoReflect.Descriptor instead.
func (*MaxPsschTxConfigr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{313}
}

func (x *MaxPsschTxConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:572
// {-}
type MaxNrofCliRSsiResourcesr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofCliRSsiResourcesr16) Reset() {
	*x = MaxNrofCliRSsiResourcesr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[314]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCliRSsiResourcesr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCliRSsiResourcesr16) ProtoMessage() {}

func (x *MaxNrofCliRSsiResourcesr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[314]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCliRSsiResourcesr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCliRSsiResourcesr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{314}
}

func (x *MaxNrofCliRSsiResourcesr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:573
// {-}
type MaxNrofCliRSsiResources1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxNrofCliRSsiResources1R16) Reset() {
	*x = MaxNrofCliRSsiResources1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[315]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCliRSsiResources1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCliRSsiResources1R16) ProtoMessage() {}

func (x *MaxNrofCliRSsiResources1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[315]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCliRSsiResources1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofCliRSsiResources1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{315}
}

func (x *MaxNrofCliRSsiResources1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:574
// {-}
type MaxNrofCliSRsResourcesr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofCliSRsResourcesr16) Reset() {
	*x = MaxNrofCliSRsResourcesr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[316]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCliSRsResourcesr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCliSRsResourcesr16) ProtoMessage() {}

func (x *MaxNrofCliSRsResourcesr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[316]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCliSRsResourcesr16.ProtoReflect.Descriptor instead.
func (*MaxNrofCliSRsResourcesr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{316}
}

func (x *MaxNrofCliSRsResourcesr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:575
// {-}
type MaxCliReportr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxCliReportr16) Reset() {
	*x = MaxCliReportr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[317]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxCliReportr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxCliReportr16) ProtoMessage() {}

func (x *MaxCliReportr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[317]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxCliReportr16.ProtoReflect.Descriptor instead.
func (*MaxCliReportr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{317}
}

func (x *MaxCliReportr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:576
// {-}
type MaxNrofConfiguredGrantConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:12,valueUB:12,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:12,valueUB:12,"`
}

func (x *MaxNrofConfiguredGrantConfigr16) Reset() {
	*x = MaxNrofConfiguredGrantConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[318]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofConfiguredGrantConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofConfiguredGrantConfigr16) ProtoMessage() {}

func (x *MaxNrofConfiguredGrantConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[318]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofConfiguredGrantConfigr16.ProtoReflect.Descriptor instead.
func (*MaxNrofConfiguredGrantConfigr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{318}
}

func (x *MaxNrofConfiguredGrantConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:577
// {-}
type MaxNrofConfiguredGrantConfig1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:11,valueUB:11,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:11,valueUB:11,"`
}

func (x *MaxNrofConfiguredGrantConfig1R16) Reset() {
	*x = MaxNrofConfiguredGrantConfig1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[319]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofConfiguredGrantConfig1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofConfiguredGrantConfig1R16) ProtoMessage() {}

func (x *MaxNrofConfiguredGrantConfig1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[319]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofConfiguredGrantConfig1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofConfiguredGrantConfig1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{319}
}

func (x *MaxNrofConfiguredGrantConfig1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:578
// {-}
type MaxNrofCgType2DeactivationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofCgType2DeactivationState) Reset() {
	*x = MaxNrofCgType2DeactivationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[320]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofCgType2DeactivationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofCgType2DeactivationState) ProtoMessage() {}

func (x *MaxNrofCgType2DeactivationState) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[320]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofCgType2DeactivationState.ProtoReflect.Descriptor instead.
func (*MaxNrofCgType2DeactivationState) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{320}
}

func (x *MaxNrofCgType2DeactivationState) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:579
// {-}
type MaxNrofConfiguredGrantConfigMac1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:31,valueUB:31,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:31,valueUB:31,"`
}

func (x *MaxNrofConfiguredGrantConfigMac1R16) Reset() {
	*x = MaxNrofConfiguredGrantConfigMac1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[321]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofConfiguredGrantConfigMac1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofConfiguredGrantConfigMac1R16) ProtoMessage() {}

func (x *MaxNrofConfiguredGrantConfigMac1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[321]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofConfiguredGrantConfigMac1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofConfiguredGrantConfigMac1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{321}
}

func (x *MaxNrofConfiguredGrantConfigMac1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:580
// {-}
type MaxNrofSpsConfigr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:8,valueUB:8,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:8,valueUB:8,"`
}

func (x *MaxNrofSpsConfigr16) Reset() {
	*x = MaxNrofSpsConfigr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[322]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpsConfigr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpsConfigr16) ProtoMessage() {}

func (x *MaxNrofSpsConfigr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[322]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpsConfigr16.ProtoReflect.Descriptor instead.
func (*MaxNrofSpsConfigr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{322}
}

func (x *MaxNrofSpsConfigr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:581
// {-}
type MaxNrofSpsConfig1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofSpsConfig1R16) Reset() {
	*x = MaxNrofSpsConfig1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[323]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpsConfig1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpsConfig1R16) ProtoMessage() {}

func (x *MaxNrofSpsConfig1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[323]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpsConfig1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofSpsConfig1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{323}
}

func (x *MaxNrofSpsConfig1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:582
// {-}
type MaxNrofSpsDeactivationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:16,valueUB:16,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:16,valueUB:16,"`
}

func (x *MaxNrofSpsDeactivationState) Reset() {
	*x = MaxNrofSpsDeactivationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[324]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofSpsDeactivationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofSpsDeactivationState) ProtoMessage() {}

func (x *MaxNrofSpsDeactivationState) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[324]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofSpsDeactivationState.ProtoReflect.Descriptor instead.
func (*MaxNrofSpsDeactivationState) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{324}
}

func (x *MaxNrofSpsDeactivationState) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:583
// {-}
type MaxNrofDormancyGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:5,valueUB:5,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:5,valueUB:5,"`
}

func (x *MaxNrofDormancyGroups) Reset() {
	*x = MaxNrofDormancyGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[325]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofDormancyGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofDormancyGroups) ProtoMessage() {}

func (x *MaxNrofDormancyGroups) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[325]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofDormancyGroups.ProtoReflect.Descriptor instead.
func (*MaxNrofDormancyGroups) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{325}
}

func (x *MaxNrofDormancyGroups) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:584
// {-}
type MaxNrofPucchResourceGroups1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3,valueUB:3,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3,valueUB:3,"`
}

func (x *MaxNrofPucchResourceGroups1R16) Reset() {
	*x = MaxNrofPucchResourceGroups1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[326]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPucchResourceGroups1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPucchResourceGroups1R16) ProtoMessage() {}

func (x *MaxNrofPucchResourceGroups1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[326]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPucchResourceGroups1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofPucchResourceGroups1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{326}
}

func (x *MaxNrofPucchResourceGroups1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:585
// {-}
type MaxNrofServingCellsTcir16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxNrofServingCellsTcir16) Reset() {
	*x = MaxNrofServingCellsTcir16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[327]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofServingCellsTcir16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofServingCellsTcir16) ProtoMessage() {}

func (x *MaxNrofServingCellsTcir16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[327]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofServingCellsTcir16.ProtoReflect.Descriptor instead.
func (*MaxNrofServingCellsTcir16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{327}
}

func (x *MaxNrofServingCellsTcir16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:586
// {-}
type MaxNrofTxDcTwoCarrierr16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:64,valueUB:64,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:64,valueUB:64,"`
}

func (x *MaxNrofTxDcTwoCarrierr16) Reset() {
	*x = MaxNrofTxDcTwoCarrierr16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[328]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofTxDcTwoCarrierr16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofTxDcTwoCarrierr16) ProtoMessage() {}

func (x *MaxNrofTxDcTwoCarrierr16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[328]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofTxDcTwoCarrierr16.ProtoReflect.Descriptor instead.
func (*MaxNrofTxDcTwoCarrierr16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{328}
}

func (x *MaxNrofTxDcTwoCarrierr16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from CSI-ReportConfig.asn1:587
// {-}
type MaxNrofPdcchBlindDetectionMixed1R16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:7,valueUB:7,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:7,valueUB:7,"`
}

func (x *MaxNrofPdcchBlindDetectionMixed1R16) Reset() {
	*x = MaxNrofPdcchBlindDetectionMixed1R16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CSI_ReportConfig_proto_msgTypes[329]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPdcchBlindDetectionMixed1R16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPdcchBlindDetectionMixed1R16) ProtoMessage() {}

func (x *MaxNrofPdcchBlindDetectionMixed1R16) ProtoReflect() protoreflect.Message {
	mi := &file_CSI_ReportConfig_proto_msgTypes[329]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPdcchBlindDetectionMixed1R16.ProtoReflect.Descriptor instead.
func (*MaxNrofPdcchBlindDetectionMixed1R16) Descriptor() ([]byte, []int) {
	return file_CSI_ReportConfig_proto_rawDescGZIP(), []int{329}
}

func (x *MaxNrofPdcchBlindDetectionMixed1R16) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_CSI_ReportConfig_proto protoreflect.FileDescriptor

var file_CSI_ReportConfig_proto_rawDesc = []byte{
	0x0a, 0x16, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x1a,
	0x1a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x73, 0x6e,
	0x31, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x11,
	0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x2f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x18, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x62, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x6c, 0x0a, 0x17, 0x70, 0x75, 0x63, 0x63, 0x68, 0x5f, 0x63, 0x73, 0x69,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x63,
	0x63, 0x68, 0x43, 0x53, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x04, 0x52, 0x16, 0x70, 0x75, 0x63, 0x63, 0x68,
	0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xf9, 0x01, 0x0a, 0x25, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x63, 0x63, 0x68, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x12, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69,
	0x63, 0x69, 0x74, 0x79, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x10, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x6c, 0x0a, 0x17, 0x70, 0x75, 0x63, 0x63, 0x68, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x63, 0x63, 0x68, 0x43, 0x53,
	0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01,
	0x04, 0x08, 0x01, 0x10, 0x04, 0x52, 0x16, 0x70, 0x75, 0x63, 0x63, 0x68, 0x2d, 0x43, 0x53, 0x49,
	0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9a, 0x02,
	0x0a, 0x25, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6a, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x6d, 0x69,
	0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63,
	0x68, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x41, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x10,
	0x52, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x30, 0x50, 0x55, 0x73, 0x63, 0x68, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x74, 0x49,
	0x64, 0x52, 0x07, 0x70, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0x5e, 0x0a, 0x19, 0x41, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04,
	0x08, 0x01, 0x10, 0x10, 0x52, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xdc, 0x03, 0x0a, 0x1f, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4d,
	0x0a, 0x08, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69,
	0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x08, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x12, 0x77, 0x0a,
	0x18, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x63, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x63, 0x63, 0x68, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x15, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x50, 0x55, 0x43, 0x43, 0x48, 0x12, 0x77, 0x0a, 0x18, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73,
	0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x55, 0x53, 0x43, 0x48, 0x12,
	0x50, 0x0a, 0x09, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x69, 0x63, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x09, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69,
	0x63, 0x42, 0x26, 0x0a, 0x24, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xb0, 0x01, 0x0a, 0x18, 0x43, 0x72,
	0x69, 0x52, 0x49, 0x69, 0x31, 0x43, 0x51, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x76, 0x0a, 0x19, 0x70, 0x64, 0x73, 0x63, 0x68, 0x5f,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f,
	0x63, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x5f, 0x63, 0x73, 0x69,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x32, 0x2e, 0x50, 0x64, 0x73, 0x63, 0x68, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x46, 0x6f, 0x72, 0x43, 0x73, 0x69, 0x63, 0x72, 0x69, 0x52, 0x69, 0x69, 0x31, 0x43, 0x71,
	0x69, 0x48, 0x00, 0x52, 0x16, 0x70, 0x64, 0x73, 0x63, 0x68, 0x2d, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x53, 0x49, 0x88, 0x01, 0x01, 0x42, 0x1c,
	0x0a, 0x1a, 0x5f, 0x70, 0x64, 0x73, 0x63, 0x68, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x73, 0x69, 0x22, 0x97, 0x03, 0x0a,
	0x1d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43,
	0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14,
	0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0e, 0x63, 0x72, 0x69, 0x5f, 0x72, 0x69, 0x5f, 0x70,
	0x6d, 0x69, 0x5f, 0x63, 0x71, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0e,
	0x63, 0x72, 0x69, 0x2d, 0x52, 0x49, 0x2d, 0x50, 0x4d, 0x49, 0x2d, 0x43, 0x51, 0x49, 0x12, 0x1e,
	0x0a, 0x09, 0x63, 0x72, 0x69, 0x5f, 0x72, 0x69, 0x5f, 0x69, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x69, 0x2d, 0x52, 0x49, 0x2d, 0x69, 0x31, 0x12, 0x57,
	0x0a, 0x0d, 0x63, 0x72, 0x69, 0x5f, 0x72, 0x69, 0x5f, 0x69, 0x31, 0x5f, 0x63, 0x71, 0x69, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72,
	0x69, 0x52, 0x49, 0x69, 0x31, 0x43, 0x51, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x72, 0x69, 0x2d, 0x52, 0x49,
	0x2d, 0x69, 0x31, 0x2d, 0x43, 0x51, 0x49, 0x12, 0x20, 0x0a, 0x0a, 0x63, 0x72, 0x69, 0x5f, 0x72,
	0x69, 0x5f, 0x63, 0x71, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x63,
	0x72, 0x69, 0x2d, 0x52, 0x49, 0x2d, 0x43, 0x51, 0x49, 0x12, 0x1c, 0x0a, 0x08, 0x63, 0x72, 0x69,
	0x5f, 0x72, 0x73, 0x72, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x63,
	0x72, 0x69, 0x2d, 0x52, 0x53, 0x52, 0x50, 0x12, 0x28, 0x0a, 0x0e, 0x73, 0x73, 0x62, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x73, 0x72, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x0e, 0x73, 0x73, 0x62, 0x2d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x52, 0x53, 0x52,
	0x50, 0x12, 0x2e, 0x0a, 0x11, 0x63, 0x72, 0x69, 0x5f, 0x72, 0x69, 0x5f, 0x6c, 0x69, 0x5f, 0x70,
	0x6d, 0x69, 0x5f, 0x63, 0x71, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x11,
	0x63, 0x72, 0x69, 0x2d, 0x52, 0x49, 0x2d, 0x4c, 0x49, 0x2d, 0x50, 0x4d, 0x49, 0x2d, 0x43, 0x51,
	0x49, 0x42, 0x23, 0x0a, 0x21, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xec, 0x07, 0x0a, 0x27, 0x43, 0x73, 0x69, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x46, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x33, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x62, 0x61, 0x6e, 0x64, 0x73, 0x33, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e,
	0x64, 0x73, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x34, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x35, 0x12, 0x32,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64,
	0x73, 0x36, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x37, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x62, 0x61, 0x6e, 0x64, 0x73, 0x37, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e,
	0x64, 0x73, 0x38, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x38, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x39, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x39, 0x12, 0x34,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x30, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e,
	0x64, 0x73, 0x31, 0x30, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73,
	0x31, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a,
	0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x31, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x32,
	0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x33, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62,
	0x61, 0x6e, 0x64, 0x73, 0x31, 0x33, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e,
	0x64, 0x73, 0x31, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x34, 0x12, 0x34, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x35, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73,
	0x31, 0x35, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x36,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x36, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62,
	0x61, 0x6e, 0x64, 0x73, 0x31, 0x37, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x37, 0x12, 0x34,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x38, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e,
	0x64, 0x73, 0x31, 0x38, 0x12, 0x40, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73,
	0x31, 0x39, 0x5f, 0x76, 0x31, 0x35, 0x33, 0x30, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x10, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x31, 0x39,
	0x2d, 0x76, 0x31, 0x35, 0x33, 0x30, 0x42, 0x2d, 0x0a, 0x2b, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd9, 0x03, 0x0a, 0x26, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x46, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x78, 0x0a, 0x14, 0x63, 0x71, 0x69, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40,
	0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x71, 0x69, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46,
	0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x13, 0x63, 0x71, 0x69, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x78, 0x0a, 0x14, 0x70, 0x6d,
	0x69, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x50, 0x6d, 0x69, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x13, 0x70, 0x6d,
	0x69, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x72, 0x0a, 0x12, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3e, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46,
	0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x02, 0x52, 0x11, 0x63, 0x73, 0x69, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x63, 0x71, 0x69,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x70, 0x6d, 0x69, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6e,
	0x64, 0x22, 0x94, 0x01, 0x0a, 0x1f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x5c, 0x0a, 0x10, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x52, 0x73, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x0e, 0x6e, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x53,
	0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6e, 0x72, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x26, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x54, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x2e, 0x0a, 0x2c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62,
	0x61, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xae, 0x01, 0x0a, 0x29, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x76,
	0x31, 0x35, 0x33, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x80, 0x01, 0x0a, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x31, 0x35, 0x33, 0x30,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76,
	0x31, 0x35, 0x33, 0x30, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x76, 0x31, 0x35, 0x33, 0x30, 0x52, 0x16,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2d, 0x76, 0x31, 0x35, 0x33, 0x30, 0x22, 0xdf, 0x01, 0x0a, 0x29, 0x53, 0x65, 0x6d, 0x69, 0x50,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68,
	0x76, 0x31, 0x36, 0x31, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x58, 0x0a, 0x23, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x64, 0x63, 0x69, 0x5f, 0x30, 0x5f, 0x32, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x1f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x43, 0x49, 0x2d, 0x30, 0x2d, 0x32, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x58,
	0x0a, 0x23, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x63, 0x69, 0x5f, 0x30, 0x5f,
	0x31, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x1f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x43, 0x49,
	0x2d, 0x30, 0x2d, 0x31, 0x2d, 0x72, 0x31, 0x36, 0x22, 0xd3, 0x01, 0x0a, 0x1d, 0x41, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x76, 0x31, 0x36, 0x31, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x58, 0x0a, 0x23, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x63, 0x69, 0x5f, 0x30, 0x5f, 0x32, 0x5f, 0x72, 0x31,
	0x36, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08,
	0x01, 0x10, 0x40, 0x52, 0x1f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x43, 0x49, 0x2d, 0x30, 0x2d, 0x32,
	0x2d, 0x72, 0x31, 0x36, 0x12, 0x58, 0x0a, 0x23, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x64, 0x63, 0x69, 0x5f, 0x30, 0x5f, 0x31, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x40, 0x52, 0x1f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x43, 0x49, 0x2d, 0x30, 0x2d, 0x31, 0x2d, 0x72, 0x31, 0x36, 0x22, 0xa3,
	0x01, 0x0a, 0x20, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x72, 0x31, 0x36, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x24, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x72, 0x5f,
	0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x72, 0x69,
	0x2d, 0x53, 0x49, 0x4e, 0x52, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x30, 0x0a, 0x12, 0x73, 0x73, 0x62,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x69, 0x6e, 0x72, 0x5f, 0x72, 0x31, 0x36, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12, 0x73, 0x73, 0x62, 0x2d, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x2d, 0x53, 0x49, 0x4e, 0x52, 0x2d, 0x72, 0x31, 0x36, 0x42, 0x27, 0x0a, 0x25, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72,
	0x31, 0x36, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0xf9, 0x14, 0x0a, 0x0f, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x52, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x52, 0x0e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x07,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x48, 0x00, 0x52, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x75, 0x0a, 0x21, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x5f,
	0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x52, 0x1e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x7b, 0x0a, 0x21, 0x63, 0x73, 0x69, 0x5f,
	0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x73, 0x69, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x48,
	0x01, 0x52, 0x1f, 0x63, 0x73, 0x69, 0x2d, 0x49, 0x4d, 0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x83, 0x01, 0x0a, 0x25, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73,
	0x69, 0x5f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x73,
	0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x48, 0x02, 0x52, 0x23, 0x6e, 0x7a, 0x70, 0x2d, 0x43, 0x53, 0x49, 0x2d, 0x52, 0x53, 0x2d,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x64, 0x0a, 0x12, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x5d, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x5f, 0x63, 0x73,
	0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x7e, 0x0a, 0x19, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x46, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x03, 0x52, 0x17, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0xa5, 0x01, 0x0a, 0x29, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x25, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xb4, 0x01, 0x0a, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x50, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x2a, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x53, 0x0a, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x04, 0x52, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x75, 0x6d, 0x6d,
	0x79, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x05, 0x52, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x88, 0x01, 0x01, 0x12, 0x7a, 0x0a, 0x1a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x61, 0x6d,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61,
	0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x17, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x64, 0x42, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x51, 0x0a, 0x09, 0x63, 0x71, 0x69, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x71, 0x69, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x73, 0x69, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x06, 0x52, 0x09, 0x63,
	0x71, 0x69, 0x2d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x54, 0x0a, 0x0c, 0x73,
	0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x31, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x62, 0x61, 0x6e,
	0x64, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x6f, 0x0a, 0x17, 0x6e, 0x6f, 0x6e, 0x5f, 0x70, 0x6d, 0x69, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f, 0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x42, 0x0b, 0xfa,
	0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x01, 0x52, 0x16, 0x6e, 0x6f, 0x6e, 0x2d,
	0x50, 0x4d, 0x49, 0x2d, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x8a, 0x01, 0x0a, 0x1e, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x5f,
	0x76, 0x31, 0x35, 0x33, 0x30, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x76, 0x31, 0x35, 0x33, 0x30, 0x43, 0x73,
	0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x07, 0x52,
	0x1b, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x50, 0x55, 0x53, 0x43, 0x48, 0x2d, 0x76, 0x31, 0x35, 0x33, 0x30, 0x88, 0x01, 0x01, 0x12,
	0x8a, 0x01, 0x0a, 0x1e, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x5f, 0x76, 0x31, 0x36,
	0x31, 0x30, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x76, 0x31, 0x36, 0x31, 0x30, 0x43, 0x73, 0x69, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x08, 0x52, 0x1b, 0x73, 0x65,
	0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x55,
	0x53, 0x43, 0x48, 0x2d, 0x76, 0x31, 0x36, 0x31, 0x30, 0x88, 0x01, 0x01, 0x12, 0x63, 0x0a, 0x0f,
	0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x76, 0x31, 0x36, 0x31, 0x30, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x76, 0x31, 0x36, 0x31, 0x30, 0x43, 0x73, 0x69, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x09, 0x52, 0x0f, 0x61,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x2d, 0x76, 0x31, 0x36, 0x31, 0x30, 0x88, 0x01,
	0x01, 0x12, 0x6d, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x72, 0x31, 0x36, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x0a, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2d, 0x72, 0x31, 0x36, 0x88, 0x01, 0x01,
	0x12, 0x5e, 0x0a, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x36, 0x48, 0x0b, 0x52, 0x12, 0x63, 0x6f, 0x64, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2d, 0x72, 0x31, 0x36, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x24, 0x0a, 0x22,
	0x5f, 0x63, 0x73, 0x69, 0x5f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x28, 0x0a, 0x26, 0x5f, 0x6e, 0x7a, 0x70, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x1c, 0x0a, 0x1a,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x71, 0x69,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x21, 0x0a, 0x1f, 0x5f, 0x73, 0x65, 0x6d, 0x69, 0x5f,
	0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x75,
	0x73, 0x63, 0x68, 0x5f, 0x76, 0x31, 0x35, 0x33, 0x30, 0x42, 0x21, 0x0a, 0x1f, 0x5f, 0x73, 0x65,
	0x6d, 0x69, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e,
	0x5f, 0x70, 0x75, 0x73, 0x63, 0x68, 0x5f, 0x76, 0x31, 0x36, 0x31, 0x30, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x61, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x76, 0x31, 0x36, 0x31, 0x30,
	0x42, 0x16, 0x0a, 0x14, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x31, 0x36, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x31, 0x36,
	0x22, 0xda, 0x02, 0x0a, 0x1d, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x12, 0x18, 0x0a, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x35, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38,
	0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x30, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x30, 0x12, 0x1a, 0x0a, 0x07,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x36, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x32, 0x30, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x32, 0x30, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x30, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x34, 0x30,
	0x12, 0x1a, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38, 0x30, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x38, 0x30, 0x12, 0x1c, 0x0a, 0x08,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x36, 0x30, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x31, 0x36, 0x30, 0x12, 0x1c, 0x0a, 0x08, 0x73, 0x6c,
	0x6f, 0x74, 0x73, 0x33, 0x32, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x33, 0x32, 0x30, 0x42, 0x23, 0x0a, 0x21, 0x63, 0x73, 0x69, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xb9, 0x01,
	0x0a, 0x10, 0x50, 0x75, 0x63, 0x63, 0x68, 0x43, 0x53, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x55, 0x0a, 0x18, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x61, 0x6e,
	0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x77, 0x70,
	0x49, 0x64, 0x52, 0x15, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x50, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0e, 0x70, 0x75, 0x63,
	0x63, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0e, 0x70, 0x75, 0x63, 0x63, 0x68,
	0x2d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x97, 0x04, 0x0a, 0x1c, 0x50, 0x6f,
	0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x46, 0x6f, 0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x61,
	0x6e, 0x6b, 0x31, 0x5f, 0x38, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x48, 0x00,
	0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x31, 0x2d, 0x38, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x07,
	0x72, 0x61, 0x6e, 0x6b, 0x32, 0x5f, 0x38, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38,
	0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x32, 0x2d, 0x38, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x61, 0x6e,
	0x6b, 0x33, 0x5f, 0x38, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x5f, 0x63, 0x73,
	0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x52, 0x07, 0x72,
	0x61, 0x6e, 0x6b, 0x33, 0x2d, 0x38, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x34, 0x5f,
	0x38, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b,
	0x34, 0x2d, 0x38, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x35, 0x5f, 0x38, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x35, 0x2d, 0x38,
	0x12, 0x3b, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x36, 0x5f, 0x38, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x38, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x36, 0x2d, 0x38, 0x12, 0x3b, 0x0a,
	0x07, 0x72, 0x61, 0x6e, 0x6b, 0x37, 0x5f, 0x38, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x38, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x37, 0x2d, 0x38, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x61,
	0x6e, 0x6b, 0x38, 0x5f, 0x38, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x52, 0x07,
	0x72, 0x61, 0x6e, 0x6b, 0x38, 0x2d, 0x38, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x61, 0x6e, 0x6b,
	0x31, 0x5f, 0x38, 0x22, 0xa3, 0x02, 0x0a, 0x1c, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x34, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f, 0x72, 0x38, 0x52,
	0x61, 0x6e, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x31, 0x5f, 0x34, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x48, 0x00, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b,
	0x31, 0x2d, 0x34, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x32, 0x5f,
	0x34, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b,
	0x32, 0x2d, 0x34, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x33, 0x5f, 0x34, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x33, 0x2d, 0x34,
	0x12, 0x3b, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x34, 0x5f, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x34, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x34, 0x2d, 0x34, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x31, 0x5f, 0x34, 0x22, 0xa9, 0x01, 0x0a, 0x1c, 0x50, 0x6f,
	0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x32, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x46, 0x6f, 0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x61,
	0x6e, 0x6b, 0x31, 0x5f, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x32, 0x48, 0x00,
	0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x31, 0x2d, 0x32, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x07,
	0x72, 0x61, 0x6e, 0x6b, 0x32, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x32,
	0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x32, 0x2d, 0x32, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x61,
	0x6e, 0x6b, 0x31, 0x5f, 0x32, 0x22, 0xd8, 0x02, 0x0a, 0x12, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x46, 0x6f, 0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x56, 0x0a, 0x0b,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x38, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f, 0x72,
	0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x38, 0x12, 0x56, 0x0a, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x5f, 0x63, 0x73, 0x69,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x50, 0x6f, 0x72, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f, 0x72, 0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x48, 0x00,
	0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x12, 0x56, 0x0a, 0x0b,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x32, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f, 0x72,
	0x38, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x32, 0x12, 0x21, 0x0a, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6f, 0x72,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x31, 0x42, 0x17, 0x0a, 0x15, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x66, 0x6f, 0x72, 0x38, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73,
	0x22, 0x2d, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x38, 0x12, 0x1f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x1a, 0x04, 0x18, 0x07, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2d, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x34, 0x12, 0x1f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x1a, 0x04, 0x18, 0x03, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d,
	0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x32, 0x12, 0x1f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x1a, 0x04, 0x18, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x1a, 0x04, 0x18, 0x1f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x36, 0x0a, 0x13, 0x43, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x6f, 0x28, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x11, 0x50, 0x30, 0x50, 0x55, 0x73,
	0x63, 0x68, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x1a, 0x04, 0x18, 0x1d, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x76, 0x0a,
	0x13, 0x54, 0x77, 0x6f, 0x6e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x5f, 0x0a, 0x22, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x78, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x1f, 0x74, 0x77, 0x6f, 0x54, 0x58, 0x2d, 0x43, 0x6f, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe5, 0x0b, 0x0a, 0x0f, 0x4e, 0x31, 0x6e, 0x32, 0x6d, 0x6f,
	0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x54, 0x77, 0x6f, 0x12, 0x6c, 0x0a, 0x27, 0x74, 0x77, 0x6f,
	0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x25, 0x74, 0x77, 0x6f, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x27, 0x74, 0x77, 0x6f, 0x5f, 0x74,
	0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x25,
	0x74, 0x77, 0x6f, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x28, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x6f, 0x6e,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x26, 0x66,
	0x6f, 0x75, 0x72, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x29, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x74,
	0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x27,
	0x74, 0x68, 0x72, 0x65, 0x65, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x27, 0x73, 0x69, 0x78, 0x5f, 0x6f,
	0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x25,
	0x73, 0x69, 0x78, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x28, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x77,
	0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x26, 0x66,
	0x6f, 0x75, 0x72, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x29, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6f,
	0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x27,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x72, 0x0a, 0x2a, 0x66, 0x6f, 0x75, 0x72, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x28, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2d, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x27, 0x73,
	0x69, 0x78, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x25, 0x73, 0x69, 0x78, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x72, 0x0a, 0x2a, 0x74, 0x77, 0x65,
	0x6c, 0x76, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x28, 0x74, 0x77, 0x65, 0x6c, 0x76, 0x65, 0x2d, 0x6f, 0x6e, 0x65, 0x2d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a,
	0x29, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x27, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x66, 0x6f, 0x75,
	0x72, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x70, 0x0a, 0x29, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x27, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2d,
	0x74, 0x77, 0x6f, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x74, 0x0a, 0x2b, 0x73, 0x69, 0x78, 0x74, 0x65, 0x65, 0x6e, 0x5f, 0x6f, 0x6e, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x29, 0x73, 0x69,
	0x78, 0x74, 0x65, 0x65, 0x6e, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x14, 0x0a, 0x12, 0x6e, 0x31, 0x5f, 0x6e, 0x32,
	0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x74, 0x77, 0x6f, 0x22, 0x98, 0x02,
	0x0a, 0x1b, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x54, 0x77, 0x6f, 0x6e, 0x72, 0x4f,
	0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x3c, 0x0a,
	0x05, 0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x5f,
	0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x31, 0x6e, 0x32, 0x6d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61,
	0x6e, 0x54, 0x77, 0x6f, 0x52, 0x05, 0x6e, 0x31, 0x2d, 0x6e, 0x32, 0x12, 0x83, 0x01, 0x0a, 0x32,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x75, 0x62,
	0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x69, 0x32, 0x88, 0x01,
	0x01, 0x42, 0x35, 0x0a, 0x33, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x32, 0x22, 0xe6, 0x01, 0x0a, 0x20, 0x4e, 0x72, 0x4f,
	0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x3e, 0x0a,
	0x03, 0x74, 0x77, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x5f, 0x63, 0x73,
	0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x77, 0x6f, 0x6e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e,
	0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x48, 0x00, 0x52, 0x03, 0x74, 0x77, 0x6f, 0x12, 0x58, 0x0a,
	0x0d, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x72,
	0x65, 0x54, 0x68, 0x61, 0x6e, 0x54, 0x77, 0x6f, 0x6e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65,
	0x6e, 0x6e, 0x61, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x72, 0x65,
	0x54, 0x68, 0x61, 0x6e, 0x54, 0x77, 0x6f, 0x42, 0x28, 0x0a, 0x26, 0x6e, 0x72, 0x5f, 0x6f, 0x66,
	0x5f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x22, 0xe3, 0x01, 0x0a, 0x17, 0x54, 0x79, 0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x66, 0x0a,
	0x13, 0x6e, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x5f, 0x63, 0x73,
	0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x4e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x6f,
	0x72, 0x74, 0x73, 0x74, 0x79, 0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x52, 0x10, 0x6e, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61,
	0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x60, 0x0a, 0x22, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f,
	0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x69, 0x5f,
	0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x72, 0x69, 0x2d, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe5, 0x07, 0x0a, 0x15, 0x4e, 0x67, 0x6e, 0x31,
	0x6e, 0x32, 0x74, 0x79, 0x70, 0x65, 0x49, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x12, 0x72, 0x0a, 0x2a, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x6f, 0x6e, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x28, 0x74, 0x77, 0x6f,
	0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x2b, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x6f, 0x75,
	0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x29, 0x74, 0x77, 0x6f, 0x2d, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x2b, 0x66,
	0x6f, 0x75, 0x72, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x29, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x77, 0x6f,
	0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x72, 0x0a, 0x2a, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x77, 0x6f,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x28, 0x74, 0x77, 0x6f,
	0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x2c, 0x74, 0x77, 0x6f, 0x5f, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x2a, 0x74, 0x77, 0x6f, 0x2d, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x6f, 0x6e, 0x65,
	0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a,
	0x2c, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x2a, 0x66, 0x6f, 0x75, 0x72, 0x2d,
	0x66, 0x6f, 0x75, 0x72, 0x2d, 0x6f, 0x6e, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x2b, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x6f, 0x75,
	0x72, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x29, 0x74, 0x77, 0x6f, 0x2d, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x2b, 0x66,
	0x6f, 0x75, 0x72, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x29, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x77, 0x6f,
	0x2d, 0x74, 0x77, 0x6f, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x1c, 0x0a, 0x1a, 0x6e, 0x67, 0x5f, 0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x22,
	0x9e, 0x01, 0x0a, 0x16, 0x54, 0x79, 0x70, 0x65, 0x49, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x08, 0x6e, 0x67,
	0x5f, 0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x5f,
	0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x67, 0x6e, 0x31, 0x6e, 0x32, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x08, 0x6e, 0x67, 0x2d, 0x6e,
	0x31, 0x2d, 0x6e, 0x32, 0x12, 0x3a, 0x0a, 0x0e, 0x72, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x0e, 0x72, 0x69, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xe0, 0x01, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x31, 0x12, 0x60, 0x0a, 0x13, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x11, 0x74, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x12, 0x5d, 0x0a, 0x12, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x5f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x10, 0x74, 0x79, 0x70, 0x65, 0x49, 0x2d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x31, 0x22, 0x78, 0x0a, 0x11, 0x54, 0x79, 0x70, 0x65, 0x31, 0x63, 0x6f, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x5f, 0x63, 0x73,
	0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x31, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xe9, 0x05,
	0x0a, 0x23, 0x4e, 0x31, 0x6e, 0x32, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75,
	0x62, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x69, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x77, 0x6f, 0x5f, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x74, 0x77,
	0x6f, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x77, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x74, 0x77,
	0x6f, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x30, 0x0a, 0x08, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x6f, 0x6e,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x08, 0x66,
	0x6f, 0x75, 0x72, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x65,
	0x5f, 0x74, 0x77, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x65, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x2e, 0x0a, 0x07, 0x73,
	0x69, 0x78, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x07, 0x73, 0x69, 0x78, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x66,
	0x6f, 0x75, 0x72, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x32, 0x0a,
	0x09, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x6f, 0x6e,
	0x65, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6f, 0x75,
	0x72, 0x2d, 0x74, 0x68, 0x72, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x69, 0x78, 0x5f, 0x74,
	0x77, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x69, 0x78, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x34, 0x0a, 0x0a, 0x74, 0x77, 0x65, 0x6c, 0x76,
	0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x0a, 0x74, 0x77, 0x65, 0x6c, 0x76, 0x65, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a,
	0x09, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x66, 0x6f, 0x75,
	0x72, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x69, 0x78, 0x74, 0x65, 0x65, 0x6e,
	0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x69, 0x78, 0x74, 0x65, 0x65, 0x6e, 0x2d, 0x6f, 0x6e, 0x65, 0x42, 0x2a, 0x0a,
	0x28, 0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x22, 0xe3, 0x01, 0x0a, 0x0d, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x69, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x21,
	0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e,
	0x4e, 0x31, 0x6e, 0x32, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x69, 0x52, 0x1f, 0x6e, 0x31, 0x2d, 0x6e, 0x32, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x16, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f,
	0x72, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x74, 0x79, 0x70, 0x65, 0x49, 0x49,
	0x2d, 0x52, 0x49, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xb0, 0x02, 0x0a, 0x1a, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x89,
	0x01, 0x0a, 0x1c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x74, 0x79, 0x70, 0x65, 0x49, 0x69, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x19, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x65, 0x0a, 0x25, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x22, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x49, 0x2d, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x49, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x32, 0x12, 0x3f, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x69, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x49, 0x12, 0x69, 0x0a, 0x16, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x69, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x14, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x49, 0x2d, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x0f, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x32,
	0x22, 0xb2, 0x02, 0x0a, 0x11, 0x54, 0x79, 0x70, 0x65, 0x32, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x32, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5d, 0x0a, 0x13, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x32, 0x52, 0x11, 0x70, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64,
	0x5f, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x73, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x41, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x51, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f,
	0x62, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x42, 0x65, 0x61, 0x6d,
	0x73, 0x74, 0x79, 0x70, 0x65, 0x32, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x42, 0x65, 0x61, 0x6d, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x40, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x31, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x31, 0x12, 0x40, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x32, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x32, 0x42, 0x1f, 0x0a, 0x1d, 0x63, 0x6f, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x68, 0x0a, 0x0e, 0x43, 0x6f, 0x64,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x56, 0x0a, 0x0d, 0x63,
	0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xf7, 0x05, 0x0a, 0x29, 0x4e, 0x31, 0x6e, 0x32, 0x63, 0x6f, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x74, 0x79, 0x70, 0x65, 0x49, 0x69, 0x72, 0x31,
	0x36, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x77, 0x6f, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x74, 0x77, 0x6f, 0x2d, 0x6f, 0x6e,
	0x65, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x77, 0x6f, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x74, 0x77, 0x6f, 0x2d, 0x74, 0x77,
	0x6f, 0x12, 0x30, 0x0a, 0x08, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6f, 0x75, 0x72, 0x2d,
	0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x74, 0x77, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x74, 0x68,
	0x72, 0x65, 0x65, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x69, 0x78, 0x5f, 0x6f,
	0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x69, 0x78, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x66, 0x6f, 0x75, 0x72, 0x5f,
	0x74, 0x77, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x08, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x77, 0x6f, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x09, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x34, 0x0a,
	0x0a, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x68,
	0x72, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x69, 0x78, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x73, 0x69, 0x78, 0x2d,
	0x74, 0x77, 0x6f, 0x12, 0x34, 0x0a, 0x0a, 0x74, 0x77, 0x65, 0x6c, 0x76, 0x65, 0x5f, 0x6f, 0x6e,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x74,
	0x77, 0x65, 0x6c, 0x76, 0x65, 0x2d, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x66, 0x6f, 0x75,
	0x72, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x09, 0x66, 0x6f, 0x75, 0x72, 0x2d, 0x66, 0x6f, 0x75, 0x72, 0x12, 0x32, 0x0a,
	0x09, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x74, 0x77,
	0x6f, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x69, 0x78, 0x74, 0x65, 0x65, 0x6e, 0x5f, 0x6f, 0x6e, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x69,
	0x78, 0x74, 0x65, 0x65, 0x6e, 0x2d, 0x6f, 0x6e, 0x65, 0x42, 0x32, 0x0a, 0x30, 0x6e, 0x31, 0x5f,
	0x6e, 0x32, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73,
	0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x31, 0x36, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x72, 0x31, 0x36, 0x22, 0xfc, 0x01,
	0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69, 0x72, 0x31, 0x36, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x25, 0x6e, 0x31, 0x5f, 0x6e, 0x32, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x31, 0x6e, 0x32, 0x63,
	0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x69, 0x72, 0x31, 0x36, 0x52, 0x23, 0x6e, 0x31, 0x2d, 0x6e, 0x32, 0x2d, 0x63, 0x6f, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x51, 0x0a, 0x1a, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x69, 0x5f, 0x72, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x19, 0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x2d, 0x52, 0x49, 0x2d, 0x52, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31, 0x36, 0x22, 0xa3, 0x02, 0x0a,
	0x1d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x92,
	0x01, 0x0a, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f,
	0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x5f, 0x63, 0x73, 0x69,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x32, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x72, 0x31, 0x36, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x72, 0x31, 0x36, 0x52, 0x1d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x2d,
	0x72, 0x31, 0x36, 0x12, 0x6d, 0x0a, 0x29, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x69,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x26, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x49, 0x2d, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x49, 0x2d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72,
	0x31, 0x36, 0x22, 0xe8, 0x01, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x32, 0x72, 0x31, 0x36, 0x12, 0x4a, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x69, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x69, 0x72, 0x31, 0x36, 0x73, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x2d, 0x72,
	0x31, 0x36, 0x12, 0x74, 0x0a, 0x1a, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x69, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31, 0x36,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x69, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x72, 0x31, 0x36, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x18,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x49, 0x2d, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31, 0x36, 0x42, 0x13, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x32, 0x5f, 0x72, 0x31, 0x36, 0x22, 0xed, 0x01,
	0x0a, 0x17, 0x54, 0x79, 0x70, 0x65, 0x32, 0x72, 0x31, 0x36, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x72, 0x31, 0x36, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x75, 0x62,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x74, 0x79, 0x70, 0x65, 0x32,
	0x72, 0x31, 0x36, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x2a,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x6d, 0x69, 0x5f, 0x73, 0x75,
	0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x71, 0x69, 0x5f, 0x73,
	0x75, 0x62, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x26, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x4d, 0x49, 0x2d, 0x53, 0x75,
	0x62, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x50, 0x65, 0x72, 0x43, 0x51, 0x49, 0x2d, 0x53, 0x75, 0x62,
	0x62, 0x61, 0x6e, 0x64, 0x2d, 0x72, 0x31, 0x36, 0x12, 0x33, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x31,
	0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x31, 0x36, 0x22, 0x9b, 0x01,
	0x0a, 0x20, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x72, 0x31,
	0x36, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72,
	0x31, 0x36, 0x12, 0x4e, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x32, 0x5f, 0x72, 0x31, 0x36, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x5f, 0x63, 0x73, 0x69, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x32, 0x72, 0x31, 0x36, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x72, 0x31, 0x36, 0x48, 0x00, 0x52, 0x09, 0x74, 0x79, 0x70, 0x65, 0x32, 0x2d, 0x72,
	0x31, 0x36, 0x42, 0x27, 0x0a, 0x25, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x72, 0x31, 0x36, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x31, 0x36, 0x22, 0x79, 0x0a, 0x11, 0x43,
	0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x36,
	0x12, 0x64, 0x0a, 0x11, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x72, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x5f, 0x63,
	0x73, 0x69, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x72, 0x31, 0x36, 0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x72, 0x31, 0x36, 0x52, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x2d, 0x72, 0x31, 0x36, 0x22, 0x28, 0x0a, 0x05, 0x42, 0x77, 0x70, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x04, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x32, 0x0a, 0x0f, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x7f, 0x28, 0x00, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x41, 0x69, 0x44, 0x43, 0x69,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x72, 0x31, 0x36, 0x12, 0x1e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38,
	0x0a, 0x17, 0x4d, 0x61, 0x78, 0x41, 0x69, 0x44, 0x43, 0x69, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x69, 0x7a, 0x65, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x7f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x42,
	0x61, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x62, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0x80, 0x80,
	0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x42,
	0x61, 0x6e, 0x64, 0x73, 0x55, 0x74, 0x72, 0x61, 0x46, 0x44, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a,
	0x14, 0x4d, 0x61, 0x78, 0x42, 0x68, 0x52, 0x4c, 0x63, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0x80, 0x80, 0x04, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x42, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78,
	0x42, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x43,
	0x61, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x54,
	0x77, 0x6f, 0x50, 0x75, 0x63, 0x63, 0x68, 0x47, 0x72, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x43, 0x62, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x43,
	0x62, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d,
	0x61, 0x78, 0x43, 0x62, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f,
	0x4d, 0x61, 0x78, 0x43, 0x62, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d,
	0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a,
	0x13, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67,
	0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x43, 0x65,
	0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c,
	0x6c, 0x49, 0x6e, 0x74, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c,
	0x4d, 0x65, 0x61, 0x73, 0x45, 0x75, 0x74, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x43,
	0x65, 0x6c, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a,
	0x15, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x55, 0x74, 0x72, 0x61,
	0x46, 0x44, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x69, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x72,
	0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x45, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x12, 0x1f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x1a, 0x04, 0x08, 0xff, 0xff, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32,
	0x0a, 0x11, 0x4d, 0x61, 0x78, 0x45, 0x75, 0x74, 0x72, 0x61, 0x43, 0x65, 0x6c, 0x6c, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x45, 0x75, 0x74, 0x72, 0x61, 0x4e, 0x53,
	0x50, 0x6d, 0x61, 0x78, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x61,
	0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03,
	0x08, 0x88, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61,
	0x78, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x09, 0x4d, 0x61,
	0x78, 0x4e, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x08, 0xbd, 0x92,
	0xc8, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x4e, 0x53, 0x50, 0x6d, 0x61, 0x78, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x46, 0x72,
	0x65, 0x71, 0x49, 0x64, 0x6c, 0x65, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35,
	0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x43, 0x65, 0x6c, 0x6c, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a, 0x22, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x50,
	0x65, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4c, 0x0a, 0x2b, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43,
	0x65, 0x6c, 0x6c, 0x73, 0x50, 0x65, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x69, 0x6e, 0x75, 0x73, 0x34, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x44, 0x75, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x1a, 0x03, 0x08, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4a, 0x0a,
	0x28, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08,
	0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x29, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xff, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x53, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x43, 0x65, 0x6c, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x43, 0x67, 0x53, 0x4c, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x43, 0x67, 0x53, 0x4c, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x54, 0x6f,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x43, 0x6f, 0x6e, 0x64, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1e,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a,
	0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x44, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x65, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x29, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x4c, 0x63, 0x67, 0x49, 0x44, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a,
	0x07, 0x4d, 0x61, 0x78, 0x4c, 0x63, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4c, 0x63,
	0x49, 0x44, 0x49, 0x61, 0x62, 0x72, 0x31, 0x36, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0xbf,
	0x82, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78,
	0x4c, 0x74, 0x65, 0x43, 0x52, 0x73, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2c, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d,
	0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x54, 0x61, 0x67, 0x73, 0x31, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a,
	0x0b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x42, 0x77, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0e, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6d, 0x62, 0x49, 0x64, 0x63, 0x12, 0x1e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a,
	0x0f, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x31,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2e, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12,
	0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xc0, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2f, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x31,
	0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xbf, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3f, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x68, 0x79, 0x73, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x93, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x40, 0x0a, 0x1e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x31, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x92, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x22, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x68,
	0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08,
	0x94, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0b, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x73, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x43, 0x6f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33,
	0x0a, 0x12, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x52, 0x65, 0x53, 0x65, 0x74, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x27, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x4d, 0x61,
	0x78, 0x53, 0x66, 0x69, 0x44, 0x43, 0x69, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x53, 0x66, 0x69, 0x44, 0x43, 0x69, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x7f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61,
	0x78, 0x49, 0x61, 0x62, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x72, 0x31, 0x36,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x49, 0x6e, 0x74, 0x44, 0x43, 0x69, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x7e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x49, 0x6e, 0x74,
	0x44, 0x43, 0x69, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x31, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x7d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39,
	0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x73, 0x50, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1e, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x30, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x1f, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x2f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42,
	0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3e, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x41, 0x70, 0x43,
	0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x4f, 0x66, 0x43, 0x73, 0x69,
	0x41, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x47, 0x0a, 0x26, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x65, 0x72, 0x41, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x69, 0x63, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x18, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xc0, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x31, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xbf, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4e, 0x7a,
	0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4e,
	0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4e, 0x7a, 0x70,
	0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x45, 0x0a, 0x24, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4e, 0x7a, 0x70, 0x43,
	0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73,
	0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x4e, 0x7a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a,
	0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x5a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x5a, 0x70, 0x43, 0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x5a, 0x70, 0x43,
	0x53, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73,
	0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3e, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x5a, 0x70, 0x43, 0x53, 0x69,
	0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x5a, 0x70, 0x43, 0x53, 0x69,
	0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a,
	0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x31, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c,
	0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x43, 0x73, 0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73,
	0x69, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x50,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x53,
	0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x31, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x43,
	0x0a, 0x22, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x53, 0x53, 0x62, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0a, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x46, 0x72, 0x65, 0x71, 0x53, 0x6c, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a,
	0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x42, 0x57, 0x70, 0x73, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x53, 0x6c, 0x45, 0x55, 0x74,
	0x72, 0x61, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53,
	0x6c, 0x4d, 0x65, 0x61, 0x73, 0x49, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a,
	0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x6f,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4e, 0x72, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d,
	0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x53, 0x6c, 0x4e, 0x52, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x10,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x51, 0x46, 0x69, 0x73, 0x72, 0x31, 0x36,
	0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x51, 0x46, 0x69,
	0x73, 0x50, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a,
	0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x63, 0x69, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x28, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x50, 0x6c, 0x6d, 0x6e, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x52, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x60, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x72,
	0x6d, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x5f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4d, 0x65, 0x61, 0x73,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x72,
	0x6d, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x60, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c,
	0x44, 0x65, 0x73, 0x74, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x53, 0x6c, 0x72, 0x62, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08,
	0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0c, 0x4d, 0x61, 0x78,
	0x53, 0x6c, 0x4c, 0x43, 0x69, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08,
	0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78,
	0x53, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31,
	0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x78, 0x70, 0x6f, 0x6f, 0x6c, 0x72,
	0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x54, 0x78, 0x70, 0x6f,
	0x6f, 0x6c, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x53, 0x72, 0x73, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x21, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x31, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37,
	0x0a, 0x16, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x53, 0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3d, 0x0a, 0x1c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x50,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3e, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x50, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x31, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x53, 0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x31, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a,
	0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x50, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x53, 0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x31, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a,
	0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x73, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x32, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x52,
	0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19,
	0x4d, 0x61, 0x78, 0x55, 0x6c, 0x74, 0x78, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x42, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a, 0x23, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12,
	0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x46, 0x0a, 0x24, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x31, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xff, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a,
	0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x7f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50,
	0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x50, 0x30, 0x50, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68,
	0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75,
	0x63, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x23, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a,
	0x24, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x50, 0x61, 0x74,
	0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73,
	0x73, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x27, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50,
	0x75, 0x63, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x44, 0x69, 0x66, 0x66, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e,
	0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42,
	0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x72,
	0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x75, 0x73, 0x63, 0x68, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a,
	0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x30, 0x50, 0x55, 0x73, 0x63, 0x68, 0x41,
	0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1e,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x50, 0x30, 0x50, 0x55, 0x73, 0x63, 0x68, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65,
	0x74, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x73,
	0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x21, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x50, 0x75, 0x73, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x23, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x73, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73,
	0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x72, 0x31, 0x36,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x45, 0x0a, 0x24, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x73, 0x63, 0x68, 0x50,
	0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x73, 0x73, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x27, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x50, 0x75, 0x73, 0x63, 0x68, 0x50, 0x61, 0x74, 0x68, 0x6c, 0x6f, 0x73, 0x73, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x73, 0x73, 0x44, 0x69, 0x66, 0x66, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4e, 0x61, 0x69, 0x63, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6e,
	0x64, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x4d, 0x72,
	0x64, 0x63, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x0a, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x45, 0x75,
	0x74, 0x72, 0x61, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x44, 0x72, 0x62, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x1d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x07,
	0x4d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x65,
	0x71, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x46, 0x72, 0x65,
	0x71, 0x49, 0x64, 0x63, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x43, 0x6f,
	0x6d, 0x62, 0x49, 0x64, 0x63, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x46,
	0x72, 0x65, 0x71, 0x49, 0x64, 0x63, 0x4d, 0x52, 0x64, 0x63, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x61,
	0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x65, 0x61, 0x6d, 0x73, 0x45, 0x78, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x30, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61,
	0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x63, 0x69, 0x73, 0x50, 0x65, 0x72, 0x53, 0x6d, 0x74, 0x63,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2c, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x51, 0x66, 0x69, 0x73, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4e, 0x0a,
	0x2c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x1a, 0x03, 0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a,
	0x22, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x4f, 0x66, 0x53, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x73, 0x63, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a,
	0x03, 0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78,
	0x4e, 0x72, 0x6f, 0x66, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x70, 0x6c, 0x75, 0x73, 0x31, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1e,
	0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a,
	0x22, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x44, 0x69, 0x66, 0x66,
	0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x38, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x54, 0x6f, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x53, 0x73, 0x62, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x53, 0x73, 0x62, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x53, 0x4e, 0x53, 0x73, 0x61, 0x69, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x50, 0x64, 0x63, 0x63, 0x68, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a,
	0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x54, 0x63, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x54, 0x63, 0x69, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x7f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x55, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x06,
	0x4d, 0x61, 0x78, 0x51, 0x66, 0x69, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x52, 0x61, 0x43, 0x53,
	0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x60, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x4d,
	0x61, 0x78, 0x52, 0x61, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72,
	0x43, 0x73, 0x69, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x52, 0x61, 0x4f, 0x63, 0x63,
	0x61, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x31, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xff, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x52, 0x61,
	0x53, 0x53, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x07, 0x4d,
	0x61, 0x78, 0x53, 0x63, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39,
	0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x43, 0x65, 0x6c, 0x6c, 0x73, 0x45, 0x75, 0x74, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78,
	0x4d, 0x62, 0x73, 0x66, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x42,
	0x61, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x66,
	0x74, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x43, 0x6f, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x45, 0x78, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d,
	0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x6c, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x1a, 0x03, 0x08, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a,
	0x1c, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x73, 0x69, 0x52, 0x53, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x6c, 0x74, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x1a, 0x03, 0x08, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a,
	0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x72, 0x69, 0x50, 0x55, 0x73, 0x63, 0x68,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4e, 0x72,
	0x6f, 0x66, 0x53, 0x72, 0x69, 0x50, 0x55, 0x73, 0x63, 0x68, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x73, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x27, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x62, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d,
	0x61, 0x78, 0x53, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2b, 0x0a, 0x0a, 0x4d, 0x61,
	0x78, 0x50, 0x6f, 0x70, 0x65, 0x72, 0x50, 0x66, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x61, 0x74, 0x31, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x42, 0x61,
	0x72, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d,
	0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x45, 0x75, 0x74, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4d, 0x61,
	0x78, 0x45, 0x75, 0x74, 0x72, 0x61, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11,
	0x4d, 0x61, 0x78, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x38, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03,
	0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x4d, 0x61,
	0x78, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x74, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x45, 0x75, 0x74, 0x72, 0x61, 0x44, 0x4c,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a,
	0x03, 0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x4d,
	0x61, 0x78, 0x45, 0x75, 0x74, 0x72, 0x61, 0x55, 0x4c, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x02, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x53, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x1e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x1a, 0x03, 0x08, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a,
	0x13, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x43, 0x63, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x61, 0x74,
	0x52, 0x53, 0x74, 0x64, 0x46, 0x72, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x48, 0x72,
	0x6e, 0x6e, 0x4c, 0x65, 0x6e, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x30,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x4e, 0x70,
	0x6e, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x23, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x4f, 0x66, 0x4d, 0x69,
	0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78,
	0x4b, 0x30, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x4b, 0x32, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x72, 0x31, 0x36,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x31, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x44, 0x63, 0x69, 0x32, 0x36, 0x53, 0x69, 0x7a, 0x65, 0x72,
	0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x8c, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x32, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x44, 0x63, 0x69, 0x32, 0x36, 0x53, 0x69,
	0x7a, 0x65, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x8b, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x55, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x30, 0x50, 0x55, 0x73,
	0x63, 0x68, 0x53, 0x65, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x4f, 0x6e,
	0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x69, 0x62, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d,
	0x61, 0x78, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x53, 0x69, 0x62,
	0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x43, 0x69, 0x44, 0x43, 0x69, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x7e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x17, 0x4d,
	0x61, 0x78, 0x43, 0x69, 0x44, 0x43, 0x69, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x7d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x57, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61,
	0x78, 0x57, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d,
	0x61, 0x78, 0x52, 0x61, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e,
	0x4d, 0x61, 0x78, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31, 0x36, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a,
	0x0f, 0x4d, 0x61, 0x78, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x31, 0x72, 0x31, 0x36,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x34, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x50, 0x73, 0x73, 0x63, 0x68, 0x54, 0x78, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x1a, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x43, 0x6c, 0x69, 0x52, 0x53, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6c, 0x69,
	0x52, 0x53, 0x73, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x31, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6c, 0x69, 0x53, 0x52,
	0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0f,
	0x4d, 0x61, 0x78, 0x43, 0x6c, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x31, 0x36, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40,
	0x0a, 0x1f, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72, 0x31,
	0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x41, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0b, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x1f, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x43, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x32, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x23, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x63, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x1f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x70, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x72,
	0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x70, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x6f, 0x66, 0x53, 0x70, 0x73, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x44, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f,
	0x0a, 0x1e, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x75, 0x63, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x31, 0x72, 0x31, 0x36,
	0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x54, 0x63, 0x69, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x4d,
	0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x54, 0x78, 0x44, 0x63, 0x54, 0x77, 0x6f, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x40, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x23, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f,
	0x66, 0x50, 0x64, 0x63, 0x63, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x31, 0x72, 0x31, 0x36, 0x12, 0x1d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x07, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x9b, 0x03, 0x0a,
	0x25, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x12, 0x32, 0x0a, 0x2e, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x53, 0x45, 0x4d, 0x49,
	0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50,
	0x55, 0x53, 0x43, 0x48, 0x5f, 0x53, 0x4c, 0x35, 0x10, 0x00, 0x12, 0x33, 0x0a, 0x2f, 0x52, 0x45,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f,
	0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x5f, 0x53, 0x4c, 0x31, 0x30, 0x10, 0x01, 0x12,
	0x33, 0x0a, 0x2f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53,
	0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x5f, 0x53, 0x4c,
	0x32, 0x30, 0x10, 0x02, 0x12, 0x33, 0x0a, 0x2f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53,
	0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50,
	0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53,
	0x43, 0x48, 0x5f, 0x53, 0x4c, 0x34, 0x30, 0x10, 0x03, 0x12, 0x33, 0x0a, 0x2f, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x53,
	0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f,
	0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x5f, 0x53, 0x4c, 0x38, 0x30, 0x10, 0x04, 0x12, 0x34,
	0x0a, 0x30, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54,
	0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x5f, 0x53, 0x4c, 0x31,
	0x36, 0x30, 0x10, 0x05, 0x12, 0x34, 0x0a, 0x30, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53,
	0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50,
	0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53,
	0x43, 0x48, 0x5f, 0x53, 0x4c, 0x33, 0x32, 0x30, 0x10, 0x06, 0x2a, 0x7d, 0x0a, 0x1f, 0x50, 0x64,
	0x73, 0x63, 0x68, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x46, 0x6f, 0x72,
	0x43, 0x73, 0x69, 0x63, 0x72, 0x69, 0x52, 0x69, 0x69, 0x31, 0x43, 0x71, 0x69, 0x12, 0x2c, 0x0a,
	0x28, 0x50, 0x44, 0x53, 0x43, 0x48, 0x5f, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x53, 0x49,
	0x5a, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x53, 0x49, 0x43, 0x52, 0x49, 0x5f, 0x52, 0x49,
	0x49, 0x31, 0x5f, 0x43, 0x51, 0x49, 0x5f, 0x4e, 0x32, 0x10, 0x00, 0x12, 0x2c, 0x0a, 0x28, 0x50,
	0x44, 0x53, 0x43, 0x48, 0x5f, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45,
	0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x53, 0x49, 0x43, 0x52, 0x49, 0x5f, 0x52, 0x49, 0x49, 0x31,
	0x5f, 0x43, 0x51, 0x49, 0x5f, 0x4e, 0x34, 0x10, 0x01, 0x2a, 0xaa, 0x01, 0x0a, 0x29, 0x43, 0x71,
	0x69, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x3a, 0x43, 0x51, 0x49, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x4f, 0x52, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x49, 0x44, 0x45, 0x42, 0x41, 0x4e,
	0x44, 0x5f, 0x43, 0x51, 0x49, 0x10, 0x00, 0x12, 0x3d, 0x0a, 0x39, 0x43, 0x51, 0x49, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x4f, 0x52, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x42, 0x41, 0x4e, 0x44,
	0x5f, 0x43, 0x51, 0x49, 0x10, 0x01, 0x2a, 0xaa, 0x01, 0x0a, 0x29, 0x50, 0x6d, 0x69, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x3a, 0x50, 0x4d, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x4f, 0x52, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x49, 0x44, 0x45, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x50,
	0x4d, 0x49, 0x10, 0x00, 0x12, 0x3d, 0x0a, 0x39, 0x50, 0x4d, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x4f, 0x52, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x4d,
	0x49, 0x10, 0x01, 0x2a, 0xd0, 0x01, 0x0a, 0x34, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x73, 0x69,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x49, 0x0a, 0x45,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x4d, 0x45, 0x41,
	0x53, 0x55, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x55, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x4d, 0x0a, 0x49, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x4d, 0x45, 0x41, 0x53, 0x55, 0x52, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x53, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x55, 0x52, 0x45, 0x44, 0x10, 0x01, 0x2a, 0xdf, 0x01, 0x0a, 0x39, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x4e, 0x0a, 0x4a, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x53,
	0x54, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x4d, 0x45, 0x41, 0x53, 0x55, 0x52,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x52, 0x0a, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x53,
	0x54, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x4d, 0x45, 0x41, 0x53, 0x55, 0x52,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x55, 0x52, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x54, 0x0a, 0x14, 0x44, 0x75, 0x6d, 0x6d,
	0x79, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1d, 0x0a, 0x19, 0x44, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x31, 0x10, 0x00, 0x12,
	0x1d, 0x0a, 0x19, 0x44, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x32, 0x10, 0x01, 0x2a, 0x9c,
	0x01, 0x0a, 0x16, 0x4e, 0x72, 0x6f, 0x66, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52,
	0x73, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x52, 0x4f,
	0x46, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x53, 0x44, 0x49, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x4e, 0x31, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x52,
	0x4f, 0x46, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x53, 0x44, 0x49,
	0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x4e, 0x32, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4e,
	0x52, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x53, 0x44,
	0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x4e, 0x33, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b,
	0x4e, 0x52, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x53,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x4e, 0x34, 0x10, 0x03, 0x2a, 0xb5, 0x01,
	0x0a, 0x17, 0x43, 0x71, 0x69, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x51, 0x49,
	0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x31, 0x10, 0x00,
	0x12, 0x25, 0x0a, 0x21, 0x43, 0x51, 0x49, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x53,
	0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54,
	0x41, 0x42, 0x4c, 0x45, 0x32, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x51, 0x49, 0x5f, 0x54,
	0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x33, 0x10, 0x02, 0x12, 0x25,
	0x0a, 0x21, 0x43, 0x51, 0x49, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x53, 0x49, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x53, 0x50, 0x41,
	0x52, 0x45, 0x31, 0x10, 0x03, 0x2a, 0x70, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x62, 0x61, 0x6e, 0x64,
	0x53, 0x69, 0x7a, 0x65, 0x43, 0x73, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x24, 0x53, 0x55, 0x42, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x53,
	0x49, 0x5a, 0x45, 0x5f, 0x43, 0x53, 0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x31, 0x10, 0x00, 0x12, 0x28, 0x0a,
	0x24, 0x53, 0x55, 0x42, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x43, 0x53,
	0x49, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x56,
	0x41, 0x4c, 0x55, 0x45, 0x32, 0x10, 0x01, 0x2a, 0xec, 0x01, 0x0a, 0x2f, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76, 0x31, 0x35, 0x33,
	0x30, 0x73, 0x65, 0x6d, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x50, 0x75, 0x73, 0x63, 0x68, 0x76, 0x31, 0x35, 0x33, 0x30, 0x12, 0x3c, 0x0a, 0x38, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x56, 0x31, 0x35, 0x33, 0x30, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49,
	0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x56, 0x31,
	0x35, 0x33, 0x30, 0x5f, 0x53, 0x4c, 0x34, 0x10, 0x00, 0x12, 0x3c, 0x0a, 0x38, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x56,
	0x31, 0x35, 0x33, 0x30, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54,
	0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x56, 0x31, 0x35, 0x33,
	0x30, 0x5f, 0x53, 0x4c, 0x38, 0x10, 0x01, 0x12, 0x3d, 0x0a, 0x39, 0x52, 0x45, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x56, 0x31, 0x35,
	0x33, 0x30, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e,
	0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x43, 0x48, 0x56, 0x31, 0x35, 0x33, 0x30, 0x5f,
	0x53, 0x4c, 0x31, 0x36, 0x10, 0x02, 0x2a, 0x96, 0x02, 0x0a, 0x2c, 0x50, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67,
	0x53, 0x69, 0x7a, 0x65, 0x74, 0x79, 0x70, 0x65, 0x49, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x34, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49,
	0x4e, 0x47, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x31, 0x10,
	0x00, 0x12, 0x38, 0x0a, 0x34, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x32, 0x10, 0x01, 0x12, 0x38, 0x0a, 0x34, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41,
	0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4e, 0x33, 0x10, 0x02, 0x12, 0x38, 0x0a, 0x34, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x34, 0x10, 0x03, 0x2a,
	0x5a, 0x0a, 0x16, 0x50, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x74, 0x79, 0x70, 0x65, 0x32, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x48, 0x41,
	0x53, 0x45, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x42, 0x45, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45,
	0x54, 0x59, 0x50, 0x45, 0x32, 0x5f, 0x4e, 0x34, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x48,
	0x41, 0x53, 0x45, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x42, 0x45, 0x54, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x54, 0x59, 0x50, 0x45, 0x32, 0x5f, 0x4e, 0x38, 0x10, 0x01, 0x2a, 0x71, 0x0a, 0x12, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x42, 0x65, 0x61, 0x6d, 0x73, 0x74, 0x79, 0x70, 0x65,
	0x32, 0x12, 0x1c, 0x0a, 0x18, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x5f, 0x42,
	0x45, 0x41, 0x4d, 0x53, 0x54, 0x59, 0x50, 0x45, 0x32, 0x5f, 0x54, 0x57, 0x4f, 0x10, 0x00, 0x12,
	0x1e, 0x0a, 0x1a, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x5f, 0x42, 0x45, 0x41,
	0x4d, 0x53, 0x54, 0x59, 0x50, 0x45, 0x32, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x10, 0x01, 0x12,
	0x1d, 0x0a, 0x19, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x5f, 0x42, 0x45, 0x41,
	0x4d, 0x53, 0x54, 0x59, 0x50, 0x45, 0x32, 0x5f, 0x46, 0x4f, 0x55, 0x52, 0x10, 0x02, 0x2a, 0xb4,
	0x02, 0x0a, 0x32, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x72, 0x31, 0x36, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x72, 0x31, 0x36, 0x12, 0x3e, 0x0a, 0x3a, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x52, 0x31, 0x36, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36,
	0x5f, 0x4e, 0x31, 0x10, 0x00, 0x12, 0x3e, 0x0a, 0x3a, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x52, 0x31, 0x36, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36,
	0x5f, 0x4e, 0x32, 0x10, 0x01, 0x12, 0x3e, 0x0a, 0x3a, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x52, 0x31, 0x36, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36,
	0x5f, 0x4e, 0x33, 0x10, 0x02, 0x12, 0x3e, 0x0a, 0x3a, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x52, 0x31, 0x36, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x49, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x31, 0x36,
	0x5f, 0x4e, 0x34, 0x10, 0x03, 0x42, 0x19, 0x5a, 0x17, 0x2e, 0x2f, 0x6e, 0x72, 0x2d, 0x72, 0x72,
	0x63, 0x2d, 0x69, 0x65, 0x73, 0x3b, 0x6e, 0x72, 0x72, 0x72, 0x63, 0x69, 0x65, 0x73, 0x76, 0x32,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_CSI_ReportConfig_proto_rawDescOnce sync.Once
	file_CSI_ReportConfig_proto_rawDescData = file_CSI_ReportConfig_proto_rawDesc
)

func file_CSI_ReportConfig_proto_rawDescGZIP() []byte {
	file_CSI_ReportConfig_proto_rawDescOnce.Do(func() {
		file_CSI_ReportConfig_proto_rawDescData = protoimpl.X.CompressGZIP(file_CSI_ReportConfig_proto_rawDescData)
	})
	return file_CSI_ReportConfig_proto_rawDescData
}

var file_CSI_ReportConfig_proto_enumTypes = make([]protoimpl.EnumInfo, 15)
var file_CSI_ReportConfig_proto_msgTypes = make([]protoimpl.MessageInfo, 330)
var file_CSI_ReportConfig_proto_goTypes = []interface{}{
	(ReportSlotConfigsemiPersistentOnPusch)(0),                     // 0: _csi_report_config.v2.ReportSlotConfigsemiPersistentOnPusch
	(PdschBundleSizeForCsicriRii1Cqi)(0),                           // 1: _csi_report_config.v2.PdschBundleSizeForCsicriRii1Cqi
	(CqiFormatIndicatorreportFreqConfiguration)(0),                 // 2: _csi_report_config.v2.CqiFormatIndicatorreportFreqConfiguration
	(PmiFormatIndicatorreportFreqConfiguration)(0),                 // 3: _csi_report_config.v2.PmiFormatIndicatorreportFreqConfiguration
	(TimeRestrictionForChannelMeasurementsCsireportConfig)(0),      // 4: _csi_report_config.v2.TimeRestrictionForChannelMeasurementsCsireportConfig
	(TimeRestrictionForInterferenceMeasurementsCsireportConfig)(0), // 5: _csi_report_config.v2.TimeRestrictionForInterferenceMeasurementsCsireportConfig
	(DummyCsireportConfig)(0),                                      // 6: _csi_report_config.v2.DummyCsireportConfig
	(NrofReportedRsdisabled)(0),                                    // 7: _csi_report_config.v2.NrofReportedRsdisabled
	(CqiTableCsireportConfig)(0),                                   // 8: _csi_report_config.v2.CqiTableCsireportConfig
	(SubbandSizeCsireportConfig)(0),                                // 9: _csi_report_config.v2.SubbandSizeCsireportConfig
	(ReportSlotConfigv1530SemiPersistentOnPuschv1530)(0),           // 10: _csi_report_config.v2.ReportSlotConfigv1530semiPersistentOnPuschv1530
	(PortSelectionSamplingSizetypeIiportSelection)(0),              // 11: _csi_report_config.v2.PortSelectionSamplingSizetypeIiportSelection
	(PhaseAlphabetSizetype2)(0),                                    // 12: _csi_report_config.v2.PhaseAlphabetSizetype2
	(NumberOfBeamstype2)(0),                                        // 13: _csi_report_config.v2.NumberOfBeamstype2
	(PortSelectionSamplingSizer16TypeIiportSelectionr16)(0),        // 14: _csi_report_config.v2.PortSelectionSamplingSizer16typeIiportSelectionr16
	(*CsiReportConfigId)(nil),                                      // 15: _csi_report_config.v2.CsiReportConfigId
	(*PeriodicreportConfigType)(nil),                               // 16: _csi_report_config.v2.PeriodicreportConfigType
	(*SemiPersistentOnPucchreportConfigType)(nil),                  // 17: _csi_report_config.v2.SemiPersistentOnPucchreportConfigType
	(*SemiPersistentOnPuschreportConfigType)(nil),                  // 18: _csi_report_config.v2.SemiPersistentOnPuschreportConfigType
	(*AperiodicreportConfigType)(nil),                              // 19: _csi_report_config.v2.AperiodicreportConfigType
	(*ReportConfigTypeCsiReportConfig)(nil),                        // 20: _csi_report_config.v2.ReportConfigTypeCsiReportConfig
	(*CriRIi1CQireportQuantity)(nil),                               // 21: _csi_report_config.v2.CriRIi1CQireportQuantity
	(*ReportQuantityCsiReportConfig)(nil),                          // 22: _csi_report_config.v2.ReportQuantityCsiReportConfig
	(*CsiReportingBandreportFreqConfiguration)(nil),                // 23: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration
	(*ReportFreqConfigurationCsiReportConfig)(nil),                 // 24: _csi_report_config.v2.ReportFreqConfigurationCsiReportConfig
	(*DisabledgroupBasedBeamReporting)(nil),                        // 25: _csi_report_config.v2.DisabledgroupBasedBeamReporting
	(*GroupBasedBeamReportingCsiReportConfig)(nil),                 // 26: _csi_report_config.v2.GroupBasedBeamReportingCsiReportConfig
	(*SemiPersistentOnPuschv1530CsiReportConfig)(nil),              // 27: _csi_report_config.v2.SemiPersistentOnPuschv1530CsiReportConfig
	(*SemiPersistentOnPuschv1610CsiReportConfig)(nil),              // 28: _csi_report_config.v2.SemiPersistentOnPuschv1610CsiReportConfig
	(*Aperiodicv1610CsiReportConfig)(nil),                          // 29: _csi_report_config.v2.Aperiodicv1610CsiReportConfig
	(*ReportQuantityr16CsiReportConfig)(nil),                       // 30: _csi_report_config.v2.ReportQuantityr16CsiReportConfig
	(*CsiReportConfig)(nil),                                        // 31: _csi_report_config.v2.CsiReportConfig
	(*CsiReportPeriodicityAndOffset)(nil),                          // 32: _csi_report_config.v2.CsiReportPeriodicityAndOffset
	(*PucchCSiResource)(nil),                                       // 33: _csi_report_config.v2.PucchCSiResource
	(*PortIndex8PortIndexFor8Ranks)(nil),                           // 34: _csi_report_config.v2.PortIndex8PortIndexFor8Ranks
	(*PortIndex4PortIndexFor8Ranks)(nil),                           // 35: _csi_report_config.v2.PortIndex4PortIndexFor8Ranks
	(*PortIndex2PortIndexFor8Ranks)(nil),                           // 36: _csi_report_config.v2.PortIndex2PortIndexFor8Ranks
	(*PortIndexFor8Ranks)(nil),                                     // 37: _csi_report_config.v2.PortIndexFor8Ranks
	(*PortIndex8)(nil),                                             // 38: _csi_report_config.v2.PortIndex8
	(*PortIndex4)(nil),                                             // 39: _csi_report_config.v2.PortIndex4
	(*PortIndex2)(nil),                                             // 40: _csi_report_config.v2.PortIndex2
	(*ServCellIndex)(nil),                                          // 41: _csi_report_config.v2.ServCellIndex
	(*CsiResourceConfigId)(nil),                                    // 42: _csi_report_config.v2.CsiResourceConfigId
	(*P0PUschAlphaSetId)(nil),                                      // 43: _csi_report_config.v2.P0PUschAlphaSetId
	(*TwonrOfAntennaPorts)(nil),                                    // 44: _csi_report_config.v2.TwonrOfAntennaPorts
	(*N1N2MoreThanTwo)(nil),                                        // 45: _csi_report_config.v2.N1n2moreThanTwo
	(*MoreThanTwonrOfAntennaPorts)(nil),                            // 46: _csi_report_config.v2.MoreThanTwonrOfAntennaPorts
	(*NrOfAntennaPortstypeISinglePanel)(nil),                       // 47: _csi_report_config.v2.NrOfAntennaPortstypeISinglePanel
	(*TypeISinglePanelsubType)(nil),                                // 48: _csi_report_config.v2.TypeISinglePanelsubType
	(*Ngn1N2TypeIMultiPanel)(nil),                                  // 49: _csi_report_config.v2.Ngn1n2typeIMultiPanel
	(*TypeIMultiPanelsubType)(nil),                                 // 50: _csi_report_config.v2.TypeIMultiPanelsubType
	(*SubTypetype1)(nil),                                           // 51: _csi_report_config.v2.SubTypetype1
	(*Type1CodebookType)(nil),                                      // 52: _csi_report_config.v2.Type1codebookType
	(*N1N2CodebookSubsetRestrictiontypeIi)(nil),                    // 53: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi
	(*TypeIisubType)(nil),                                          // 54: _csi_report_config.v2.TypeIisubType
	(*TypeIiPortSelectionsubType)(nil),                             // 55: _csi_report_config.v2.TypeIiPortSelectionsubType
	(*SubTypetype2)(nil),                                           // 56: _csi_report_config.v2.SubTypetype2
	(*Type2CodebookType)(nil),                                      // 57: _csi_report_config.v2.Type2codebookType
	(*CodebookTypeCodebookConfig)(nil),                             // 58: _csi_report_config.v2.CodebookTypeCodebookConfig
	(*CodebookConfig)(nil),                                         // 59: _csi_report_config.v2.CodebookConfig
	(*N1N2CodebookSubsetRestrictionr16TypeIir16)(nil),              // 60: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16
	(*TypeIir16SubType)(nil),                                       // 61: _csi_report_config.v2.TypeIir16subType
	(*TypeIiPortSelectionr16SubType)(nil),                          // 62: _csi_report_config.v2.TypeIiPortSelectionr16subType
	(*SubTypetype2R16)(nil),                                        // 63: _csi_report_config.v2.SubTypetype2r16
	(*Type2R16CodebookTyper16)(nil),                                // 64: _csi_report_config.v2.Type2r16codebookTyper16
	(*CodebookTyper16CodebookConfigr16)(nil),                       // 65: _csi_report_config.v2.CodebookTyper16CodebookConfigr16
	(*CodebookConfigr16)(nil),                                      // 66: _csi_report_config.v2.CodebookConfigr16
	(*BwpId)(nil),                                                  // 67: _csi_report_config.v2.BwpId
	(*PucchResourceId)(nil),                                        // 68: _csi_report_config.v2.PucchResourceId
	(*MaxAiDCiPayloadSizer16)(nil),                                 // 69: _csi_report_config.v2.MaxAiDCiPayloadSizer16
	(*MaxAiDCiPayloadSize1R16)(nil),                                // 70: _csi_report_config.v2.MaxAiDCiPayloadSize1r16
	(*MaxBandComb)(nil),                                            // 71: _csi_report_config.v2.MaxBandComb
	(*MaxBandsUtraFDdr16)(nil),                                     // 72: _csi_report_config.v2.MaxBandsUtraFDdr16
	(*MaxBhRLcChannelIdr16)(nil),                                   // 73: _csi_report_config.v2.MaxBhRLcChannelIdr16
	(*MaxBtIdReportr16)(nil),                                       // 74: _csi_report_config.v2.MaxBtIdReportr16
	(*MaxBtNamer16)(nil),                                           // 75: _csi_report_config.v2.MaxBtNamer16
	(*MaxCagCellr16)(nil),                                          // 76: _csi_report_config.v2.MaxCagCellr16
	(*MaxTwoPucchGrpConfigListr16)(nil),                            // 77: _csi_report_config.v2.MaxTwoPucchGrpConfigListr16
	(*MaxCbrConfigr16)(nil),                                        // 78: _csi_report_config.v2.MaxCbrConfigr16
	(*MaxCbrConfig1R16)(nil),                                       // 79: _csi_report_config.v2.MaxCbrConfig1r16
	(*MaxCbrLevelr16)(nil),                                         // 80: _csi_report_config.v2.MaxCbrLevelr16
	(*MaxCbrLevel1R16)(nil),                                        // 81: _csi_report_config.v2.MaxCbrLevel1r16
	(*MaxCellBlack)(nil),                                           // 82: _csi_report_config.v2.MaxCellBlack
	(*MaxCellGroupingsr16)(nil),                                    // 83: _csi_report_config.v2.MaxCellGroupingsr16
	(*MaxCellHistoryr16)(nil),                                      // 84: _csi_report_config.v2.MaxCellHistoryr16
	(*MaxCellInter)(nil),                                           // 85: _csi_report_config.v2.MaxCellInter
	(*MaxCellIntra)(nil),                                           // 86: _csi_report_config.v2.MaxCellIntra
	(*MaxCellMeasEutra)(nil),                                       // 87: _csi_report_config.v2.MaxCellMeasEutra
	(*MaxCellMeasIdler16)(nil),                                     // 88: _csi_report_config.v2.MaxCellMeasIdler16
	(*MaxCellMeasUtraFDdr16)(nil),                                  // 89: _csi_report_config.v2.MaxCellMeasUtraFDdr16
	(*MaxCarrierTypePairListr16)(nil),                              // 90: _csi_report_config.v2.MaxCarrierTypePairListr16
	(*MaxCellWhite)(nil),                                           // 91: _csi_report_config.v2.MaxCellWhite
	(*MaxEarfcn)(nil),                                              // 92: _csi_report_config.v2.MaxEarfcn
	(*MaxEutraCellBlack)(nil),                                      // 93: _csi_report_config.v2.MaxEutraCellBlack
	(*MaxEutraNSPmax)(nil),                                         // 94: _csi_report_config.v2.MaxEutraNSPmax
	(*MaxLogMeasReportr16)(nil),                                    // 95: _csi_report_config.v2.MaxLogMeasReportr16
	(*MaxMultiBands)(nil),                                          // 96: _csi_report_config.v2.MaxMultiBands
	(*MaxNarfcn)(nil),                                              // 97: _csi_report_config.v2.MaxNarfcn
	(*MaxNrNSPmax)(nil),                                            // 98: _csi_report_config.v2.MaxNrNSPmax
	(*MaxFreqIdler16)(nil),                                         // 99: _csi_report_config.v2.MaxFreqIdler16
	(*MaxNrofServingCells)(nil),                                    // 100: _csi_report_config.v2.MaxNrofServingCells
	(*MaxNrofServingCells1)(nil),                                   // 101: _csi_report_config.v2.MaxNrofServingCells1
	(*MaxNrofAggregatedCellsPerCellGroup)(nil),                     // 102: _csi_report_config.v2.MaxNrofAggregatedCellsPerCellGroup
	(*MaxNrofAggregatedCellsPerCellGroupMinus4R16)(nil),            // 103: _csi_report_config.v2.MaxNrofAggregatedCellsPerCellGroupMinus4r16
	(*MaxNrofDucellsr16)(nil),                                      // 104: _csi_report_config.v2.MaxNrofDucellsr16
	(*MaxNrofAvailabilityCombinationsPerSetr16)(nil),               // 105: _csi_report_config.v2.MaxNrofAvailabilityCombinationsPerSetr16
	(*MaxNrofAvailabilityCombinationsPerSet1R16)(nil),              // 106: _csi_report_config.v2.MaxNrofAvailabilityCombinationsPerSet1r16
	(*MaxNrofScells)(nil),                                          // 107: _csi_report_config.v2.MaxNrofScells
	(*MaxNrofCellMeas)(nil),                                        // 108: _csi_report_config.v2.MaxNrofCellMeas
	(*MaxNrofCgSLr16)(nil),                                         // 109: _csi_report_config.v2.MaxNrofCgSLr16
	(*MaxNrofCgSL1R16)(nil),                                        // 110: _csi_report_config.v2.MaxNrofCgSL1r16
	(*MaxNrofSsBlocksToAverage)(nil),                               // 111: _csi_report_config.v2.MaxNrofSsBlocksToAverage
	(*MaxNrofCondCellsr16)(nil),                                    // 112: _csi_report_config.v2.MaxNrofCondCellsr16
	(*MaxNrofCsiRSResourcesToAverage)(nil),                         // 113: _csi_report_config.v2.MaxNrofCsiRSResourcesToAverage
	(*MaxNrofDlAllocations)(nil),                                   // 114: _csi_report_config.v2.MaxNrofDlAllocations
	(*MaxNrofSrConfigPerCellGroup)(nil),                            // 115: _csi_report_config.v2.MaxNrofSrConfigPerCellGroup
	(*MaxLcgID)(nil),                                               // 116: _csi_report_config.v2.MaxLcgID
	(*MaxLcID)(nil),                                                // 117: _csi_report_config.v2.MaxLcID
	(*MaxLcIDIabr16)(nil),                                          // 118: _csi_report_config.v2.MaxLcIDIabr16
	(*MaxLteCRsPatternsr16)(nil),                                   // 119: _csi_report_config.v2.MaxLteCRsPatternsr16
	(*MaxNrofTags)(nil),                                            // 120: _csi_report_config.v2.MaxNrofTags
	(*MaxNrofTags1)(nil),                                           // 121: _csi_report_config.v2.MaxNrofTags1
	(*MaxNrofBwps)(nil),                                            // 122: _csi_report_config.v2.MaxNrofBwps
	(*MaxNrofCombIdc)(nil),                                         // 123: _csi_report_config.v2.MaxNrofCombIdc
	(*MaxNrofSymbols1)(nil),                                        // 124: _csi_report_config.v2.MaxNrofSymbols1
	(*MaxNrofSlots)(nil),                                           // 125: _csi_report_config.v2.MaxNrofSlots
	(*MaxNrofSlots1)(nil),                                          // 126: _csi_report_config.v2.MaxNrofSlots1
	(*MaxNrofPhysicalResourceBlocks)(nil),                          // 127: _csi_report_config.v2.MaxNrofPhysicalResourceBlocks
	(*MaxNrofPhysicalResourceBlocks1)(nil),                         // 128: _csi_report_config.v2.MaxNrofPhysicalResourceBlocks1
	(*MaxNrofPhysicalResourceBlocksPlus1)(nil),                     // 129: _csi_report_config.v2.MaxNrofPhysicalResourceBlocksPlus1
	(*MaxNrofControlResourceSets)(nil),                             // 130: _csi_report_config.v2.MaxNrofControlResourceSets
	(*MaxNrofControlResourceSets1)(nil),                            // 131: _csi_report_config.v2.MaxNrofControlResourceSets1
	(*MaxNrofControlResourceSets1R16)(nil),                         // 132: _csi_report_config.v2.MaxNrofControlResourceSets1r16
	(*MaxNrofCoresetPoolsr16)(nil),                                 // 133: _csi_report_config.v2.MaxNrofCoresetPoolsr16
	(*MaxCoReSetDuration)(nil),                                     // 134: _csi_report_config.v2.MaxCoReSetDuration
	(*MaxNrofSearchSpaces1)(nil),                                   // 135: _csi_report_config.v2.MaxNrofSearchSpaces1
	(*MaxSfiDCiPayloadSize)(nil),                                   // 136: _csi_report_config.v2.MaxSfiDCiPayloadSize
	(*MaxSfiDCiPayloadSize1)(nil),                                  // 137: _csi_report_config.v2.MaxSfiDCiPayloadSize1
	(*MaxIabIPAddressr16)(nil),                                     // 138: _csi_report_config.v2.MaxIabIPAddressr16
	(*MaxIntDCiPayloadSize)(nil),                                   // 139: _csi_report_config.v2.MaxIntDCiPayloadSize
	(*MaxIntDCiPayloadSize1)(nil),                                  // 140: _csi_report_config.v2.MaxIntDCiPayloadSize1
	(*MaxNrofRateMatchPatterns)(nil),                               // 141: _csi_report_config.v2.MaxNrofRateMatchPatterns
	(*MaxNrofRateMatchPatterns1)(nil),                              // 142: _csi_report_config.v2.MaxNrofRateMatchPatterns1
	(*MaxNrofRateMatchPatternsPerGroup)(nil),                       // 143: _csi_report_config.v2.MaxNrofRateMatchPatternsPerGroup
	(*MaxNrofCsiReportConfigurations)(nil),                         // 144: _csi_report_config.v2.MaxNrofCsiReportConfigurations
	(*MaxNrofCsiReportConfigurations1)(nil),                        // 145: _csi_report_config.v2.MaxNrofCsiReportConfigurations1
	(*MaxNrofCsiResourceConfigurations)(nil),                       // 146: _csi_report_config.v2.MaxNrofCsiResourceConfigurations
	(*MaxNrofCsiResourceConfigurations1)(nil),                      // 147: _csi_report_config.v2.MaxNrofCsiResourceConfigurations1
	(*MaxNrofApCSiRSResourcesPerSet)(nil),                          // 148: _csi_report_config.v2.MaxNrofApCSiRSResourcesPerSet
	(*MaxNrOfCsiAperiodicTriggers)(nil),                            // 149: _csi_report_config.v2.MaxNrOfCsiAperiodicTriggers
	(*MaxNrofReportConfigPerAperiodicTrigger)(nil),                 // 150: _csi_report_config.v2.MaxNrofReportConfigPerAperiodicTrigger
	(*MaxNrofNzpCSiRSResources)(nil),                               // 151: _csi_report_config.v2.MaxNrofNzpCSiRSResources
	(*MaxNrofNzpCSiRSResources1)(nil),                              // 152: _csi_report_config.v2.MaxNrofNzpCSiRSResources1
	(*MaxNrofNzpCSiRSResourcesPerSet)(nil),                         // 153: _csi_report_config.v2.MaxNrofNzpCSiRSResourcesPerSet
	(*MaxNrofNzpCSiRSResourceSets)(nil),                            // 154: _csi_report_config.v2.MaxNrofNzpCSiRSResourceSets
	(*MaxNrofNzpCSiRSResourceSets1)(nil),                           // 155: _csi_report_config.v2.MaxNrofNzpCSiRSResourceSets1
	(*MaxNrofNzpCSiRSResourceSetsPerConfig)(nil),                   // 156: _csi_report_config.v2.MaxNrofNzpCSiRSResourceSetsPerConfig
	(*MaxNrofNzpCSiRSResourcesPerConfig)(nil),                      // 157: _csi_report_config.v2.MaxNrofNzpCSiRSResourcesPerConfig
	(*MaxNrofZpCSiRSResources)(nil),                                // 158: _csi_report_config.v2.MaxNrofZpCSiRSResources
	(*MaxNrofZpCSiRSResources1)(nil),                               // 159: _csi_report_config.v2.MaxNrofZpCSiRSResources1
	(*MaxNrofZpCSiRSResourceSets1)(nil),                            // 160: _csi_report_config.v2.MaxNrofZpCSiRSResourceSets1
	(*MaxNrofZpCSiRSResourcesPerSet)(nil),                          // 161: _csi_report_config.v2.MaxNrofZpCSiRSResourcesPerSet
	(*MaxNrofZpCSiRSResourceSets)(nil),                             // 162: _csi_report_config.v2.MaxNrofZpCSiRSResourceSets
	(*MaxNrofCsiIMResources)(nil),                                  // 163: _csi_report_config.v2.MaxNrofCsiIMResources
	(*MaxNrofCsiIMResources1)(nil),                                 // 164: _csi_report_config.v2.MaxNrofCsiIMResources1
	(*MaxNrofCsiIMResourcesPerSet)(nil),                            // 165: _csi_report_config.v2.MaxNrofCsiIMResourcesPerSet
	(*MaxNrofCsiIMResourceSets)(nil),                               // 166: _csi_report_config.v2.MaxNrofCsiIMResourceSets
	(*MaxNrofCsiIMResourceSets1)(nil),                              // 167: _csi_report_config.v2.MaxNrofCsiIMResourceSets1
	(*MaxNrofCsiIMResourceSetsPerConfig)(nil),                      // 168: _csi_report_config.v2.MaxNrofCsiIMResourceSetsPerConfig
	(*MaxNrofCsiSSbResourcePerSet)(nil),                            // 169: _csi_report_config.v2.MaxNrofCsiSSbResourcePerSet
	(*MaxNrofCsiSSbResourceSets)(nil),                              // 170: _csi_report_config.v2.MaxNrofCsiSSbResourceSets
	(*MaxNrofCsiSSbResourceSets1)(nil),                             // 171: _csi_report_config.v2.MaxNrofCsiSSbResourceSets1
	(*MaxNrofCsiSSbResourceSetsPerConfig)(nil),                     // 172: _csi_report_config.v2.MaxNrofCsiSSbResourceSetsPerConfig
	(*MaxNrofFailureDetectionResources)(nil),                       // 173: _csi_report_config.v2.MaxNrofFailureDetectionResources
	(*MaxNrofFailureDetectionResources1)(nil),                      // 174: _csi_report_config.v2.MaxNrofFailureDetectionResources1
	(*MaxNrofFreqSlr16)(nil),                                       // 175: _csi_report_config.v2.MaxNrofFreqSlr16
	(*MaxNrofSlBWpsr16)(nil),                                       // 176: _csi_report_config.v2.MaxNrofSlBWpsr16
	(*MaxFreqSlEUtrar16)(nil),                                      // 177: _csi_report_config.v2.MaxFreqSlEUtrar16
	(*MaxNrofSlMeasIdr16)(nil),                                     // 178: _csi_report_config.v2.MaxNrofSlMeasIdr16
	(*MaxNrofSlObjectIdr16)(nil),                                   // 179: _csi_report_config.v2.MaxNrofSlObjectIdr16
	(*MaxNrofSlReportConfigIdr16)(nil),                             // 180: _csi_report_config.v2.MaxNrofSlReportConfigIdr16
	(*MaxNrofSlPoolToMeasureNrr16)(nil),                            // 181: _csi_report_config.v2.MaxNrofSlPoolToMeasureNrr16
	(*MaxFreqSlNRr16)(nil),                                         // 182: _csi_report_config.v2.MaxFreqSlNRr16
	(*MaxNrofSlQFisr16)(nil),                                       // 183: _csi_report_config.v2.MaxNrofSlQFisr16
	(*MaxNrofSlQFisPerDestr16)(nil),                                // 184: _csi_report_config.v2.MaxNrofSlQFisPerDestr16
	(*MaxNrofObjectId)(nil),                                        // 185: _csi_report_config.v2.MaxNrofObjectId
	(*MaxNrofPageRec)(nil),                                         // 186: _csi_report_config.v2.MaxNrofPageRec
	(*MaxNrofPciRanges)(nil),                                       // 187: _csi_report_config.v2.MaxNrofPciRanges
	(*MaxPlmn)(nil),                                                // 188: _csi_report_config.v2.MaxPlmn
	(*MaxNrofCsiRSResourcesRrm)(nil),                               // 189: _csi_report_config.v2.MaxNrofCsiRSResourcesRrm
	(*MaxNrofCsiRSResourcesRrm1)(nil),                              // 190: _csi_report_config.v2.MaxNrofCsiRSResourcesRrm1
	(*MaxNrofMeasId)(nil),                                          // 191: _csi_report_config.v2.MaxNrofMeasId
	(*MaxNrofQuantityConfig)(nil),                                  // 192: _csi_report_config.v2.MaxNrofQuantityConfig
	(*MaxNrofCsiRSCellsRrm)(nil),                                   // 193: _csi_report_config.v2.MaxNrofCsiRSCellsRrm
	(*MaxNrofSlDestr16)(nil),                                       // 194: _csi_report_config.v2.MaxNrofSlDestr16
	(*MaxNrofSlDest1R16)(nil),                                      // 195: _csi_report_config.v2.MaxNrofSlDest1r16
	(*MaxNrofSlrbr16)(nil),                                         // 196: _csi_report_config.v2.MaxNrofSlrbr16
	(*MaxSlLCidr16)(nil),                                           // 197: _csi_report_config.v2.MaxSlLCidr16
	(*MaxSlSyncConfigr16)(nil),                                     // 198: _csi_report_config.v2.MaxSlSyncConfigr16
	(*MaxNrofRxpoolr16)(nil),                                       // 199: _csi_report_config.v2.MaxNrofRxpoolr16
	(*MaxNrofTxpoolr16)(nil),                                       // 200: _csi_report_config.v2.MaxNrofTxpoolr16
	(*MaxNrofPoolIdr16)(nil),                                       // 201: _csi_report_config.v2.MaxNrofPoolIdr16
	(*MaxNrofSrsPathlossReferenceRsr16)(nil),                       // 202: _csi_report_config.v2.MaxNrofSrsPathlossReferenceRsr16
	(*MaxNrofSrsPathlossReferenceRs1R16)(nil),                      // 203: _csi_report_config.v2.MaxNrofSrsPathlossReferenceRs1r16
	(*MaxNrofSrsResourceSets)(nil),                                 // 204: _csi_report_config.v2.MaxNrofSrsResourceSets
	(*MaxNrofSrsResourceSets1)(nil),                                // 205: _csi_report_config.v2.MaxNrofSrsResourceSets1
	(*MaxNrofSrsPosResourceSetsr16)(nil),                           // 206: _csi_report_config.v2.MaxNrofSrsPosResourceSetsr16
	(*MaxNrofSrsPosResourceSets1R16)(nil),                          // 207: _csi_report_config.v2.MaxNrofSrsPosResourceSets1r16
	(*MaxNrofSrsResources)(nil),                                    // 208: _csi_report_config.v2.MaxNrofSrsResources
	(*MaxNrofSrsResources1)(nil),                                   // 209: _csi_report_config.v2.MaxNrofSrsResources1
	(*MaxNrofSrsPosResourcesr16)(nil),                              // 210: _csi_report_config.v2.MaxNrofSrsPosResourcesr16
	(*MaxNrofSrsPosResources1R16)(nil),                             // 211: _csi_report_config.v2.MaxNrofSrsPosResources1r16
	(*MaxNrofSrsResourcesPerSet)(nil),                              // 212: _csi_report_config.v2.MaxNrofSrsResourcesPerSet
	(*MaxNrofSrsTriggerStates1)(nil),                               // 213: _csi_report_config.v2.MaxNrofSrsTriggerStates1
	(*MaxNrofSrsTriggerStates2)(nil),                               // 214: _csi_report_config.v2.MaxNrofSrsTriggerStates2
	(*MaxRatCapabilityContainers)(nil),                             // 215: _csi_report_config.v2.MaxRatCapabilityContainers
	(*MaxSimultaneousBands)(nil),                                   // 216: _csi_report_config.v2.MaxSimultaneousBands
	(*MaxUltxSwitchingBandPairs)(nil),                              // 217: _csi_report_config.v2.MaxUltxSwitchingBandPairs
	(*MaxNrofSlotFormatCombinationsPerSet)(nil),                    // 218: _csi_report_config.v2.MaxNrofSlotFormatCombinationsPerSet
	(*MaxNrofSlotFormatCombinationsPerSet1)(nil),                   // 219: _csi_report_config.v2.MaxNrofSlotFormatCombinationsPerSet1
	(*MaxNrofTrafficPatternr16)(nil),                               // 220: _csi_report_config.v2.MaxNrofTrafficPatternr16
	(*MaxNrofPucchResources)(nil),                                  // 221: _csi_report_config.v2.MaxNrofPucchResources
	(*MaxNrofPucchResources1)(nil),                                 // 222: _csi_report_config.v2.MaxNrofPucchResources1
	(*MaxNrofPucchResourceSets)(nil),                               // 223: _csi_report_config.v2.MaxNrofPucchResourceSets
	(*MaxNrofPucchResourceSets1)(nil),                              // 224: _csi_report_config.v2.MaxNrofPucchResourceSets1
	(*MaxNrofPucchResourcesPerSet)(nil),                            // 225: _csi_report_config.v2.MaxNrofPucchResourcesPerSet
	(*MaxNrofPucchP0PerSet)(nil),                                   // 226: _csi_report_config.v2.MaxNrofPucchP0PerSet
	(*MaxNrofPucchPathlossReferenceRss)(nil),                       // 227: _csi_report_config.v2.MaxNrofPucchPathlossReferenceRss
	(*MaxNrofPucchPathlossReferenceRss1)(nil),                      // 228: _csi_report_config.v2.MaxNrofPucchPathlossReferenceRss1
	(*MaxNrofPucchPathlossReferenceRssr16)(nil),                    // 229: _csi_report_config.v2.MaxNrofPucchPathlossReferenceRssr16
	(*MaxNrofPucchPathlossReferenceRss1R16)(nil),                   // 230: _csi_report_config.v2.MaxNrofPucchPathlossReferenceRss1r16
	(*MaxNrofPucchPathlossReferenceRssDiffr16)(nil),                // 231: _csi_report_config.v2.MaxNrofPucchPathlossReferenceRssDiffr16
	(*MaxNrofPucchResourceGroupsr16)(nil),                          // 232: _csi_report_config.v2.MaxNrofPucchResourceGroupsr16
	(*MaxNrofPucchResourcesPerGroupr16)(nil),                       // 233: _csi_report_config.v2.MaxNrofPucchResourcesPerGroupr16
	(*MaxNrofMultiplePuschsr16)(nil),                               // 234: _csi_report_config.v2.MaxNrofMultiplePuschsr16
	(*MaxNrofP0PUschAlphaSets)(nil),                                // 235: _csi_report_config.v2.MaxNrofP0PUschAlphaSets
	(*MaxNrofP0PUschAlphaSets1)(nil),                               // 236: _csi_report_config.v2.MaxNrofP0PUschAlphaSets1
	(*MaxNrofPuschPathlossReferenceRss)(nil),                       // 237: _csi_report_config.v2.MaxNrofPuschPathlossReferenceRss
	(*MaxNrofPuschPathlossReferenceRss1)(nil),                      // 238: _csi_report_config.v2.MaxNrofPuschPathlossReferenceRss1
	(*MaxNrofPuschPathlossReferenceRssr16)(nil),                    // 239: _csi_report_config.v2.MaxNrofPuschPathlossReferenceRssr16
	(*MaxNrofPuschPathlossReferenceRss1R16)(nil),                   // 240: _csi_report_config.v2.MaxNrofPuschPathlossReferenceRss1r16
	(*MaxNrofPuschPathlossReferenceRssDiffr16)(nil),                // 241: _csi_report_config.v2.MaxNrofPuschPathlossReferenceRssDiffr16
	(*MaxNrofNaicsEntries)(nil),                                    // 242: _csi_report_config.v2.MaxNrofNaicsEntries
	(*MaxBands)(nil),                                               // 243: _csi_report_config.v2.MaxBands
	(*MaxBandsMrdc)(nil),                                           // 244: _csi_report_config.v2.MaxBandsMrdc
	(*MaxBandsEutra)(nil),                                          // 245: _csi_report_config.v2.MaxBandsEutra
	(*MaxCellReport)(nil),                                          // 246: _csi_report_config.v2.MaxCellReport
	(*MaxDrb)(nil),                                                 // 247: _csi_report_config.v2.MaxDrb
	(*MaxFreq)(nil),                                                // 248: _csi_report_config.v2.MaxFreq
	(*MaxFreqLayers)(nil),                                          // 249: _csi_report_config.v2.MaxFreqLayers
	(*MaxFreqIdcr16)(nil),                                          // 250: _csi_report_config.v2.MaxFreqIdcr16
	(*MaxCombIdcr16)(nil),                                          // 251: _csi_report_config.v2.MaxCombIdcr16
	(*MaxFreqIdcMRdc)(nil),                                         // 252: _csi_report_config.v2.MaxFreqIdcMRdc
	(*MaxNrofCandidateBeams)(nil),                                  // 253: _csi_report_config.v2.MaxNrofCandidateBeams
	(*MaxNrofCandidateBeamsr16)(nil),                               // 254: _csi_report_config.v2.MaxNrofCandidateBeamsr16
	(*MaxNrofCandidateBeamsExtr16)(nil),                            // 255: _csi_report_config.v2.MaxNrofCandidateBeamsExtr16
	(*MaxNrofPcisPerSmtc)(nil),                                     // 256: _csi_report_config.v2.MaxNrofPcisPerSmtc
	(*MaxNrofQfis)(nil),                                            // 257: _csi_report_config.v2.MaxNrofQfis
	(*MaxNrofResourceAvailabilityPerCombinationr16)(nil),           // 258: _csi_report_config.v2.MaxNrofResourceAvailabilityPerCombinationr16
	(*MaxNrOfSemiPersistentPuschTriggers)(nil),                     // 259: _csi_report_config.v2.MaxNrOfSemiPersistentPuschTriggers
	(*MaxNrofSrResources)(nil),                                     // 260: _csi_report_config.v2.MaxNrofSrResources
	(*MaxNrofSlotFormatsPerCombination)(nil),                       // 261: _csi_report_config.v2.MaxNrofSlotFormatsPerCombination
	(*MaxNrofSpatialRelationInfos)(nil),                            // 262: _csi_report_config.v2.MaxNrofSpatialRelationInfos
	(*MaxNrofSpatialRelationInfosplus1)(nil),                       // 263: _csi_report_config.v2.MaxNrofSpatialRelationInfosplus1
	(*MaxNrofSpatialRelationInfosr16)(nil),                         // 264: _csi_report_config.v2.MaxNrofSpatialRelationInfosr16
	(*MaxNrofSpatialRelationInfosDiffr16)(nil),                     // 265: _csi_report_config.v2.MaxNrofSpatialRelationInfosDiffr16
	(*MaxNrofIndexesToReport)(nil),                                 // 266: _csi_report_config.v2.MaxNrofIndexesToReport
	(*MaxNrofIndexesToReport2)(nil),                                // 267: _csi_report_config.v2.MaxNrofIndexesToReport2
	(*MaxNrofSsbsr16)(nil),                                         // 268: _csi_report_config.v2.MaxNrofSsbsr16
	(*MaxNrofSsbs1)(nil),                                           // 269: _csi_report_config.v2.MaxNrofSsbs1
	(*MaxNrofSNSsai)(nil),                                          // 270: _csi_report_config.v2.MaxNrofSNSsai
	(*MaxNrofTciStatesPdcch)(nil),                                  // 271: _csi_report_config.v2.MaxNrofTciStatesPdcch
	(*MaxNrofTciStates)(nil),                                       // 272: _csi_report_config.v2.MaxNrofTciStates
	(*MaxNrofTciStates1)(nil),                                      // 273: _csi_report_config.v2.MaxNrofTciStates1
	(*MaxNrofUlAllocations)(nil),                                   // 274: _csi_report_config.v2.MaxNrofUlAllocations
	(*MaxQfi)(nil),                                                 // 275: _csi_report_config.v2.MaxQfi
	(*MaxRaCSirsResources)(nil),                                    // 276: _csi_report_config.v2.MaxRaCSirsResources
	(*MaxRaOccasionsPerCsirs)(nil),                                 // 277: _csi_report_config.v2.MaxRaOccasionsPerCsirs
	(*MaxRaOccasions1)(nil),                                        // 278: _csi_report_config.v2.MaxRaOccasions1
	(*MaxRaSSbResources)(nil),                                      // 279: _csi_report_config.v2.MaxRaSSbResources
	(*MaxScss)(nil),                                                // 280: _csi_report_config.v2.MaxScss
	(*MaxSecondaryCellGroups)(nil),                                 // 281: _csi_report_config.v2.MaxSecondaryCellGroups
	(*MaxNrofServingCellsEutra)(nil),                               // 282: _csi_report_config.v2.MaxNrofServingCellsEutra
	(*MaxMbsfnAllocations)(nil),                                    // 283: _csi_report_config.v2.MaxMbsfnAllocations
	(*MaxNrofMultiBands)(nil),                                      // 284: _csi_report_config.v2.MaxNrofMultiBands
	(*MaxCellSftd)(nil),                                            // 285: _csi_report_config.v2.MaxCellSftd
	(*MaxReportConfigId)(nil),                                      // 286: _csi_report_config.v2.MaxReportConfigId
	(*MaxNrofCodebooks)(nil),                                       // 287: _csi_report_config.v2.MaxNrofCodebooks
	(*MaxNrofCsiRSResourcesExtr16)(nil),                            // 288: _csi_report_config.v2.MaxNrofCsiRSResourcesExtr16
	(*MaxNrofCsiRSResources)(nil),                                  // 289: _csi_report_config.v2.MaxNrofCsiRSResources
	(*MaxNrofCsiRSResourcesAltr16)(nil),                            // 290: _csi_report_config.v2.MaxNrofCsiRSResourcesAltr16
	(*MaxNrofCsiRSResourcesAlt1R16)(nil),                           // 291: _csi_report_config.v2.MaxNrofCsiRSResourcesAlt1r16
	(*MaxNrofSriPUschMappings)(nil),                                // 292: _csi_report_config.v2.MaxNrofSriPUschMappings
	(*MaxNrofSriPUschMappings1)(nil),                               // 293: _csi_report_config.v2.MaxNrofSriPUschMappings1
	(*MaxSib)(nil),                                                 // 294: _csi_report_config.v2.MaxSib
	(*MaxSiMessage)(nil),                                           // 295: _csi_report_config.v2.MaxSiMessage
	(*MaxPoperPf)(nil),                                             // 296: _csi_report_config.v2.MaxPoperPf
	(*MaxAccessCat1)(nil),                                          // 297: _csi_report_config.v2.MaxAccessCat1
	(*MaxBarringInfoSet)(nil),                                      // 298: _csi_report_config.v2.MaxBarringInfoSet
	(*MaxCellEutra)(nil),                                           // 299: _csi_report_config.v2.MaxCellEutra
	(*MaxEutraCarrier)(nil),                                        // 300: _csi_report_config.v2.MaxEutraCarrier
	(*MaxPlmnidentities)(nil),                                      // 301: _csi_report_config.v2.MaxPlmnidentities
	(*MaxDownlinkFeatureSets)(nil),                                 // 302: _csi_report_config.v2.MaxDownlinkFeatureSets
	(*MaxUplinkFeatureSets)(nil),                                   // 303: _csi_report_config.v2.MaxUplinkFeatureSets
	(*MaxEutraDLFeatureSets)(nil),                                  // 304: _csi_report_config.v2.MaxEutraDLFeatureSets
	(*MaxEutraULFeatureSets)(nil),                                  // 305: _csi_report_config.v2.MaxEutraULFeatureSets
	(*MaxFeatureSetsPerBand)(nil),                                  // 306: _csi_report_config.v2.MaxFeatureSetsPerBand
	(*MaxPerCcFeatureSets)(nil),                                    // 307: _csi_report_config.v2.MaxPerCcFeatureSets
	(*MaxFeatureSetCombinations)(nil),                              // 308: _csi_report_config.v2.MaxFeatureSetCombinations
	(*MaxInterRatRStdFreq)(nil),                                    // 309: _csi_report_config.v2.MaxInterRatRStdFreq
	(*MaxHrnnLenr16)(nil),                                          // 310: _csi_report_config.v2.MaxHrnnLenr16
	(*MaxNpnr16)(nil),                                              // 311: _csi_report_config.v2.MaxNpnr16
	(*MaxNrOfMinSchedulingOffsetValuesr16)(nil),                    // 312: _csi_report_config.v2.MaxNrOfMinSchedulingOffsetValuesr16
	(*MaxK0SchedulingOffsetr16)(nil),                               // 313: _csi_report_config.v2.MaxK0SchedulingOffsetr16
	(*MaxK2SchedulingOffsetr16)(nil),                               // 314: _csi_report_config.v2.MaxK2SchedulingOffsetr16
	(*MaxDci26Sizer16)(nil),                                        // 315: _csi_report_config.v2.MaxDci26Sizer16
	(*MaxDci26Size1R16)(nil),                                       // 316: _csi_report_config.v2.MaxDci26Size1r16
	(*MaxNrofUlAllocationsr16)(nil),                                // 317: _csi_report_config.v2.MaxNrofUlAllocationsr16
	(*MaxNrofP0PUschSetr16)(nil),                                   // 318: _csi_report_config.v2.MaxNrofP0PUschSetr16
	(*MaxOnDemandSibr16)(nil),                                      // 319: _csi_report_config.v2.MaxOnDemandSibr16
	(*MaxOnDemandPosSibr16)(nil),                                   // 320: _csi_report_config.v2.MaxOnDemandPosSibr16
	(*MaxCiDCiPayloadSizer16)(nil),                                 // 321: _csi_report_config.v2.MaxCiDCiPayloadSizer16
	(*MaxCiDCiPayloadSize1R16)(nil),                                // 322: _csi_report_config.v2.MaxCiDCiPayloadSize1r16
	(*MaxWlanIdReportr16)(nil),                                     // 323: _csi_report_config.v2.MaxWlanIdReportr16
	(*MaxWlanNamer16)(nil),                                         // 324: _csi_report_config.v2.MaxWlanNamer16
	(*MaxRareportr16)(nil),                                         // 325: _csi_report_config.v2.MaxRareportr16
	(*MaxTxConfigr16)(nil),                                         // 326: _csi_report_config.v2.MaxTxConfigr16
	(*MaxTxConfig1R16)(nil),                                        // 327: _csi_report_config.v2.MaxTxConfig1r16
	(*MaxPsschTxConfigr16)(nil),                                    // 328: _csi_report_config.v2.MaxPsschTxConfigr16
	(*MaxNrofCliRSsiResourcesr16)(nil),                             // 329: _csi_report_config.v2.MaxNrofCliRSsiResourcesr16
	(*MaxNrofCliRSsiResources1R16)(nil),                            // 330: _csi_report_config.v2.MaxNrofCliRSsiResources1r16
	(*MaxNrofCliSRsResourcesr16)(nil),                              // 331: _csi_report_config.v2.MaxNrofCliSRsResourcesr16
	(*MaxCliReportr16)(nil),                                        // 332: _csi_report_config.v2.MaxCliReportr16
	(*MaxNrofConfiguredGrantConfigr16)(nil),                        // 333: _csi_report_config.v2.MaxNrofConfiguredGrantConfigr16
	(*MaxNrofConfiguredGrantConfig1R16)(nil),                       // 334: _csi_report_config.v2.MaxNrofConfiguredGrantConfig1r16
	(*MaxNrofCgType2DeactivationState)(nil),                        // 335: _csi_report_config.v2.MaxNrofCgType2DeactivationState
	(*MaxNrofConfiguredGrantConfigMac1R16)(nil),                    // 336: _csi_report_config.v2.MaxNrofConfiguredGrantConfigMac1r16
	(*MaxNrofSpsConfigr16)(nil),                                    // 337: _csi_report_config.v2.MaxNrofSpsConfigr16
	(*MaxNrofSpsConfig1R16)(nil),                                   // 338: _csi_report_config.v2.MaxNrofSpsConfig1r16
	(*MaxNrofSpsDeactivationState)(nil),                            // 339: _csi_report_config.v2.MaxNrofSpsDeactivationState
	(*MaxNrofDormancyGroups)(nil),                                  // 340: _csi_report_config.v2.MaxNrofDormancyGroups
	(*MaxNrofPucchResourceGroups1R16)(nil),                         // 341: _csi_report_config.v2.MaxNrofPucchResourceGroups1r16
	(*MaxNrofServingCellsTcir16)(nil),                              // 342: _csi_report_config.v2.MaxNrofServingCellsTcir16
	(*MaxNrofTxDcTwoCarrierr16)(nil),                               // 343: _csi_report_config.v2.MaxNrofTxDcTwoCarrierr16
	(*MaxNrofPdcchBlindDetectionMixed1R16)(nil),                    // 344: _csi_report_config.v2.MaxNrofPdcchBlindDetectionMixed1r16
	(*asn1.BitString)(nil),                                         // 345: asn1.v1.BitString
}
var file_CSI_ReportConfig_proto_depIdxs = []int32{
	32,  // 0: _csi_report_config.v2.PeriodicreportConfigType.report_slot_config:type_name -> _csi_report_config.v2.CsiReportPeriodicityAndOffset
	33,  // 1: _csi_report_config.v2.PeriodicreportConfigType.pucch_csi_resource_list:type_name -> _csi_report_config.v2.PucchCSiResource
	32,  // 2: _csi_report_config.v2.SemiPersistentOnPucchreportConfigType.report_slot_config:type_name -> _csi_report_config.v2.CsiReportPeriodicityAndOffset
	33,  // 3: _csi_report_config.v2.SemiPersistentOnPucchreportConfigType.pucch_csi_resource_list:type_name -> _csi_report_config.v2.PucchCSiResource
	0,   // 4: _csi_report_config.v2.SemiPersistentOnPuschreportConfigType.report_slot_config:type_name -> _csi_report_config.v2.ReportSlotConfigsemiPersistentOnPusch
	43,  // 5: _csi_report_config.v2.SemiPersistentOnPuschreportConfigType.p0alpha:type_name -> _csi_report_config.v2.P0PUschAlphaSetId
	16,  // 6: _csi_report_config.v2.ReportConfigTypeCsiReportConfig.periodic:type_name -> _csi_report_config.v2.PeriodicreportConfigType
	17,  // 7: _csi_report_config.v2.ReportConfigTypeCsiReportConfig.semi_persistent_on_pucch:type_name -> _csi_report_config.v2.SemiPersistentOnPucchreportConfigType
	18,  // 8: _csi_report_config.v2.ReportConfigTypeCsiReportConfig.semi_persistent_on_pusch:type_name -> _csi_report_config.v2.SemiPersistentOnPuschreportConfigType
	19,  // 9: _csi_report_config.v2.ReportConfigTypeCsiReportConfig.aperiodic:type_name -> _csi_report_config.v2.AperiodicreportConfigType
	1,   // 10: _csi_report_config.v2.CriRIi1CQireportQuantity.pdsch_bundle_size_for_csi:type_name -> _csi_report_config.v2.PdschBundleSizeForCsicriRii1Cqi
	21,  // 11: _csi_report_config.v2.ReportQuantityCsiReportConfig.cri_ri_i1_cqi:type_name -> _csi_report_config.v2.CriRIi1CQireportQuantity
	345, // 12: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands3:type_name -> asn1.v1.BitString
	345, // 13: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands4:type_name -> asn1.v1.BitString
	345, // 14: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands5:type_name -> asn1.v1.BitString
	345, // 15: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands6:type_name -> asn1.v1.BitString
	345, // 16: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands7:type_name -> asn1.v1.BitString
	345, // 17: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands8:type_name -> asn1.v1.BitString
	345, // 18: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands9:type_name -> asn1.v1.BitString
	345, // 19: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands10:type_name -> asn1.v1.BitString
	345, // 20: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands11:type_name -> asn1.v1.BitString
	345, // 21: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands12:type_name -> asn1.v1.BitString
	345, // 22: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands13:type_name -> asn1.v1.BitString
	345, // 23: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands14:type_name -> asn1.v1.BitString
	345, // 24: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands15:type_name -> asn1.v1.BitString
	345, // 25: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands16:type_name -> asn1.v1.BitString
	345, // 26: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands17:type_name -> asn1.v1.BitString
	345, // 27: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands18:type_name -> asn1.v1.BitString
	345, // 28: _csi_report_config.v2.CsiReportingBandreportFreqConfiguration.subbands19_v1530:type_name -> asn1.v1.BitString
	2,   // 29: _csi_report_config.v2.ReportFreqConfigurationCsiReportConfig.cqi_format_indicator:type_name -> _csi_report_config.v2.CqiFormatIndicatorreportFreqConfiguration
	3,   // 30: _csi_report_config.v2.ReportFreqConfigurationCsiReportConfig.pmi_format_indicator:type_name -> _csi_report_config.v2.PmiFormatIndicatorreportFreqConfiguration
	23,  // 31: _csi_report_config.v2.ReportFreqConfigurationCsiReportConfig.csi_reporting_band:type_name -> _csi_report_config.v2.CsiReportingBandreportFreqConfiguration
	7,   // 32: _csi_report_config.v2.DisabledgroupBasedBeamReporting.nrof_reported_rs:type_name -> _csi_report_config.v2.NrofReportedRsdisabled
	25,  // 33: _csi_report_config.v2.GroupBasedBeamReportingCsiReportConfig.disabled:type_name -> _csi_report_config.v2.DisabledgroupBasedBeamReporting
	10,  // 34: _csi_report_config.v2.SemiPersistentOnPuschv1530CsiReportConfig.report_slot_config_v1530:type_name -> _csi_report_config.v2.ReportSlotConfigv1530semiPersistentOnPuschv1530
	15,  // 35: _csi_report_config.v2.CsiReportConfig.report_config_id:type_name -> _csi_report_config.v2.CsiReportConfigId
	41,  // 36: _csi_report_config.v2.CsiReportConfig.carrier:type_name -> _csi_report_config.v2.ServCellIndex
	42,  // 37: _csi_report_config.v2.CsiReportConfig.resources_for_channel_measurement:type_name -> _csi_report_config.v2.CsiResourceConfigId
	42,  // 38: _csi_report_config.v2.CsiReportConfig.csi_im_resources_for_interference:type_name -> _csi_report_config.v2.CsiResourceConfigId
	42,  // 39: _csi_report_config.v2.CsiReportConfig.nzp_csi_rs_resources_for_interference:type_name -> _csi_report_config.v2.CsiResourceConfigId
	20,  // 40: _csi_report_config.v2.CsiReportConfig.report_config_type:type_name -> _csi_report_config.v2.ReportConfigTypeCsiReportConfig
	22,  // 41: _csi_report_config.v2.CsiReportConfig.report_quantity:type_name -> _csi_report_config.v2.ReportQuantityCsiReportConfig
	24,  // 42: _csi_report_config.v2.CsiReportConfig.report_freq_configuration:type_name -> _csi_report_config.v2.ReportFreqConfigurationCsiReportConfig
	4,   // 43: _csi_report_config.v2.CsiReportConfig.time_restriction_for_channel_measurements:type_name -> _csi_report_config.v2.TimeRestrictionForChannelMeasurementsCsireportConfig
	5,   // 44: _csi_report_config.v2.CsiReportConfig.time_restriction_for_interference_measurements:type_name -> _csi_report_config.v2.TimeRestrictionForInterferenceMeasurementsCsireportConfig
	59,  // 45: _csi_report_config.v2.CsiReportConfig.codebook_config:type_name -> _csi_report_config.v2.CodebookConfig
	6,   // 46: _csi_report_config.v2.CsiReportConfig.dummy:type_name -> _csi_report_config.v2.DummyCsireportConfig
	26,  // 47: _csi_report_config.v2.CsiReportConfig.group_based_beam_reporting:type_name -> _csi_report_config.v2.GroupBasedBeamReportingCsiReportConfig
	8,   // 48: _csi_report_config.v2.CsiReportConfig.cqi_table:type_name -> _csi_report_config.v2.CqiTableCsireportConfig
	9,   // 49: _csi_report_config.v2.CsiReportConfig.subband_size:type_name -> _csi_report_config.v2.SubbandSizeCsireportConfig
	37,  // 50: _csi_report_config.v2.CsiReportConfig.non_pmi_port_indication:type_name -> _csi_report_config.v2.PortIndexFor8Ranks
	27,  // 51: _csi_report_config.v2.CsiReportConfig.semi_persistent_on_pusch_v1530:type_name -> _csi_report_config.v2.SemiPersistentOnPuschv1530CsiReportConfig
	28,  // 52: _csi_report_config.v2.CsiReportConfig.semi_persistent_on_pusch_v1610:type_name -> _csi_report_config.v2.SemiPersistentOnPuschv1610CsiReportConfig
	29,  // 53: _csi_report_config.v2.CsiReportConfig.aperiodic_v1610:type_name -> _csi_report_config.v2.Aperiodicv1610CsiReportConfig
	30,  // 54: _csi_report_config.v2.CsiReportConfig.report_quantity_r16:type_name -> _csi_report_config.v2.ReportQuantityr16CsiReportConfig
	66,  // 55: _csi_report_config.v2.CsiReportConfig.codebook_config_r16:type_name -> _csi_report_config.v2.CodebookConfigr16
	67,  // 56: _csi_report_config.v2.PucchCSiResource.uplink_bandwidth_part_id:type_name -> _csi_report_config.v2.BwpId
	68,  // 57: _csi_report_config.v2.PucchCSiResource.pucch_resource:type_name -> _csi_report_config.v2.PucchResourceId
	38,  // 58: _csi_report_config.v2.PortIndex8PortIndexFor8Ranks.rank1_8:type_name -> _csi_report_config.v2.PortIndex8
	38,  // 59: _csi_report_config.v2.PortIndex8PortIndexFor8Ranks.rank2_8:type_name -> _csi_report_config.v2.PortIndex8
	38,  // 60: _csi_report_config.v2.PortIndex8PortIndexFor8Ranks.rank3_8:type_name -> _csi_report_config.v2.PortIndex8
	38,  // 61: _csi_report_config.v2.PortIndex8PortIndexFor8Ranks.rank4_8:type_name -> _csi_report_config.v2.PortIndex8
	38,  // 62: _csi_report_config.v2.PortIndex8PortIndexFor8Ranks.rank5_8:type_name -> _csi_report_config.v2.PortIndex8
	38,  // 63: _csi_report_config.v2.PortIndex8PortIndexFor8Ranks.rank6_8:type_name -> _csi_report_config.v2.PortIndex8
	38,  // 64: _csi_report_config.v2.PortIndex8PortIndexFor8Ranks.rank7_8:type_name -> _csi_report_config.v2.PortIndex8
	38,  // 65: _csi_report_config.v2.PortIndex8PortIndexFor8Ranks.rank8_8:type_name -> _csi_report_config.v2.PortIndex8
	39,  // 66: _csi_report_config.v2.PortIndex4PortIndexFor8Ranks.rank1_4:type_name -> _csi_report_config.v2.PortIndex4
	39,  // 67: _csi_report_config.v2.PortIndex4PortIndexFor8Ranks.rank2_4:type_name -> _csi_report_config.v2.PortIndex4
	39,  // 68: _csi_report_config.v2.PortIndex4PortIndexFor8Ranks.rank3_4:type_name -> _csi_report_config.v2.PortIndex4
	39,  // 69: _csi_report_config.v2.PortIndex4PortIndexFor8Ranks.rank4_4:type_name -> _csi_report_config.v2.PortIndex4
	40,  // 70: _csi_report_config.v2.PortIndex2PortIndexFor8Ranks.rank1_2:type_name -> _csi_report_config.v2.PortIndex2
	40,  // 71: _csi_report_config.v2.PortIndex2PortIndexFor8Ranks.rank2_2:type_name -> _csi_report_config.v2.PortIndex2
	34,  // 72: _csi_report_config.v2.PortIndexFor8Ranks.port_index8:type_name -> _csi_report_config.v2.PortIndex8PortIndexFor8Ranks
	35,  // 73: _csi_report_config.v2.PortIndexFor8Ranks.port_index4:type_name -> _csi_report_config.v2.PortIndex4PortIndexFor8Ranks
	36,  // 74: _csi_report_config.v2.PortIndexFor8Ranks.port_index2:type_name -> _csi_report_config.v2.PortIndex2PortIndexFor8Ranks
	345, // 75: _csi_report_config.v2.TwonrOfAntennaPorts.two_tx_codebook_subset_restriction:type_name -> asn1.v1.BitString
	345, // 76: _csi_report_config.v2.N1n2moreThanTwo.two_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 77: _csi_report_config.v2.N1n2moreThanTwo.two_two_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 78: _csi_report_config.v2.N1n2moreThanTwo.four_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 79: _csi_report_config.v2.N1n2moreThanTwo.three_two_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 80: _csi_report_config.v2.N1n2moreThanTwo.six_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 81: _csi_report_config.v2.N1n2moreThanTwo.four_two_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 82: _csi_report_config.v2.N1n2moreThanTwo.eight_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 83: _csi_report_config.v2.N1n2moreThanTwo.four_three_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 84: _csi_report_config.v2.N1n2moreThanTwo.six_two_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 85: _csi_report_config.v2.N1n2moreThanTwo.twelve_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 86: _csi_report_config.v2.N1n2moreThanTwo.four_four_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 87: _csi_report_config.v2.N1n2moreThanTwo.eight_two_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	345, // 88: _csi_report_config.v2.N1n2moreThanTwo.sixteen_one_type_i_single_panel_restriction:type_name -> asn1.v1.BitString
	45,  // 89: _csi_report_config.v2.MoreThanTwonrOfAntennaPorts.n1_n2:type_name -> _csi_report_config.v2.N1n2moreThanTwo
	345, // 90: _csi_report_config.v2.MoreThanTwonrOfAntennaPorts.type_i_single_panel_codebook_subset_restriction_i2:type_name -> asn1.v1.BitString
	44,  // 91: _csi_report_config.v2.NrOfAntennaPortstypeISinglePanel.two:type_name -> _csi_report_config.v2.TwonrOfAntennaPorts
	46,  // 92: _csi_report_config.v2.NrOfAntennaPortstypeISinglePanel.more_than_two:type_name -> _csi_report_config.v2.MoreThanTwonrOfAntennaPorts
	47,  // 93: _csi_report_config.v2.TypeISinglePanelsubType.nr_of_antenna_ports:type_name -> _csi_report_config.v2.NrOfAntennaPortstypeISinglePanel
	345, // 94: _csi_report_config.v2.TypeISinglePanelsubType.type_i_single_panel_ri_restriction:type_name -> asn1.v1.BitString
	345, // 95: _csi_report_config.v2.Ngn1n2typeIMultiPanel.two_two_one_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	345, // 96: _csi_report_config.v2.Ngn1n2typeIMultiPanel.two_four_one_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	345, // 97: _csi_report_config.v2.Ngn1n2typeIMultiPanel.four_two_one_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	345, // 98: _csi_report_config.v2.Ngn1n2typeIMultiPanel.two_two_two_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	345, // 99: _csi_report_config.v2.Ngn1n2typeIMultiPanel.two_eight_one_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	345, // 100: _csi_report_config.v2.Ngn1n2typeIMultiPanel.four_four_one_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	345, // 101: _csi_report_config.v2.Ngn1n2typeIMultiPanel.two_four_two_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	345, // 102: _csi_report_config.v2.Ngn1n2typeIMultiPanel.four_two_two_type_i_multi_panel_restriction:type_name -> asn1.v1.BitString
	49,  // 103: _csi_report_config.v2.TypeIMultiPanelsubType.ng_n1_n2:type_name -> _csi_report_config.v2.Ngn1n2typeIMultiPanel
	345, // 104: _csi_report_config.v2.TypeIMultiPanelsubType.ri_restriction:type_name -> asn1.v1.BitString
	48,  // 105: _csi_report_config.v2.SubTypetype1.type_i_single_panel:type_name -> _csi_report_config.v2.TypeISinglePanelsubType
	50,  // 106: _csi_report_config.v2.SubTypetype1.type_i_multi_panel:type_name -> _csi_report_config.v2.TypeIMultiPanelsubType
	51,  // 107: _csi_report_config.v2.Type1codebookType.sub_type:type_name -> _csi_report_config.v2.SubTypetype1
	345, // 108: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.two_one:type_name -> asn1.v1.BitString
	345, // 109: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.two_two:type_name -> asn1.v1.BitString
	345, // 110: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.four_one:type_name -> asn1.v1.BitString
	345, // 111: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.three_two:type_name -> asn1.v1.BitString
	345, // 112: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.six_one:type_name -> asn1.v1.BitString
	345, // 113: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.four_two:type_name -> asn1.v1.BitString
	345, // 114: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.eight_one:type_name -> asn1.v1.BitString
	345, // 115: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.four_three:type_name -> asn1.v1.BitString
	345, // 116: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.six_two:type_name -> asn1.v1.BitString
	345, // 117: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.twelve_one:type_name -> asn1.v1.BitString
	345, // 118: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.four_four:type_name -> asn1.v1.BitString
	345, // 119: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.eight_two:type_name -> asn1.v1.BitString
	345, // 120: _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi.sixteen_one:type_name -> asn1.v1.BitString
	53,  // 121: _csi_report_config.v2.TypeIisubType.n1_n2_codebook_subset_restriction:type_name -> _csi_report_config.v2.N1n2codebookSubsetRestrictiontypeIi
	345, // 122: _csi_report_config.v2.TypeIisubType.type_ii_ri_restriction:type_name -> asn1.v1.BitString
	11,  // 123: _csi_report_config.v2.TypeIiPortSelectionsubType.port_selection_sampling_size:type_name -> _csi_report_config.v2.PortSelectionSamplingSizetypeIiportSelection
	345, // 124: _csi_report_config.v2.TypeIiPortSelectionsubType.type_ii_port_selection_ri_restriction:type_name -> asn1.v1.BitString
	54,  // 125: _csi_report_config.v2.SubTypetype2.type_ii:type_name -> _csi_report_config.v2.TypeIisubType
	55,  // 126: _csi_report_config.v2.SubTypetype2.type_ii_port_selection:type_name -> _csi_report_config.v2.TypeIiPortSelectionsubType
	56,  // 127: _csi_report_config.v2.Type2codebookType.sub_type:type_name -> _csi_report_config.v2.SubTypetype2
	12,  // 128: _csi_report_config.v2.Type2codebookType.phase_alphabet_size:type_name -> _csi_report_config.v2.PhaseAlphabetSizetype2
	13,  // 129: _csi_report_config.v2.Type2codebookType.number_of_beams:type_name -> _csi_report_config.v2.NumberOfBeamstype2
	52,  // 130: _csi_report_config.v2.CodebookTypeCodebookConfig.type1:type_name -> _csi_report_config.v2.Type1codebookType
	57,  // 131: _csi_report_config.v2.CodebookTypeCodebookConfig.type2:type_name -> _csi_report_config.v2.Type2codebookType
	58,  // 132: _csi_report_config.v2.CodebookConfig.codebook_type:type_name -> _csi_report_config.v2.CodebookTypeCodebookConfig
	345, // 133: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.two_one:type_name -> asn1.v1.BitString
	345, // 134: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.two_two:type_name -> asn1.v1.BitString
	345, // 135: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.four_one:type_name -> asn1.v1.BitString
	345, // 136: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.three_two:type_name -> asn1.v1.BitString
	345, // 137: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.six_one:type_name -> asn1.v1.BitString
	345, // 138: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.four_two:type_name -> asn1.v1.BitString
	345, // 139: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.eight_one:type_name -> asn1.v1.BitString
	345, // 140: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.four_three:type_name -> asn1.v1.BitString
	345, // 141: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.six_two:type_name -> asn1.v1.BitString
	345, // 142: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.twelve_one:type_name -> asn1.v1.BitString
	345, // 143: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.four_four:type_name -> asn1.v1.BitString
	345, // 144: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.eight_two:type_name -> asn1.v1.BitString
	345, // 145: _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16.sixteen_one:type_name -> asn1.v1.BitString
	60,  // 146: _csi_report_config.v2.TypeIir16subType.n1_n2_codebook_subset_restriction_r16:type_name -> _csi_report_config.v2.N1n2codebookSubsetRestrictionr16typeIir16
	345, // 147: _csi_report_config.v2.TypeIir16subType.type_ii_ri_restriction_r16:type_name -> asn1.v1.BitString
	14,  // 148: _csi_report_config.v2.TypeIiPortSelectionr16subType.port_selection_sampling_size_r16:type_name -> _csi_report_config.v2.PortSelectionSamplingSizer16typeIiportSelectionr16
	345, // 149: _csi_report_config.v2.TypeIiPortSelectionr16subType.type_ii_port_selection_ri_restriction_r16:type_name -> asn1.v1.BitString
	61,  // 150: _csi_report_config.v2.SubTypetype2r16.type_ii_r16:type_name -> _csi_report_config.v2.TypeIir16subType
	62,  // 151: _csi_report_config.v2.SubTypetype2r16.type_ii_port_selection_r16:type_name -> _csi_report_config.v2.TypeIiPortSelectionr16subType
	63,  // 152: _csi_report_config.v2.Type2r16codebookTyper16.sub_type:type_name -> _csi_report_config.v2.SubTypetype2r16
	64,  // 153: _csi_report_config.v2.CodebookTyper16CodebookConfigr16.type2_r16:type_name -> _csi_report_config.v2.Type2r16codebookTyper16
	65,  // 154: _csi_report_config.v2.CodebookConfigr16.codebook_type_r16:type_name -> _csi_report_config.v2.CodebookTyper16CodebookConfigr16
	155, // [155:155] is the sub-list for method output_type
	155, // [155:155] is the sub-list for method input_type
	155, // [155:155] is the sub-list for extension type_name
	155, // [155:155] is the sub-list for extension extendee
	0,   // [0:155] is the sub-list for field type_name
}

func init() { file_CSI_ReportConfig_proto_init() }
func file_CSI_ReportConfig_proto_init() {
	if File_CSI_ReportConfig_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_CSI_ReportConfig_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiReportConfigId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeriodicreportConfigType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemiPersistentOnPucchreportConfigType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemiPersistentOnPuschreportConfigType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AperiodicreportConfigType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportConfigTypeCsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriRIi1CQireportQuantity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportQuantityCsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiReportingBandreportFreqConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportFreqConfigurationCsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisabledgroupBasedBeamReporting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupBasedBeamReportingCsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemiPersistentOnPuschv1530CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemiPersistentOnPuschv1610CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aperiodicv1610CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportQuantityr16CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiReportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiReportPeriodicityAndOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PucchCSiResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex8PortIndexFor8Ranks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex4PortIndexFor8Ranks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex2PortIndexFor8Ranks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndexFor8Ranks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortIndex2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServCellIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsiResourceConfigId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P0PUschAlphaSetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwonrOfAntennaPorts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*N1N2MoreThanTwo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoreThanTwonrOfAntennaPorts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrOfAntennaPortstypeISinglePanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeISinglePanelsubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ngn1N2TypeIMultiPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeIMultiPanelsubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTypetype1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type1CodebookType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*N1N2CodebookSubsetRestrictiontypeIi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeIisubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeIiPortSelectionsubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTypetype2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type2CodebookType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookTypeCodebookConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*N1N2CodebookSubsetRestrictionr16TypeIir16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeIir16SubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeIiPortSelectionr16SubType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTypetype2R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type2R16CodebookTyper16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookTyper16CodebookConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodebookConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BwpId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PucchResourceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxAiDCiPayloadSizer16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxAiDCiPayloadSize1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBandComb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBandsUtraFDdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBhRLcChannelIdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBtIdReportr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBtNamer16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCagCellr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxTwoPucchGrpConfigListr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCbrConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCbrConfig1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCbrLevelr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCbrLevel1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellBlack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellGroupingsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellHistoryr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellInter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellIntra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellMeasEutra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellMeasIdler16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellMeasUtraFDdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCarrierTypePairListr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellWhite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEarfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEutraCellBlack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEutraNSPmax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxLogMeasReportr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxMultiBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNarfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrNSPmax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqIdler16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofServingCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofServingCells1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofAggregatedCellsPerCellGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofAggregatedCellsPerCellGroupMinus4R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofDucellsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofAvailabilityCombinationsPerSetr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofAvailabilityCombinationsPerSet1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofScells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCellMeas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCgSLr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCgSL1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSsBlocksToAverage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCondCellsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesToAverage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofDlAllocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrConfigPerCellGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxLcgID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxLcID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxLcIDIabr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxLteCRsPatternsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTags1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofBwps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCombIdc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSymbols1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlots1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPhysicalResourceBlocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPhysicalResourceBlocks1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPhysicalResourceBlocksPlus1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofControlResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofControlResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofControlResourceSets1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCoresetPoolsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCoReSetDuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSearchSpaces1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSfiDCiPayloadSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSfiDCiPayloadSize1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxIabIPAddressr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxIntDCiPayloadSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxIntDCiPayloadSize1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRateMatchPatterns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRateMatchPatterns1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRateMatchPatternsPerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiReportConfigurations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiReportConfigurations1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiResourceConfigurations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiResourceConfigurations1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofApCSiRSResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrOfCsiAperiodicTriggers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofReportConfigPerAperiodicTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResourceSetsPerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNzpCSiRSResourcesPerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofZpCSiRSResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofZpCSiRSResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofZpCSiRSResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofZpCSiRSResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofZpCSiRSResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiIMResourceSetsPerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiSSbResourcePerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiSSbResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiSSbResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiSSbResourceSetsPerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofFailureDetectionResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofFailureDetectionResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofFreqSlr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlBWpsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqSlEUtrar16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlMeasIdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlObjectIdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlReportConfigIdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlPoolToMeasureNrr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqSlNRr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlQFisr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlQFisPerDestr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofObjectId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPageRec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPciRanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPlmn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesRrm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesRrm1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMeasId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofQuantityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSCellsRrm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlDestr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlDest1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlrbr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSlLCidr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSlSyncConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofRxpoolr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTxpoolr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPoolIdr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPathlossReferenceRsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPathlossReferenceRs1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPosResourceSetsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPosResourceSets1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPosResourcesr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsPosResources1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsTriggerStates1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrsTriggerStates2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRatCapabilityContainers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSimultaneousBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxUltxSwitchingBandPairs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlotFormatCombinationsPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlotFormatCombinationsPerSet1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTrafficPatternr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResources1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourceSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourceSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourcesPerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchP0PerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchPathlossReferenceRss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchPathlossReferenceRss1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchPathlossReferenceRssr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchPathlossReferenceRss1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchPathlossReferenceRssDiffr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourceGroupsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourcesPerGroupr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMultiplePuschsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofP0PUschAlphaSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofP0PUschAlphaSets1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPuschPathlossReferenceRss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPuschPathlossReferenceRss1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPuschPathlossReferenceRssr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPuschPathlossReferenceRss1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPuschPathlossReferenceRssDiffr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofNaicsEntries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBandsMrdc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBandsEutra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxDrb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqLayers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqIdcr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCombIdcr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFreqIdcMRdc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCandidateBeams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCandidateBeamsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCandidateBeamsExtr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPcisPerSmtc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofQfis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofResourceAvailabilityPerCombinationr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrOfSemiPersistentPuschTriggers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSrResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSlotFormatsPerCombination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpatialRelationInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpatialRelationInfosplus1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpatialRelationInfosr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpatialRelationInfosDiffr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofIndexesToReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofIndexesToReport2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSsbsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSsbs1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSNSsai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTciStatesPdcch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTciStates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTciStates1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofUlAllocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxQfi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRaCSirsResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRaOccasionsPerCsirs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRaOccasions1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRaSSbResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxScss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSecondaryCellGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofServingCellsEutra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxMbsfnAllocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofMultiBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellSftd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxReportConfigId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCodebooks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesExtr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesAltr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCsiRSResourcesAlt1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSriPUschMappings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSriPUschMappings1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSib); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSiMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPoperPf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxAccessCat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBarringInfoSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCellEutra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEutraCarrier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPlmnidentities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxDownlinkFeatureSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxUplinkFeatureSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEutraDLFeatureSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEutraULFeatureSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFeatureSetsPerBand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPerCcFeatureSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[293].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxFeatureSetCombinations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[294].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxInterRatRStdFreq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[295].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxHrnnLenr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[296].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNpnr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[297].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrOfMinSchedulingOffsetValuesr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[298].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxK0SchedulingOffsetr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[299].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxK2SchedulingOffsetr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[300].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxDci26Sizer16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[301].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxDci26Size1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[302].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofUlAllocationsr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[303].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofP0PUschSetr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[304].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxOnDemandSibr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[305].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxOnDemandPosSibr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[306].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCiDCiPayloadSizer16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[307].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCiDCiPayloadSize1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[308].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxWlanIdReportr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[309].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxWlanNamer16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[310].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxRareportr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[311].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxTxConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[312].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxTxConfig1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[313].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxPsschTxConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[314].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCliRSsiResourcesr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[315].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCliRSsiResources1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[316].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCliSRsResourcesr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[317].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxCliReportr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[318].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofConfiguredGrantConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[319].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofConfiguredGrantConfig1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[320].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofCgType2DeactivationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[321].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofConfiguredGrantConfigMac1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[322].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpsConfigr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[323].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpsConfig1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[324].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofSpsDeactivationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[325].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofDormancyGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[326].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPucchResourceGroups1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[327].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofServingCellsTcir16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[328].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofTxDcTwoCarrierr16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CSI_ReportConfig_proto_msgTypes[329].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPdcchBlindDetectionMixed1R16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_CSI_ReportConfig_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ReportConfigTypeCsiReportConfig_Periodic)(nil),
		(*ReportConfigTypeCsiReportConfig_SemiPersistentOnPucch)(nil),
		(*ReportConfigTypeCsiReportConfig_SemiPersistentOnPusch)(nil),
		(*ReportConfigTypeCsiReportConfig_Aperiodic)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_CSI_ReportConfig_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ReportQuantityCsiReportConfig_None)(nil),
		(*ReportQuantityCsiReportConfig_CriRiPmiCqi)(nil),
		(*ReportQuantityCsiReportConfig_CriRiI1)(nil),
		(*ReportQuantityCsiReportConfig_CriRiI1Cqi)(nil),
		(*ReportQuantityCsiReportConfig_CriRiCqi)(nil),
		(*ReportQuantityCsiReportConfig_CriRsrp)(nil),
		(*ReportQuantityCsiReportConfig_SsbIndexRsrp)(nil),
		(*ReportQuantityCsiReportConfig_CriRiLiPmiCqi)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*CsiReportingBandreportFreqConfiguration_Subbands3)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands4)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands5)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands6)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands7)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands8)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands9)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands10)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands11)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands12)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands13)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands14)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands15)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands16)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands17)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands18)(nil),
		(*CsiReportingBandreportFreqConfiguration_Subbands19V1530)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_CSI_ReportConfig_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_CSI_ReportConfig_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*GroupBasedBeamReportingCsiReportConfig_Enabled)(nil),
		(*GroupBasedBeamReportingCsiReportConfig_Disabled)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*ReportQuantityr16CsiReportConfig_CriSinrR16)(nil),
		(*ReportQuantityr16CsiReportConfig_SsbIndexSinrR16)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_CSI_ReportConfig_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*CsiReportPeriodicityAndOffset_Slots4)(nil),
		(*CsiReportPeriodicityAndOffset_Slots5)(nil),
		(*CsiReportPeriodicityAndOffset_Slots8)(nil),
		(*CsiReportPeriodicityAndOffset_Slots10)(nil),
		(*CsiReportPeriodicityAndOffset_Slots16)(nil),
		(*CsiReportPeriodicityAndOffset_Slots20)(nil),
		(*CsiReportPeriodicityAndOffset_Slots40)(nil),
		(*CsiReportPeriodicityAndOffset_Slots80)(nil),
		(*CsiReportPeriodicityAndOffset_Slots160)(nil),
		(*CsiReportPeriodicityAndOffset_Slots320)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_CSI_ReportConfig_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_CSI_ReportConfig_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_CSI_ReportConfig_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*PortIndexFor8Ranks_PortIndex8)(nil),
		(*PortIndexFor8Ranks_PortIndex4)(nil),
		(*PortIndexFor8Ranks_PortIndex2)(nil),
		(*PortIndexFor8Ranks_PortIndex1)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*N1N2MoreThanTwo_TwoOneTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_TwoTwoTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_FourOneTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_ThreeTwoTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_SixOneTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_FourTwoTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_EightOneTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_FourThreeTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_SixTwoTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_TwelveOneTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_FourFourTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_EightTwoTypeISinglePanelRestriction)(nil),
		(*N1N2MoreThanTwo_SixteenOneTypeISinglePanelRestriction)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_CSI_ReportConfig_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*NrOfAntennaPortstypeISinglePanel_Two)(nil),
		(*NrOfAntennaPortstypeISinglePanel_MoreThanTwo)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[34].OneofWrappers = []interface{}{
		(*Ngn1N2TypeIMultiPanel_TwoTwoOneTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_TwoFourOneTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_FourTwoOneTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_TwoTwoTwoTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_TwoEightOneTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_FourFourOneTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_TwoFourTwoTypeIMultiPanelRestriction)(nil),
		(*Ngn1N2TypeIMultiPanel_FourTwoTwoTypeIMultiPanelRestriction)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*SubTypetype1_TypeISinglePanel)(nil),
		(*SubTypetype1_TypeIMultiPanel)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*N1N2CodebookSubsetRestrictiontypeIi_TwoOne)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_TwoTwo)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_FourOne)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_ThreeTwo)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_SixOne)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_FourTwo)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_EightOne)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_FourThree)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_SixTwo)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_TwelveOne)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_FourFour)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_EightTwo)(nil),
		(*N1N2CodebookSubsetRestrictiontypeIi_SixteenOne)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_CSI_ReportConfig_proto_msgTypes[41].OneofWrappers = []interface{}{
		(*SubTypetype2_TypeIi)(nil),
		(*SubTypetype2_TypeIiPortSelection)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[43].OneofWrappers = []interface{}{
		(*CodebookTypeCodebookConfig_Type1)(nil),
		(*CodebookTypeCodebookConfig_Type2)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[45].OneofWrappers = []interface{}{
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoOne)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwoTwo)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourOne)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_ThreeTwo)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixOne)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourTwo)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_EightOne)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourThree)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixTwo)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_TwelveOne)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_FourFour)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_EightTwo)(nil),
		(*N1N2CodebookSubsetRestrictionr16TypeIir16_SixteenOne)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[48].OneofWrappers = []interface{}{
		(*SubTypetype2R16_TypeIiR16)(nil),
		(*SubTypetype2R16_TypeIiPortSelectionR16)(nil),
	}
	file_CSI_ReportConfig_proto_msgTypes[50].OneofWrappers = []interface{}{
		(*CodebookTyper16CodebookConfigr16_Type2R16)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_CSI_ReportConfig_proto_rawDesc,
			NumEnums:      15,
			NumMessages:   330,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_CSI_ReportConfig_proto_goTypes,
		DependencyIndexes: file_CSI_ReportConfig_proto_depIdxs,
		EnumInfos:         file_CSI_ReportConfig_proto_enumTypes,
		MessageInfos:      file_CSI_ReportConfig_proto_msgTypes,
	}.Build()
	File_CSI_ReportConfig_proto = out.File
	file_CSI_ReportConfig_proto_rawDesc = nil
	file_CSI_ReportConfig_proto_goTypes = nil
	file_CSI_ReportConfig_proto_depIdxs = nil
}
